{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IVaultAuth",
          "name": "newAuth",
          "type": "address"
        }
      ],
      "name": "AuthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "BurningFeePercentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "BurningFeeReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "perUser",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "perVault",
          "type": "uint256"
        }
      ],
      "name": "DepositLimitsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EnterBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExecuteBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExitBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "HarvestDelayUpdateScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "HarvestDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "HarvestFeePercentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "HarvestFeeReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newHarvestWindow",
          "type": "uint128"
        }
      ],
      "name": "HarvestWindowUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "StrategyDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyDistrusted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyTrusted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "StrategyWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy[]",
          "name": "replacedWithdrawalQueue",
          "type": "address[]"
        }
      ],
      "name": "WithdrawalQueueSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BLOCKS_PER_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auth",
      "outputs": [
        {
          "internalType": "contract IVaultAuth",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchBurnBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchBurnRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchBurns",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burningFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burningFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "depositIntoStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "distrustStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "enterBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimatedReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exitBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getStrategyData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        },
        {
          "internalType": "uint248",
          "name": "balance",
          "type": "uint248"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawalQueue",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestDelay",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestWindow",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Upgradeable",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "contract IVaultAuth",
          "name": "auth_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "harvestFeeReceiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "burnFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvest",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestIntervalInBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestWindowStart",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestWindowStartBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLockedProfit",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextHarvestDelay",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVaultAuth",
          "name": "newAuth",
          "type": "address"
        }
      ],
      "name": "setAuth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "setBatchedBurningFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "setBlocksPerYear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "burningFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "setBurningFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "user",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vault",
          "type": "uint256"
        }
      ],
      "name": "setDepositLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "setHarvestDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "setHarvestFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "harvestFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "setHarvestFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newHarvestWindow",
          "type": "uint128"
        }
      ],
      "name": "setHarvestWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "newQueue",
          "type": "address[]"
        }
      ],
      "name": "setWithdrawalQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFloat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStrategyHoldings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalUnderlyingHeld",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "triggerPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "trustStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBatchBurnReceipts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userDepositLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultDepositLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdrawalQueue",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/utils/AddressUpgradeable.sol",
    "11": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/utils/ContextUpgradeable.sol",
    "18": "contracts/Vault.sol",
    "22": "contracts/libraries/FixedPointMathLib.sol",
    "23": "contracts/libraries/SafeCastLib.sol",
    "26": "interfaces/IStrategy.sol",
    "27": "interfaces/IVault.sol",
    "28": "interfaces/IVaultAuth.sol",
    "3": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/proxy/utils/Initializable.sol",
    "4": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/security/PausableUpgradeable.sol",
    "6": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/ERC20Upgradeable.sol",
    "7": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/IERC20Upgradeable.sol",
    "8": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "9": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault.sol",
    "exportedSymbols": {
      "ERC20": [
        4338
      ],
      "FixedPointMath": [
        2942
      ],
      "IStrategy": [
        5229
      ],
      "IVault": [
        5042
      ],
      "IVaultAuth": [
        5268
      ],
      "Ownable": [
        3661
      ],
      "Pausable": [
        5155
      ],
      "SafeCast": [
        3071
      ],
      "SafeERC20": [
        4640
      ],
      "Vault": [
        2277
      ]
    },
    "id": 2278,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 374,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:24:18"
      },
      {
        "absolutePath": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/access/OwnableUpgradeable.sol",
        "file": "@oz-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "id": 376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 3662,
        "src": "68:102:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 375,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "76:18:18",
              "typeDescriptions": {}
            },
            "local": "Ownable",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/security/PausableUpgradeable.sol",
        "file": "@oz-upgradeable/contracts/security/PausableUpgradeable.sol",
        "id": 378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 5156,
        "src": "171:107:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 377,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "179:19:18",
              "typeDescriptions": {}
            },
            "local": "Pausable",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@oz-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 380,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 4339,
        "src": "279:101:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 379,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "287:16:18",
              "typeDescriptions": {}
            },
            "local": "ERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/antonio/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@oz-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 382,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 4641,
        "src": "381:119:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 381,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "389:20:18",
              "typeDescriptions": {}
            },
            "local": "SafeERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 5043,
        "src": "502:48:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 383,
              "name": "IVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "510:6:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 5230,
        "src": "551:54:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 385,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "559:9:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVaultAuth.sol",
        "file": "../interfaces/IVaultAuth.sol",
        "id": 388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 5269,
        "src": "606:56:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 387,
              "name": "IVaultAuth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "614:10:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/SafeCastLib.sol",
        "file": "./libraries/SafeCastLib.sol",
        "id": 390,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 3072,
        "src": "664:68:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 389,
              "name": "SafeCastLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "672:11:18",
              "typeDescriptions": {}
            },
            "local": "SafeCast",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "id": 392,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 2943,
        "src": "733:86:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 391,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "741:17:18",
              "typeDescriptions": {}
            },
            "local": "FixedPointMath",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 394,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4338,
              "src": "917:5:18"
            },
            "id": 395,
            "nodeType": "InheritanceSpecifier",
            "src": "917:5:18"
          },
          {
            "baseName": {
              "id": 396,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5155,
              "src": "924:8:18"
            },
            "id": 397,
            "nodeType": "InheritanceSpecifier",
            "src": "924:8:18"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 393,
          "nodeType": "StructuredDocumentation",
          "src": "821:78:18",
          "text": "@title Vault\n @author dantop114\n @notice A vault seeking for yield."
        },
        "fullyImplemented": true,
        "id": 2277,
        "linearizedBaseContracts": [
          2277,
          5155,
          4338,
          6346,
          4416,
          6072,
          3707
        ],
        "name": "Vault",
        "nameLocation": "908:5:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 401,
            "libraryName": {
              "id": 398,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4640,
              "src": "945:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "939:26:18",
            "typeName": {
              "id": 400,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 399,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4338,
                "src": "959:5:18"
              },
              "referencedDeclaration": 4338,
              "src": "959:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                "typeString": "contract ERC20Upgradeable"
              }
            }
          },
          {
            "id": 404,
            "libraryName": {
              "id": 402,
              "name": "SafeCast",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3071,
              "src": "976:8:18"
            },
            "nodeType": "UsingForDirective",
            "src": "970:27:18",
            "typeName": {
              "id": 403,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "989:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 407,
            "libraryName": {
              "id": 405,
              "name": "FixedPointMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2942,
              "src": "1008:14:18"
            },
            "nodeType": "UsingForDirective",
            "src": "1002:33:18",
            "typeName": {
              "id": 406,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1027:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "1223:44:18",
              "text": "@notice The Vault's token symbol prefix."
            },
            "id": 414,
            "mutability": "constant",
            "name": "sPrefix",
            "nameLocation": "1296:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1272:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 409,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1272:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6175786f",
                  "id": 412,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1312:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_042d1c6da08dfdaa63f9beb9ae15a7a636f364192b6f357ff6eb885f85184f48",
                    "typeString": "literal_string \"auxo\""
                  },
                  "value": "auxo"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_042d1c6da08dfdaa63f9beb9ae15a7a636f364192b6f357ff6eb885f85184f48",
                    "typeString": "literal_string \"auxo\""
                  }
                ],
                "id": 411,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1306:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 410,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1306:5:18",
                  "typeDescriptions": {}
                }
              },
              "id": 413,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1306:13:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "1326:42:18",
              "text": "@notice The Vault's token name prefix."
            },
            "id": 421,
            "mutability": "constant",
            "name": "nPrefix",
            "nameLocation": "1397:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1373:48:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 416,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1373:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4175786f20",
                  "id": 419,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1413:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c030a70afd7d7970c42ea384c7075c5b6baf8b8c968d66ee743e760bdd312c2",
                    "typeString": "literal_string \"Auxo \""
                  },
                  "value": "Auxo "
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c030a70afd7d7970c42ea384c7075c5b6baf8b8c968d66ee743e760bdd312c2",
                    "typeString": "literal_string \"Auxo \""
                  }
                ],
                "id": 418,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1407:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 417,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1407:5:18",
                  "typeDescriptions": {}
                }
              },
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1407:14:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "1428:42:18",
              "text": "@notice The Vault's token name suffix."
            },
            "id": 428,
            "mutability": "constant",
            "name": "nSuffix",
            "nameLocation": "1499:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1475:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 423,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1475:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "205661756c74",
                  "id": 426,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1515:8:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1d3720cd650b77f8806500cd090e1046d7df82398e5db85091303523806ceb88",
                    "typeString": "literal_string \" Vault\""
                  },
                  "value": " Vault"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_1d3720cd650b77f8806500cd090e1046d7df82398e5db85091303523806ceb88",
                    "typeString": "literal_string \" Vault\""
                  }
                ],
                "id": 425,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1509:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 424,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:5:18",
                  "typeDescriptions": {}
                }
              },
              "id": 427,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1509:15:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 429,
              "nodeType": "StructuredDocumentation",
              "src": "1531:58:18",
              "text": "@notice Max number of strategies the Vault can handle."
            },
            "id": 432,
            "mutability": "constant",
            "name": "MAX_STRATEGIES",
            "nameLocation": "1620:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1594:45:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 430,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1594:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 431,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1637:2:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "1646:32:18",
              "text": "@notice Vault's API version."
            },
            "functionSelector": "54fd4d50",
            "id": 436,
            "mutability": "constant",
            "name": "version",
            "nameLocation": "1706:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1683:38:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1683:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 435,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1716:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8cd160c72d102a6747abd189ac21d4a1f802e3fcc1bb8fc78cc4d558df0c7c21",
                "typeString": "literal_string \"0.1\""
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.StrategyData",
            "id": 441,
            "members": [
              {
                "constant": false,
                "id": 438,
                "mutability": "mutable",
                "name": "trusted",
                "nameLocation": "2273:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "2268:12:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 437,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2268:4:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 440,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "2376:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "2368:15:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint248",
                  "typeString": "uint248"
                },
                "typeName": {
                  "id": 439,
                  "name": "uint248",
                  "nodeType": "ElementaryTypeName",
                  "src": "2368:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint248",
                    "typeString": "uint248"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyData",
            "nameLocation": "2175:12:18",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "2168:222:18",
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.BatchBurn",
            "id": 446,
            "members": [
              {
                "constant": false,
                "id": 443,
                "mutability": "mutable",
                "name": "totalShares",
                "nameLocation": "2664:11:18",
                "nodeType": "VariableDeclaration",
                "scope": 446,
                "src": "2656:19:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 442,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2656:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 445,
                "mutability": "mutable",
                "name": "amountPerShare",
                "nameLocation": "2693:14:18",
                "nodeType": "VariableDeclaration",
                "scope": 446,
                "src": "2685:22:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 444,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2685:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BatchBurn",
            "nameLocation": "2636:9:18",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "2629:85:18",
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.BatchBurnReceipt",
            "id": 451,
            "members": [
              {
                "constant": false,
                "id": 448,
                "mutability": "mutable",
                "name": "round",
                "nameLocation": "2920:5:18",
                "nodeType": "VariableDeclaration",
                "scope": 451,
                "src": "2912:13:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 447,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2912:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 450,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "2943:6:18",
                "nodeType": "VariableDeclaration",
                "scope": 451,
                "src": "2935:14:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 449,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2935:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BatchBurnReceipt",
            "nameLocation": "2885:16:18",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "2878:78:18",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 452,
              "nodeType": "StructuredDocumentation",
              "src": "3142:35:18",
              "text": "@notice Blocks mined in a year."
            },
            "functionSelector": "d37db1d2",
            "id": 454,
            "mutability": "mutable",
            "name": "BLOCKS_PER_YEAR",
            "nameLocation": "3197:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3182:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3182:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "3219:30:18",
              "text": "@notice Vault Auth module."
            },
            "functionSelector": "de9375f2",
            "id": 458,
            "mutability": "mutable",
            "name": "auth",
            "nameLocation": "3272:4:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3254:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaultAuth_$5268",
              "typeString": "contract IVaultAuth"
            },
            "typeName": {
              "id": 457,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 456,
                "name": "IVaultAuth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5268,
                "src": "3254:10:18"
              },
              "referencedDeclaration": 5268,
              "src": "3254:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                "typeString": "contract IVaultAuth"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 459,
              "nodeType": "StructuredDocumentation",
              "src": "3283:51:18",
              "text": "@notice The underlying token the vault accepts."
            },
            "functionSelector": "6f307dc3",
            "id": 462,
            "mutability": "mutable",
            "name": "underlying",
            "nameLocation": "3352:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3339:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
              "typeString": "contract ERC20Upgradeable"
            },
            "typeName": {
              "id": 461,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 460,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4338,
                "src": "3339:5:18"
              },
              "referencedDeclaration": 4338,
              "src": "3339:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                "typeString": "contract ERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 463,
              "nodeType": "StructuredDocumentation",
              "src": "3369:42:18",
              "text": "@notice The underlying token decimals."
            },
            "functionSelector": "25a760c2",
            "id": 465,
            "mutability": "mutable",
            "name": "underlyingDecimals",
            "nameLocation": "3429:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3416:31:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 464,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3416:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 466,
              "nodeType": "StructuredDocumentation",
              "src": "3454:163:18",
              "text": "@notice The base unit of the underlying token and hence the Vault share token.\n @dev Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic."
            },
            "functionSelector": "0e962f00",
            "id": 468,
            "mutability": "mutable",
            "name": "BASE_UNIT",
            "nameLocation": "3637:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3622:24:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 467,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3622:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 469,
              "nodeType": "StructuredDocumentation",
              "src": "3653:162:18",
              "text": "@notice The percentage of profit recognized each harvest to reserve as fees.\n @dev A fixed point number where 1e18 represents 100% and 0 represents 0%."
            },
            "functionSelector": "e33cc0a8",
            "id": 471,
            "mutability": "mutable",
            "name": "harvestFeePercent",
            "nameLocation": "3835:17:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3820:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 470,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3820:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 472,
              "nodeType": "StructuredDocumentation",
              "src": "3859:79:18",
              "text": "@notice The address receiving harvest fees (denominated in Vault's shares)."
            },
            "functionSelector": "ecc404b5",
            "id": 474,
            "mutability": "mutable",
            "name": "harvestFeeReceiver",
            "nameLocation": "3958:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "3943:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 473,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3943:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 475,
              "nodeType": "StructuredDocumentation",
              "src": "3983:162:18",
              "text": "@notice The percentage of shares recognized each burning to reserve as fees.\n @dev A fixed point number where 1e18 represents 100% and 0 represents 0%."
            },
            "functionSelector": "31024f3b",
            "id": 477,
            "mutability": "mutable",
            "name": "burningFeePercent",
            "nameLocation": "4165:17:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "4150:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 476,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4150:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "4189:79:18",
              "text": "@notice The address receiving burning fees (denominated in Vault's shares)."
            },
            "functionSelector": "dd11dd45",
            "id": 480,
            "mutability": "mutable",
            "name": "burningFeeReceiver",
            "nameLocation": "4288:18:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "4273:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 479,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4273:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 481,
              "nodeType": "StructuredDocumentation",
              "src": "4313:243:18",
              "text": "@notice The period in seconds during which multiple harvests can occur\n regardless if they are taking place before the harvest delay has elapsed.\n @dev Long harvest delays open up the Vault to profit distribution DOS attacks."
            },
            "functionSelector": "f97d2ed7",
            "id": 483,
            "mutability": "mutable",
            "name": "harvestWindow",
            "nameLocation": "4576:13:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "4561:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 482,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "4561:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 484,
              "nodeType": "StructuredDocumentation",
              "src": "4596:141:18",
              "text": "@notice The period in seconds over which locked profit is unlocked.\n @dev Cannot be 0 as it opens harvests up to sandwich attacks."
            },
            "functionSelector": "448f56b9",
            "id": 486,
            "mutability": "mutable",
            "name": "harvestDelay",
            "nameLocation": "4756:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "4742:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 485,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4742:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 487,
              "nodeType": "StructuredDocumentation",
              "src": "4775:144:18",
              "text": "@notice The value that will replace harvestDelay next harvest.\n @dev In the case that the next delay is 0, no update will be applied."
            },
            "functionSelector": "797ba463",
            "id": 489,
            "mutability": "mutable",
            "name": "nextHarvestDelay",
            "nameLocation": "4938:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "4924:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 488,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4924:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 490,
              "nodeType": "StructuredDocumentation",
              "src": "4961:205:18",
              "text": "@notice The total amount of underlying tokens held in strategies at the time of the last harvest.\n @dev Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings."
            },
            "functionSelector": "ecad9565",
            "id": 492,
            "mutability": "mutable",
            "name": "totalStrategyHoldings",
            "nameLocation": "5186:21:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5171:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5171:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 493,
              "nodeType": "StructuredDocumentation",
              "src": "5214:60:18",
              "text": "@notice Maps strategies to data the Vault holds on them."
            },
            "functionSelector": "2968676e",
            "id": 499,
            "mutability": "mutable",
            "name": "getStrategyData",
            "nameLocation": "5321:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5279:57:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData)"
            },
            "typeName": {
              "id": 498,
              "keyType": {
                "id": 495,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 494,
                  "name": "IStrategy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5229,
                  "src": "5287:9:18"
                },
                "referencedDeclaration": 5229,
                "src": "5287:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$5229",
                  "typeString": "contract IStrategy"
                }
              },
              "nodeType": "Mapping",
              "src": "5279:34:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData)"
              },
              "valueType": {
                "id": 497,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 496,
                  "name": "StrategyData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 441,
                  "src": "5300:12:18"
                },
                "referencedDeclaration": 441,
                "src": "5300:12:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StrategyData_$441_storage_ptr",
                  "typeString": "struct Vault.StrategyData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 500,
              "nodeType": "StructuredDocumentation",
              "src": "5343:67:18",
              "text": "@notice Exchange rate at the beginning of latest harvest window"
            },
            "functionSelector": "5e4f9451",
            "id": 502,
            "mutability": "mutable",
            "name": "lastHarvestExchangeRate",
            "nameLocation": "5430:23:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5415:38:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 501,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5415:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 503,
              "nodeType": "StructuredDocumentation",
              "src": "5460:45:18",
              "text": "@notice Latest harvest interval in blocks"
            },
            "functionSelector": "836ca0f6",
            "id": 505,
            "mutability": "mutable",
            "name": "lastHarvestIntervalInBlocks",
            "nameLocation": "5525:27:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5510:42:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 504,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5510:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 506,
              "nodeType": "StructuredDocumentation",
              "src": "5559:95:18",
              "text": "@notice The block number when the first harvest in the most recent harvest window occurred."
            },
            "functionSelector": "9291df6b",
            "id": 508,
            "mutability": "mutable",
            "name": "lastHarvestWindowStartBlock",
            "nameLocation": "5674:27:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5659:42:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 507,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5659:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 509,
              "nodeType": "StructuredDocumentation",
              "src": "5708:216:18",
              "text": "@notice A timestamp representing when the first harvest in the most recent harvest window occurred.\n @dev May be equal to lastHarvest if there was/has only been one harvest in the most last/current window."
            },
            "functionSelector": "eed74e67",
            "id": 511,
            "mutability": "mutable",
            "name": "lastHarvestWindowStart",
            "nameLocation": "5943:22:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "5929:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 510,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "5929:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 512,
              "nodeType": "StructuredDocumentation",
              "src": "5972:75:18",
              "text": "@notice A timestamp representing when the most recent harvest occurred."
            },
            "functionSelector": "f1a392da",
            "id": 514,
            "mutability": "mutable",
            "name": "lastHarvest",
            "nameLocation": "6066:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6052:25:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 513,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "6052:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 515,
              "nodeType": "StructuredDocumentation",
              "src": "6084:71:18",
              "text": "@notice The amount of locked profit at the end of the last harvest."
            },
            "functionSelector": "d00364be",
            "id": 517,
            "mutability": "mutable",
            "name": "maxLockedProfit",
            "nameLocation": "6175:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6160:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 516,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "6160:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 518,
              "nodeType": "StructuredDocumentation",
              "src": "6197:418:18",
              "text": "@notice An ordered array of strategies representing the withdrawal queue.\n @dev The queue is processed in descending order, meaning the last index will be withdrawn from first.\n @dev Strategies that are untrusted, duplicated, or have no balance are filtered out when encountered at\n withdrawal time, not validated upfront, meaning the queue may not reflect the \"true\" set used for withdrawals."
            },
            "functionSelector": "c822adda",
            "id": 522,
            "mutability": "mutable",
            "name": "withdrawalQueue",
            "nameLocation": "6639:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6620:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
              "typeString": "contract IStrategy[]"
            },
            "typeName": {
              "baseType": {
                "id": 520,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 519,
                  "name": "IStrategy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5229,
                  "src": "6620:9:18"
                },
                "referencedDeclaration": 5229,
                "src": "6620:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$5229",
                  "typeString": "contract IStrategy"
                }
              },
              "id": 521,
              "nodeType": "ArrayTypeName",
              "src": "6620:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                "typeString": "contract IStrategy[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 523,
              "nodeType": "StructuredDocumentation",
              "src": "6661:42:18",
              "text": "@notice Current batched burning round."
            },
            "functionSelector": "6bd95612",
            "id": 525,
            "mutability": "mutable",
            "name": "batchBurnRound",
            "nameLocation": "6723:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6708:29:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6708:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "6744:60:18",
              "text": "@notice Balance reserved to batched burning withdrawals."
            },
            "functionSelector": "86dc4800",
            "id": 528,
            "mutability": "mutable",
            "name": "batchBurnBalance",
            "nameLocation": "6824:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6809:31:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6809:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 529,
              "nodeType": "StructuredDocumentation",
              "src": "6847:54:18",
              "text": "@notice Maps user's address to withdrawal request."
            },
            "functionSelector": "912f74cd",
            "id": 534,
            "mutability": "mutable",
            "name": "userBatchBurnReceipts",
            "nameLocation": "6950:21:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "6906:65:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
              "typeString": "mapping(address => struct Vault.BatchBurnReceipt)"
            },
            "typeName": {
              "id": 533,
              "keyType": {
                "id": 530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6914:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6906:36:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                "typeString": "mapping(address => struct Vault.BatchBurnReceipt)"
              },
              "valueType": {
                "id": 532,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 531,
                  "name": "BatchBurnReceipt",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 451,
                  "src": "6925:16:18"
                },
                "referencedDeclaration": 451,
                "src": "6925:16:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage_ptr",
                  "typeString": "struct Vault.BatchBurnReceipt"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 535,
              "nodeType": "StructuredDocumentation",
              "src": "6978:70:18",
              "text": "@notice Maps social burning events rounds to batched burn details."
            },
            "functionSelector": "14fbae04",
            "id": 540,
            "mutability": "mutable",
            "name": "batchBurns",
            "nameLocation": "7090:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "7053:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
              "typeString": "mapping(uint256 => struct Vault.BatchBurn)"
            },
            "typeName": {
              "id": 539,
              "keyType": {
                "id": 536,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7061:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7053:29:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
                "typeString": "mapping(uint256 => struct Vault.BatchBurn)"
              },
              "valueType": {
                "id": 538,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 537,
                  "name": "BatchBurn",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 446,
                  "src": "7072:9:18"
                },
                "referencedDeclaration": 446,
                "src": "7072:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BatchBurn_$446_storage_ptr",
                  "typeString": "struct Vault.BatchBurn"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 541,
              "nodeType": "StructuredDocumentation",
              "src": "7107:55:18",
              "text": "@notice Amount of shares a single address can hold."
            },
            "functionSelector": "1ec36bfa",
            "id": 543,
            "mutability": "mutable",
            "name": "userDepositLimit",
            "nameLocation": "7182:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "7167:31:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 542,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7167:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 544,
              "nodeType": "StructuredDocumentation",
              "src": "7205:52:18",
              "text": "@notice Amount of underlying cap for this vault."
            },
            "functionSelector": "63874446",
            "id": 546,
            "mutability": "mutable",
            "name": "vaultDepositLimit",
            "nameLocation": "7277:17:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "7262:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 545,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7262:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 547,
              "nodeType": "StructuredDocumentation",
              "src": "7301:58:18",
              "text": "@notice Estimated return recorded during last harvest."
            },
            "functionSelector": "9ee02c7f",
            "id": 549,
            "mutability": "mutable",
            "name": "estimatedReturn",
            "nameLocation": "7379:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "7364:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 548,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7364:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 550,
              "nodeType": "StructuredDocumentation",
              "src": "7581:108:18",
              "text": "@notice Emitted when the IVaultAuth module is updated.\n @param newAuth The new IVaultAuth module."
            },
            "id": 555,
            "name": "AuthUpdated",
            "nameLocation": "7700:11:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAuth",
                  "nameLocation": "7723:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "7712:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                    "typeString": "contract IVaultAuth"
                  },
                  "typeName": {
                    "id": 552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 551,
                      "name": "IVaultAuth",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5268,
                      "src": "7712:10:18"
                    },
                    "referencedDeclaration": 5268,
                    "src": "7712:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                      "typeString": "contract IVaultAuth"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7711:20:18"
            },
            "src": "7694:38:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 556,
              "nodeType": "StructuredDocumentation",
              "src": "7738:108:18",
              "text": "@notice Emitted when the fee percentage is updated.\n @param newFeePercent The new fee percentage."
            },
            "id": 560,
            "name": "HarvestFeePercentUpdated",
            "nameLocation": "7857:24:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "7890:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "7882:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7881:23:18"
            },
            "src": "7851:54:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 561,
              "nodeType": "StructuredDocumentation",
              "src": "7911:124:18",
              "text": "@notice Emitted when the batched burning fee percentage is updated.\n @param newFeePercent The new fee percentage."
            },
            "id": 565,
            "name": "BurningFeePercentUpdated",
            "nameLocation": "8046:24:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "8079:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "8071:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8071:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8070:23:18"
            },
            "src": "8040:54:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 566,
              "nodeType": "StructuredDocumentation",
              "src": "8100:99:18",
              "text": "@notice Emitted when harvest fees receiver is updated.\n @param receiver The new receiver"
            },
            "id": 570,
            "name": "HarvestFeeReceiverUpdated",
            "nameLocation": "8210:25:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8252:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "8236:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8236:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8235:26:18"
            },
            "src": "8204:58:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "8268:99:18",
              "text": "@notice Emitted when burning fees receiver is updated.\n @param receiver The new receiver"
            },
            "id": 575,
            "name": "BurningFeeReceiverUpdated",
            "nameLocation": "8378:25:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8420:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "8404:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8404:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8403:26:18"
            },
            "src": "8372:58:18"
          },
          {
            "anonymous": false,
            "id": 579,
            "name": "HarvestWindowUpdated",
            "nameLocation": "8560:20:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestWindow",
                  "nameLocation": "8589:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "8581:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8581:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8580:26:18"
            },
            "src": "8554:53:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 580,
              "nodeType": "StructuredDocumentation",
              "src": "8613:170:18",
              "text": "@notice Emitted when the harvest delay is updated.\n @param account The address changing the harvest delay\n @param newHarvestDelay The new harvest delay."
            },
            "id": 586,
            "name": "HarvestDelayUpdated",
            "nameLocation": "8794:19:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8830:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "8814:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8814:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "8846:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "8839:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8839:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8813:49:18"
            },
            "src": "8788:75:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 587,
              "nodeType": "StructuredDocumentation",
              "src": "8869:151:18",
              "text": "@notice Emitted when the harvest delay is scheduled to be updated next harvest.\n @param newHarvestDelay The scheduled updated harvest delay."
            },
            "id": 591,
            "name": "HarvestDelayUpdateScheduled",
            "nameLocation": "9031:27:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "9066:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "9059:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9059:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9058:24:18"
            },
            "src": "9025:58:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "9089:122:18",
              "text": "@notice Emitted when the withdrawal queue is updated.\n @param replacedWithdrawalQueue The new withdrawal queue."
            },
            "id": 598,
            "name": "WithdrawalQueueSet",
            "nameLocation": "9222:18:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "replacedWithdrawalQueue",
                  "nameLocation": "9253:23:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9241:35:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 594,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 593,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5229,
                        "src": "9241:9:18"
                      },
                      "referencedDeclaration": 5229,
                      "src": "9241:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5229",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 595,
                    "nodeType": "ArrayTypeName",
                    "src": "9241:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9240:37:18"
            },
            "src": "9216:62:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "9284:112:18",
              "text": "@notice Emitted when a strategy is set to trusted.\n @param strategy The strategy that became trusted."
            },
            "id": 604,
            "name": "StrategyTrusted",
            "nameLocation": "9407:15:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "9441:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "9423:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 601,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 600,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "9423:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "9423:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9422:28:18"
            },
            "src": "9401:50:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "9457:116:18",
              "text": "@notice Emitted when a strategy is set to untrusted.\n @param strategy The strategy that became untrusted."
            },
            "id": 610,
            "name": "StrategyDistrusted",
            "nameLocation": "9584:18:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "9621:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "9603:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 606,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "9603:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "9603:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9602:28:18"
            },
            "src": "9578:53:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 611,
              "nodeType": "StructuredDocumentation",
              "src": "9637:232:18",
              "text": "@notice Emitted when underlying tokens are deposited into the vault.\n @param from The user depositing into the vault.\n @param to The user receiving Vault's shares.\n @param value The shares `to` is receiving."
            },
            "id": 619,
            "name": "Deposit",
            "nameLocation": "9880:7:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9904:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "9888:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9888:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9926:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "9910:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9910:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9938:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "9930:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9930:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9887:57:18"
            },
            "src": "9874:71:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 620,
              "nodeType": "StructuredDocumentation",
              "src": "9951:194:18",
              "text": "@notice Emitted after a user enters a batched burn round.\n @param round Batched burn round.\n @param account User's address.\n @param amount Amount of shares to be burned."
            },
            "id": 628,
            "name": "EnterBatchBurn",
            "nameLocation": "10156:14:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10187:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "10171:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10171:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10210:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "10194:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10194:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10227:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "10219:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10219:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10170:64:18"
            },
            "src": "10150:85:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "10241:193:18",
              "text": "@notice Emitted after a user exits a batched burn round.\n @param round Batched burn round.\n @param account User's address.\n @param amount Amount of underlying redeemed."
            },
            "id": 637,
            "name": "ExitBatchBurn",
            "nameLocation": "10445:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10475:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10459:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10459:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10498:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10482:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10482:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10515:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10507:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10507:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10458:64:18"
            },
            "src": "10439:84:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "10529:267:18",
              "text": "@notice Emitted after a batched burn event happens.\n @param round Batched burn round.\n @param executor User that executes the batch burn.\n @param shares Total amount of burned shares.\n @param amount Total amount of underlying redeemed."
            },
            "id": 648,
            "name": "ExecuteBatchBurn",
            "nameLocation": "10807:16:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10840:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "10824:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10824:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "10863:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "10847:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10847:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "10881:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "10873:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10873:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10897:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "10889:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10889:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10823:81:18"
            },
            "src": "10801:104:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 649,
              "nodeType": "StructuredDocumentation",
              "src": "10911:142:18",
              "text": "@notice Emitted after a successful harvest.\n @param account The harvester address.\n @param strategies The set of strategies."
            },
            "id": 657,
            "name": "Harvest",
            "nameLocation": "11064:7:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11088:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "11072:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11072:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "11109:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "11097:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 653,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 652,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5229,
                        "src": "11097:9:18"
                      },
                      "referencedDeclaration": 5229,
                      "src": "11097:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5229",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 654,
                    "nodeType": "ArrayTypeName",
                    "src": "11097:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11071:49:18"
            },
            "src": "11058:63:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 658,
              "nodeType": "StructuredDocumentation",
              "src": "11127:288:18",
              "text": "@notice Emitted after the Vault deposits into a strategy contract.\n @param account The address depositing funds into the strategy.\n @param strategy The strategy that was deposited into.\n @param underlyingAmount The amount of underlying tokens that were deposited."
            },
            "id": 667,
            "name": "StrategyDeposit",
            "nameLocation": "11426:15:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11458:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "11442:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11442:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "11485:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "11467:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 662,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 661,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "11467:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "11467:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "11503:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "11495:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11495:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11441:79:18"
            },
            "src": "11420:101:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 668,
              "nodeType": "StructuredDocumentation",
              "src": "11527:288:18",
              "text": "@notice Emitted after the Vault withdraws funds from a strategy contract.\n @param account The user pulling funds from the strategy\n @param strategy The strategy that was withdrawn from.\n @param underlyingAmount The amount of underlying tokens that were withdrawn."
            },
            "id": 677,
            "name": "StrategyWithdrawal",
            "nameLocation": "11826:18:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11861:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "11845:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11845:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "11888:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "11870:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 672,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 671,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "11870:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "11870:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 675,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "11906:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "11898:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11898:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11844:79:18"
            },
            "src": "11820:104:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "11930:175:18",
              "text": "@notice Event emitted when the deposit limits are updated.\n @param perUser New underlying limit per address.\n @param perVault New underlying limit per vault."
            },
            "id": 684,
            "name": "DepositLimitsUpdated",
            "nameLocation": "12116:20:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "perUser",
                  "nameLocation": "12145:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "12137:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12137:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "perVault",
                  "nameLocation": "12162:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "12154:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12154:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12136:35:18"
            },
            "src": "12110:62:18"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "12505:109:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 695,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12555:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  ],
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12547:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 693,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12547:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12547:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 692,
                              "name": "IVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5042,
                              "src": "12540:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVault_$5042_$",
                                "typeString": "type(contract IVault)"
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12540:21:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            }
                          },
                          {
                            "id": 698,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "12563:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 690,
                            "name": "auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "12523:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                              "typeString": "contract IVaultAuth"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isDepositor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5245,
                          "src": "12523:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IVault_$5042_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract IVault,address) view external returns (bool)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12523:47:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6572726f723a3a4e4f545f4445504f5349544f52",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12572:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b98d194170e07cb704ef3e8eea1e8f08ace5366772ff8edb3c36c37495de0e32",
                          "typeString": "literal_string \"error::NOT_DEPOSITOR\""
                        },
                        "value": "error::NOT_DEPOSITOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b98d194170e07cb704ef3e8eea1e8f08ace5366772ff8edb3c36c37495de0e32",
                          "typeString": "literal_string \"error::NOT_DEPOSITOR\""
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12515:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12515:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "12515:80:18"
                },
                {
                  "id": 703,
                  "nodeType": "PlaceholderStatement",
                  "src": "12606:1:18"
                }
              ]
            },
            "documentation": {
              "id": 685,
              "nodeType": "StructuredDocumentation",
              "src": "12356:105:18",
              "text": "@notice Checks that `caller` is authorized as a depositor.\n @param caller The caller to check."
            },
            "id": 705,
            "name": "onlyDepositor",
            "nameLocation": "12475:13:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12497:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "12489:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12489:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12488:16:18"
            },
            "src": "12466:148:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "12761:101:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 716,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12807:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  ],
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12799:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 714,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12799:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12799:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 713,
                              "name": "IVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5042,
                              "src": "12792:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVault_$5042_$",
                                "typeString": "type(contract IVault)"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12792:21:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            }
                          },
                          {
                            "id": 719,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "12815:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 711,
                            "name": "auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "12779:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                              "typeString": "contract IVaultAuth"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5267,
                          "src": "12779:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IVault_$5042_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract IVault,address) view external returns (bool)"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12779:43:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6572726f723a3a4e4f545f41444d494e",
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12824:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae665bc4a219a4a8e0e8c9618aeaff3ea5a8831f61ddb29ad64806145366865",
                          "typeString": "literal_string \"error::NOT_ADMIN\""
                        },
                        "value": "error::NOT_ADMIN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eae665bc4a219a4a8e0e8c9618aeaff3ea5a8831f61ddb29ad64806145366865",
                          "typeString": "literal_string \"error::NOT_ADMIN\""
                        }
                      ],
                      "id": 710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12771:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12771:72:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "12771:72:18"
                },
                {
                  "id": 724,
                  "nodeType": "PlaceholderStatement",
                  "src": "12854:1:18"
                }
              ]
            },
            "documentation": {
              "id": 706,
              "nodeType": "StructuredDocumentation",
              "src": "12620:101:18",
              "text": "@notice Checks that `caller` is authorized as a admin.\n @param caller The caller to check."
            },
            "id": 726,
            "name": "onlyAdmin",
            "nameLocation": "12735:9:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12753:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "12745:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12745:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12744:16:18"
            },
            "src": "12726:136:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "13017:109:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 737,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "13067:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Vault_$2277",
                                      "typeString": "contract Vault"
                                    }
                                  ],
                                  "id": 736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13059:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 735,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13059:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13059:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 734,
                              "name": "IVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5042,
                              "src": "13052:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVault_$5042_$",
                                "typeString": "type(contract IVault)"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13052:21:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            }
                          },
                          {
                            "id": 740,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "13075:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVault_$5042",
                              "typeString": "contract IVault"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 732,
                            "name": "auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "13035:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                              "typeString": "contract IVaultAuth"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isHarvester",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5256,
                          "src": "13035:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IVault_$5042_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (contract IVault,address) view external returns (bool)"
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13035:47:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6572726f723a3a4e4f545f484152564553544552",
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13084:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6712bb4dba4f357d429b4b4af165e8570e85953a0a3cee773550bad70bfdaf08",
                          "typeString": "literal_string \"error::NOT_HARVESTER\""
                        },
                        "value": "error::NOT_HARVESTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6712bb4dba4f357d429b4b4af165e8570e85953a0a3cee773550bad70bfdaf08",
                          "typeString": "literal_string \"error::NOT_HARVESTER\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13027:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13027:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "13027:80:18"
                },
                {
                  "id": 745,
                  "nodeType": "PlaceholderStatement",
                  "src": "13118:1:18"
                }
              ]
            },
            "documentation": {
              "id": 727,
              "nodeType": "StructuredDocumentation",
              "src": "12868:105:18",
              "text": "@notice Checks that `caller` is authorized as a harvester.\n @param caller The caller to check."
            },
            "id": 747,
            "name": "onlyHarvester",
            "nameLocation": "12987:13:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "13009:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "13001:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13001:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13000:16:18"
            },
            "src": "12978:148:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "13466:49:18",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 755,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5095,
                        "src": "13476:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13476:8:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 759,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5134,
                        "src": "13500:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13500:8:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "13476:32:18",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 757,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "13487:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13487:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "13476:32:18"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "13322:84:18",
              "text": "@notice Triggers the Vault's pause\n @dev Only owner can call this method."
            },
            "functionSelector": "6833f60d",
            "id": 764,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 751,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "13454:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "13454:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 750,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "13444:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13444:21:18"
              }
            ],
            "name": "triggerPause",
            "nameLocation": "13420:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13432:2:18"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13466:0:18"
            },
            "scope": 2277,
            "src": "13411:104:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "13796:954:18",
              "statements": [
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "name_",
                      "nameLocation": "13842:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 866,
                      "src": "13828:19:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "13828:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 787,
                            "name": "nPrefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "13870:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "20",
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13879:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            "value": " "
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 791,
                                    "name": "underlying_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "13890:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                                      "typeString": "contract ERC20Upgradeable"
                                    }
                                  },
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3843,
                                  "src": "13890:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13890:18:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13884:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 789,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "13884:5:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13884:25:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "20",
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13911:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            "value": " "
                          },
                          {
                            "id": 796,
                            "name": "nSuffix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "13916:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13857:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 784,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13857:5:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "13857:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13857:67:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13850:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "13850:6:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13850:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13828:97:18"
                },
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "nameLocation": "13949:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 866,
                      "src": "13935:21:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 800,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "13935:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 807,
                            "name": "sPrefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "13979:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 810,
                                    "name": "underlying_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "13994:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                                      "typeString": "contract ERC20Upgradeable"
                                    }
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3853,
                                  "src": "13994:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13994:20:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13988:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 808,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "13988:5:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13988:27:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13966:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 804,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13966:5:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "13966:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13966:50:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13959:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "13959:6:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13959:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13935:82:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "14069:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 819,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "14076:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 817,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3815,
                      "src": "14056:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14056:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "14056:28:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 822,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5076,
                      "src": "14094:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14094:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "14094:17:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 825,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5134,
                      "src": "14153:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14153:8:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "14153:8:18"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 828,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "14196:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                        "typeString": "contract ERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 829,
                      "name": "underlying_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "14209:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                        "typeString": "contract ERC20Upgradeable"
                      }
                    },
                    "src": "14196:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                      "typeString": "contract ERC20Upgradeable"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "14196:24:18"
                },
                {
                  "expression": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 832,
                      "name": "BASE_UNIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "14230:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14242:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 834,
                            "name": "underlying_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "14246:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                              "typeString": "contract ERC20Upgradeable"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3863,
                          "src": "14246:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14246:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "14242:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14230:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "14230:38:18"
                },
                {
                  "expression": {
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 840,
                      "name": "underlyingDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "14278:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 841,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 768,
                          "src": "14299:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                            "typeString": "contract ERC20Upgradeable"
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3863,
                        "src": "14299:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14299:22:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14278:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "14278:43:18"
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 846,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "14332:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                        "typeString": "contract IVaultAuth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 847,
                      "name": "auth_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "14339:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                        "typeString": "contract IVaultAuth"
                      }
                    },
                    "src": "14332:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                      "typeString": "contract IVaultAuth"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "14332:12:18"
                },
                {
                  "expression": {
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 850,
                      "name": "burningFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "14354:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 851,
                      "name": "burnFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "14375:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14354:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "14354:37:18"
                },
                {
                  "expression": {
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 854,
                      "name": "harvestFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "14401:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 855,
                      "name": "harvestFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "14422:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14401:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "14401:40:18"
                },
                {
                  "expression": {
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 858,
                      "name": "batchBurnRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "14553:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14570:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14553:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "14553:18:18"
                },
                {
                  "expression": {
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 862,
                      "name": "BLOCKS_PER_YEAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "14718:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32343635343337",
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14736:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2465437_by_1",
                        "typeString": "int_const 2465437"
                      },
                      "value": "2465437"
                    },
                    "src": "14718:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "14718:25:18"
                }
              ]
            },
            "documentation": {
              "id": 765,
              "nodeType": "StructuredDocumentation",
              "src": "13521:99:18",
              "text": "@notice The initialize method\n @param underlying_ The underlying token the vault accepts"
            },
            "functionSelector": "f8c8765e",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 777,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3706,
                  "src": "13784:11:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13784:11:18"
              }
            ],
            "name": "initialize",
            "nameLocation": "13634:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "13660:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "13654:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                    "typeString": "contract ERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 767,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 766,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4338,
                      "src": "13654:5:18"
                    },
                    "referencedDeclaration": 4338,
                    "src": "13654:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                      "typeString": "contract ERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "auth_",
                  "nameLocation": "13692:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "13681:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                    "typeString": "contract IVaultAuth"
                  },
                  "typeName": {
                    "id": 770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 769,
                      "name": "IVaultAuth",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5268,
                      "src": "13681:10:18"
                    },
                    "referencedDeclaration": 5268,
                    "src": "13681:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                      "typeString": "contract IVaultAuth"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "harvestFeeReceiver_",
                  "nameLocation": "13715:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "13707:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13707:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "burnFeeReceiver_",
                  "nameLocation": "13752:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "13744:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13744:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13644:130:18"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13796:0:18"
            },
            "scope": 2277,
            "src": "13625:1125:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3863
            ],
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "15179:42:18",
              "statements": [
                {
                  "expression": {
                    "id": 874,
                    "name": "underlyingDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 465,
                    "src": "15196:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 873,
                  "id": 875,
                  "nodeType": "Return",
                  "src": "15189:25:18"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "14939:178:18",
              "text": "@notice Overrides `decimals` method.\n @dev Needed because Openzeppelin's logic for decimals.\n @return Vault's shares token decimals (underlying token decimals)."
            },
            "functionSelector": "313ce567",
            "id": 877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "15131:8:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15154:8:18"
            },
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15139:2:18"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "15172:5:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15172:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15171:7:18"
            },
            "scope": 2277,
            "src": "15122:99:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "15647:124:18",
              "statements": [
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 889,
                      "name": "userDepositLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "15657:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 890,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 880,
                      "src": "15676:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15657:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "15657:23:18"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 893,
                      "name": "vaultDepositLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "15690:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 894,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "15710:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15690:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "15690:25:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 898,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "15752:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 899,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "15758:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 897,
                      "name": "DepositLimitsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "15731:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15731:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "EmitStatement",
                  "src": "15726:38:18"
                }
              ]
            },
            "documentation": {
              "id": 878,
              "nodeType": "StructuredDocumentation",
              "src": "15416:140:18",
              "text": "@notice Set new deposit limits for this vault.\n @param user New user deposit limit.\n @param vault New vault deposit limit."
            },
            "functionSelector": "4eddea06",
            "id": 903,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 885,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "15635:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "15635:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 884,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "15625:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "15625:21:18"
              }
            ],
            "name": "setDepositLimits",
            "nameLocation": "15570:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "15595:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "15587:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15587:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "15609:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "15601:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15601:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15586:29:18"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15647:0:18"
            },
            "scope": 2277,
            "src": "15561:210:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "16123:66:18",
              "statements": [
                {
                  "expression": {
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 914,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "16133:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                        "typeString": "contract IVaultAuth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 915,
                      "name": "newAuth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "16140:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                        "typeString": "contract IVaultAuth"
                      }
                    },
                    "src": "16133:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                      "typeString": "contract IVaultAuth"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "16133:14:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "newAuth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "16174:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                          "typeString": "contract IVaultAuth"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                          "typeString": "contract IVaultAuth"
                        }
                      ],
                      "id": 918,
                      "name": "AuthUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "16162:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IVaultAuth_$5268_$returns$__$",
                        "typeString": "function (contract IVaultAuth)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16162:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "EmitStatement",
                  "src": "16157:25:18"
                }
              ]
            },
            "documentation": {
              "id": 904,
              "nodeType": "StructuredDocumentation",
              "src": "15960:90:18",
              "text": "@notice Set a new IVaultAuth module.\n @param newAuth The new IVaultAuth module."
            },
            "functionSelector": "2b2e05c1",
            "id": 923,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 910,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "16111:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "16111:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 912,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 909,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "16101:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "16101:21:18"
              }
            ],
            "name": "setAuth",
            "nameLocation": "16064:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "newAuth",
                  "nameLocation": "16083:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "16072:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                    "typeString": "contract IVaultAuth"
                  },
                  "typeName": {
                    "id": 906,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 905,
                      "name": "IVaultAuth",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5268,
                      "src": "16072:10:18"
                    },
                    "referencedDeclaration": 5268,
                    "src": "16072:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultAuth_$5268",
                      "typeString": "contract IVaultAuth"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16071:20:18"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16123:0:18"
            },
            "scope": 2277,
            "src": "16055:134:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 937,
              "nodeType": "Block",
              "src": "16543:41:18",
              "statements": [
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 933,
                      "name": "BLOCKS_PER_YEAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "16553:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 934,
                      "name": "blocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "16571:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16553:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "16553:24:18"
                }
              ]
            },
            "documentation": {
              "id": 924,
              "nodeType": "StructuredDocumentation",
              "src": "16386:79:18",
              "text": "@notice Sets blocks per year.\n @param blocks Blocks in a given year."
            },
            "functionSelector": "e5fa2b70",
            "id": 938,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 929,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "16531:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "16531:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 931,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 928,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "16521:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "16521:21:18"
              }
            ],
            "name": "setBlocksPerYear",
            "nameLocation": "16479:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "mutability": "mutable",
                  "name": "blocks",
                  "nameLocation": "16504:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "16496:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16496:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16495:16:18"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16543:0:18"
            },
            "scope": 2277,
            "src": "16470:114:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "16954:273:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 949,
                          "name": "newFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "17030:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17047:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "17030:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657446656550657263656e743a3a4645455f544f4f5f48494748",
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17053:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae8f957c7a5f8df2f32440a86af02eb5239a1c1b4ee59583fff35200c411d959",
                          "typeString": "literal_string \"setFeePercent::FEE_TOO_HIGH\""
                        },
                        "value": "setFeePercent::FEE_TOO_HIGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae8f957c7a5f8df2f32440a86af02eb5239a1c1b4ee59583fff35200c411d959",
                          "typeString": "literal_string \"setFeePercent::FEE_TOO_HIGH\""
                        }
                      ],
                      "id": 948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17022:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17022:61:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "17022:61:18"
                },
                {
                  "expression": {
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 955,
                      "name": "harvestFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "17132:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 956,
                      "name": "newFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "17152:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17132:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "17132:33:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "newFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "17206:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 959,
                      "name": "HarvestFeePercentUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "17181:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17181:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "17176:44:18"
                }
              ]
            },
            "documentation": {
              "id": 939,
              "nodeType": "StructuredDocumentation",
              "src": "16775:90:18",
              "text": "@notice Set a new fee percentage.\n @param newFeePercent The new fee percentage."
            },
            "functionSelector": "cbc43f89",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 944,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "16942:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "16942:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 943,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "16932:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "16932:21:18"
              }
            ],
            "name": "setHarvestFeePercent",
            "nameLocation": "16879:20:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "16908:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "16900:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16900:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16899:23:18"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16954:0:18"
            },
            "scope": 2277,
            "src": "16870:357:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 989,
              "nodeType": "Block",
              "src": "17427:287:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 975,
                          "name": "newFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 967,
                          "src": "17503:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17520:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "17503:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574426174636865644275726e696e6746656550657263656e743a3a4645455f544f4f5f48494748",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17526:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b89119259fbffd38d98164f7a008f09f4c0b6988a0affe1b3a74b1a1faf7de32",
                          "typeString": "literal_string \"setBatchedBurningFeePercent::FEE_TOO_HIGH\""
                        },
                        "value": "setBatchedBurningFeePercent::FEE_TOO_HIGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b89119259fbffd38d98164f7a008f09f4c0b6988a0affe1b3a74b1a1faf7de32",
                          "typeString": "literal_string \"setBatchedBurningFeePercent::FEE_TOO_HIGH\""
                        }
                      ],
                      "id": 974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17495:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17495:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "17495:75:18"
                },
                {
                  "expression": {
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 981,
                      "name": "burningFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "17619:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 982,
                      "name": "newFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "17639:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17619:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "17619:33:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 986,
                        "name": "newFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "17693:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 985,
                      "name": "BurningFeePercentUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "17668:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17668:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "EmitStatement",
                  "src": "17663:44:18"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "17233:98:18",
              "text": "@notice Set a new burning fee percentage.\n @param newFeePercent The new fee percentage."
            },
            "functionSelector": "7ccfb43f",
            "id": 990,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 970,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "17415:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "17415:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 972,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 969,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "17405:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17405:21:18"
              }
            ],
            "name": "setBatchedBurningFeePercent",
            "nameLocation": "17345:27:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "17381:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "17373:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17373:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17372:23:18"
            },
            "returnParameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17427:0:18"
            },
            "scope": 2277,
            "src": "17336:378:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "17926:157:18",
              "statements": [
                {
                  "expression": {
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1000,
                      "name": "harvestFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "17974:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1001,
                      "name": "harvestFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "17995:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17974:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "17974:40:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1005,
                        "name": "harvestFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "18056:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1004,
                      "name": "HarvestFeeReceiverUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "18030:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18030:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "EmitStatement",
                  "src": "18025:51:18"
                }
              ]
            },
            "documentation": {
              "id": 991,
              "nodeType": "StructuredDocumentation",
              "src": "17720:110:18",
              "text": "@notice Set a new harvest fees receiver.\n @param harvestFeeReceiver_ The new harvest fees receiver."
            },
            "functionSelector": "ac86ac72",
            "id": 1009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 996,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "17914:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "17914:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 998,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 995,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "17904:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17904:21:18"
              }
            ],
            "name": "setHarvestFeeReceiver",
            "nameLocation": "17844:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "harvestFeeReceiver_",
                  "nameLocation": "17874:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "17866:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17866:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17865:29:18"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17926:0:18"
            },
            "scope": 2277,
            "src": "17835:248:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1027,
              "nodeType": "Block",
              "src": "18295:157:18",
              "statements": [
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1019,
                      "name": "burningFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "18343:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "burningFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "18364:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18343:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "18343:40:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1024,
                        "name": "burningFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "18425:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1023,
                      "name": "BurningFeeReceiverUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "18399:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18399:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1026,
                  "nodeType": "EmitStatement",
                  "src": "18394:51:18"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "18089:110:18",
              "text": "@notice Set a new burning fees receiver.\n @param burningFeeReceiver_ The new burning fees receiver."
            },
            "functionSelector": "13e86b28",
            "id": 1028,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1015,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18283:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "18283:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1017,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1014,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "18273:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "18273:21:18"
              }
            ],
            "name": "setBurningFeeReceiver",
            "nameLocation": "18213:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "burningFeeReceiver_",
                  "nameLocation": "18243:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "18235:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18235:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18234:29:18"
            },
            "returnParameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18295:0:18"
            },
            "scope": 2277,
            "src": "18204:248:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "18899:308:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1039,
                          "name": "newHarvestWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "18995:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1040,
                          "name": "harvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "19015:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "18995:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737457696e646f773a3a57494e444f575f544f4f5f4c4f4e47",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19029:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e798ef3bfdadddbd9773be938dc89a6e46cf9d00ccab52fe60ca84b98334134c",
                          "typeString": "literal_string \"setHarvestWindow::WINDOW_TOO_LONG\""
                        },
                        "value": "setHarvestWindow::WINDOW_TOO_LONG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e798ef3bfdadddbd9773be938dc89a6e46cf9d00ccab52fe60ca84b98334134c",
                          "typeString": "literal_string \"setHarvestWindow::WINDOW_TOO_LONG\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18987:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18987:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "18987:78:18"
                },
                {
                  "expression": {
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1045,
                      "name": "harvestWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "19114:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1046,
                      "name": "newHarvestWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "19130:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "19114:32:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "19114:32:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1050,
                        "name": "newHarvestWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "19183:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1049,
                      "name": "HarvestWindowUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "19162:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19162:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "EmitStatement",
                  "src": "19157:43:18"
                }
              ]
            },
            "documentation": {
              "id": 1029,
              "nodeType": "StructuredDocumentation",
              "src": "18644:167:18",
              "text": "@notice Set a new harvest window.\n @param newHarvestWindow The new harvest window.\n @dev The Vault's harvestDelay must already be set before calling."
            },
            "functionSelector": "07b35d1d",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1034,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18887:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "18887:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1033,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "18877:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "18877:21:18"
              }
            ],
            "name": "setHarvestWindow",
            "nameLocation": "18825:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "newHarvestWindow",
                  "nameLocation": "18850:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "18842:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "18842:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18841:26:18"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18899:0:18"
            },
            "scope": 2277,
            "src": "18816:391:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "19603:776:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1065,
                          "name": "newHarvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "19700:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19719:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19700:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737444656c61793a3a44454c41595f43414e4e4f545f42455f5a45524f",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19722:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_deb4e5b76488a66c78223ea49538ba52faef04c3e1c7169303fb685493330009",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\""
                        },
                        "value": "setHarvestDelay::DELAY_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_deb4e5b76488a66c78223ea49538ba52faef04c3e1c7169303fb685493330009",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19692:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19692:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "19692:70:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1072,
                          "name": "newHarvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "19847:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "333635",
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19866:8:18",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          },
                          "value": "365"
                        },
                        "src": "19847:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737444656c61793a3a44454c41595f544f4f5f4c4f4e47",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19876:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6626db562e0c5359f403b0a0e7da8313f90dd8ba7a315394d1e7d31fea28361b",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_TOO_LONG\""
                        },
                        "value": "setHarvestDelay::DELAY_TOO_LONG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6626db562e0c5359f403b0a0e7da8313f90dd8ba7a315394d1e7d31fea28361b",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_TOO_LONG\""
                        }
                      ],
                      "id": 1071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19839:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19839:71:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "19839:71:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1078,
                      "name": "harvestDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "19999:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20015:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19999:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1100,
                    "nodeType": "Block",
                    "src": "20198:175:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1092,
                            "name": "nextHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "20264:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1093,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "20283:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "20264:34:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1095,
                        "nodeType": "ExpressionStatement",
                        "src": "20264:34:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1097,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "20346:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1096,
                            "name": "HarvestDelayUpdateScheduled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "20318:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20318:44:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1099,
                        "nodeType": "EmitStatement",
                        "src": "20313:49:18"
                      }
                    ]
                  },
                  "id": 1101,
                  "nodeType": "IfStatement",
                  "src": "19995:378:18",
                  "trueBody": {
                    "id": 1091,
                    "nodeType": "Block",
                    "src": "20018:174:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1081,
                            "name": "harvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "20083:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1082,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "20098:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "20083:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1084,
                        "nodeType": "ExpressionStatement",
                        "src": "20083:30:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1086,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20153:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20153:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1088,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "20165:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1085,
                            "name": "HarvestDelayUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "20133:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64)"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20133:48:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1090,
                        "nodeType": "EmitStatement",
                        "src": "20128:53:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1055,
              "nodeType": "StructuredDocumentation",
              "src": "19213:305:18",
              "text": "@notice Set a new harvest delay delay.\n @param newHarvestDelay The new harvest delay to set.\n @dev If the current harvest delay is 0, meaning it has not\n been set before, it will be updated immediately; otherwise\n it will be scheduled to take effect after the next harvest."
            },
            "functionSelector": "7b72aeb9",
            "id": 1103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1060,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "19591:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "19591:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1059,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "19581:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "19581:21:18"
              }
            ],
            "name": "setHarvestDelay",
            "nameLocation": "19532:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "19555:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "19548:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "19548:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19547:24:18"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19603:0:18"
            },
            "scope": 2277,
            "src": "19523:856:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "20950:39:18",
              "statements": [
                {
                  "expression": {
                    "id": 1111,
                    "name": "withdrawalQueue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 522,
                    "src": "20967:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
                      "typeString": "contract IStrategy[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1110,
                  "id": 1112,
                  "nodeType": "Return",
                  "src": "20960:22:18"
                }
              ]
            },
            "documentation": {
              "id": 1104,
              "nodeType": "StructuredDocumentation",
              "src": "20566:306:18",
              "text": "@notice Gets the full withdrawal queue.\n @return An ordered array of strategies representing the withdrawal queue.\n @dev This is provided because Solidity converts public arrays into index getters,\n but we need a way to allow external contracts and users to access the whole array."
            },
            "functionSelector": "0e73ecef",
            "id": 1114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawalQueue",
            "nameLocation": "20886:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20904:2:18"
            },
            "returnParameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "20930:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1107,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1106,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5229,
                        "src": "20930:9:18"
                      },
                      "referencedDeclaration": 5229,
                      "src": "20930:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5229",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1108,
                    "nodeType": "ArrayTypeName",
                    "src": "20930:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20929:20:18"
            },
            "scope": 2277,
            "src": "20877:112:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "21337:259:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1127,
                            "name": "newQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "21396:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "21396:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1129,
                          "name": "MAX_STRATEGIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "21415:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21396:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745769746864726177616c51756575653a3a51554555455f544f4f5f424947",
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21431:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46e364327c935a630ddad89ea527f2cca604ad30058fe30d43a7da634f9fc7bf",
                          "typeString": "literal_string \"setWithdrawalQueue::QUEUE_TOO_BIG\""
                        },
                        "value": "setWithdrawalQueue::QUEUE_TOO_BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46e364327c935a630ddad89ea527f2cca604ad30058fe30d43a7da634f9fc7bf",
                          "typeString": "literal_string \"setWithdrawalQueue::QUEUE_TOO_BIG\""
                        }
                      ],
                      "id": 1126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21388:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21388:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "21388:79:18"
                },
                {
                  "expression": {
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1134,
                      "name": "withdrawalQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "21519:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1135,
                      "name": "newQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "21537:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "src": "21519:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
                      "typeString": "contract IStrategy[] storage ref"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "21519:26:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1139,
                        "name": "newQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "21580:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      ],
                      "id": 1138,
                      "name": "WithdrawalQueueSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "21561:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_contract$_IStrategy_$5229_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IStrategy[] memory)"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21561:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "EmitStatement",
                  "src": "21556:33:18"
                }
              ]
            },
            "documentation": {
              "id": 1115,
              "nodeType": "StructuredDocumentation",
              "src": "20995:247:18",
              "text": "@notice Set the withdrawal queue.\n @param newQueue The new withdrawal queue.\n @dev Strategies that are untrusted, duplicated, or have no balance are\n filtered out when encountered at withdrawal time, not validated upfront."
            },
            "functionSelector": "ac579b77",
            "id": 1143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1122,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "21325:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "21325:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1121,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "21315:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "21315:21:18"
              }
            ],
            "name": "setWithdrawalQueue",
            "nameLocation": "21256:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "newQueue",
                  "nameLocation": "21296:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "21275:29:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1117,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1116,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5229,
                        "src": "21275:9:18"
                      },
                      "referencedDeclaration": 5229,
                      "src": "21275:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5229",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1118,
                    "nodeType": "ArrayTypeName",
                    "src": "21275:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21274:31:18"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21337:0:18"
            },
            "scope": 2277,
            "src": "21247:349:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "21996:406:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$4416",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1155,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "22190:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5216,
                            "src": "22190:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20Upgradeable_$4416_$",
                              "typeString": "function () view external returns (contract IERC20Upgradeable)"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22190:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$4416",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1158,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 462,
                          "src": "22215:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                            "typeString": "contract ERC20Upgradeable"
                          }
                        },
                        "src": "22190:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747275737453747261746567793a3a57524f4e475f554e4445524c59494e47",
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22227:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04660e272bfc049566637cd9a5bb77407a43b625240d121a46c19909f9de136b",
                          "typeString": "literal_string \"trustStrategy::WRONG_UNDERLYING\""
                        },
                        "value": "trustStrategy::WRONG_UNDERLYING"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04660e272bfc049566637cd9a5bb77407a43b625240d121a46c19909f9de136b",
                          "typeString": "literal_string \"trustStrategy::WRONG_UNDERLYING\""
                        }
                      ],
                      "id": 1154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22182:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22182:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "22182:79:18"
                },
                {
                  "expression": {
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1163,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "22314:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1165,
                        "indexExpression": {
                          "id": 1164,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "22330:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5229",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22314:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "trusted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "22314:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22350:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "22314:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "22314:40:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1171,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "22386:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 1170,
                      "name": "StrategyTrusted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "22370:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$5229_$returns$__$",
                        "typeString": "function (contract IStrategy)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22370:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1173,
                  "nodeType": "EmitStatement",
                  "src": "22365:30:18"
                }
              ]
            },
            "documentation": {
              "id": 1144,
              "nodeType": "StructuredDocumentation",
              "src": "21794:123:18",
              "text": "@notice Store a strategy as trusted, enabling it to be harvested.\n @param strategy The strategy to make trusted."
            },
            "functionSelector": "ec523afd",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1150,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "21984:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "21984:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1149,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "21974:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "21974:21:18"
              }
            ],
            "name": "trustStrategy",
            "nameLocation": "21931:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "21955:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "21945:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1145,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "21945:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "21945:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21944:20:18"
            },
            "returnParameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21996:0:18"
            },
            "scope": 2277,
            "src": "21922:480:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "22623:146:18",
              "statements": [
                {
                  "expression": {
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1186,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "22677:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1188,
                        "indexExpression": {
                          "id": 1187,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "22693:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5229",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22677:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "trusted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "22677:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22713:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "22677:41:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "22677:41:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1194,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "22753:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 1193,
                      "name": "StrategyDistrusted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "22734:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$5229_$returns$__$",
                        "typeString": "function (contract IStrategy)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22734:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "EmitStatement",
                  "src": "22729:33:18"
                }
              ]
            },
            "documentation": {
              "id": 1176,
              "nodeType": "StructuredDocumentation",
              "src": "22408:133:18",
              "text": "@notice Store a strategy as untrusted, disabling it from being harvested.\n @param strategy The strategy to make untrusted."
            },
            "functionSelector": "c866983b",
            "id": 1198,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1182,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "22611:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "22611:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1181,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "22601:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "22601:21:18"
              }
            ],
            "name": "distrustStrategy",
            "nameLocation": "22555:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "22582:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "22572:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1178,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1177,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "22572:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "22572:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22571:20:18"
            },
            "returnParameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22623:0:18"
            },
            "scope": 2277,
            "src": "22546:223:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "23428:93:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1209,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "23447:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1210,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "23452:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1212,
                                  "name": "underlyingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "23477:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1211,
                                "name": "calculateShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1624,
                                "src": "23461:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23461:33:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23452:42:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1215,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "23451:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1216,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "23497:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1208,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1608,
                      "src": "23438:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23438:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "23438:76:18"
                }
              ]
            },
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "22956:378:18",
              "text": "@notice Deposit a specific amount of underlying tokens.\n @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n @param to The address to receive shares corresponding to the deposit.\n @param underlyingAmount The amount of the underlying token to deposit.\n @return shares The amount of shares minted using `underlyingAmount`."
            },
            "functionSelector": "47e7ef24",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "23348:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23364:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "23356:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23356:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "23376:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "23368:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23355:38:18"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "23420:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "23412:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23412:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23411:16:18"
            },
            "scope": 2277,
            "src": "23339:182:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1241,
              "nodeType": "Block",
              "src": "23986:87:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1231,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "24005:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1232,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "24009:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1233,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "24018:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1235,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "24057:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1234,
                                "name": "calculateUnderlying",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1640,
                                "src": "24037:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24037:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24018:46:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1238,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "24017:48:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1230,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1608,
                      "src": "23996:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23996:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "23996:70:18"
                }
              ]
            },
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "23527:368:18",
              "text": "@notice Deposit a specific amount of underlying tokens.\n @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n @param to The address to receive shares corresponding to the deposit.\n @param shares The amount of Vault's shares to mint.\n @return underlyingAmount The amount needed to mint `shares` amount of shares."
            },
            "functionSelector": "40c10f19",
            "id": 1242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "23909:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23922:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "23914:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23914:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "23934:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "23926:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23926:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23913:28:18"
            },
            "returnParameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1228,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "23968:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "23960:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23960:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23959:26:18"
            },
            "scope": 2277,
            "src": "23900:173:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1321,
              "nodeType": "Block",
              "src": "24393:1066:18",
              "statements": [
                {
                  "assignments": [
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "24411:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1321,
                      "src": "24403:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24403:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "id": 1250,
                    "name": "batchBurnRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "24429:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24403:40:18"
                },
                {
                  "assignments": [
                    1253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1253,
                      "mutability": "mutable",
                      "name": "userRound",
                      "nameLocation": "24461:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1321,
                      "src": "24453:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24453:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1259,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1254,
                        "name": "userBatchBurnReceipts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "24473:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                          "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                        }
                      },
                      "id": 1257,
                      "indexExpression": {
                        "expression": {
                          "id": 1255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24495:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24495:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24473:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                        "typeString": "struct Vault.BatchBurnReceipt storage ref"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "round",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 448,
                    "src": "24473:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24453:59:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1260,
                      "name": "userRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "24527:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24540:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24527:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "24814:461:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1281,
                                "name": "userRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "25135:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1282,
                                "name": "batchBurnRound_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1249,
                                "src": "25148:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "25135:28:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "656e74657242617463684275726e3a3a444946464552454e545f524f554e4453",
                              "id": 1284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25165:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07f40d4b5b14a7ccaf784f8712598b511f92798e8c41fee6afc9c8b9c0ea1fd7",
                                "typeString": "literal_string \"enterBatchBurn::DIFFERENT_ROUNDS\""
                              },
                              "value": "enterBatchBurn::DIFFERENT_ROUNDS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07f40d4b5b14a7ccaf784f8712598b511f92798e8c41fee6afc9c8b9c0ea1fd7",
                                "typeString": "literal_string \"enterBatchBurn::DIFFERENT_ROUNDS\""
                              }
                            ],
                            "id": 1280,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "25127:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25127:73:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1286,
                        "nodeType": "ExpressionStatement",
                        "src": "25127:73:18"
                      },
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1287,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "25214:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1290,
                              "indexExpression": {
                                "expression": {
                                  "id": 1288,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "25236:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "25236:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25214:33:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "25214:40:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1292,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "25258:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25214:50:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "25214:50:18"
                      }
                    ]
                  },
                  "id": 1296,
                  "nodeType": "IfStatement",
                  "src": "24523:752:18",
                  "trueBody": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "24543:265:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1263,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "24677:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1266,
                              "indexExpression": {
                                "expression": {
                                  "id": 1264,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24699:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "24699:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24677:33:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "round",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "24677:39:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1268,
                            "name": "batchBurnRound_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1249,
                            "src": "24719:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24677:57:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "24677:57:18"
                      },
                      {
                        "expression": {
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1271,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "24748:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1274,
                              "indexExpression": {
                                "expression": {
                                  "id": 1272,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24770:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "24770:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24748:33:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 450,
                            "src": "24748:40:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1276,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "24791:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24748:49:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1278,
                        "nodeType": "ExpressionStatement",
                        "src": "24748:49:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1297,
                          "name": "batchBurns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "25285:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
                            "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                          }
                        },
                        "id": 1299,
                        "indexExpression": {
                          "id": 1298,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "25296:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25285:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$446_storage",
                          "typeString": "struct Vault.BatchBurn storage ref"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 443,
                      "src": "25285:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1301,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "25328:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25285:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "25285:49:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1308,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "25370:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$2277",
                                  "typeString": "contract Vault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vault_$2277",
                                  "typeString": "contract Vault"
                                }
                              ],
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25362:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1306,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25362:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25362:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1310,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "25377:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1305,
                          "name": "transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3908,
                          "src": "25353:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25353:31:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25345:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25345:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1313,
                  "nodeType": "ExpressionStatement",
                  "src": "25345:40:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1315,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "25416:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1316,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25433:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25433:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1318,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "25445:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1314,
                      "name": "EnterBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "25401:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25401:51:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1320,
                  "nodeType": "EmitStatement",
                  "src": "25396:56:18"
                }
              ]
            },
            "documentation": {
              "id": 1243,
              "nodeType": "StructuredDocumentation",
              "src": "24079:260:18",
              "text": "@notice Enter a batched burn event.\n @dev Each user can take part to one batched burn event a time.\n @dev User's shares amount will be staked until the burn happens.\n @param shares Shares to withdraw during the next batched burn event."
            },
            "functionSelector": "3c66a8fa",
            "id": 1322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterBatchBurn",
            "nameLocation": "24353:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "24376:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "24368:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24367:16:18"
            },
            "returnParameters": {
              "id": 1247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24393:0:18"
            },
            "scope": 2277,
            "src": "24344:1115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1403,
              "nodeType": "Block",
              "src": "25571:815:18",
              "statements": [
                {
                  "assignments": [
                    1327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "25589:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1403,
                      "src": "25581:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25581:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1329,
                  "initialValue": {
                    "id": 1328,
                    "name": "batchBurnRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "25607:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25581:40:18"
                },
                {
                  "assignments": [
                    1332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1332,
                      "mutability": "mutable",
                      "name": "receipt",
                      "nameLocation": "25655:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1403,
                      "src": "25631:31:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_memory_ptr",
                        "typeString": "struct Vault.BatchBurnReceipt"
                      },
                      "typeName": {
                        "id": 1331,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1330,
                          "name": "BatchBurnReceipt",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 451,
                          "src": "25631:16:18"
                        },
                        "referencedDeclaration": 451,
                        "src": "25631:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage_ptr",
                          "typeString": "struct Vault.BatchBurnReceipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1337,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1333,
                      "name": "userBatchBurnReceipts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "25665:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                        "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                      }
                    },
                    "id": 1336,
                    "indexExpression": {
                      "expression": {
                        "id": 1334,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "25687:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "25687:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25665:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                      "typeString": "struct Vault.BatchBurnReceipt storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25631:67:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1339,
                            "name": "receipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "25717:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_memory_ptr",
                              "typeString": "struct Vault.BatchBurnReceipt memory"
                            }
                          },
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "round",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 448,
                          "src": "25717:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25734:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25717:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578697442617463684275726e3a3a4e4f5f4445504f53495453",
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25737:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94f0eff9069e7de830b490c4649c211e5b2854ea80da508b72ad934b4ea8d0ec",
                          "typeString": "literal_string \"exitBatchBurn::NO_DEPOSITS\""
                        },
                        "value": "exitBatchBurn::NO_DEPOSITS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94f0eff9069e7de830b490c4649c211e5b2854ea80da508b72ad934b4ea8d0ec",
                          "typeString": "literal_string \"exitBatchBurn::NO_DEPOSITS\""
                        }
                      ],
                      "id": 1338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25709:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25709:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "25709:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1347,
                            "name": "receipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "25784:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_memory_ptr",
                              "typeString": "struct Vault.BatchBurnReceipt memory"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "round",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 448,
                          "src": "25784:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1349,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1327,
                          "src": "25800:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25784:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578697442617463684275726e3a3a524f554e445f4e4f545f4558454355544544",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25817:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5015aace095b0d40586939eccbd3699a06eef1ea2c64bf51e4ac51b869676779",
                          "typeString": "literal_string \"exitBatchBurn::ROUND_NOT_EXECUTED\""
                        },
                        "value": "exitBatchBurn::ROUND_NOT_EXECUTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5015aace095b0d40586939eccbd3699a06eef1ea2c64bf51e4ac51b869676779",
                          "typeString": "literal_string \"exitBatchBurn::ROUND_NOT_EXECUTED\""
                        }
                      ],
                      "id": 1346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25776:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25776:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "25776:77:18"
                },
                {
                  "expression": {
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1354,
                          "name": "userBatchBurnReceipts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "25864:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                            "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                          }
                        },
                        "id": 1357,
                        "indexExpression": {
                          "expression": {
                            "id": 1355,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25886:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25886:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25864:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                          "typeString": "struct Vault.BatchBurnReceipt storage ref"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "round",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 448,
                      "src": "25864:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25906:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25864:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "25864:43:18"
                },
                {
                  "expression": {
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1362,
                          "name": "userBatchBurnReceipts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "25917:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$451_storage_$",
                            "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                          }
                        },
                        "id": 1365,
                        "indexExpression": {
                          "expression": {
                            "id": 1363,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25939:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25939:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25917:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_storage",
                          "typeString": "struct Vault.BatchBurnReceipt storage ref"
                        }
                      },
                      "id": 1366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 450,
                      "src": "25917:40:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25960:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25917:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "25917:44:18"
                },
                {
                  "assignments": [
                    1371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1371,
                      "mutability": "mutable",
                      "name": "underlyingAmount",
                      "nameLocation": "25980:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1403,
                      "src": "25972:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25972:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1375,
                            "name": "batchBurns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "26019:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
                              "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                            }
                          },
                          "id": 1378,
                          "indexExpression": {
                            "expression": {
                              "id": 1376,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "26030:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_memory_ptr",
                                "typeString": "struct Vault.BatchBurnReceipt memory"
                              }
                            },
                            "id": 1377,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "round",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "26030:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26019:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchBurn_$446_storage",
                            "typeString": "struct Vault.BatchBurn storage ref"
                          }
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountPerShare",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 445,
                        "src": "26019:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1380,
                        "name": "BASE_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "26061:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1372,
                          "name": "receipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1332,
                          "src": "25999:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchBurnReceipt_$451_memory_ptr",
                            "typeString": "struct Vault.BatchBurnReceipt memory"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 450,
                        "src": "25999:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2906,
                      "src": "25999:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25999:72:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25972:99:18"
                },
                {
                  "id": 1387,
                  "nodeType": "UncheckedBlock",
                  "src": "26170:71:18",
                  "statements": [
                    {
                      "expression": {
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1383,
                          "name": "batchBurnBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "26194:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 1384,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1371,
                          "src": "26214:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26194:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1386,
                      "nodeType": "ExpressionStatement",
                      "src": "26194:36:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26274:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26274:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1393,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "26286:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1388,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "26250:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4447,
                      "src": "26250:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4416_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4416_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26250:53:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "26250:53:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1397,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "26333:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26350:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26350:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "26362:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1396,
                      "name": "ExitBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "26319:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26319:60:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "EmitStatement",
                  "src": "26314:65:18"
                }
              ]
            },
            "documentation": {
              "id": 1323,
              "nodeType": "StructuredDocumentation",
              "src": "25465:67:18",
              "text": "@notice Withdraw underlying redeemed in batched burning events."
            },
            "functionSelector": "793101a5",
            "id": 1404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitBatchBurn",
            "nameLocation": "25546:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25559:2:18"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25571:0:18"
            },
            "scope": 2277,
            "src": "25537:849:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "26486:1700:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1413,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "26554:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "26554:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1415,
                                "name": "lastHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "26574:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1416,
                                "name": "harvestDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "26588:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "26574:26:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "id": 1418,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "26573:28:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "26554:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617463684275726e3a3a4c41544553545f484152564553545f4e4f545f45585049524544",
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26603:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99e562a1853179eb8515df7a8962580e8c44530138c056f602fe6ce504b0d51c",
                          "typeString": "literal_string \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\""
                        },
                        "value": "batchBurn::LATEST_HARVEST_NOT_EXPIRED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99e562a1853179eb8515df7a8962580e8c44530138c056f602fe6ce504b0d51c",
                          "typeString": "literal_string \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\""
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26546:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26546:97:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "26546:97:18"
                },
                {
                  "assignments": [
                    1424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1424,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "26662:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "26654:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26654:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1426,
                  "initialValue": {
                    "id": 1425,
                    "name": "batchBurnRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "26680:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26654:40:18"
                },
                {
                  "expression": {
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1427,
                      "name": "batchBurnRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "26704:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26722:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "26704:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "26704:19:18"
                },
                {
                  "assignments": [
                    1433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "batchBurn",
                      "nameLocation": "26751:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "26734:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurn_$446_memory_ptr",
                        "typeString": "struct Vault.BatchBurn"
                      },
                      "typeName": {
                        "id": 1432,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1431,
                          "name": "BatchBurn",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 446,
                          "src": "26734:9:18"
                        },
                        "referencedDeclaration": 446,
                        "src": "26734:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$446_storage_ptr",
                          "typeString": "struct Vault.BatchBurn"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1437,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1434,
                      "name": "batchBurns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "26763:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
                        "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                      }
                    },
                    "id": 1436,
                    "indexExpression": {
                      "id": 1435,
                      "name": "batchBurnRound_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1424,
                      "src": "26774:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26763:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchBurn_$446_storage",
                      "typeString": "struct Vault.BatchBurn storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26734:56:18"
                },
                {
                  "assignments": [
                    1439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1439,
                      "mutability": "mutable",
                      "name": "totalShares",
                      "nameLocation": "26808:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "26800:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26800:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1442,
                  "initialValue": {
                    "expression": {
                      "id": 1440,
                      "name": "batchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "26822:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurn_$446_memory_ptr",
                        "typeString": "struct Vault.BatchBurn memory"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalShares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 443,
                    "src": "26822:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26800:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1444,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "26908:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26923:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26908:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617463684275726e3a3a544f54414c5f5348415245535f43414e4e4f545f42455f5a45524f",
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26926:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec2b52b05839ebee0ead5c183b31b09e81855d3c9a2a1088b45e2aa1a371ccce",
                          "typeString": "literal_string \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\""
                        },
                        "value": "batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec2b52b05839ebee0ead5c183b31b09e81855d3c9a2a1088b45e2aa1a371ccce",
                          "typeString": "literal_string \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26900:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26900:67:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "26900:67:18"
                },
                {
                  "assignments": [
                    1451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1451,
                      "mutability": "mutable",
                      "name": "underlyingAmount",
                      "nameLocation": "27090:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "27082:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1450,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27082:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1458,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1454,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "27126:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27126:14:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "BASE_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "27142:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1452,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "27109:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2906,
                      "src": "27109:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27109:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27082:70:18"
                },
                {
                  "assignments": [
                    1460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1460,
                      "mutability": "mutable",
                      "name": "float",
                      "nameLocation": "27170:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "27162:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27162:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1463,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1461,
                      "name": "totalFloat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "27178:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27178:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27162:28:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1464,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "27283:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1465,
                      "name": "float",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1460,
                      "src": "27302:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27283:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1478,
                  "nodeType": "IfStatement",
                  "src": "27279:308:18",
                  "trueBody": {
                    "id": 1477,
                    "nodeType": "Block",
                    "src": "27309:278:18",
                    "statements": [
                      {
                        "assignments": [
                          1468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1468,
                            "mutability": "mutable",
                            "name": "floatMissingForWithdrawal",
                            "nameLocation": "27407:25:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1477,
                            "src": "27399:33:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1467,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27399:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1472,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1469,
                            "name": "underlyingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "27435:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1470,
                            "name": "float",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "27454:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27435:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27399:60:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1474,
                              "name": "floatMissingForWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "27550:25:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1473,
                            "name": "pullFromWithdrawalQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2120,
                            "src": "27526:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27526:50:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "27526:50:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1482,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "27611:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$2277",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$2277",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27603:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27603:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27603:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1484,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "27618:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1479,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4266,
                      "src": "27597:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27597:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "27597:33:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1487,
                      "name": "burningFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "27707:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27728:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "27707:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "IfStatement",
                  "src": "27703:239:18",
                  "trueBody": {
                    "id": 1511,
                    "nodeType": "Block",
                    "src": "27731:211:18",
                    "statements": [
                      {
                        "assignments": [
                          1491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1491,
                            "mutability": "mutable",
                            "name": "accruedFees",
                            "nameLocation": "27753:11:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1511,
                            "src": "27745:19:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1490,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27745:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1499,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1494,
                              "name": "burningFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "27789:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27808:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27812:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "27808:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 1492,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1451,
                              "src": "27767:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fmul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2906,
                            "src": "27767:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27767:48:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27745:70:18"
                      },
                      {
                        "expression": {
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1500,
                            "name": "underlyingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "27829:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1501,
                            "name": "accruedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1491,
                            "src": "27849:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27829:31:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1503,
                        "nodeType": "ExpressionStatement",
                        "src": "27829:31:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1507,
                              "name": "burningFeeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "27899:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1508,
                              "name": "accruedFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1491,
                              "src": "27919:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1504,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "27875:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                                "typeString": "contract ERC20Upgradeable"
                              }
                            },
                            "id": 1506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4447,
                            "src": "27875:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4416_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4416_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27875:56:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1510,
                        "nodeType": "ExpressionStatement",
                        "src": "27875:56:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1513,
                          "name": "batchBurns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "27951:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$446_storage_$",
                            "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                          }
                        },
                        "id": 1515,
                        "indexExpression": {
                          "id": 1514,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1424,
                          "src": "27962:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27951:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$446_storage",
                          "typeString": "struct Vault.BatchBurn storage ref"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "27951:42:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1519,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "28018:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1520,
                          "name": "BASE_UNIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "28031:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1517,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1451,
                          "src": "27996:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fdiv",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2919,
                        "src": "27996:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27996:45:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27951:90:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "27951:90:18"
                },
                {
                  "expression": {
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1524,
                      "name": "batchBurnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "28051:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1525,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "28071:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28051:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "28051:36:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1529,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "28120:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28137:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "28137:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1532,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "28149:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1451,
                        "src": "28162:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1528,
                      "name": "ExecuteBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "28103:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28103:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "EmitStatement",
                  "src": "28098:81:18"
                }
              ]
            },
            "documentation": {
              "id": 1405,
              "nodeType": "StructuredDocumentation",
              "src": "26392:33:18",
              "text": "@notice Execute batched burns"
            },
            "functionSelector": "1bba16db",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1408,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "26474:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "26474:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1407,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "26464:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "26464:21:18"
              }
            ],
            "name": "execBatchBurn",
            "nameLocation": "26439:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26452:2:18"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26486:0:18"
            },
            "scope": 2277,
            "src": "26430:1756:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1607,
              "nodeType": "Block",
              "src": "28618:725:18",
              "statements": [
                {
                  "assignments": [
                    1553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1553,
                      "mutability": "mutable",
                      "name": "userUnderlying",
                      "nameLocation": "28636:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1607,
                      "src": "28628:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28628:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1561,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1556,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "28683:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1555,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3887,
                            "src": "28673:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28673:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1554,
                        "name": "calculateUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "28653:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28653:34:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1559,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "28690:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28653:53:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28628:78:18"
                },
                {
                  "assignments": [
                    1563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "vaultUnderlying",
                      "nameLocation": "28724:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1607,
                      "src": "28716:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28716:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1564,
                        "name": "totalUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "28742:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28742:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1566,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "28762:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28742:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28716:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1570,
                          "name": "userUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1553,
                          "src": "28797:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1571,
                          "name": "userDepositLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "28815:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28797:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6465706f7369743a3a555345525f4445504f5349545f4c494d4954535f52454143484544",
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28833:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1efd94fdae1311a02dfe8b212b00e1acd08f52ca609df914417f1044ddfcc27",
                          "typeString": "literal_string \"_deposit::USER_DEPOSIT_LIMITS_REACHED\""
                        },
                        "value": "_deposit::USER_DEPOSIT_LIMITS_REACHED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1efd94fdae1311a02dfe8b212b00e1acd08f52ca609df914417f1044ddfcc27",
                          "typeString": "literal_string \"_deposit::USER_DEPOSIT_LIMITS_REACHED\""
                        }
                      ],
                      "id": 1569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28789:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28789:84:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1575,
                  "nodeType": "ExpressionStatement",
                  "src": "28789:84:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1577,
                          "name": "vaultUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1563,
                          "src": "28891:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1578,
                          "name": "vaultDepositLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "28910:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28891:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6465706f7369743a3a5641554c545f4445504f5349545f4c494d4954535f52454143484544",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28929:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2490e6a948d0506210a014f004973ece76fecfa5f0eb5e2161b67889736307d9",
                          "typeString": "literal_string \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\""
                        },
                        "value": "_deposit::VAULT_DEPOSIT_LIMITS_REACHED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2490e6a948d0506210a014f004973ece76fecfa5f0eb5e2161b67889736307d9",
                          "typeString": "literal_string \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\""
                        }
                      ],
                      "id": 1576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28883:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28883:87:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "28883:87:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1584,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1540,
                        "src": "29053:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1585,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "29057:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1583,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4194,
                      "src": "29047:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29047:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "29047:17:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1589,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29088:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "29088:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1591,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1540,
                        "src": "29100:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1592,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "29104:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1588,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "29080:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29080:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "EmitStatement",
                  "src": "29075:46:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1598,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29292:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "29292:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1602,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "29312:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$2277",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$2277",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29304:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29304:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29304:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1604,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "29319:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1595,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "29264:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4473,
                      "src": "29264:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4416_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4416_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29264:72:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1606,
                  "nodeType": "ExpressionStatement",
                  "src": "29264:72:18"
                }
              ]
            },
            "documentation": {
              "id": 1538,
              "nodeType": "StructuredDocumentation",
              "src": "28192:270:18",
              "text": "@dev Internal function to deposit into the Vault.\n @param to The address to receive shares corresponding to the deposit.\n @param shares The amount of Vault's shares to mint.\n @param underlyingAmount The amount of the underlying token to deposit."
            },
            "id": 1608,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1547,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1540,
                    "src": "28600:2:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1546,
                  "name": "onlyDepositor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 705,
                  "src": "28586:13:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "28586:17:18"
              },
              {
                "id": 1550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1549,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5107,
                  "src": "28604:13:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "28604:13:18"
              }
            ],
            "name": "_deposit",
            "nameLocation": "28476:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "28502:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "28494:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28494:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "28522:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "28514:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28514:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "28546:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "28538:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28538:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28484:84:18"
            },
            "returnParameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28618:0:18"
            },
            "scope": 2277,
            "src": "28467:876:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1623,
              "nodeType": "Block",
              "src": "29653:72:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1618,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "29692:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29692:14:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1620,
                        "name": "BASE_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "29708:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1616,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "29670:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2919,
                      "src": "29670:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29670:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1615,
                  "id": 1622,
                  "nodeType": "Return",
                  "src": "29663:55:18"
                }
              ]
            },
            "documentation": {
              "id": 1609,
              "nodeType": "StructuredDocumentation",
              "src": "29349:218:18",
              "text": "@notice Calculates the amount of Vault's shares for a given amount of underlying tokens.\n @param underlyingAmount The underlying token's amount.\n @return The amount of shares given `underlyingAmount`."
            },
            "functionSelector": "3ec16194",
            "id": 1624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateShares",
            "nameLocation": "29581:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "29605:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "29597:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29597:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29596:26:18"
            },
            "returnParameters": {
              "id": 1615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "29644:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29644:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29643:9:18"
            },
            "scope": 2277,
            "src": "29572:153:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1639,
              "nodeType": "Block",
              "src": "30032:68:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1634,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "30067:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30067:14:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1636,
                        "name": "BASE_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "30083:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1632,
                        "name": "sharesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "30049:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2906,
                      "src": "30049:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30049:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1631,
                  "id": 1638,
                  "nodeType": "Return",
                  "src": "30042:51:18"
                }
              ]
            },
            "documentation": {
              "id": 1625,
              "nodeType": "StructuredDocumentation",
              "src": "29731:215:18",
              "text": "@notice Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.\n @param sharesAmount The shares amount.\n @return The amount of underlying given `sharesAmount`."
            },
            "functionSelector": "11e57a3e",
            "id": 1640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateUnderlying",
            "nameLocation": "29960:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "mutability": "mutable",
                  "name": "sharesAmount",
                  "nameLocation": "29988:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1640,
                  "src": "29980:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29980:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29979:22:18"
            },
            "returnParameters": {
              "id": 1631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1630,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1640,
                  "src": "30023:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30023:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30022:9:18"
            },
            "scope": 2277,
            "src": "29951:149:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1884,
              "nodeType": "Block",
              "src": "30614:4601:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1652,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "30691:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "30691:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1654,
                        "name": "lastHarvest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "30710:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1655,
                        "name": "harvestDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "30724:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "30710:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "30691:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1694,
                    "nodeType": "Block",
                    "src": "31311:224:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1685,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "31437:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "31437:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1687,
                                  "name": "lastHarvestWindowStart",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "31456:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1688,
                                  "name": "harvestWindow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 483,
                                  "src": "31481:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "31456:38:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "31437:57:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "686172766573743a3a4241445f484152564553545f54494d45",
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31496:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a10ee49ab7c59665dc0cf51098b8a1fbe9b7b58179c151cb9c7d7067925004b2",
                                "typeString": "literal_string \"harvest::BAD_HARVEST_TIME\""
                              },
                              "value": "harvest::BAD_HARVEST_TIME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a10ee49ab7c59665dc0cf51098b8a1fbe9b7b58179c151cb9c7d7067925004b2",
                                "typeString": "literal_string \"harvest::BAD_HARVEST_TIME\""
                              }
                            ],
                            "id": 1684,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "31429:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31429:95:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1693,
                        "nodeType": "ExpressionStatement",
                        "src": "31429:95:18"
                      }
                    ]
                  },
                  "id": 1695,
                  "nodeType": "IfStatement",
                  "src": "30687:848:18",
                  "trueBody": {
                    "id": 1683,
                    "nodeType": "Block",
                    "src": "30738:567:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1658,
                            "name": "lastHarvestExchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "30932:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1659,
                              "name": "exchangeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "30958:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30958:14:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30932:40:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1662,
                        "nodeType": "ExpressionStatement",
                        "src": "30932:40:18"
                      },
                      {
                        "expression": {
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1663,
                            "name": "lastHarvestIntervalInBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "30986:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1664,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "31016:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "31016:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1666,
                              "name": "lastHarvestWindowStartBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "31031:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "31016:42:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30986:72:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1669,
                        "nodeType": "ExpressionStatement",
                        "src": "30986:72:18"
                      },
                      {
                        "expression": {
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1670,
                            "name": "lastHarvestWindowStartBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "31072:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1671,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "31102:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "31102:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31072:42:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1674,
                        "nodeType": "ExpressionStatement",
                        "src": "31072:42:18"
                      },
                      {
                        "expression": {
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1675,
                            "name": "lastHarvestWindowStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "31246:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1678,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "31278:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "31278:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "31271:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 1676,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "31271:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31271:23:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "31246:48:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1682,
                        "nodeType": "ExpressionStatement",
                        "src": "31246:48:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1697,
                      "mutability": "mutable",
                      "name": "oldTotalStrategyHoldings",
                      "nameLocation": "31613:24:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "31605:32:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1696,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31605:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1699,
                  "initialValue": {
                    "id": 1698,
                    "name": "totalStrategyHoldings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 492,
                    "src": "31640:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31605:56:18"
                },
                {
                  "assignments": [
                    1701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1701,
                      "mutability": "mutable",
                      "name": "totalProfitAccrued",
                      "nameLocation": "31749:18:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "31741:26:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1700,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31741:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1702,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31741:26:18"
                },
                {
                  "assignments": [
                    1704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1704,
                      "mutability": "mutable",
                      "name": "newTotalStrategyHoldings",
                      "nameLocation": "31861:24:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "31853:32:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1703,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31853:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1706,
                  "initialValue": {
                    "id": 1705,
                    "name": "oldTotalStrategyHoldings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1697,
                    "src": "31888:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31853:59:18"
                },
                {
                  "body": {
                    "id": 1775,
                    "nodeType": "Block",
                    "src": "32044:1562:18",
                    "statements": [
                      {
                        "assignments": [
                          1720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1720,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "32122:8:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "32112:18:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            },
                            "typeName": {
                              "id": 1719,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1718,
                                "name": "IStrategy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5229,
                                "src": "32112:9:18"
                              },
                              "referencedDeclaration": 5229,
                              "src": "32112:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1724,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1721,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1645,
                            "src": "32133:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 1723,
                          "indexExpression": {
                            "id": 1722,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "32144:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "32133:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5229",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32112:34:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1726,
                                  "name": "getStrategyData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "32346:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                    "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                  }
                                },
                                "id": 1728,
                                "indexExpression": {
                                  "id": 1727,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1720,
                                  "src": "32362:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "32346:25:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                                  "typeString": "struct Vault.StrategyData storage ref"
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trusted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 438,
                              "src": "32346:33:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "686172766573743a3a554e545255535445445f5354524154454759",
                              "id": 1730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32381:29:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bc94c72bebfa2963ceec631c724b71be2c3ab1c319a0c9a41cd8cd7e021db37",
                                "typeString": "literal_string \"harvest::UNTRUSTED_STRATEGY\""
                              },
                              "value": "harvest::UNTRUSTED_STRATEGY"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bc94c72bebfa2963ceec631c724b71be2c3ab1c319a0c9a41cd8cd7e021db37",
                                "typeString": "literal_string \"harvest::UNTRUSTED_STRATEGY\""
                              }
                            ],
                            "id": 1725,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "32338:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32338:73:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1732,
                        "nodeType": "ExpressionStatement",
                        "src": "32338:73:18"
                      },
                      {
                        "assignments": [
                          1734
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1734,
                            "mutability": "mutable",
                            "name": "balanceLastHarvest",
                            "nameLocation": "32498:18:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "32490:26:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1733,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32490:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1739,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1735,
                              "name": "getStrategyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "32519:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                              }
                            },
                            "id": 1737,
                            "indexExpression": {
                              "id": 1736,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "32535:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "32519:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                              "typeString": "struct Vault.StrategyData storage ref"
                            }
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "32519:33:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32490:62:18"
                      },
                      {
                        "assignments": [
                          1741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1741,
                            "mutability": "mutable",
                            "name": "balanceThisHarvest",
                            "nameLocation": "32574:18:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "32566:26:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1740,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32566:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1745,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1742,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "32595:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "estimatedUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5228,
                            "src": "32595:28:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32595:30:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32566:59:18"
                      },
                      {
                        "expression": {
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1746,
                                "name": "getStrategyData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "32723:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                  "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                }
                              },
                              "id": 1748,
                              "indexExpression": {
                                "id": 1747,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "32739:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$5229",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "32723:25:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                                "typeString": "struct Vault.StrategyData storage ref"
                              }
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 440,
                            "src": "32723:33:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1750,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1741,
                                "src": "32759:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeCastTo248",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2970,
                              "src": "32759:32:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint248)"
                              }
                            },
                            "id": 1752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32759:34:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "src": "32723:70:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "id": 1754,
                        "nodeType": "ExpressionStatement",
                        "src": "32723:70:18"
                      },
                      {
                        "expression": {
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1755,
                            "name": "newTotalStrategyHoldings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "33014:24:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1756,
                                "name": "newTotalStrategyHoldings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1704,
                                "src": "33041:24:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1757,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1741,
                                "src": "33068:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "33041:45:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1759,
                              "name": "balanceLastHarvest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1734,
                              "src": "33089:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "33041:66:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "33014:93:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1762,
                        "nodeType": "ExpressionStatement",
                        "src": "33014:93:18"
                      },
                      {
                        "id": 1774,
                        "nodeType": "UncheckedBlock",
                        "src": "33122:474:18",
                        "statements": [
                          {
                            "expression": {
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1763,
                                "name": "totalProfitAccrued",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "33332:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1764,
                                    "name": "balanceThisHarvest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1741,
                                    "src": "33354:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 1765,
                                    "name": "balanceLastHarvest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1734,
                                    "src": "33375:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "33354:39:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "30",
                                  "id": 1770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "33509:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 1771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "33354:156:18",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1767,
                                    "name": "balanceThisHarvest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1741,
                                    "src": "33416:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1768,
                                    "name": "balanceLastHarvest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1734,
                                    "src": "33437:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "33416:39:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "33332:178:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1773,
                            "nodeType": "ExpressionStatement",
                            "src": "33332:178:18"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1711,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1708,
                      "src": "32016:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1712,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1645,
                        "src": "32020:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      "id": 1713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "32020:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32016:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1776,
                  "initializationExpression": {
                    "assignments": [
                      1708
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1708,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "32009:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "32001:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32001:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1710,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32013:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "32001:13:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "32039:3:18",
                      "subExpression": {
                        "id": 1715,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1708,
                        "src": "32039:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1717,
                    "nodeType": "ExpressionStatement",
                    "src": "32039:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "31996:1610:18"
                },
                {
                  "assignments": [
                    1778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1778,
                      "mutability": "mutable",
                      "name": "feesAccrued",
                      "nameLocation": "33693:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "33685:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1777,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33685:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1784,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1781,
                        "name": "harvestFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "33731:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33750:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1779,
                        "name": "totalProfitAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "33707:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2906,
                      "src": "33707:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33707:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33685:70:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1785,
                        "name": "feesAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "33850:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33865:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "33850:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1788,
                        "name": "harvestFeeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "33870:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33900:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33892:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33892:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33892:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "33870:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "33850:52:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1806,
                  "nodeType": "IfStatement",
                  "src": "33846:153:18",
                  "trueBody": {
                    "id": 1805,
                    "nodeType": "Block",
                    "src": "33904:95:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1796,
                              "name": "harvestFeeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "33924:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1799,
                                    "name": "exchangeRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2145,
                                    "src": "33961:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "33961:14:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1801,
                                  "name": "BASE_UNIT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "33977:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1797,
                                  "name": "feesAccrued",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1778,
                                  "src": "33944:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fdiv",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2919,
                                "src": "33944:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "33944:43:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1795,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4194,
                            "src": "33918:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33918:70:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1804,
                        "nodeType": "ExpressionStatement",
                        "src": "33918:70:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1808,
                      "mutability": "mutable",
                      "name": "maxLockedProfit_",
                      "nameLocation": "34109:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "34101:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1807,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "34101:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1818,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1809,
                                  "name": "lockedProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2220,
                                  "src": "34129:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "34129:14:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1811,
                                "name": "totalProfitAccrued",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "34146:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34129:35:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1813,
                              "name": "feesAccrued",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "34167:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "34129:49:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1815,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "34128:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeCastTo128",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2995,
                      "src": "34128:65:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint128)"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34128:67:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34101:94:18"
                },
                {
                  "expression": {
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1819,
                      "name": "maxLockedProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "34205:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1820,
                      "name": "maxLockedProfit_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1808,
                      "src": "34223:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "34205:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "34205:34:18"
                },
                {
                  "assignments": [
                    1824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1824,
                      "mutability": "mutable",
                      "name": "strategyHoldings",
                      "nameLocation": "34295:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "34287:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "34287:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1831,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1825,
                      "name": "newTotalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "34314:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1828,
                          "name": "maxLockedProfit_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1808,
                          "src": "34349:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "34341:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1826,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "34341:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34341:25:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34314:52:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34287:79:18"
                },
                {
                  "expression": {
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1832,
                      "name": "estimatedReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "34376:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1834,
                          "name": "strategyHoldings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "34418:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1837,
                              "name": "maxLockedProfit_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1808,
                              "src": "34444:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34436:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1835,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "34436:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34436:25:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1839,
                          "name": "lastHarvestIntervalInBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 505,
                          "src": "34463:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1833,
                        "name": "computeEstimatedReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2276,
                        "src": "34394:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34394:97:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34376:115:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "34376:115:18"
                },
                {
                  "expression": {
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1843,
                      "name": "totalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "34553:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1844,
                      "name": "newTotalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "34577:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34553:48:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "34553:48:18"
                },
                {
                  "expression": {
                    "id": 1853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1847,
                      "name": "lastHarvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "34706:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1850,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "34727:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "34727:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "34720:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "34720:6:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34720:23:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "34706:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1854,
                  "nodeType": "ExpressionStatement",
                  "src": "34706:37:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1856,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "34767:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "34767:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1858,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1645,
                        "src": "34779:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      ],
                      "id": 1855,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "34759:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_contract$_IStrategy_$5229_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IStrategy[] memory)"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34759:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1860,
                  "nodeType": "EmitStatement",
                  "src": "34754:36:18"
                },
                {
                  "assignments": [
                    1862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1862,
                      "mutability": "mutable",
                      "name": "newHarvestDelay",
                      "nameLocation": "34847:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "34840:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1861,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "34840:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1864,
                  "initialValue": {
                    "id": 1863,
                    "name": "nextHarvestDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 489,
                    "src": "34865:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34840:41:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1865,
                      "name": "newHarvestDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "34943:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34962:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "34943:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1883,
                  "nodeType": "IfStatement",
                  "src": "34939:270:18",
                  "trueBody": {
                    "id": 1882,
                    "nodeType": "Block",
                    "src": "34965:244:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1868,
                            "name": "harvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "35020:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1869,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "35035:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "35020:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1871,
                        "nodeType": "ExpressionStatement",
                        "src": "35020:30:18"
                      },
                      {
                        "expression": {
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1872,
                            "name": "nextHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "35110:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "35129:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "35110:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "35110:20:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1877,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "35170:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "35170:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1879,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "35182:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1876,
                            "name": "HarvestDelayUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "35150:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64)"
                            }
                          },
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35150:48:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1881,
                        "nodeType": "EmitStatement",
                        "src": "35145:53:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1641,
              "nodeType": "StructuredDocumentation",
              "src": "30289:235:18",
              "text": "@notice Harvest a set of trusted strategies.\n @param strategies The trusted strategies to harvest.\n @dev Will always revert if called outside of an active\n harvest window or before the harvest delay has passed."
            },
            "functionSelector": "c89d3460",
            "id": 1885,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1648,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "30602:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "30602:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1647,
                  "name": "onlyHarvester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "30588:13:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "30588:25:18"
              }
            ],
            "name": "harvest",
            "nameLocation": "30538:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "30567:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "30546:31:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1643,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1642,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5229,
                        "src": "30546:9:18"
                      },
                      "referencedDeclaration": 5229,
                      "src": "30546:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5229",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1644,
                    "nodeType": "ArrayTypeName",
                    "src": "30546:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30545:33:18"
            },
            "returnParameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30614:0:18"
            },
            "scope": 2277,
            "src": "30529:4686:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1954,
              "nodeType": "Block",
              "src": "35744:1127:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1899,
                            "name": "getStrategyData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "35833:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                            }
                          },
                          "id": 1901,
                          "indexExpression": {
                            "id": 1900,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "35849:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "35833:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                            "typeString": "struct Vault.StrategyData storage ref"
                          }
                        },
                        "id": 1902,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trusted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 438,
                        "src": "35833:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a554e545255535445445f5354524154454759",
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35868:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10707b7ca6ef0fcda0fa97730ce0067d55b38843891da1a21f40a20c180ecda8",
                          "typeString": "literal_string \"depositIntoStrategy::UNTRUSTED_STRATEGY\""
                        },
                        "value": "depositIntoStrategy::UNTRUSTED_STRATEGY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10707b7ca6ef0fcda0fa97730ce0067d55b38843891da1a21f40a20c180ecda8",
                          "typeString": "literal_string \"depositIntoStrategy::UNTRUSTED_STRATEGY\""
                        }
                      ],
                      "id": 1898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35825:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35825:85:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1905,
                  "nodeType": "ExpressionStatement",
                  "src": "35825:85:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1907,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1891,
                          "src": "36005:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36025:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "36005:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a414d4f554e545f43414e4e4f545f42455f5a45524f",
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36028:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ddb9d91c1dc24b2ef2232d655a0215c77f6df7f5c6bf8444aea53eb27a6ba5f",
                          "typeString": "literal_string \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        },
                        "value": "depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ddb9d91c1dc24b2ef2232d655a0215c77f6df7f5c6bf8444aea53eb27a6ba5f",
                          "typeString": "literal_string \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35997:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35997:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "35997:76:18"
                },
                {
                  "expression": {
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1913,
                      "name": "totalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "36154:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1914,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "36179:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "36154:41:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "36154:41:18"
                },
                {
                  "id": 1926,
                  "nodeType": "UncheckedBlock",
                  "src": "36206:275:18",
                  "statements": [
                    {
                      "expression": {
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1917,
                              "name": "getStrategyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "36401:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                              }
                            },
                            "id": 1919,
                            "indexExpression": {
                              "id": 1918,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1889,
                              "src": "36417:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36401:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                              "typeString": "struct Vault.StrategyData storage ref"
                            }
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "36401:33:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1921,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1891,
                              "src": "36438:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeCastTo248",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2970,
                            "src": "36438:30:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint248)"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36438:32:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "src": "36401:69:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint248",
                          "typeString": "uint248"
                        }
                      },
                      "id": 1925,
                      "nodeType": "ExpressionStatement",
                      "src": "36401:69:18"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1928,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "36512:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "36512:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1930,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1889,
                        "src": "36524:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 1931,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1891,
                        "src": "36534:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1927,
                      "name": "StrategyDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "36496:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IStrategy_$5229_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36496:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1933,
                  "nodeType": "EmitStatement",
                  "src": "36491:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1939,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "36664:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            }
                          ],
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "36656:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1937,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "36656:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36656:17:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1941,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1891,
                        "src": "36675:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1934,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "36633:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4517,
                      "src": "36633:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4416_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4416_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36633:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "36633:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1947,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1891,
                              "src": "36805:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1945,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1889,
                              "src": "36788:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5183,
                            "src": "36788:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) external returns (uint8)"
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36788:34:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36826:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "36788:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a4d494e545f4641494c4544",
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36829:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c93fba7435e595b271102463649323b5de5da201c3c737ac8d36b4e77941ef64",
                          "typeString": "literal_string \"depositIntoStrategy::MINT_FAILED\""
                        },
                        "value": "depositIntoStrategy::MINT_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c93fba7435e595b271102463649323b5de5da201c3c737ac8d36b4e77941ef64",
                          "typeString": "literal_string \"depositIntoStrategy::MINT_FAILED\""
                        }
                      ],
                      "id": 1944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36780:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36780:84:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1953,
                  "nodeType": "ExpressionStatement",
                  "src": "36780:84:18"
                }
              ]
            },
            "documentation": {
              "id": 1886,
              "nodeType": "StructuredDocumentation",
              "src": "35415:218:18",
              "text": "@notice Deposit a specific amount of float into a trusted strategy.\n @param strategy The trusted strategy to deposit into.\n @param underlyingAmount The amount of underlying tokens in float to deposit."
            },
            "functionSelector": "bdf06c8e",
            "id": 1955,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1894,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "35732:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "35732:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1893,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "35722:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "35722:21:18"
              }
            ],
            "name": "depositIntoStrategy",
            "nameLocation": "35647:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "35677:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1955,
                  "src": "35667:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1887,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "35667:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "35667:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "35695:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1955,
                  "src": "35687:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35687:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35666:46:18"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35744:0:18"
            },
            "scope": 2277,
            "src": "35638:1233:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2014,
              "nodeType": "Block",
              "src": "37285:1006:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1969,
                            "name": "getStrategyData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "37374:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                            }
                          },
                          "id": 1971,
                          "indexExpression": {
                            "id": 1970,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1959,
                            "src": "37390:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "37374:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                            "typeString": "struct Vault.StrategyData storage ref"
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trusted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 438,
                        "src": "37374:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a554e545255535445445f5354524154454759",
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37409:42:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bb8716d22dafd1322765ae85de8d180f22ffc7212243d60c3d6753b80abf719",
                          "typeString": "literal_string \"withdrawFromStrategy::UNTRUSTED_STRATEGY\""
                        },
                        "value": "withdrawFromStrategy::UNTRUSTED_STRATEGY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bb8716d22dafd1322765ae85de8d180f22ffc7212243d60c3d6753b80abf719",
                          "typeString": "literal_string \"withdrawFromStrategy::UNTRUSTED_STRATEGY\""
                        }
                      ],
                      "id": 1968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "37366:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37366:86:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "37366:86:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1977,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "37548:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37568:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "37548:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a414d4f554e545f43414e4e4f545f42455f5a45524f",
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37571:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17cc4a43aa6038c90d49d337e8dd274ea1eab9862fcecca40ab6e99ac17de81a",
                          "typeString": "literal_string \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        },
                        "value": "withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17cc4a43aa6038c90d49d337e8dd274ea1eab9862fcecca40ab6e99ac17de81a",
                          "typeString": "literal_string \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "37540:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37540:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1982,
                  "nodeType": "ExpressionStatement",
                  "src": "37540:77:18"
                },
                {
                  "expression": {
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1983,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "37707:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1985,
                        "indexExpression": {
                          "id": 1984,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "37723:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5229",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "37707:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1986,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 440,
                      "src": "37707:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1987,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "37744:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeCastTo248",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2970,
                        "src": "37744:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint248)"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "37744:32:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "src": "37707:69:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint248",
                      "typeString": "uint248"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "37707:69:18"
                },
                {
                  "id": 1996,
                  "nodeType": "UncheckedBlock",
                  "src": "37787:250:18",
                  "statements": [
                    {
                      "expression": {
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1992,
                          "name": "totalStrategyHoldings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "37985:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 1993,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "38010:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "37985:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1995,
                      "nodeType": "ExpressionStatement",
                      "src": "37985:41:18"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1998,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "38071:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "38071:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2000,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "38083:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 2001,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "38093:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1997,
                      "name": "StrategyWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "38052:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IStrategy_$5229_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38052:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2003,
                  "nodeType": "EmitStatement",
                  "src": "38047:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2007,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1961,
                              "src": "38222:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2005,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "38204:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 2006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5191,
                            "src": "38204:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) external returns (uint8)"
                            }
                          },
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38204:35:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38243:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "38204:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a52454445454d5f4641494c4544",
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38246:37:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b1f2d572d5f95c7873d238b9236411ad3adc09007549a73732951dd7c9ecb",
                          "typeString": "literal_string \"withdrawFromStrategy::REDEEM_FAILED\""
                        },
                        "value": "withdrawFromStrategy::REDEEM_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b1f2d572d5f95c7873d238b9236411ad3adc09007549a73732951dd7c9ecb",
                          "typeString": "literal_string \"withdrawFromStrategy::REDEEM_FAILED\""
                        }
                      ],
                      "id": 2004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38196:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38196:88:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "38196:88:18"
                }
              ]
            },
            "documentation": {
              "id": 1956,
              "nodeType": "StructuredDocumentation",
              "src": "36877:296:18",
              "text": "@notice Withdraw a specific amount of underlying tokens from a strategy.\n @param strategy The strategy to withdraw from.\n @param underlyingAmount  The amount of underlying tokens to withdraw.\n @dev Withdrawing from a strategy will not remove it from the withdrawal queue."
            },
            "functionSelector": "b53d0958",
            "id": 2015,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1964,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "37273:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "37273:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1966,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1963,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 726,
                  "src": "37263:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "37263:21:18"
              }
            ],
            "name": "withdrawFromStrategy",
            "nameLocation": "37187:20:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "37218:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "37208:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1957,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5229,
                      "src": "37208:9:18"
                    },
                    "referencedDeclaration": 5229,
                    "src": "37208:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "37236:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "37228:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37228:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37207:46:18"
            },
            "returnParameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37285:0:18"
            },
            "scope": 2277,
            "src": "37178:1113:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2119,
              "nodeType": "Block",
              "src": "38633:2513:18",
              "statements": [
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "mutability": "mutable",
                      "name": "amountLeftToPull",
                      "nameLocation": "38719:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2119,
                      "src": "38711:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38711:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "id": 2023,
                    "name": "underlyingAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2018,
                    "src": "38738:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38711:43:18"
                },
                {
                  "assignments": [
                    2026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nameLocation": "38844:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2119,
                      "src": "38836:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2025,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38836:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2031,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2027,
                        "name": "withdrawalQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "38859:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "38859:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "38884:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "38859:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38836:49:18"
                },
                {
                  "body": {
                    "id": 2112,
                    "nodeType": "Block",
                    "src": "39108:1782:18",
                    "statements": [
                      {
                        "assignments": [
                          2037
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2037,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "39192:8:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "39182:18:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5229",
                              "typeString": "contract IStrategy"
                            },
                            "typeName": {
                              "id": 2036,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2035,
                                "name": "IStrategy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5229,
                                "src": "39182:9:18"
                              },
                              "referencedDeclaration": 5229,
                              "src": "39182:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2041,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2038,
                            "name": "withdrawalQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "39203:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5229_$dyn_storage",
                              "typeString": "contract IStrategy[] storage ref"
                            }
                          },
                          "id": 2040,
                          "indexExpression": {
                            "id": 2039,
                            "name": "currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "39219:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "39203:29:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5229",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "39182:50:18"
                      },
                      {
                        "assignments": [
                          2043
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2043,
                            "mutability": "mutable",
                            "name": "strategyBalance",
                            "nameLocation": "39330:15:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "39322:23:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2042,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "39322:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2048,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 2044,
                              "name": "getStrategyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "39348:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                              }
                            },
                            "id": 2046,
                            "indexExpression": {
                              "id": 2045,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2037,
                              "src": "39364:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5229",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "39348:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                              "typeString": "struct Vault.StrategyData storage ref"
                            }
                          },
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "39348:33:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "39322:59:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "39505:34:18",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2049,
                                  "name": "getStrategyData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "39506:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                    "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                  }
                                },
                                "id": 2051,
                                "indexExpression": {
                                  "id": 2050,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2037,
                                  "src": "39522:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "39506:25:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                                  "typeString": "struct Vault.StrategyData storage ref"
                                }
                              },
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trusted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 438,
                              "src": "39506:33:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2054,
                              "name": "strategyBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "39543:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39562:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "39543:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "39505:58:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2059,
                        "nodeType": "IfStatement",
                        "src": "39501:72:18",
                        "trueBody": {
                          "id": 2058,
                          "nodeType": "Continue",
                          "src": "39565:8:18"
                        }
                      },
                      {
                        "assignments": [
                          2061
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2061,
                            "mutability": "mutable",
                            "name": "amountToPull",
                            "nameLocation": "39690:12:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 2112,
                            "src": "39682:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2060,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "39682:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2069,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2062,
                                  "name": "amountLeftToPull",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2022,
                                  "src": "39706:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2063,
                                  "name": "strategyBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2043,
                                  "src": "39726:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "39706:35:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2065,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "39705:37:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2067,
                            "name": "strategyBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "39764:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "39705:74:18",
                          "trueExpression": {
                            "id": 2066,
                            "name": "amountLeftToPull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "39745:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "39682:97:18"
                      },
                      {
                        "id": 2106,
                        "nodeType": "UncheckedBlock",
                        "src": "39794:980:18",
                        "statements": [
                          {
                            "assignments": [
                              2071
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2071,
                                "mutability": "mutable",
                                "name": "strategyBalanceAfterWithdrawal",
                                "nameLocation": "40013:30:18",
                                "nodeType": "VariableDeclaration",
                                "scope": 2106,
                                "src": "40005:38:18",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2070,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "40005:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2075,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2072,
                                "name": "strategyBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "40046:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2073,
                                "name": "amountToPull",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2061,
                                "src": "40064:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "40046:30:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "40005:71:18"
                          },
                          {
                            "expression": {
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2076,
                                    "name": "getStrategyData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 499,
                                    "src": "40182:15:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5229_$_t_struct$_StrategyData_$441_storage_$",
                                      "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                    }
                                  },
                                  "id": 2078,
                                  "indexExpression": {
                                    "id": 2077,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2037,
                                    "src": "40198:8:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$5229",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "40182:25:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyData_$441_storage",
                                    "typeString": "struct Vault.StrategyData storage ref"
                                  }
                                },
                                "id": 2079,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 440,
                                "src": "40182:33:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint248",
                                  "typeString": "uint248"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2080,
                                    "name": "strategyBalanceAfterWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2071,
                                    "src": "40218:30:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2081,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeCastTo248",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2970,
                                  "src": "40218:44:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint248)"
                                  }
                                },
                                "id": 2082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "40218:46:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint248",
                                  "typeString": "uint248"
                                }
                              },
                              "src": "40182:82:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint248",
                                "typeString": "uint248"
                              }
                            },
                            "id": 2084,
                            "nodeType": "ExpressionStatement",
                            "src": "40182:82:18"
                          },
                          {
                            "expression": {
                              "id": 2087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2085,
                                "name": "amountLeftToPull",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2022,
                                "src": "40460:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 2086,
                                "name": "amountToPull",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2061,
                                "src": "40480:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "40460:32:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2088,
                            "nodeType": "ExpressionStatement",
                            "src": "40460:32:18"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2090,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "40535:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "40535:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2092,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2037,
                                  "src": "40547:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                {
                                  "id": 2093,
                                  "name": "amountToPull",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2061,
                                  "src": "40557:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IStrategy_$5229",
                                    "typeString": "contract IStrategy"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2089,
                                "name": "StrategyWithdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "40516:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IStrategy_$5229_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,contract IStrategy,uint256)"
                                }
                              },
                              "id": 2094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40516:54:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2095,
                            "nodeType": "EmitStatement",
                            "src": "40511:59:18"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 2102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 2099,
                                        "name": "amountToPull",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2061,
                                        "src": "40698:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2097,
                                        "name": "strategy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2037,
                                        "src": "40680:8:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$5229",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "id": 2098,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "withdraw",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5191,
                                      "src": "40680:17:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint8_$",
                                        "typeString": "function (uint256) external returns (uint8)"
                                      }
                                    },
                                    "id": 2100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "40680:31:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "40715:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "40680:36:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "70756c6c46726f6d5769746864726177616c51756575653a3a52454445454d5f4641494c4544",
                                  "id": 2103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "40718:40:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3a151fefd1f69a0b7976eea02905ba19b95e5262f575041c833610b1ad73e090",
                                    "typeString": "literal_string \"pullFromWithdrawalQueue::REDEEM_FAILED\""
                                  },
                                  "value": "pullFromWithdrawalQueue::REDEEM_FAILED"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_3a151fefd1f69a0b7976eea02905ba19b95e5262f575041c833610b1ad73e090",
                                    "typeString": "literal_string \"pullFromWithdrawalQueue::REDEEM_FAILED\""
                                  }
                                ],
                                "id": 2096,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "40672:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40672:87:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2105,
                            "nodeType": "ExpressionStatement",
                            "src": "40672:87:18"
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2107,
                            "name": "amountLeftToPull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "40851:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "40871:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "40851:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2111,
                        "nodeType": "IfStatement",
                        "src": "40847:32:18",
                        "trueBody": {
                          "id": 2110,
                          "nodeType": "Break",
                          "src": "40874:5:18"
                        }
                      }
                    ]
                  },
                  "id": 2113,
                  "loopExpression": {
                    "expression": {
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "39092:14:18",
                      "subExpression": {
                        "id": 2032,
                        "name": "currentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "39092:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2034,
                    "nodeType": "ExpressionStatement",
                    "src": "39092:14:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "39083:1807:18"
                },
                {
                  "id": 2118,
                  "nodeType": "UncheckedBlock",
                  "src": "40900:240:18",
                  "statements": [
                    {
                      "expression": {
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2114,
                          "name": "totalStrategyHoldings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "41088:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 2115,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2018,
                          "src": "41113:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "41088:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2117,
                      "nodeType": "ExpressionStatement",
                      "src": "41088:41:18"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 2016,
              "nodeType": "StructuredDocumentation",
              "src": "38297:263:18",
              "text": "@dev Withdraw a specific amount of underlying tokens from strategies in the withdrawal queue.\n @param underlyingAmount The amount of underlying tokens to pull into float.\n @dev Automatically removes depleted strategies from the withdrawal queue."
            },
            "id": 2120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pullFromWithdrawalQueue",
            "nameLocation": "38574:23:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "38606:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2120,
                  "src": "38598:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38598:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38597:26:18"
            },
            "returnParameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38633:0:18"
            },
            "scope": 2277,
            "src": "38565:2581:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2144,
              "nodeType": "Block",
              "src": "41551:290:18",
              "statements": [
                {
                  "assignments": [
                    2127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2127,
                      "mutability": "mutable",
                      "name": "shareSupply",
                      "nameLocation": "41612:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2144,
                      "src": "41604:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "41604:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2130,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2128,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3873,
                      "src": "41626:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41626:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "41604:35:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2131,
                      "name": "shareSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2127,
                      "src": "41736:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "41751:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "41736:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2136,
                  "nodeType": "IfStatement",
                  "src": "41732:38:18",
                  "trueBody": {
                    "expression": {
                      "id": 2134,
                      "name": "BASE_UNIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "41761:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2125,
                    "id": 2135,
                    "nodeType": "Return",
                    "src": "41754:16:18"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2140,
                        "name": "shareSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2127,
                        "src": "41811:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2141,
                        "name": "BASE_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "41824:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2137,
                          "name": "totalUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2240,
                          "src": "41788:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "41788:17:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2919,
                      "src": "41788:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41788:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2125,
                  "id": 2143,
                  "nodeType": "Return",
                  "src": "41781:53:18"
                }
              ]
            },
            "documentation": {
              "id": 2121,
              "nodeType": "StructuredDocumentation",
              "src": "41335:157:18",
              "text": "@notice Returns the amount of underlying tokens a share can be redeemed for.\n @return The amount of underlying tokens a share can be redeemed for."
            },
            "functionSelector": "3ba0b9a9",
            "id": 2145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeRate",
            "nameLocation": "41506:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41518:2:18"
            },
            "returnParameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2145,
                  "src": "41542:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "41542:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41541:9:18"
            },
            "scope": 2277,
            "src": "41497:344:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2159,
              "nodeType": "Block",
              "src": "42117:60:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2155,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "42164:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2154,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3887,
                          "src": "42154:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "42154:15:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2153,
                      "name": "calculateUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "42134:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42134:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2152,
                  "id": 2158,
                  "nodeType": "Return",
                  "src": "42127:43:18"
                }
              ]
            },
            "documentation": {
              "id": 2146,
              "nodeType": "StructuredDocumentation",
              "src": "41847:190:18",
              "text": "@notice Returns a user's Vault balance in underlying tokens.\n @param user THe user to get the underlying balance of.\n @return The user's Vault balance in underlying tokens."
            },
            "functionSelector": "3af9e669",
            "id": 2160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfUnderlying",
            "nameLocation": "42051:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2148,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "42079:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "42071:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42071:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42070:14:18"
            },
            "returnParameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "42108:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42108:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42107:9:18"
            },
            "scope": 2277,
            "src": "42042:135:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2177,
              "nodeType": "Block",
              "src": "42395:218:18",
              "statements": [
                {
                  "id": 2176,
                  "nodeType": "UncheckedBlock",
                  "src": "42511:96:18",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2170,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "42571:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vault_$2277",
                                    "typeString": "contract Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Vault_$2277",
                                    "typeString": "contract Vault"
                                  }
                                ],
                                "id": 2169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "42563:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2168,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "42563:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "42563:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2166,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "42542:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4338",
                                "typeString": "contract ERC20Upgradeable"
                              }
                            },
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3887,
                            "src": "42542:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "42542:35:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2173,
                          "name": "batchBurnBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "42580:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "42542:54:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2165,
                      "id": 2175,
                      "nodeType": "Return",
                      "src": "42535:61:18"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 2161,
              "nodeType": "StructuredDocumentation",
              "src": "42183:155:18",
              "text": "@notice Returns the amount of underlying tokens that idly sit in the Vault.\n @return The amount of underlying tokens that sit idly in the Vault."
            },
            "functionSelector": "841219e5",
            "id": 2178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFloat",
            "nameLocation": "42352:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42362:2:18"
            },
            "returnParameters": {
              "id": 2165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2178,
                  "src": "42386:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42386:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42385:9:18"
            },
            "scope": 2277,
            "src": "42343:270:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2219,
              "nodeType": "Block",
              "src": "42789:865:18",
              "statements": [
                {
                  "assignments": [
                    2185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2185,
                      "mutability": "mutable",
                      "name": "previousHarvest",
                      "nameLocation": "42858:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2219,
                      "src": "42850:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42850:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2187,
                  "initialValue": {
                    "id": 2186,
                    "name": "lastHarvest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "42876:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42850:37:18"
                },
                {
                  "assignments": [
                    2189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2189,
                      "mutability": "mutable",
                      "name": "harvestInterval",
                      "nameLocation": "42905:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2219,
                      "src": "42897:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42897:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2191,
                  "initialValue": {
                    "id": 2190,
                    "name": "harvestDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 486,
                    "src": "42923:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42897:38:18"
                },
                {
                  "id": 2218,
                  "nodeType": "UncheckedBlock",
                  "src": "42946:702:18",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2192,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "43133:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "43133:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2194,
                            "name": "previousHarvest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "43152:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2195,
                            "name": "harvestInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2189,
                            "src": "43170:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "43152:33:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "43133:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2200,
                      "nodeType": "IfStatement",
                      "src": "43129:66:18",
                      "trueBody": {
                        "expression": {
                          "hexValue": "30",
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "43194:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2183,
                        "id": 2199,
                        "nodeType": "Return",
                        "src": "43187:8:18"
                      }
                    },
                    {
                      "assignments": [
                        2202
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2202,
                          "mutability": "mutable",
                          "name": "maximumLockedProfit",
                          "nameLocation": "43273:19:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2218,
                          "src": "43265:27:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2201,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "43265:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2204,
                      "initialValue": {
                        "id": 2203,
                        "name": "maxLockedProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "43295:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "43265:45:18"
                    },
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2205,
                          "name": "maximumLockedProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2202,
                          "src": "43538:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2206,
                                  "name": "maximumLockedProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2202,
                                  "src": "43561:19:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2210,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2207,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "43584:5:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2208,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "43584:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 2209,
                                        "name": "previousHarvest",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2185,
                                        "src": "43602:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "43584:33:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2211,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "43583:35:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "43561:57:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2213,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "43560:59:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2214,
                            "name": "harvestInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2189,
                            "src": "43622:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "43560:77:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "43538:99:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2183,
                      "id": 2217,
                      "nodeType": "Return",
                      "src": "43531:106:18"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 2179,
              "nodeType": "StructuredDocumentation",
              "src": "42619:111:18",
              "text": "@notice Calculate the current amount of locked profit.\n @return The current amount of locked profit."
            },
            "functionSelector": "44b81396",
            "id": 2220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockedProfit",
            "nameLocation": "42744:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42756:2:18"
            },
            "returnParameters": {
              "id": 2183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "42780:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42780:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42779:9:18"
            },
            "scope": 2277,
            "src": "42735:919:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2239,
              "nodeType": "Block",
              "src": "43918:305:18",
              "statements": [
                {
                  "id": 2233,
                  "nodeType": "UncheckedBlock",
                  "src": "43928:182:18",
                  "statements": [
                    {
                      "expression": {
                        "id": 2231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2226,
                          "name": "totalUnderlyingHeld",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "44039:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2227,
                            "name": "totalStrategyHoldings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "44061:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2228,
                              "name": "lockedProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2220,
                              "src": "44085:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44085:14:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44061:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "44039:60:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2232,
                      "nodeType": "ExpressionStatement",
                      "src": "44039:60:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2234,
                      "name": "totalUnderlyingHeld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2224,
                      "src": "44181:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2235,
                        "name": "totalFloat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2178,
                        "src": "44204:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "44204:12:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44181:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2238,
                  "nodeType": "ExpressionStatement",
                  "src": "44181:35:18"
                }
              ]
            },
            "documentation": {
              "id": 2221,
              "nodeType": "StructuredDocumentation",
              "src": "43660:168:18",
              "text": "@notice Calculates the total amount of underlying tokens the Vault holds.\n @return totalUnderlyingHeld The total amount of underlying tokens the Vault holds."
            },
            "functionSelector": "c70920bc",
            "id": 2240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalUnderlying",
            "nameLocation": "43842:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43857:2:18"
            },
            "returnParameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "mutability": "mutable",
                  "name": "totalUnderlyingHeld",
                  "nameLocation": "43897:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2240,
                  "src": "43889:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43889:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43888:29:18"
            },
            "scope": 2277,
            "src": "43833:390:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2275,
              "nodeType": "Block",
              "src": "44650:130:18",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2252,
                              "name": "invested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2243,
                              "src": "44668:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44680:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "44668:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2255,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2245,
                              "src": "44685:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44695:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "44685:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "44668:28:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2259,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "44667:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2263,
                              "name": "invested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2243,
                              "src": "44716:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2264,
                              "name": "BASE_UNIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "44726:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2261,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2245,
                              "src": "44704:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fdiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2919,
                            "src": "44704:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "44704:32:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2266,
                                "name": "BLOCKS_PER_YEAR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 454,
                                "src": "44740:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 2267,
                                "name": "interval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2247,
                                "src": "44758:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "44740:26:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2269,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "44739:28:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "44704:63:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "44770:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "44704:69:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "44667:106:18",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44700:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2251,
                  "id": 2274,
                  "nodeType": "Return",
                  "src": "44660:113:18"
                }
              ]
            },
            "documentation": {
              "id": 2241,
              "nodeType": "StructuredDocumentation",
              "src": "44229:300:18",
              "text": "@notice Compute an estimated return given the auxoToken supply, initial exchange rate and locked profits.\n @param invested The underlying deposited in strategies.\n @param profit The profit derived from harvest.\n @param interval The period during which `profit` was generated."
            },
            "id": 2276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeEstimatedReturns",
            "nameLocation": "44543:23:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "invested",
                  "nameLocation": "44575:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "44567:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44567:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "44593:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "44585:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44585:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "44609:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "44601:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44601:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44566:52:18"
            },
            "returnParameters": {
              "id": 2251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "44641:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44641:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44640:9:18"
            },
            "scope": 2277,
            "src": "44534:246:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2278,
        "src": "899:43883:18",
        "usedErrors": []
      }
    ],
    "src": "42:44741:18"
  },
  "bytecode": "",
  "bytecodeSha1": "51540962b39cc41b93d875e35d43c3235a4be0e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 9999
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "10": {
        "AddressUpgradeable.verifyCallResult": {
          "232": [
            6396,
            6403,
            false
          ],
          "233": [
            6537,
            6558,
            false
          ]
        }
      },
      "11": {},
      "18": {
        "Vault._deposit": {
          "227": [
            12523,
            12570,
            true
          ],
          "228": [
            28797,
            28831,
            true
          ],
          "229": [
            28891,
            28927,
            true
          ]
        },
        "Vault.computeEstimatedReturns": {
          "230": [
            44668,
            44681,
            true
          ],
          "231": [
            44685,
            44696,
            true
          ]
        },
        "Vault.depositIntoStrategy": {
          "209": [
            35833,
            35866,
            true
          ],
          "210": [
            36005,
            36026,
            true
          ],
          "211": [
            36788,
            36827,
            true
          ]
        },
        "Vault.enterBatchBurn": {
          "197": [
            24527,
            24541,
            false
          ],
          "198": [
            25135,
            25163,
            true
          ],
          "199": [
            25353,
            25384,
            true
          ]
        },
        "Vault.exchangeRate": {
          "196": [
            41736,
            41752,
            false
          ]
        },
        "Vault.execBatchBurn": {
          "192": [
            26554,
            26601,
            true
          ],
          "193": [
            26908,
            26924,
            true
          ],
          "194": [
            27283,
            27307,
            false
          ],
          "195": [
            27707,
            27729,
            false
          ]
        },
        "Vault.exitBatchBurn": {
          "201": [
            25784,
            25815,
            true
          ]
        },
        "Vault.harvest": {
          "212": [
            13035,
            13082,
            true
          ],
          "213": [
            30691,
            30736,
            false
          ],
          "214": [
            31437,
            31494,
            true
          ],
          "215": [
            32346,
            32379,
            true
          ],
          "216": [
            33354,
            33393,
            true
          ],
          "217": [
            33850,
            33866,
            false
          ],
          "218": [
            33870,
            33902,
            false
          ],
          "219": [
            34943,
            34963,
            false
          ]
        },
        "Vault.lockedProfit": {
          "200": [
            43133,
            43185,
            false
          ]
        },
        "Vault.pullFromWithdrawalQueue": {
          "223": [
            39506,
            39539,
            true
          ],
          "224": [
            39543,
            39563,
            false
          ],
          "225": [
            40680,
            40716,
            true
          ],
          "226": [
            40851,
            40872,
            false
          ]
        },
        "Vault.setBatchedBurningFeePercent": {
          "204": [
            17503,
            17524,
            true
          ]
        },
        "Vault.setHarvestDelay": {
          "202": [
            19700,
            19720,
            true
          ],
          "203": [
            19847,
            19874,
            true
          ]
        },
        "Vault.setHarvestFeePercent": {
          "220": [
            17030,
            17051,
            true
          ]
        },
        "Vault.setHarvestWindow": {
          "191": [
            18995,
            19027,
            true
          ]
        },
        "Vault.setWithdrawalQueue": {
          "205": [
            21396,
            21429,
            true
          ]
        },
        "Vault.trustStrategy": {
          "221": [
            12779,
            12822,
            true
          ],
          "222": [
            22190,
            22225,
            true
          ]
        },
        "Vault.withdrawFromStrategy": {
          "206": [
            37374,
            37407,
            true
          ],
          "207": [
            37548,
            37569,
            true
          ],
          "208": [
            38204,
            38244,
            true
          ]
        }
      },
      "22": {},
      "23": {
        "SafeCastLib.safeCastTo128": {
          "247": [
            643,
            665,
            true
          ]
        },
        "SafeCastLib.safeCastTo248": {
          "246": [
            496,
            518,
            true
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {},
      "3": {
        "PausableUpgradeable.__Pausable_init_unchained": {
          "244": [
            1409,
            1422,
            true
          ],
          "245": [
            1427,
            1439,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC20Upgradeable._approve": {
          "236": [
            10456,
            10475,
            true
          ],
          "237": [
            10534,
            10555,
            true
          ]
        },
        "ERC20Upgradeable._burn": {
          "238": [
            9409,
            9430,
            true
          ],
          "239": [
            9600,
            9624,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "243": [
            8700,
            8721,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "240": [
            7763,
            7783,
            true
          ],
          "241": [
            7843,
            7866,
            true
          ],
          "242": [
            8034,
            8057,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "235": [
            6937,
            6972,
            true
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "234": [
            5454,
            5480,
            true
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "248": [
            3778,
            3799,
            false
          ],
          "249": [
            3862,
            3892,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "AddressUpgradeable.functionCall": {
          "186": [
            3629,
            3688
          ]
        },
        "AddressUpgradeable.functionCallWithValue": {
          "187": [
            4839,
            4899
          ],
          "188": [
            4993,
            5051
          ]
        },
        "AddressUpgradeable.verifyCallResult": {
          "189": [
            6419,
            6436
          ],
          "190": [
            6863,
            6883
          ]
        }
      },
      "11": {
        "ContextUpgradeable._msgSender": {
          "10": [
            895,
            912
          ]
        }
      },
      "18": {
        "Vault._deposit": {
          "158": [
            28789,
            28873
          ],
          "159": [
            28883,
            28970
          ],
          "160": [
            29047,
            29064
          ],
          "161": [
            29075,
            29121
          ],
          "162": [
            29264,
            29336
          ]
        },
        "Vault.balanceOfUnderlying": {
          "33": [
            42127,
            42170
          ]
        },
        "Vault.calculateShares": {
          "43": [
            29663,
            29718
          ]
        },
        "Vault.calculateUnderlying": {
          "13": [
            30042,
            30093
          ]
        },
        "Vault.computeEstimatedReturns": {
          "176": [
            44660,
            44773
          ]
        },
        "Vault.decimals": {
          "1": [
            15189,
            15214
          ]
        },
        "Vault.deposit": {
          "47": [
            23438,
            23514
          ]
        },
        "Vault.depositIntoStrategy": {
          "85": [
            35825,
            35910
          ],
          "86": [
            35997,
            36073
          ],
          "87": [
            36154,
            36195
          ],
          "88": [
            36401,
            36470
          ],
          "89": [
            36491,
            36551
          ],
          "90": [
            36633,
            36692
          ],
          "91": [
            36780,
            36864
          ]
        },
        "Vault.distrustStrategy": {
          "94": [
            22677,
            22718
          ],
          "95": [
            22729,
            22762
          ]
        },
        "Vault.enterBatchBurn": {
          "36": [
            24677,
            24734
          ],
          "37": [
            24748,
            24797
          ],
          "38": [
            25127,
            25200
          ],
          "39": [
            25214,
            25264
          ],
          "40": [
            25285,
            25334
          ],
          "41": [
            25345,
            25385
          ],
          "42": [
            25396,
            25452
          ]
        },
        "Vault.exchangeRate": {
          "34": [
            41754,
            41770
          ],
          "35": [
            41781,
            41834
          ]
        },
        "Vault.execBatchBurn": {
          "16": [
            26546,
            26643
          ],
          "17": [
            26704,
            26723
          ],
          "18": [
            26900,
            26967
          ],
          "19": [
            27526,
            27576
          ],
          "20": [
            27597,
            27630
          ],
          "21": [
            27829,
            27860
          ],
          "22": [
            27875,
            27931
          ],
          "23": [
            27951,
            28041
          ],
          "24": [
            28051,
            28087
          ],
          "25": [
            28098,
            28179
          ]
        },
        "Vault.exitBatchBurn": {
          "52": [
            25709,
            25766
          ],
          "53": [
            25776,
            25853
          ],
          "54": [
            25864,
            25907
          ],
          "55": [
            25917,
            25961
          ],
          "56": [
            26194,
            26230
          ],
          "57": [
            26250,
            26303
          ],
          "58": [
            26314,
            26379
          ]
        },
        "Vault.getWithdrawalQueue": {
          "12": [
            20960,
            20982
          ]
        },
        "Vault.harvest": {
          "96": [
            30932,
            30972
          ],
          "97": [
            30986,
            31058
          ],
          "98": [
            31072,
            31114
          ],
          "99": [
            31246,
            31294
          ],
          "100": [
            31429,
            31524
          ],
          "101": [
            32338,
            32411
          ],
          "102": [
            32723,
            32793
          ],
          "103": [
            33014,
            33107
          ],
          "104": [
            33332,
            33510
          ],
          "105": [
            32039,
            32042
          ],
          "106": [
            33918,
            33988
          ],
          "107": [
            34205,
            34239
          ],
          "108": [
            34376,
            34491
          ],
          "109": [
            34553,
            34601
          ],
          "110": [
            34706,
            34743
          ],
          "111": [
            34754,
            34790
          ],
          "112": [
            35020,
            35050
          ],
          "113": [
            35110,
            35130
          ],
          "114": [
            35145,
            35198
          ]
        },
        "Vault.initialize": {
          "122": [
            14056,
            14084
          ],
          "123": [
            14094,
            14111
          ],
          "124": [
            14153,
            14161
          ],
          "125": [
            14196,
            14220
          ],
          "126": [
            14230,
            14268
          ],
          "127": [
            14278,
            14321
          ],
          "128": [
            14332,
            14344
          ],
          "129": [
            14354,
            14391
          ],
          "130": [
            14401,
            14441
          ],
          "131": [
            14553,
            14571
          ],
          "132": [
            14718,
            14743
          ]
        },
        "Vault.lockedProfit": {
          "45": [
            43187,
            43195
          ],
          "46": [
            43531,
            43637
          ]
        },
        "Vault.mint": {
          "44": [
            23996,
            24066
          ]
        },
        "Vault.pullFromWithdrawalQueue": {
          "137": [
            39565,
            39573
          ],
          "138": [
            40182,
            40264
          ],
          "139": [
            40511,
            40570
          ],
          "140": [
            40460,
            40492
          ],
          "141": [
            40672,
            40759
          ],
          "142": [
            40874,
            40879
          ],
          "143": [
            39092,
            39106
          ],
          "144": [
            41088,
            41129
          ]
        },
        "Vault.setAuth": {
          "30": [
            16133,
            16147
          ],
          "31": [
            16157,
            16182
          ]
        },
        "Vault.setBatchedBurningFeePercent": {
          "65": [
            17495,
            17570
          ],
          "66": [
            17619,
            17652
          ],
          "67": [
            17663,
            17707
          ]
        },
        "Vault.setBlocksPerYear": {
          "118": [
            16553,
            16577
          ]
        },
        "Vault.setBurningFeeReceiver": {
          "14": [
            18343,
            18383
          ],
          "15": [
            18394,
            18445
          ]
        },
        "Vault.setDepositLimits": {
          "48": [
            15657,
            15680
          ],
          "49": [
            15690,
            15715
          ],
          "50": [
            15726,
            15764
          ]
        },
        "Vault.setHarvestDelay": {
          "59": [
            19692,
            19762
          ],
          "60": [
            19839,
            19910
          ],
          "61": [
            20083,
            20113
          ],
          "62": [
            20128,
            20181
          ],
          "63": [
            20264,
            20298
          ],
          "64": [
            20313,
            20362
          ]
        },
        "Vault.setHarvestFeePercent": {
          "115": [
            17022,
            17083
          ],
          "116": [
            17132,
            17165
          ],
          "117": [
            17176,
            17220
          ]
        },
        "Vault.setHarvestFeeReceiver": {
          "77": [
            17974,
            18014
          ],
          "78": [
            18025,
            18076
          ]
        },
        "Vault.setHarvestWindow": {
          "6": [
            18987,
            19065
          ],
          "7": [
            19114,
            19146
          ],
          "8": [
            19157,
            19200
          ]
        },
        "Vault.setWithdrawalQueue": {
          "74": [
            21388,
            21467
          ],
          "75": [
            21519,
            21545
          ],
          "76": [
            21556,
            21589
          ]
        },
        "Vault.totalFloat": {
          "68": [
            42535,
            42596
          ]
        },
        "Vault.totalUnderlying": {
          "92": [
            44039,
            44099
          ],
          "93": [
            44181,
            44216
          ]
        },
        "Vault.triggerPause": {
          "51": [
            13476,
            13508
          ]
        },
        "Vault.trustStrategy": {
          "119": [
            22182,
            22261
          ],
          "120": [
            22314,
            22354
          ],
          "121": [
            22365,
            22395
          ]
        },
        "Vault.withdrawFromStrategy": {
          "79": [
            37366,
            37452
          ],
          "80": [
            37540,
            37617
          ],
          "81": [
            37707,
            37776
          ],
          "82": [
            37985,
            38026
          ],
          "83": [
            38047,
            38110
          ],
          "84": [
            38196,
            38284
          ]
        }
      },
      "22": {},
      "23": {
        "SafeCastLib.safeCastTo128": {
          "175": [
            635,
            666
          ]
        },
        "SafeCastLib.safeCastTo248": {
          "167": [
            488,
            519
          ],
          "168": [
            530,
            544
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {},
      "3": {},
      "4": {
        "PausableUpgradeable.__Pausable_init": {
          "179": [
            1049,
            1075
          ],
          "180": [
            1085,
            1112
          ]
        },
        "PausableUpgradeable.__Pausable_init_unchained": {
          "185": [
            1193,
            1208
          ]
        },
        "PausableUpgradeable._pause": {
          "163": [
            2134,
            2148
          ],
          "164": [
            2158,
            2183
          ]
        },
        "PausableUpgradeable._unpause": {
          "165": [
            2380,
            2395
          ],
          "166": [
            2405,
            2432
          ]
        },
        "PausableUpgradeable.paused": {
          "2": [
            1373,
            1387
          ]
        }
      },
      "6": {
        "ERC20Upgradeable.__ERC20_init": {
          "177": [
            2141,
            2167
          ],
          "178": [
            2177,
            2215
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "183": [
            2335,
            2348
          ],
          "184": [
            2358,
            2375
          ]
        },
        "ERC20Upgradeable._approve": {
          "133": [
            10448,
            10516
          ],
          "134": [
            10526,
            10594
          ],
          "135": [
            10605,
            10641
          ],
          "136": [
            10651,
            10688
          ]
        },
        "ERC20Upgradeable._burn": {
          "145": [
            9401,
            9468
          ],
          "146": [
            9592,
            9663
          ],
          "147": [
            9697,
            9741
          ],
          "148": [
            9761,
            9783
          ],
          "149": [
            9794,
            9836
          ]
        },
        "ERC20Upgradeable._mint": {
          "171": [
            8692,
            8757
          ],
          "172": [
            8828,
            8850
          ],
          "173": [
            8860,
            8888
          ],
          "174": [
            8898,
            8940
          ]
        },
        "ERC20Upgradeable._transfer": {
          "151": [
            7755,
            7825
          ],
          "152": [
            7835,
            7906
          ],
          "153": [
            8026,
            8100
          ],
          "154": [
            8134,
            8176
          ],
          "155": [
            8196,
            8226
          ],
          "156": [
            8237,
            8277
          ],
          "157": [
            8288,
            8334
          ]
        },
        "ERC20Upgradeable.allowance": {
          "4": [
            4365,
            4399
          ]
        },
        "ERC20Upgradeable.approve": {
          "9": [
            4643,
            4682
          ],
          "11": [
            4692,
            4703
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3792,
            3817
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "70": [
            6929,
            7014
          ],
          "71": [
            7048,
            7115
          ],
          "72": [
            7136,
            7147
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "32": [
            6154,
            6234
          ]
        },
        "ERC20Upgradeable.name": {
          "5": [
            2526,
            2538
          ]
        },
        "ERC20Upgradeable.symbol": {
          "69": [
            2739,
            2753
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3615,
            3634
          ]
        },
        "ERC20Upgradeable.transfer": {
          "73": [
            4129,
            4171
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "26": [
            5329,
            5365
          ],
          "27": [
            5446,
            5525
          ],
          "28": [
            5559,
            5616
          ],
          "29": [
            5637,
            5648
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "181": [
            3854,
            3939
          ]
        },
        "SafeERC20Upgradeable.safeApprove": {
          "169": [
            1756,
            1919
          ],
          "170": [
            1929,
            2019
          ]
        },
        "SafeERC20Upgradeable.safeTransfer": {
          "150": [
            801,
            887
          ]
        },
        "SafeERC20Upgradeable.safeTransferFrom": {
          "182": [
            1049,
            1145
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/AddressUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/ERC20Upgradeable",
    "FixedPointMathLib",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/IERC20Upgradeable",
    "IStrategy",
    "IVault",
    "IVaultAuth",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/PausableUpgradeable",
    "SafeCastLib",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/SafeERC20Upgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061048d5760003560e01c8063793101a51161026b578063c822adda11610150578063e33cc0a8116100c8578063ecc404b511610097578063f1a392da1161007c578063f1a392da14610ac5578063f8c8765e14610ae5578063f97d2ed714610af857600080fd5b8063ecc404b514610a9e578063eed74e6714610ab157600080fd5b8063e33cc0a814610a66578063e5fa2b7014610a6f578063ec523afd14610a82578063ecad956514610a9557600080fd5b8063d00364be1161011f578063dd11dd4511610104578063dd11dd4514610a07578063dd62ed3e14610a1a578063de9375f214610a5357600080fd5b8063d00364be146109ad578063d37db1d2146109fe57600080fd5b8063c822adda14610961578063c866983b14610974578063c89d346014610987578063cbc43f891461099a57600080fd5b806395d89b41116101e3578063ac579b77116101b2578063b53d095811610197578063b53d095814610933578063bdf06c8e14610946578063c70920bc1461095957600080fd5b8063ac579b771461090d578063ac86ac721461092057600080fd5b806395d89b41146108d65780639ee02c7f146108de578063a457c2d7146108e7578063a9059cbb146108fa57600080fd5b8063836ca0f61161023a57806386dc48001161021f57806386dc48001461089d578063912f74cd146108a65780639291df6b146108cd57600080fd5b8063836ca0f61461088c578063841219e51461089557600080fd5b8063793101a51461082e578063797ba463146108365780637b72aeb9146108665780637ccfb43f1461087957600080fd5b806339509351116103915780634eddea061161030957806363874446116102d85780636bd95612116102bd5780636bd95612146107d15780636f307dc3146107da57806370a082311461080557600080fd5b806363874446146107c05780636833f60d146107c957600080fd5b80634eddea061461075d57806354fd4d50146107705780635c975abb146107ac5780635e4f9451146107b757600080fd5b80633ec1619411610360578063448f56b911610345578063448f56b91461070157806344b813961461074257806347e7ef241461074a57600080fd5b80633ec16194146106db57806340c10f19146106ee57600080fd5b8063395093511461069a5780633af9e669146106ad5780633ba0b9a9146106c05780633c66a8fa146106c857600080fd5b806318160ddd1161042457806325a760c2116103f35780632b2e05c1116103d85780632b2e05c11461065b57806331024f3b1461066e578063313ce5671461067757600080fd5b806325a760c2146105a25780632968676e146105d957600080fd5b806318160ddd146105765780631bba16db1461057e5780631ec36bfa1461058657806323b872dd1461058f57600080fd5b80630e962f00116104605780630e962f00146104fd57806311e57a3e1461051457806313e86b281461052757806314fbae041461053a57600080fd5b806306fdde031461049257806307b35d1d146104b0578063095ea7b3146104c55780630e73ecef146104e8575b600080fd5b61049a610b14565b6040516104a79190615010565b60405180910390f35b6104c36104be366004615043565b610ba6565b005b6104d86104d336600461508a565b610d89565b60405190151581526020016104a7565b6104f0610da0565b6040516104a791906150b6565b610506609a5481565b6040519081526020016104a7565b610506610522366004615103565b610e01565b6104c361053536600461511c565b610e19565b610561610548366004615103565b60aa602052600090815260409020805460019091015482565b604080519283526020830191909152016104a7565b603554610506565b6104c3610f3b565b61050660ab5481565b6104d861059d366004615139565b611285565b6099546105c79074010000000000000000000000000000000000000000900460ff1681565b60405160ff90911681526020016104a7565b6106246105e736600461511c565b60a16020526000908152604090205460ff81169061010090047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1682565b6040805192151583527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091166020830152016104a7565b6104c361066936600461511c565b611346565b610506609d5481565b60995474010000000000000000000000000000000000000000900460ff166105c7565b6104d86106a836600461508a565b61146b565b6105066106bb36600461511c565b6114a7565b6105066114c9565b6104c36106d6366004615103565b611500565b6105066106e9366004615103565b611620565b6105066106fc36600461508a565b611638565b609f5461072990700100000000000000000000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016104a7565b610506611650565b61050661075836600461508a565b6116e0565b6104c361076b36600461517a565b6116f8565b61049a6040518060400160405280600381526020017f302e31000000000000000000000000000000000000000000000000000000000081525081565b60655460ff166104d8565b61050660a25481565b61050660ac5481565b6104c3611800565b61050660a75481565b6099546107ed906001600160a01b031681565b6040516001600160a01b0390911681526020016104a7565b61050661081336600461511c565b6001600160a01b031660009081526033602052604090205490565b6104c36118dc565b609f54610729907801000000000000000000000000000000000000000000000000900467ffffffffffffffff1681565b6104c361087436600461519c565b611a62565b6104c3610887366004615103565b611d24565b61050660a35481565b610506611e96565b61050660a85481565b6105616108b436600461511c565b60a9602052600090815260409020805460019091015482565b61050660a45481565b61049a611f26565b61050660ad5481565b6104d86108f536600461508a565b611f35565b6104d861090836600461508a565b611fe6565b6104c361091b3660046151c6565b611ff3565b6104c361092e36600461511c565b612167565b6104c361094136600461508a565b612289565b6104c361095436600461508a565b612623565b610506612981565b6107ed61096f366004615103565b6129a8565b6104c361098236600461511c565b6129d2565b6104c36109953660046151c6565b612adb565b6104c36109a8366004615103565b613119565b60a5546109dd9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016104a7565b61050660975481565b609e546107ed906001600160a01b031681565b610506610a2836600461523b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6098546107ed906001600160a01b031681565b610506609b5481565b6104c3610a7d366004615103565b613265565b6104c3610a9036600461511c565b61332a565b61050660a05481565b609c546107ed906001600160a01b031681565b60a5546107299067ffffffffffffffff1681565b60a5546107299068010000000000000000900467ffffffffffffffff1681565b6104c3610af3366004615274565b613515565b609f546109dd906fffffffffffffffffffffffffffffffff1681565b606060368054610b23906152d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4f906152d0565b8015610b9c5780601f10610b7157610100808354040283529160200191610b9c565b820191906000526020600020905b815481529060010190602001808311610b7f57829003601f168201915b5050505050905090565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190615324565b610c6a5760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e0000000000000000000000000000000060448201526064015b60405180910390fd5b609f54700100000000000000000000000000000000900467ffffffffffffffff166fffffffffffffffffffffffffffffffff83161115610d125760405162461bcd60e51b815260206004820152602160248201527f7365744861727665737457696e646f773a3a57494e444f575f544f4f5f4c4f4e60448201527f47000000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b609f80547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff84169081179091556040519081527fe5aac860870a2b99320df1d1b908931b370150f1c11074466fb332528e5b910b906020015b60405180910390a15050565b6000610d9633848461397b565b5060015b92915050565b606060a6805480602002602001604051908101604052809291908181526020018280548015610b9c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dda575050505050905090565b6000610d9a610e0e6114c9565b609a54849190613acb565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190615324565b610ed85760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b609e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384169081179091556040517fb5d8934a1f336d4cf641ae9f680c3e196f624f0bd9271749be60d98b70f7006090600090a25050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190615324565b610ffa5760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b609f5460a5546110379167ffffffffffffffff70010000000000000000000000000000000090910481169168010000000000000000900416615375565b67ffffffffffffffff164210156110b65760405162461bcd60e51b815260206004820152602560248201527f62617463684275726e3a3a4c41544553545f484152564553545f4e4f545f455860448201527f50495245440000000000000000000000000000000000000000000000000000006064820152608401610c61565b60a780549060019060006110ca83856153a1565b9091555050600081815260aa602090815260409182902082518084019093528054808452600190910154918301919091528061116e5760405162461bcd60e51b815260206004820152602660248201527f62617463684275726e3a3a544f54414c5f5348415245535f43414e4e4f545f4260448201527f455f5a45524f00000000000000000000000000000000000000000000000000006064820152608401610c61565b600061117b610e0e6114c9565b90506000611187611e96565b9050808211156111aa57600061119d82846153b9565b90506111a881613ae6565b505b6111b43084613d56565b609d541561120457609d546000906111d6908490670de0b6b3a7640000613acb565b90506111e281846153b9565b609e54609954919450611202916001600160a01b03908116911683613edb565b505b609a546112149083908590613f84565b600086815260aa602052604081206001019190915560a8805484929061123b9084906153a1565b90915550506040805184815260208101849052339187917f464420ee56151ee74d491d95cfa6b42d6c6504b38debc567f5532168243f1d8d910160405180910390a3505050505050565b6000611292848484613fa6565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561132c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e63650000000000000000000000000000000000000000000000006064820152608401610c61565b611339853385840361397b565b60019150505b9392505050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015611395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b99190615324565b6114055760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b609880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384169081179091556040519081527fdcb0bc5ecfadc1f3129303f7c1f12b82107806277374a010dffe2c367708ef4190602001610d7d565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091610d969185906114a29086906153a1565b61397b565b6001600160a01b038116600090815260336020526040812054610d9a90610e01565b6000806114d560355490565b9050806114e4575050609a5490565b6114fa81609a546114f3612981565b9190613f84565b91505090565b60a75433600090815260a96020526040902054806115355733600090815260a9602052604090208281556001018390556115ac565b8181146115845760405162461bcd60e51b815260206004820181905260248201527f656e74657242617463684275726e3a3a444946464552454e545f524f554e44536044820152606401610c61565b33600090815260a96020526040812060010180548592906115a69084906153a1565b90915550505b600082815260aa6020526040812080548592906115ca9084906153a1565b909155506115da90503084611fe6565b6115e357600080fd5b604051838152339083907fa34c4835838212c803863f6698244f8a1e56f479d6dba7d4f33b34a2cdecf1ce906020015b60405180910390a3505050565b6000610d9a61162d6114c9565b609a54849190613f84565b6000610d9a838361164885610e01565b9350836141bf565b60a554609f5460009167ffffffffffffffff6801000000000000000090910481169170010000000000000000000000000000000090041680820142106116995760009250505090565b60a55470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681428490038202816116d6576116d66153d0565b0490039392505050565b6000610d9a836116ef84611620565b925082846141bf565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176b9190615324565b6117b75760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b60ab83905560ac82905560408051848152602081018490527fb2ad710f2954a5376267a683f9ece9ec46ee7dfb47075163379904ee941df8da91015b60405180910390a1505050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa15801561184f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118739190615324565b6118bf5760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b60655460ff166118d4576118d161448d565b50565b6118d1614532565b60a75433600090815260a9602090815260409182902082518084019093528054808452600190910154918301919091526119585760405162461bcd60e51b815260206004820152601a60248201527f6578697442617463684275726e3a3a4e4f5f4445504f534954530000000000006044820152606401610c61565b805182116119ce5760405162461bcd60e51b815260206004820152602160248201527f6578697442617463684275726e3a3a524f554e445f4e4f545f4558454355544560448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b33600090815260a96020908152604080832083815560019081018490558451845260aa83529083200154609a5491840151611a0b92909190613acb565b60a880548290039055609954909150611a2e906001600160a01b03163383613edb565b604051818152339084907f2027c7e85003814492322d04d360d8df81aebeb8a40a069fffccc25cdf9e359b90602001611613565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad59190615324565b611b215760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b67ffffffffffffffff8216611b9e5760405162461bcd60e51b815260206004820152602560248201527f7365744861727665737444656c61793a3a44454c41595f43414e4e4f545f424560448201527f5f5a45524f0000000000000000000000000000000000000000000000000000006064820152608401610c61565b6301e133808267ffffffffffffffff161115611bfc5760405162461bcd60e51b815260206004820152601f60248201527f7365744861727665737444656c61793a3a44454c41595f544f4f5f4c4f4e47006044820152606401610c61565b609f54700100000000000000000000000000000000900467ffffffffffffffff16611ca757609f80547fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000067ffffffffffffffff85169081029190911790915560405190815233907fe893fa207c5a5094cad036347b877c23ebecd9df94ae0426f287040c13220b3f9060200160405180910390a25050565b609f805477ffffffffffffffffffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000067ffffffffffffffff8516908102919091179091556040519081527f12ce22e477e3fc08e5fda24cdec059a7c62a276344417f2c365d7476401bca6f90602001610d7d565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015611d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d979190615324565b611de35760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b670de0b6b3a7640000821115611e615760405162461bcd60e51b815260206004820152602960248201527f736574426174636865644275726e696e6746656550657263656e743a3a46454560448201527f5f544f4f5f4849474800000000000000000000000000000000000000000000006064820152608401610c61565b609d8290556040518281527fea0b688aabe63e0b1f8d23fbfaaf5978c8d6b74c5b21bdc9787b4651482b8f4b90602001610d7d565b60a8546099546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015611efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2091906153ff565b03905090565b606060378054610b23906152d0565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015611fcf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610c61565b611fdc338585840361397b565b5060019392505050565b6000610d96338484613fa6565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015612042573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120669190615324565b6120b25760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b60148211156121295760405162461bcd60e51b815260206004820152602160248201527f7365745769746864726177616c51756575653a3a51554555455f544f4f5f424960448201527f47000000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b61213560a68484614ee4565b507f7f5ecd11abc947c192f7d36828c4a649ddecd0867f27df66489e78d3ec80b6fe83836040516117f3929190615418565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa1580156121b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121da9190615324565b6122265760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b609c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384169081179091556040517fba702855580cda8666c4fe8e4ae71d8f5dd19db067455eeb54e2bac95c46af1390600090a25050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa1580156122d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fc9190615324565b6123485760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b6001600160a01b038316600090815260a1602052604090205460ff166123d65760405162461bcd60e51b815260206004820152602860248201527f776974686472617746726f6d53747261746567793a3a554e545255535445445f60448201527f53545241544547590000000000000000000000000000000000000000000000006064820152608401610c61565b816124495760405162461bcd60e51b815260206004820152602b60248201527f776974686472617746726f6d53747261746567793a3a414d4f554e545f43414e60448201527f4e4f545f42455f5a45524f0000000000000000000000000000000000000000006064820152608401610c61565b612452826145b5565b6001600160a01b038416600090815260a16020526040902080546001906124a090849061010090047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16615466565b82547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9182166101009390930a92830291909202199091161790555060a0805483900390556040518281526001600160a01b0384169033907f8d851b682e239b1de720e92e5c5cffdb72d353104cc63dc6ed144d7080217fbe9060200160405180910390a36040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03841690632e1a7d4d906024016020604051808303816000875af1158015612584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a891906154a6565b60ff161561261e5760405162461bcd60e51b815260206004820152602360248201527f776974686472617746726f6d53747261746567793a3a52454445454d5f46414960448201527f4c454400000000000000000000000000000000000000000000000000000000006064820152608401610c61565b505050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015612672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126969190615324565b6126e25760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b6001600160a01b038316600090815260a1602052604090205460ff166127705760405162461bcd60e51b815260206004820152602760248201527f6465706f736974496e746f53747261746567793a3a554e545255535445445f5360448201527f54524154454759000000000000000000000000000000000000000000000000006064820152608401610c61565b816127e35760405162461bcd60e51b815260206004820152602a60248201527f6465706f736974496e746f53747261746567793a3a414d4f554e545f43414e4e60448201527f4f545f42455f5a45524f000000000000000000000000000000000000000000006064820152608401610c61565b8160a060008282546127f591906153a1565b909155506128049050826145b5565b6001600160a01b038416600081815260a160205260409081902080547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010080830482169096011690940260ff90941693909317909255905133907f49e9138fe0dacf001ea634236e38aa8bd229efd55ec4d7975228d679db6ce8f99061288e9086815260200190565b60405180910390a36099546128ad906001600160a01b031684846145e7565b6040517fb6b55f25000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0384169063b6b55f25906024016020604051808303816000875af115801561290d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061293191906154a6565b60ff161561261e5760405162461bcd60e51b815260206004820181905260248201527f6465706f736974496e746f53747261746567793a3a4d494e545f4641494c45446044820152606401610c61565b600061298b611650565b60a054039050612999611e96565b6129a390826153a1565b905090565b60a681815481106129b857600080fd5b6000918252602090912001546001600160a01b0316905081565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015612a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a459190615324565b612a915760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b6001600160a01b038216600081815260a16020526040808220805460ff19169055517fe14d923ec37225f1aab033b03f5c98cf911d68bba31f6908192db6c24b0511c99190a25050565b6098546040517fe6cf32400000000000000000000000000000000000000000000000000000000081523060048201523360248201819052916001600160a01b03169063e6cf324090604401602060405180830381865afa158015612b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b679190615324565b612bb35760405162461bcd60e51b815260206004820152601460248201527f6572726f723a3a4e4f545f4841525645535445520000000000000000000000006044820152606401610c61565b609f5460a554612bf09167ffffffffffffffff70010000000000000000000000000000000090910481169168010000000000000000900416615375565b67ffffffffffffffff164210612c5857612c086114c9565b60a25560a454612c1890436153b9565b60a3554360a45560a580547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000164267ffffffffffffffff16179055612ce5565b609f5460a554612c84916fffffffffffffffffffffffffffffffff169067ffffffffffffffff166154c9565b6fffffffffffffffffffffffffffffffff16421115612ce55760405162461bcd60e51b815260206004820152601960248201527f686172766573743a3a4241445f484152564553545f54494d45000000000000006044820152606401610c61565b60a054600081815b85811015612edb576000878783818110612d0957612d096154f4565b9050602002016020810190612d1e919061511c565b6001600160a01b038116600090815260a1602052604090205490915060ff16612d895760405162461bcd60e51b815260206004820152601b60248201527f686172766573743a3a554e545255535445445f535452415445475900000000006044820152606401610c61565b6001600160a01b038116600081815260a1602090815260408083205481517f27e5cbaf00000000000000000000000000000000000000000000000000000000815291516101009091047effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1694926327e5cbaf9260048082019391829003018187875af1158015612e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4091906153ff565b9050612e4b816145b5565b6001600160a01b038416600090815260a16020526040902080547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166101000260ff90921691909117905581612ea382876153a1565b612ead91906153b9565b9450818111612ebd576000612ec1565b8181035b860195505050508080612ed390615523565b915050612ced565b50609b54600090612ef6908490670de0b6b3a7640000613acb565b90508015801590612f115750609c546001600160a01b031615155b15612f4157609c54612f41906001600160a01b0316612f3c612f316114c9565b609a54859190613f84565b614735565b6000612f698285612f50611650565b612f5a91906153a1565b612f6491906153b9565b614814565b60a580546fffffffffffffffffffffffffffffffff80841670010000000000000000000000000000000081029190921617909155909150600090612fad90856153b9565b9050612fce81836fffffffffffffffffffffffffffffffff1660a354614833565b60ad5560a084905560a580547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16680100000000000000004267ffffffffffffffff160217905560405133907f69e9c71f6799744a94d9897e77c3ed426cc2f92ba0ef3300785368209b6f4b2d90613049908c908c90615418565b60405180910390a2609f547801000000000000000000000000000000000000000000000000900467ffffffffffffffff16801561310d57609f80546fffffffffffffffffffffffffffffffff1670010000000000000000000000000000000067ffffffffffffffff841690810277ffffffffffffffffffffffffffffffffffffffffffffffff169190911790915560405190815233907fe893fa207c5a5094cad036347b877c23ebecd9df94ae0426f287040c13220b3f9060200160405180910390a25b50505050505050505050565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015613168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318c9190615324565b6131d85760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b670de0b6b3a76400008211156132305760405162461bcd60e51b815260206004820152601b60248201527f73657446656550657263656e743a3a4645455f544f4f5f4849474800000000006044820152606401610c61565b609b8290556040518281527fc2930745c0414dcbc7ebf3fea0d713c9b1f0d69dd75345906fcf43ae322ad57890602001610d7d565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa1580156132b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132d89190615324565b6133245760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b50609755565b609854604051639100674560e01b81523060048201523360248201819052916001600160a01b031690639100674590604401602060405180830381865afa158015613379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339d9190615324565b6133e95760405162461bcd60e51b815260206004820152601060248201527f6572726f723a3a4e4f545f41444d494e000000000000000000000000000000006044820152606401610c61565b609954604080517f6f307dc300000000000000000000000000000000000000000000000000000000815290516001600160a01b0392831692851691636f307dc39160048083019260209291908290030181865afa15801561344e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613472919061553e565b6001600160a01b0316146134c85760405162461bcd60e51b815260206004820152601f60248201527f747275737453747261746567793a3a57524f4e475f554e4445524c59494e47006044820152606401610c61565b6001600160a01b038216600081815260a16020526040808220805460ff19166001179055517f1eecb33217fce2d414c96c97c7e082f4557817585c876a72eca5305afb15f1f19190a25050565b600054610100900460ff168061352e575060005460ff16155b6135a05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff161580156135c2576000805461ffff19166101011790555b60006040518060400160405280600581526020017f4175786f20000000000000000000000000000000000000000000000000000000815250866001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015613638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613660919081019061558a565b6040518060400160405280600681526020017f205661756c7400000000000000000000000000000000000000000000000000008152506040516020016136a89392919061562c565b604051602081830303815290604052905060006040518060400160405280600481526020017f6175786f00000000000000000000000000000000000000000000000000000000815250876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561372f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613757919081019061558a565b6040516020016137689291906156a2565b60405160208183030381529060405290506137838282614887565b61378b61495c565b61379361448d565b609980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038916908117909155604080517f313ce567000000000000000000000000000000000000000000000000000000008152905163313ce567916004808201926020929091908290030181865afa15801561381d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061384191906154a6565b61384c90600a6157ac565b609a81905550866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138b491906154a6565b6099805460ff9290921674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9092169190911790555050609880546001600160a01b038087167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255609e8054858416908316179055609c805492861692909116919091179055600160a75562259e9d6097558015613974576000805461ff00191690555b5050505050565b6001600160a01b0383166139f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b038216613a725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101611613565b8282028315848204841417613adf57600080fd5b0492915050565b60a6548190600090613afa906001906153b9565b90505b600060a68281548110613b1257613b126154f4565b60009182526020808320909101546001600160a01b031680835260a19091526040909120549091507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101008204169060ff161580613b6e575080155b15613b7a575050613d36565b600081851115613b8a5781613b8c565b845b9050808203613b9a816145b5565b6001600160a01b038516600081815260a160205260409081902080547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff949094166101000260ff909416939093179092559051968390039633907f8d851b682e239b1de720e92e5c5cffdb72d353104cc63dc6ed144d7080217fbe90613c229086815260200190565b60405180910390a36040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03851690632e1a7d4d906024016020604051808303816000875af1158015613c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cae91906154a6565b60ff1615613d245760405162461bcd60e51b815260206004820152602660248201527f70756c6c46726f6d5769746864726177616c51756575653a3a52454445454d5f60448201527f4641494c454400000000000000000000000000000000000000000000000000006064820152608401610c61565b5084613d3257505050613d48565b5050505b80613d40816157bb565b915050613afd565b505060a08054919091039055565b6001600160a01b038216613dd25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b03821660009081526033602052604090205481811015613e615760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b0383166000908152603360205260408120838303905560358054849290613e909084906153b9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261261e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614a2d565b828102821515841585830484141716613f9c57600080fd5b9190910492915050565b6001600160a01b0383166140225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b03821661409e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b0383166000908152603360205260409020548181101561412d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610c61565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906141649084906153a1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516141b091815260200190565b60405180910390a35b50505050565b6098546040517f14d9a9790000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038086166024830152859216906314d9a97990604401602060405180830381865afa158015614228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061424c9190615324565b6142985760405162461bcd60e51b815260206004820152601460248201527f6572726f723a3a4e4f545f4445504f5349544f520000000000000000000000006044820152606401610c61565b60655460ff16156142eb5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610c61565b600082614310610522876001600160a01b031660009081526033602052604090205490565b61431a91906153a1565b9050600083614327612981565b61433191906153a1565b905060ab548211156143ab5760405162461bcd60e51b815260206004820152602560248201527f5f6465706f7369743a3a555345525f4445504f5349545f4c494d4954535f524560448201527f41434845440000000000000000000000000000000000000000000000000000006064820152608401610c61565b60ac548111156144235760405162461bcd60e51b815260206004820152602660248201527f5f6465706f7369743a3a5641554c545f4445504f5349545f4c494d4954535f5260448201527f45414348454400000000000000000000000000000000000000000000000000006064820152608401610c61565b61442d8686614735565b6040518481526001600160a01b0387169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3609954614485906001600160a01b0316333087614b12565b505050505050565b60655460ff16156144e05760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610c61565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586145153390565b6040516001600160a01b03909116815260200160405180910390a1565b60655460ff166145845760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610c61565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33614515565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156145e357600080fd5b5090565b80158061467a57506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015614654573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061467891906153ff565b155b6146ec5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610c61565b6040516001600160a01b03831660248201526044810182905261261e9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401613f20565b6001600160a01b03821661478b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610c61565b806035600082825461479d91906153a1565b90915550506001600160a01b038216600090815260336020526040812080548392906147ca9084906153a1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006fffffffffffffffffffffffffffffffff8211156145e357600080fd5b6000831580614840575082155b61487c578160975461485291906157d2565b609a546148629085908790613f84565b61486c919061580d565b61487790606461580d565b61487f565b60005b949350505050565b600054610100900460ff16806148a0575060005460ff16155b6149125760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff16158015614934576000805461ffff19166101011790555b61493c614b63565b6149468383614c23565b801561261e576000805461ff0019169055505050565b600054610100900460ff1680614975575060005460ff16155b6149e75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff16158015614a09576000805461ffff19166101011790555b614a11614b63565b614a19614d0e565b80156118d1576000805461ff001916905550565b6000614a82826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614dd99092919063ffffffff16565b80519091501561261e5780806020019051810190614aa09190615324565b61261e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c61565b6040516001600160a01b03808516602483015283166044820152606481018290526141b99085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613f20565b600054610100900460ff1680614b7c575060005460ff16155b614bee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff16158015614a19576000805461ffff191661010117905580156118d1576000805461ff001916905550565b600054610100900460ff1680614c3c575060005460ff16155b614cae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff16158015614cd0576000805461ffff19166101011790555b8251614ce3906036906020860190614f5b565b508151614cf7906037906020850190614f5b565b50801561261e576000805461ff0019169055505050565b600054610100900460ff1680614d27575060005460ff16155b614d995760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c61565b600054610100900460ff16158015614dbb576000805461ffff19166101011790555b6065805460ff1916905580156118d1576000805461ff001916905550565b606061487f848460008585843b614e325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c61565b600080866001600160a01b03168587604051614e4e919061582c565b60006040518083038185875af1925050503d8060008114614e8b576040519150601f19603f3d011682016040523d82523d6000602084013e614e90565b606091505b5091509150614ea0828286614eab565b979650505050505050565b60608315614eba57508161133f565b825115614eca5782518084602001fd5b8160405162461bcd60e51b8152600401610c619190615010565b828054828255906000526020600020908101928215614f4f579160200282015b82811115614f4f5781547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03843516178255602090920191600190910190614f04565b506145e3929150614fcf565b828054614f67906152d0565b90600052602060002090601f016020900481019282614f895760008555614f4f565b82601f10614fa257805160ff1916838001178555614f4f565b82800160010185558215614f4f579182015b82811115614f4f578251825591602001919060010190614fb4565b5b808211156145e35760008155600101614fd0565b60005b83811015614fff578181015183820152602001614fe7565b838111156141b95750506000910152565b602081526000825180602084015261502f816040850160208701614fe4565b601f01601f19169190910160400192915050565b60006020828403121561505557600080fd5b81356fffffffffffffffffffffffffffffffff8116811461133f57600080fd5b6001600160a01b03811681146118d157600080fd5b6000806040838503121561509d57600080fd5b82356150a881615075565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156150f75783516001600160a01b0316835292840192918401916001016150d2565b50909695505050505050565b60006020828403121561511557600080fd5b5035919050565b60006020828403121561512e57600080fd5b813561133f81615075565b60008060006060848603121561514e57600080fd5b833561515981615075565b9250602084013561516981615075565b929592945050506040919091013590565b6000806040838503121561518d57600080fd5b50508035926020909101359150565b6000602082840312156151ae57600080fd5b813567ffffffffffffffff8116811461133f57600080fd5b600080602083850312156151d957600080fd5b823567ffffffffffffffff808211156151f157600080fd5b818501915085601f83011261520557600080fd5b81358181111561521457600080fd5b8660208260051b850101111561522957600080fd5b60209290920196919550909350505050565b6000806040838503121561524e57600080fd5b823561525981615075565b9150602083013561526981615075565b809150509250929050565b6000806000806080858703121561528a57600080fd5b843561529581615075565b935060208501356152a581615075565b925060408501356152b581615075565b915060608501356152c581615075565b939692955090935050565b600181811c908216806152e457607f821691505b6020821081141561531e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561533657600080fd5b8151801515811461133f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681851680830382111561539857615398615346565b01949350505050565b600082198211156153b4576153b4615346565b500190565b6000828210156153cb576153cb615346565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006020828403121561541157600080fd5b5051919050565b60208082528181018390526000908460408401835b8681101561545b57823561544081615075565b6001600160a01b03168252918301919083019060010161542d565b509695505050505050565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381169083168181101561549e5761549e615346565b039392505050565b6000602082840312156154b857600080fd5b815160ff8116811461133f57600080fd5b60006fffffffffffffffffffffffffffffffff80831681851680830382111561539857615398615346565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060001982141561553757615537615346565b5060010190565b60006020828403121561555057600080fd5b815161133f81615075565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561559c57600080fd5b815167ffffffffffffffff808211156155b457600080fd5b818401915084601f8301126155c857600080fd5b8151818111156155da576155da61555b565b604051601f8201601f19908116603f011681019083821181831017156156025761560261555b565b8160405282815287602084870101111561561b57600080fd5b614ea0836020830160208801614fe4565b6000845161563e818460208901614fe4565b80830190507f2000000000000000000000000000000000000000000000000000000000000000808252855161567a816001850160208a01614fe4565b60019201918201528351615695816002840160208801614fe4565b0160020195945050505050565b600083516156b4818460208801614fe4565b835190830190615398818360208801614fe4565b600181815b808511156157035781600019048211156156e9576156e9615346565b808516156156f657918102915b93841c93908002906156cd565b509250929050565b60008261571a57506001610d9a565b8161572757506000610d9a565b816001811461573d576002811461574757615763565b6001915050610d9a565b60ff84111561575857615758615346565b50506001821b610d9a565b5060208310610133831016604e8410600b8410161715615786575081810a610d9a565b61579083836156c8565b80600019048211156157a4576157a4615346565b029392505050565b600061133f60ff84168361570b565b6000816157ca576157ca615346565b506000190190565b600082615808577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600081600019048311821515161561582757615827615346565b500290565b6000825161583e818460208701614fe4565b919091019291505056fea26469706673582212208756f13ff6a03bcb8fae94e77d6a69a747aa90c9acd90a598c14f2974feb825364736f6c634300080a0033",
  "deployedSourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;18816:391:18;;;;;;:::i;:::-;;:::i;:::-;;4544:166:6;;;;;;:::i;:::-;;:::i;:::-;;;1674:14:29;;1667:22;1649:41;;1637:2;1622:18;4544:166:6;1509:187:29;20877:112:18;;;:::i;:::-;;;;;;;:::i;3622:24::-;;;;;;;;;2551:25:29;;;2539:2;2524:18;3622:24:18;2405:177:29;29951:149:18;;;;;;:::i;:::-;;:::i;18204:248::-;;;;;;:::i;:::-;;:::i;7053:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3198:25:29;;;3254:2;3239:18;;3232:34;;;;3171:18;7053:47:18;3024:248:29;3535:106:6;3622:12;;3535:106;;26430:1756:18;;;:::i;7167:31::-;;;;;;5177:478:6;;;;;;:::i;:::-;;:::i;3416:31:18:-;;;;;;;;;;;;;;;3910:4:29;3898:17;;;3880:36;;3868:2;3853:18;3416:31:18;3738:184:29;5279:57:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4390:14:29;;4383:22;4365:41;;4454:64;4442:77;;;4437:2;4422:18;;4415:105;4338:18;5279:57:18;4197:329:29;16055:134:18;;;;;;:::i;:::-;;:::i;4150:32::-;;;;;;15122:99;15196:18;;;;;;;15122:99;;6050:212:6;;;;;;:::i;:::-;;:::i;42042:135:18:-;;;;;;:::i;:::-;;:::i;41497:344::-;;;:::i;24344:1115::-;;;;;;:::i;:::-;;:::i;29572:153::-;;;;;;:::i;:::-;;:::i;23900:173::-;;;;;;:::i;:::-;;:::i;4742:26::-;;;;;;;;;;;;;;;4976:18:29;4964:31;;;4946:50;;4934:2;4919:18;4742:26:18;4802:200:29;42735:919:18;;;:::i;23339:182::-;;;;;;:::i;:::-;;:::i;15561:210::-;;;;;;:::i;:::-;;:::i;1683:38::-;;;;;;;;;;;;;;;;;;;;;1310:84:4;1380:7;;;;1310:84;;5415:38:18;;;;;;7262:32;;;;;;13411:104;;;:::i;6708:29::-;;;;;;3339:23;;;;;-1:-1:-1;;;;;3339:23:18;;;;;;-1:-1:-1;;;;;5449:55:29;;;5431:74;;5419:2;5404:18;3339:23:18;5260:251:29;3699:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3799:18:6;3773:7;3799:18;;;:9;:18;;;;;;;3699:125;25537:849:18;;;:::i;4924:30::-;;;;;;;;;;;;19523:856;;;;;;:::i;:::-;;:::i;17336:378::-;;;;;;:::i;:::-;;:::i;5510:42::-;;;;;;42343:270;;;:::i;6809:31::-;;;;;;6906:65;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5659:42;;;;;;2658:102:6;;;:::i;7364:30:18:-;;;;;;6749:405:6;;;;;;:::i;:::-;;:::i;4027:172::-;;;;;;:::i;:::-;;:::i;21247:349:18:-;;;;;;:::i;:::-;;:::i;17835:248::-;;;;;;:::i;:::-;;:::i;37178:1113::-;;;;;;:::i;:::-;;:::i;35638:1233::-;;;;;;:::i;:::-;;:::i;43833:390::-;;;:::i;6620:34::-;;;;;;:::i;:::-;;:::i;22546:223::-;;;;;;:::i;:::-;;:::i;30529:4686::-;;;;;;:::i;:::-;;:::i;16870:357::-;;;;;;:::i;:::-;;:::i;6160:30::-;;;;;;;;;;;;;;;7206:34:29;7194:47;;;7176:66;;7164:2;7149:18;6160:30:18;7030:218:29;3182:30:18;;;;;;4273:33;;;;;-1:-1:-1;;;;;4273:33:18;;;4257:149:6;;;;;;:::i;:::-;-1:-1:-1;;;;;4372:18:6;;;4346:7;4372:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4257:149;3254:22:18;;;;;-1:-1:-1;;;;;3254:22:18;;;3820:32;;;;;;16470:114;;;;;;:::i;:::-;;:::i;21922:480::-;;;;;;:::i;:::-;;:::i;5171:36::-;;;;;;3943:33;;;;;-1:-1:-1;;;;;3943:33:18;;;5929:36;;;;;;;;;6052:25;;;;;;;;;;;;13625:1125;;;;;;:::i;:::-;;:::i;4561:28::-;;;;;;;;;2447:98:6;2501:13;2533:5;2526:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:98;:::o;18816:391:18:-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;18887:10:18;9589:18:29;;;9582:43;;;18887:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;;;;;;;;;19015:12:::1;::::0;;;::::1;;;18995:32;::::0;::::1;;;18987:78;;;::::0;-1:-1:-1;;;18987:78:18;;10465:2:29;18987:78:18::1;::::0;::::1;10447:21:29::0;10504:2;10484:18;;;10477:30;10543:34;10523:18;;;10516:62;10614:3;10594:18;;;10587:31;10635:19;;18987:78:18::1;10263:397:29::0;18987:78:18::1;19114:13;:32:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;19162:38:::1;::::0;7176:66:29;;;19162:38:18::1;::::0;7164:2:29;7149:18;19162:38:18::1;;;;;;;;18816:391:::0;;:::o;4544:166:6:-;4627:4;4643:39;902:10:11;4666:7:6;4675:6;4643:8;:39::i;:::-;-1:-1:-1;4699:4:6;4544:166;;;;;:::o;20877:112:18:-;20930:18;20967:15;20960:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20960:22:18;;;;;;;;;;;;;;;;;;;;;;20877:112;:::o;29951:149::-;30023:7;30049:44;30067:14;:12;:14::i;:::-;30083:9;;30049:12;;:44;:17;:44::i;18204:248::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;18283:10:18;9589:18:29;;;9582:43;;;18283:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;18343:18:::1;:40:::0;;;::::1;-1:-1:-1::0;;;;;18343:40:18;::::1;::::0;;::::1;::::0;;;18399:46:::1;::::0;::::1;::::0;-1:-1:-1;;18399:46:18::1;18204:248:::0;;:::o;26430:1756::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;26474:10:18;9589:18:29;;;9582:43;;;26474:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;26588:12:::1;::::0;26574:11:::1;::::0;:26:::1;::::0;26588:12:::1;::::0;;;::::1;::::0;::::1;::::0;26574:11;;::::1;;:26;:::i;:::-;26554:47;;:15;:47;;26546:97;;;::::0;-1:-1:-1;;;26546:97:18;;11297:2:29;26546:97:18::1;::::0;::::1;11279:21:29::0;11336:2;11316:18;;;11309:30;11375:34;11355:18;;;11348:62;11446:7;11426:18;;;11419:35;11471:19;;26546:97:18::1;11095:401:29::0;26546:97:18::1;26680:14;::::0;;;26722:1:::1;::::0;26654:23:::1;26704:19;26722:1:::0;26680:14;26704:19:::1;:::i;:::-;::::0;;;-1:-1:-1;;26734:26:18::1;26763:27:::0;;;:10:::1;:27;::::0;;;;;;;;26734:56;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;26908:16;26900:67:::1;;;::::0;-1:-1:-1;;;26900:67:18;;11836:2:29;26900:67:18::1;::::0;::::1;11818:21:29::0;11875:2;11855:18;;;11848:30;11914:34;11894:18;;;11887:62;11985:8;11965:18;;;11958:36;12011:19;;26900:67:18::1;11634:402:29::0;26900:67:18::1;27082:24;27109:43;27126:14;:12;:14::i;27109:43::-;27082:70;;27162:13;27178:12;:10;:12::i;:::-;27162:28;;27302:5;27283:16;:24;27279:308;;;27399:33;27435:24;27454:5:::0;27435:16;:24:::1;:::i;:::-;27399:60;;27526:50;27550:25;27526:23;:50::i;:::-;27309:278;27279:308;27597:33;27611:4;27618:11;27597:5;:33::i;:::-;27707:17;::::0;:22;27703:239:::1;;27789:17;::::0;27745:19:::1;::::0;27767:48:::1;::::0;:16;;27808:6:::1;27767:21;:48::i;:::-;27745:70:::0;-1:-1:-1;27829:31:18::1;27745:70:::0;27829:31;::::1;:::i;:::-;27899:18;::::0;27875:10:::1;::::0;27829:31;;-1:-1:-1;27875:56:18::1;::::0;-1:-1:-1;;;;;27875:10:18;;::::1;::::0;27899:18:::1;27919:11:::0;27875:23:::1;:56::i;:::-;27731:211;27703:239;28031:9;::::0;27996:45:::1;::::0;:16;;28018:11;;27996:21:::1;:45::i;:::-;27951:27;::::0;;;:10:::1;:27;::::0;;;;:42:::1;;:90:::0;;;;28051:16:::1;:36:::0;;28071:16;;27951:27;28051:36:::1;::::0;28071:16;;28051:36:::1;:::i;:::-;::::0;;;-1:-1:-1;;28103:76:18::1;::::0;;3198:25:29;;;3254:2;3239:18;;3232:34;;;28137:10:18::1;::::0;28120:15;;28103:76:::1;::::0;3171:18:29;28103:76:18::1;;;;;;;26486:1700;;;;;26430:1756:::0;:::o;5177:478:6:-;5313:4;5329:36;5339:6;5347:9;5358:6;5329:9;:36::i;:::-;-1:-1:-1;;;;;5403:19:6;;5376:24;5403:19;;;:11;:19;;;;;;;;902:10:11;5403:33:6;;;;;;;;5454:26;;;;5446:79;;;;-1:-1:-1;;;5446:79:6;;12373:2:29;5446:79:6;;;12355:21:29;12412:2;12392:18;;;12385:30;12451:34;12431:18;;;12424:62;12522:10;12502:18;;;12495:38;12550:19;;5446:79:6;12171:404:29;5446:79:6;5559:57;5568:6;902:10:11;5609:6:6;5590:16;:25;5559:8;:57::i;:::-;5644:4;5637:11;;;5177:478;;;;;;:::o;16055:134:18:-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;16111:10:18;9589:18:29;;;9582:43;;;16111:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;16133:4:::1;:14:::0;;;::::1;-1:-1:-1::0;;;;;16133:14:18;::::1;::::0;;::::1;::::0;;;16162:20:::1;::::0;5431:74:29;;;16162:20:18::1;::::0;5419:2:29;5404:18;16162:20:18::1;5260:251:29::0;6050:212:6;902:10:11;6138:4:6;6186:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6186:34:6;;;;;;;;;;6138:4;;6154:80;;6177:7;;6186:47;;6223:10;;6186:47;:::i;:::-;6154:8;:80::i;42042:135:18:-;-1:-1:-1;;;;;3799:18:6;;42108:7:18;3799:18:6;;;:9;:18;;;;;;42134:36:18;;29951:149;:::i;41497:344::-;41542:7;41604:19;41626:13;3622:12:6;;;3535:106;41626:13:18;41604:35;-1:-1:-1;41736:16:18;41732:38;;-1:-1:-1;;41761:9:18;;;41497:344::o;41732:38::-;41788:46;41811:11;41824:9;;41788:17;:15;:17::i;:::-;:22;:46;:22;:46::i;:::-;41781:53;;;41497:344;:::o;24344:1115::-;24429:14;;24495:10;24403:23;24473:33;;;:21;:33;;;;;:39;24527:14;24523:752;;24699:10;24677:33;;;;:21;:33;;;;;:57;;;24748:40;;:49;;;24523:752;;;25148:15;25135:9;:28;25127:73;;;;-1:-1:-1;;;25127:73:18;;12782:2:29;25127:73:18;;;12764:21:29;;;12801:18;;;12794:30;12860:34;12840:18;;;12833:62;12912:18;;25127:73:18;12580:356:29;25127:73:18;25236:10;25214:33;;;;:21;:33;;;;;:40;;:50;;25258:6;;25214:33;:50;;25258:6;;25214:50;:::i;:::-;;;;-1:-1:-1;;24523:752:18;25285:27;;;;:10;:27;;;;;:49;;25328:6;;25285:27;:49;;25328:6;;25285:49;:::i;:::-;;;;-1:-1:-1;25353:31:18;;-1:-1:-1;25370:4:18;25377:6;25353:8;:31::i;:::-;25345:40;;;;;;25401:51;;2551:25:29;;;25433:10:18;;25416:15;;25401:51;;2539:2:29;2524:18;25401:51:18;;;;;;;;24393:1066;;24344:1115;:::o;29572:153::-;29644:7;29670:48;29692:14;:12;:14::i;:::-;29708:9;;29670:16;;:48;:21;:48::i;23900:173::-;23960:24;23996:70;24005:2;24009:6;24037:27;24057:6;24037:19;:27::i;:::-;24018:46;;;23996:8;:70::i;42735:919::-;42876:11;;42923:12;;42780:7;;42876:11;;;;;;;;42923:12;;;;43152:33;;;43133:15;:52;43129:66;;43194:1;43187:8;;;;42735:919;:::o;43129:66::-;43295:15;;;;;;;43622;43584;:33;;;43561:57;;43622:15;43560:77;;;;:::i;:::-;;43538:99;;;42735:919;-1:-1:-1;;;42735:919:18:o;23339:182::-;23412:14;23438:76;23447:2;23461:33;23477:16;23461:15;:33::i;:::-;23452:42;;;23497:16;23438:8;:76::i;15561:210::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;15635:10:18;9589:18:29;;;9582:43;;;15635:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;15657:16:::1;:23:::0;;;15690:17:::1;:25:::0;;;15731:33:::1;::::0;;3198:25:29;;;3254:2;3239:18;;3232:34;;;15731:33:18::1;::::0;3171:18:29;15731:33:18::1;;;;;;;;15561:210:::0;;;:::o;13411:104::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;13454:10:18;9589:18:29;;;9582:43;;;13454:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;1380:7:4;;;;13476:32:18::1;;13500:8;:6;:8::i;:::-;13411:104:::0;:::o;13476:32::-:1;13487:10;:8;:10::i;25537:849::-:0;25607:14;;25687:10;25581:23;25665:33;;;:21;:33;;;;;;;;;25631:67;;;;;;;;;;;;;;;;;;;;;;;;;25709:57;;;;-1:-1:-1;;;25709:57:18;;13332:2:29;25709:57:18;;;13314:21:29;13371:2;13351:18;;;13344:30;13410:28;13390:18;;;13383:56;13456:18;;25709:57:18;13130:350:29;25709:57:18;25784:13;;:31;-1:-1:-1;25776:77:18;;;;-1:-1:-1;;;25776:77:18;;13687:2:29;25776:77:18;;;13669:21:29;13726:2;13706:18;;;13699:30;13765:34;13745:18;;;13738:62;13836:3;13816:18;;;13809:31;13857:19;;25776:77:18;13485:397:29;25776:77:18;25886:10;25906:1;25864:33;;;:21;:33;;;;;;;;:43;;;25917:40;;;;:44;;;26030:13;;26019:25;;:10;:25;;;;;:40;;26061:9;;25999:14;;;;:72;;:14;;26019:40;25999:19;:72::i;:::-;26194:16;:36;;;;;;;26250:10;;25972:99;;-1:-1:-1;26250:53:18;;-1:-1:-1;;;;;26250:10:18;26274;25972:99;26250:23;:53::i;:::-;26319:60;;2551:25:29;;;26350:10:18;;26333:15;;26319:60;;2539:2:29;2524:18;26319:60:18;2405:177:29;19523:856:18;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;19591:10:18;9589:18:29;;;9582:43;;;19591:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;19700:20:::1;::::0;::::1;19692:70;;;::::0;-1:-1:-1;;;19692:70:18;;14089:2:29;19692:70:18::1;::::0;::::1;14071:21:29::0;14128:2;14108:18;;;14101:30;14167:34;14147:18;;;14140:62;14238:7;14218:18;;;14211:35;14263:19;;19692:70:18::1;13887:401:29::0;19692:70:18::1;19866:8;19847:15;:27;;;;19839:71;;;::::0;-1:-1:-1;;;19839:71:18;;14495:2:29;19839:71:18::1;::::0;::::1;14477:21:29::0;14534:2;14514:18;;;14507:30;14573:33;14553:18;;;14546:61;14624:18;;19839:71:18::1;14293:355:29::0;19839:71:18::1;19999:12;::::0;;;::::1;;;19995:378;;20083:12;:30:::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;20133:48:::1;::::0;4946:50:29;;;20153:10:18::1;::::0;20133:48:::1;::::0;4934:2:29;4919:18;20133:48:18::1;;;;;;;19523:856:::0;;:::o;19995:378::-:1;20264:16;:34:::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;20318:44:::1;::::0;4946:50:29;;;20318:44:18::1;::::0;4934:2:29;4919:18;20318:44:18::1;4802:200:29::0;17336:378:18;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;17415:10:18;9589:18:29;;;9582:43;;;17415:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;17520:4:::1;17503:13;:21;;17495:75;;;::::0;-1:-1:-1;;;17495:75:18;;14855:2:29;17495:75:18::1;::::0;::::1;14837:21:29::0;14894:2;14874:18;;;14867:30;14933:34;14913:18;;;14906:62;15004:11;14984:18;;;14977:39;15033:19;;17495:75:18::1;14653:405:29::0;17495:75:18::1;17619:17;:33:::0;;;17668:39:::1;::::0;2551:25:29;;;17668:39:18::1;::::0;2539:2:29;2524:18;17668:39:18::1;2405:177:29::0;42343:270:18;42580:16;;42542:10;;:35;;;;;42571:4;42542:35;;;5431:74:29;42386:7:18;;42580:16;-1:-1:-1;;;;;42542:10:18;;:20;;5404:18:29;;42542:35:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;42535:61;;42343:270;:::o;2658:102:6:-;2714:13;2746:7;2739:14;;;;;:::i;6749:405::-;902:10:11;6842:4:6;6885:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6885:34:6;;;;;;;;;;6937:35;;;;6929:85;;;;-1:-1:-1;;;6929:85:6;;15454:2:29;6929:85:6;;;15436:21:29;15493:2;15473:18;;;15466:30;15532:34;15512:18;;;15505:62;15603:7;15583:18;;;15576:35;15628:19;;6929:85:6;15252:401:29;6929:85:6;7048:67;902:10:11;7071:7:6;7099:15;7080:16;:34;7048:8;:67::i;:::-;-1:-1:-1;7143:4:6;;6749:405;-1:-1:-1;;;6749:405:6:o;4027:172::-;4113:4;4129:42;902:10:11;4153:9:6;4164:6;4129:9;:42::i;21247:349:18:-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;21325:10:18;9589:18:29;;;9582:43;;;21325:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;1637:2:::1;21396:33:::0;::::1;;21388:79;;;::::0;-1:-1:-1;;;21388:79:18;;15860:2:29;21388:79:18::1;::::0;::::1;15842:21:29::0;15899:2;15879:18;;;15872:30;15938:34;15918:18;;;15911:62;16009:3;15989:18;;;15982:31;16030:19;;21388:79:18::1;15658:397:29::0;21388:79:18::1;21519:26;:15;21537:8:::0;;21519:26:::1;:::i;:::-;;21561:28;21580:8;;21561:28;;;;;;;:::i;17835:248::-:0;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;17914:10:18;9589:18:29;;;9582:43;;;17914:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;17974:18:::1;:40:::0;;;::::1;-1:-1:-1::0;;;;;17974:40:18;::::1;::::0;;::::1;::::0;;;18030:46:::1;::::0;::::1;::::0;-1:-1:-1;;18030:46:18::1;17835:248:::0;;:::o;37178:1113::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;37273:10:18;9589:18:29;;;9582:43;;;37273:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;-1:-1:-1;;;;;37374:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;::::1;;37366:86;;;::::0;-1:-1:-1;;;37366:86:18;;17013:2:29;37366:86:18::1;::::0;::::1;16995:21:29::0;17052:2;17032:18;;;17025:30;17091:34;17071:18;;;17064:62;17162:10;17142:18;;;17135:38;17190:19;;37366:86:18::1;16811:404:29::0;37366:86:18::1;37548:21:::0;37540:77:::1;;;::::0;-1:-1:-1;;;37540:77:18;;17422:2:29;37540:77:18::1;::::0;::::1;17404:21:29::0;17461:2;17441:18;;;17434:30;17500:34;17480:18;;;17473:62;17571:13;17551:18;;;17544:41;17602:19;;37540:77:18::1;17220:407:29::0;37540:77:18::1;37744:32;:16;:30;:32::i;:::-;-1:-1:-1::0;;;;;37707:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;:69;;:33:::1;::::0;:69:::1;::::0;;;::::1;::::0;::::1;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;-1:-1:-1;37985:21:18::1;:41:::0;;;;::::1;::::0;;38052:58:::1;::::0;2551:25:29;;;-1:-1:-1;;;;;38052:58:18;::::1;::::0;38071:10:::1;::::0;38052:58:::1;::::0;2539:2:29;2524:18;38052:58:18::1;;;;;;;38204:35;::::0;;;;::::1;::::0;::::1;2551:25:29::0;;;-1:-1:-1;;;;;38204:17:18;::::1;::::0;::::1;::::0;2524:18:29;;38204:35:18::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;::::0;38196:88:::1;;;::::0;-1:-1:-1;;;38196:88:18;;18393:2:29;38196:88:18::1;::::0;::::1;18375:21:29::0;18432:2;18412:18;;;18405:30;18471:34;18451:18;;;18444:62;18542:5;18522:18;;;18515:33;18565:19;;38196:88:18::1;18191:399:29::0;38196:88:18::1;37178:1113:::0;;;:::o;35638:1233::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;35732:10:18;9589:18:29;;;9582:43;;;35732:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;-1:-1:-1;;;;;35833:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;::::1;;35825:85;;;::::0;-1:-1:-1;;;35825:85:18;;18797:2:29;35825:85:18::1;::::0;::::1;18779:21:29::0;18836:2;18816:18;;;18809:30;18875:34;18855:18;;;18848:62;18946:9;18926:18;;;18919:37;18973:19;;35825:85:18::1;18595:403:29::0;35825:85:18::1;36005:21:::0;35997:76:::1;;;::::0;-1:-1:-1;;;35997:76:18;;19205:2:29;35997:76:18::1;::::0;::::1;19187:21:29::0;19244:2;19224:18;;;19217:30;19283:34;19263:18;;;19256:62;19354:12;19334:18;;;19327:40;19384:19;;35997:76:18::1;19003:406:29::0;35997:76:18::1;36179:16;36154:21;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;36438:32:18::1;::::0;-1:-1:-1;36438:16:18;:30:::1;:32::i;:::-;-1:-1:-1::0;;;;;36401:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;;;:69;;::::1;;::::0;;::::1;::::0;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;36496:55;;36512:10:::1;::::0;36496:55:::1;::::0;::::1;::::0;36534:16;2551:25:29;;2539:2;2524:18;;2405:177;36496:55:18::1;;;;;;;;36633:10;::::0;:59:::1;::::0;-1:-1:-1;;;;;36633:10:18::1;36664:8:::0;36675:16;36633:22:::1;:59::i;:::-;36788:34;::::0;;;;::::1;::::0;::::1;2551:25:29::0;;;-1:-1:-1;;;;;36788:16:18;::::1;::::0;::::1;::::0;2524:18:29;;36788:34:18::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;::::0;36780:84:::1;;;::::0;-1:-1:-1;;;36780:84:18;;19616:2:29;36780:84:18::1;::::0;::::1;19598:21:29::0;;;19635:18;;;19628:30;19694:34;19674:18;;;19667:62;19746:18;;36780:84:18::1;19414:356:29::0;43833:390:18;43889:27;44085:14;:12;:14::i;:::-;44061:21;;:38;44039:60;;44204:12;:10;:12::i;:::-;44181:35;;;;:::i;:::-;;;43833:390;:::o;6620:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6620:34:18;;-1:-1:-1;6620:34:18;:::o;22546:223::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;22611:10:18;9589:18:29;;;9582:43;;;22611:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;-1:-1:-1;;;;;22677:25:18;::::1;22713:5;22677:25:::0;;;:15:::1;:25;::::0;;;;;:41;;-1:-1:-1;;22677:41:18::1;::::0;;22734:28;::::1;::::0;22713:5;22734:28:::1;22546:223:::0;;:::o;30529:4686::-;13035:4;;:47;;;;;13067:4;13035:47;;;9539:34:29;30602:10:18;9589:18:29;;;9582:43;;;30602:10:18;-1:-1:-1;;;;;13035:4:18;;:16;;9451:18:29;;13035:47:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13027:80;;;;-1:-1:-1;;;13027:80:18;;19977:2:29;13027:80:18;;;19959:21:29;20016:2;19996:18;;;19989:30;20055:22;20035:18;;;20028:50;20095:18;;13027:80:18;19775:344:29;13027:80:18;30724:12:::1;::::0;30710:11:::1;::::0;:26:::1;::::0;30724:12:::1;::::0;;;::::1;::::0;::::1;::::0;30710:11;;::::1;;:26;:::i;:::-;30691:45;;:15;:45;30687:848;;30958:14;:12;:14::i;:::-;30932:23;:40:::0;31031:27:::1;::::0;31016:42:::1;::::0;:12:::1;:42;:::i;:::-;30986:27;:72:::0;31102:12:::1;31072:27;:42:::0;31246:22:::1;:48:::0;;;::::1;31278:15;31246:48;;;::::0;;30687:848:::1;;;31481:13;::::0;31456:22:::1;::::0;:38:::1;::::0;31481:13:::1;;::::0;31456:22:::1;;:38;:::i;:::-;31437:57;;:15;:57;;31429:95;;;::::0;-1:-1:-1;;;31429:95:18;;20584:2:29;31429:95:18::1;::::0;::::1;20566:21:29::0;20623:2;20603:18;;;20596:30;20662:27;20642:18;;;20635:55;20707:18;;31429:95:18::1;20382:349:29::0;31429:95:18::1;31640:21;::::0;31605:32:::1;31640:21:::0;31605:32;31996:1610:::1;32016:21:::0;;::::1;31996:1610;;;32112:18;32133:10;;32144:1;32133:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;32346:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;32112:34;;-1:-1:-1;32346:33:18::1;;32338:73;;;::::0;-1:-1:-1;;;32338:73:18;;21127:2:29;32338:73:18::1;::::0;::::1;21109:21:29::0;21166:2;21146:18;;;21139:30;21205:29;21185:18;;;21178:57;21252:18;;32338:73:18::1;20925:351:29::0;32338:73:18::1;-1:-1:-1::0;;;;;32519:25:18;::::1;32490:26;32519:25:::0;;;:15:::1;:25;::::0;;;;;;;:33;32595:30;;;;;;;32519:33:::1;::::0;;::::1;;;::::0;:25;32595:28:::1;::::0;:30:::1;::::0;;::::1;::::0;;;;;;;32490:26;32519:25;32595:30:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32566:59;;32759:34;:18;:32;:34::i;:::-;-1:-1:-1::0;;;;;32723:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;:70;;::::1;::::0;;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;33089:18;33041:45:::1;33068:18:::0;33041:24;:45:::1;:::i;:::-;:66;;;;:::i;:::-;33014:93;;33375:18;33354;:39;:156;;33509:1;33354:156;;;33437:18;33416;:39;33354:156;33332:178;;;;32044:1562;;;32039:3;;;;;:::i;:::-;;;;31996:1610;;;-1:-1:-1::0;33731:17:18::1;::::0;33685:19:::1;::::0;33707:48:::1;::::0;:18;;33750:4:::1;33707:23;:48::i;:::-;33685:70:::0;-1:-1:-1;33850:16:18;;;::::1;::::0;:52:::1;;-1:-1:-1::0;33870:18:18::1;::::0;-1:-1:-1;;;;;33870:18:18::1;:32:::0;::::1;33850:52;33846:153;;;33924:18;::::0;33918:70:::1;::::0;-1:-1:-1;;;;;33924:18:18::1;33944:43;33961:14;:12;:14::i;:::-;33977:9;::::0;33944:11;;:43;:16:::1;:43::i;:::-;33918:5;:70::i;:::-;34101:24;34128:67;34167:11;34146:18;34129:14;:12;:14::i;:::-;:35;;;;:::i;:::-;:49;;;;:::i;:::-;34128:65;:67::i;:::-;34205:15;:34:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;;34101:94;;-1:-1:-1;;;34314:52:18::1;::::0;:24;:52:::1;:::i;:::-;34287:79;;34394:97;34418:16;34444;34436:25;;34463:27;;34394:23;:97::i;:::-;34376:15;:115:::0;34553:21:::1;:48:::0;;;34706:11:::1;:37:::0;;;::::1;::::0;34727:15:::1;34706:37;;;;::::0;;34759:31:::1;::::0;34767:10:::1;::::0;34759:31:::1;::::0;::::1;::::0;34779:10;;;;34759:31:::1;:::i;:::-;;;;;;;;34865:16;::::0;;;::::1;;;34943:20:::0;;34939:270:::1;;35020:12;:30:::0;;35110:20;;35020:30;::::1;::::0;::::1;::::0;;::::1;35110:20:::0;;;;;;;;;35150:48:::1;::::0;4946:50:29;;;35170:10:18::1;::::0;35150:48:::1;::::0;4934:2:29;4919:18;35150:48:18::1;;;;;;;34939:270;30614:4601;;;;;;;30529:4686:::0;;;:::o;16870:357::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;16942:10:18;9589:18:29;;;9582:43;;;16942:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;17047:4:::1;17030:13;:21;;17022:61;;;::::0;-1:-1:-1;;;17022:61:18;;21683:2:29;17022:61:18::1;::::0;::::1;21665:21:29::0;21722:2;21702:18;;;21695:30;21761:29;21741:18;;;21734:57;21808:18;;17022:61:18::1;21481:351:29::0;17022:61:18::1;17132:17;:33:::0;;;17181:39:::1;::::0;2551:25:29;;;17181:39:18::1;::::0;2539:2:29;2524:18;17181:39:18::1;2405:177:29::0;16470:114:18;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;16531:10:18;9589:18:29;;;9582:43;;;16531:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;-1:-1:-1;16553:15:18::1;:24:::0;16470:114::o;21922:480::-;12779:4;;:43;;-1:-1:-1;;;12779:43:18;;12807:4;12779:43;;;9539:34:29;21984:10:18;9589:18:29;;;9582:43;;;21984:10:18;-1:-1:-1;;;;;12779:4:18;;:12;;9451:18:29;;12779:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12771:72;;;;-1:-1:-1;;;12771:72:18;;10120:2:29;12771:72:18;;;10102:21:29;10159:2;10139:18;;;10132:30;10198:18;10178;;;10171:46;10234:18;;12771:72:18;9918:340:29;12771:72:18;22215:10:::1;::::0;22190:21:::1;::::0;;;;;;;-1:-1:-1;;;;;22215:10:18;;::::1;::::0;22190:19;::::1;::::0;::::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:19;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22190:35:18::1;;22182:79;;;::::0;-1:-1:-1;;;22182:79:18;;22321:2:29;22182:79:18::1;::::0;::::1;22303:21:29::0;22360:2;22340:18;;;22333:30;22399:33;22379:18;;;22372:61;22450:18;;22182:79:18::1;22119:355:29::0;22182:79:18::1;-1:-1:-1::0;;;;;22314:25:18;::::1;;::::0;;;:15:::1;:25;::::0;;;;;:40;;-1:-1:-1;;22314:40:18::1;22350:4;22314:40;::::0;;22370:25;::::1;::::0;22314;22370::::1;21922:480:::0;;:::o;13625:1125::-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;13828:19:18::1;1407:14;;;;;;;;;;;;;;;;::::0;13890:11:::1;-1:-1:-1::0;;;;;13890:16:18::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;13890:18:18::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1509:15;;;;;;;;;;;;;;;;::::0;13857:67:::1;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13828:97;;13935:21;1306:13;;;;;;;;;;;;;;;;::::0;13994:11:::1;-1:-1:-1::0;;;;;13994:18:18::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;13994:20:18::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;13966:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13935:82;;14056:28;14069:5;14076:7;14056:12;:28::i;:::-;14094:17;:15;:17::i;:::-;14153:8;:6;:8::i;:::-;14196:10;:24:::0;;;::::1;-1:-1:-1::0;;;;;14196:24:18;::::1;::::0;;::::1;::::0;;;14246:22:::1;::::0;;;;;;;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;14196:24;14246:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14242:26;::::0;:2:::1;:26;:::i;:::-;14230:9;:38;;;;14299:11;-1:-1:-1::0;;;;;14299:20:18::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14278:18;:43:::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;14332:4:18::1;:12:::0;;-1:-1:-1;;;;;14332:12:18;;::::1;::::0;;;::::1;;::::0;;;14354:18:::1;:37:::0;;;;::::1;::::0;;::::1;;::::0;;14401:18:::1;:40:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;14553:14:18::1;:18:::0;14736:7:::1;14718:15;:25:::0;1667:66:3;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1667:66;1391:348;13625:1125:18;;;;:::o;10325:370:6:-;-1:-1:-1;;;;;10456:19:6;;10448:68;;;;-1:-1:-1;;;10448:68:6;;27144:2:29;10448:68:6;;;27126:21:29;27183:2;27163:18;;;27156:30;27222:34;27202:18;;;27195:62;27293:6;27273:18;;;27266:34;27317:19;;10448:68:6;26942:400:29;10448:68:6;-1:-1:-1;;;;;10534:21:6;;10526:68;;;;-1:-1:-1;;;10526:68:6;;27549:2:29;10526:68:6;;;27531:21:29;27588:2;27568:18;;;27561:30;27627:34;27607:18;;;27600:62;27698:4;27678:18;;;27671:32;27720:19;;10526:68:6;27347:398:29;10526:68:6;-1:-1:-1;;;;;10605:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10656:32;;2551:25:29;;;10656:32:6;;2524:18:29;10656:32:6;2405:177:29;818:502:22;1015:9;;;1116;;1130;;;1127:16;;1113:31;1103:87;;1174:1;1171;1164:12;1103:87;1288:16;;818:502;-1:-1:-1;;818:502:22:o;38565:2581:18:-;38859:15;:22;38738:16;;38711:24;;38859:26;;38884:1;;38859:26;:::i;:::-;38836:49;;39083:1807;39182:18;39203:15;39219:12;39203:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;39203:29:18;39348:25;;;:15;:25;;;;;;;:33;39203:29;;-1:-1:-1;39348:33:18;39203:29;39348:33;;;;39506;;39505:34;;:58;;-1:-1:-1;39543:20:18;;39505:58;39501:72;;;39565:8;;;;39501:72;39682:20;39726:15;39706:16;:35;;39705:74;;39764:15;39705:74;;;39745:16;39705:74;39682:97;-1:-1:-1;40046:30:18;;;40218:46;40046:30;40218:44;:46::i;:::-;-1:-1:-1;;;;;40182:25:18;;;;;;:15;:25;;;;;;;:82;;;;;;;;;;;;;;;;;;;;40516:54;;40460:32;;;;;40535:10;;40516:54;;;;40480:12;2551:25:29;;2539:2;2524:18;;2405:177;40516:54:18;;;;;;;;40680:31;;;;;;;;2551:25:29;;;-1:-1:-1;;;;;40680:17:18;;;;;2524:18:29;;40680:31:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;40672:87;;;;-1:-1:-1;;;40672:87:18;;27952:2:29;40672:87:18;;;27934:21:29;27991:2;27971:18;;;27964:30;28030:34;28010:18;;;28003:62;28101:8;28081:18;;;28074:36;28127:19;;40672:87:18;27750:402:29;40672:87:18;-1:-1:-1;40851:21:18;40847:32;;40874:5;;;;;40847:32;39108:1782;;;39083:1807;39092:14;;;;:::i;:::-;;;;39083:1807;;;-1:-1:-1;;41088:21:18;:41;;;;;;;;38565:2581::o;9326:576:6:-;-1:-1:-1;;;;;9409:21:6;;9401:67;;;;-1:-1:-1;;;9401:67:6;;28560:2:29;9401:67:6;;;28542:21:29;28599:2;28579:18;;;28572:30;28638:34;28618:18;;;28611:62;28709:3;28689:18;;;28682:31;28730:19;;9401:67:6;28358:397:29;9401:67:6;-1:-1:-1;;;;;9564:18:6;;9539:22;9564:18;;;:9;:18;;;;;;9600:24;;;;9592:71;;;;-1:-1:-1;;;9592:71:6;;28962:2:29;9592:71:6;;;28944:21:29;29001:2;28981:18;;;28974:30;29040:34;29020:18;;;29013:62;29111:4;29091:18;;;29084:32;29133:19;;9592:71:6;28760:398:29;9592:71:6;-1:-1:-1;;;;;9697:18:6;;;;;;:9;:18;;;;;9718:23;;;9697:44;;9761:12;:22;;9735:6;;9697:18;9761:22;;9735:6;;9761:22;:::i;:::-;;;;-1:-1:-1;;9799:37:6;;2551:25:29;;;9825:1:6;;-1:-1:-1;;;;;9799:37:6;;;;;2539:2:29;2524:18;9799:37:6;;;;;;;37178:1113:18;;;:::o;678:216:9:-;828:58;;-1:-1:-1;;;;;29355:55:29;;828:58:9;;;29337:74:29;29427:18;;;29420:34;;;801:86:9;;821:5;;851:23;;29310:18:29;;828:58:9;;;;-1:-1:-1;;828:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;801:19;:86::i;1326:574:22:-;1530:16;;;1672:9;;1665:17;1687:9;;1701;;;1698:23;;1684:38;1661:62;1651:118;;1753:1;1750;1743:12;1651:118;1875:9;;;;;1326:574;-1:-1:-1;;1326:574:22:o;7628:713:6:-;-1:-1:-1;;;;;7763:20:6;;7755:70;;;;-1:-1:-1;;;7755:70:6;;29667:2:29;7755:70:6;;;29649:21:29;29706:2;29686:18;;;29679:30;29745:34;29725:18;;;29718:62;29816:7;29796:18;;;29789:35;29841:19;;7755:70:6;29465:401:29;7755:70:6;-1:-1:-1;;;;;7843:23:6;;7835:71;;;;-1:-1:-1;;;7835:71:6;;30073:2:29;7835:71:6;;;30055:21:29;30112:2;30092:18;;;30085:30;30151:34;30131:18;;;30124:62;30222:5;30202:18;;;30195:33;30245:19;;7835:71:6;29871:399:29;7835:71:6;-1:-1:-1;;;;;7999:17:6;;7975:21;7999:17;;;:9;:17;;;;;;8034:23;;;;8026:74;;;;-1:-1:-1;;;8026:74:6;;30477:2:29;8026:74:6;;;30459:21:29;30516:2;30496:18;;;30489:30;30555:34;30535:18;;;30528:62;30626:8;30606:18;;;30599:36;30652:19;;8026:74:6;30275:402:29;8026:74:6;-1:-1:-1;;;;;8134:17:6;;;;;;;:9;:17;;;;;;8154:22;;;8134:42;;8196:20;;;;;;;;:30;;8170:6;;8134:17;8196:30;;8170:6;;8196:30;:::i;:::-;;;;;;;;8259:9;-1:-1:-1;;;;;8242:35:6;8251:6;-1:-1:-1;;;;;8242:35:6;;8270:6;8242:35;;;;2551:25:29;;2539:2;2524:18;;2405:177;8242:35:6;;;;;;;;8288:46;7745:596;7628:713;;;:::o;28467:876:18:-;12523:4;;:47;;;;;12555:4;12523:47;;;9539:34:29;-1:-1:-1;;;;;9609:15:29;;;9589:18;;;9582:43;28600:2:18;;12523:4;;:16;;9451:18:29;;12523:47:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12515:80;;;;-1:-1:-1;;;12515:80:18;;30884:2:29;12515:80:18;;;30866:21:29;30923:2;30903:18;;;30896:30;30962:22;30942:18;;;30935:50;31002:18;;12515:80:18;30682:344:29;12515:80:18;1380:7:4;;;;1623:9:::1;1615:38;;;::::0;-1:-1:-1;;;1615:38:4;;31233:2:29;1615:38:4::1;::::0;::::1;31215:21:29::0;31272:2;31252:18;;;31245:30;31311:18;31291;;;31284:46;31347:18;;1615:38:4::1;31031:340:29::0;1615:38:4::1;28628:22:18::2;28690:16;28653:34;28673:13;28683:2;-1:-1:-1::0;;;;;3799:18:6;3773:7;3799:18;;;:9;:18;;;;;;;3699:125;28653:34:18::2;:53;;;;:::i;:::-;28628:78;;28716:23;28762:16;28742:17;:15;:17::i;:::-;:36;;;;:::i;:::-;28716:62;;28815:16;;28797:14;:34;;28789:84;;;::::0;-1:-1:-1;;;28789:84:18;;31578:2:29;28789:84:18::2;::::0;::::2;31560:21:29::0;31617:2;31597:18;;;31590:30;31656:34;31636:18;;;31629:62;31727:7;31707:18;;;31700:35;31752:19;;28789:84:18::2;31376:401:29::0;28789:84:18::2;28910:17;;28891:15;:36;;28883:87;;;::::0;-1:-1:-1;;;28883:87:18;;31984:2:29;28883:87:18::2;::::0;::::2;31966:21:29::0;32023:2;32003:18;;;31996:30;32062:34;32042:18;;;32035:62;32133:8;32113:18;;;32106:36;32159:19;;28883:87:18::2;31782:402:29::0;28883:87:18::2;29047:17;29053:2;29057:6;29047:5;:17::i;:::-;29080:41;::::0;2551:25:29;;;-1:-1:-1;;;;;29080:41:18;::::2;::::0;29088:10:::2;::::0;29080:41:::2;::::0;2539:2:29;2524:18;29080:41:18::2;;;;;;;29264:10;::::0;:72:::2;::::0;-1:-1:-1;;;;;29264:10:18::2;29292;29312:4;29319:16:::0;29264:27:::2;:72::i;:::-;28618:725;;28467:876:::0;;;;:::o;2075:115:4:-;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:4;;31233:2:29;1615:38:4;;;31215:21:29;31272:2;31252:18;;;31245:30;31311:18;31291;;;31284:46;31347:18;;1615:38:4;31031:340:29;1615:38:4;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:4::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;2170:12:4::1;2163:20;::::0;-1:-1:-1;;;;;5449:55:29;;;5431:74;;5419:2;5404:18;2163:20:4::1;;;;;;;2075:115::o:0;2322:117::-;1380:7;;;;1881:41;;;;-1:-1:-1;;;1881:41:4;;32391:2:29;1881:41:4;;;32373:21:29;32430:2;32410:18;;;32403:30;32469:22;32449:18;;;32442:50;32509:18;;1881:41:4;32189:344:29;1881:41:4;2380:7:::1;:15:::0;;-1:-1:-1;;2380:15:4::1;::::0;;2410:22:::1;902:10:11::0;2419:12:4::1;823:96:11::0;410:141:23;467:9;501:17;496:22;;;488:31;;;;;;-1:-1:-1;542:1:23;410:141::o;1412:614:9:-;1778:10;;;1777:62;;-1:-1:-1;1794:39:9;;;;;1818:4;1794:39;;;9539:34:29;-1:-1:-1;;;;;9609:15:29;;;9589:18;;;9582:43;1794:15:9;;;;;9451:18:29;;1794:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1777:62;1756:163;;;;-1:-1:-1;;;1756:163:9;;33072:2:29;1756:163:9;;;33054:21:29;33111:2;33091:18;;;33084:30;33150:34;33130:18;;;33123:62;33221:24;33201:18;;;33194:52;33263:19;;1756:163:9;32870:418:29;1756:163:9;1956:62;;-1:-1:-1;;;;;29355:55:29;;1956:62:9;;;29337:74:29;29427:18;;;29420:34;;;1929:90:9;;1949:5;;1979:22;;29310:18:29;;1956:62:9;29163:297:29;8617:389:6;-1:-1:-1;;;;;8700:21:6;;8692:65;;;;-1:-1:-1;;;8692:65:6;;33495:2:29;8692:65:6;;;33477:21:29;33534:2;33514:18;;;33507:30;33573:33;33553:18;;;33546:61;33624:18;;8692:65:6;33293:355:29;8692:65:6;8844:6;8828:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8860:18:6;;;;;;:9;:18;;;;;:28;;8882:6;;8860:18;:28;;8882:6;;8860:28;:::i;:::-;;;;-1:-1:-1;;8903:37:6;;2551:25:29;;;-1:-1:-1;;;;;8903:37:6;;;8920:1;;8903:37;;2539:2:29;2524:18;8903:37:6;;;;;;;19523:856:18;;:::o;557:141:23:-;614:9;648:17;643:22;;;635:31;;;;;44534:246:18;44641:7;44668:13;;;:28;;-1:-1:-1;44685:11:18;;44668:28;44667:106;;44758:8;44740:15;;:26;;;;:::i;:::-;44726:9;;44704:32;;:6;;44716:8;;44704:11;:32::i;:::-;:63;;;;:::i;:::-;:69;;44770:3;44704:69;:::i;:::-;44667:106;;;44700:1;44667:106;44660:113;44534:246;-1:-1:-1;;;;44534:246:18:o;2044:178:6:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;2141:26:6::1;:24;:26::i;:::-;2177:38;2200:5;2207:7;2177:22;:38::i;:::-;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;2044:178:6;;:::o;991:128:4:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1049:26:4::1;:24;:26::i;:::-;1085:27;:25;:27::i;:::-;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;991:128:4:o;3239:717:9:-;3669:23;3695:69;3723:4;3695:69;;;;;;;;;;;;;;;;;3703:5;-1:-1:-1;;;;;3695:27:9;;;:69;;;;;:::i;:::-;3778:17;;3669:95;;-1:-1:-1;3778:21:9;3774:176;;3873:10;3862:30;;;;;;;;;;;;:::i;:::-;3854:85;;;;-1:-1:-1;;;3854:85:9;;34367:2:29;3854:85:9;;;34349:21:29;34406:2;34386:18;;;34379:30;34445:34;34425:18;;;34418:62;34516:12;34496:18;;;34489:40;34546:19;;3854:85:9;34165:406:29;900:252:9;1076:68;;-1:-1:-1;;;;;34857:15:29;;;1076:68:9;;;34839:34:29;34909:15;;34889:18;;;34882:43;34941:18;;;34934:34;;;1049:96:9;;1069:5;;1099:27;;34751:18:29;;1076:68:9;34576:398:29;754:64:11;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1667:66;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;754:64:11:o;2228:154:6:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;2335:13:6;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2358:17:6;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;2228:154:6;;:::o;1125:90:4:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;22681:2:29;1401:89:3;;;22663:21:29;22720:2;22700:18;;;22693:30;22759:34;22739:18;;;22732:62;22830:16;22810:18;;;22803:44;22864:19;;1401:89:3;22479:410:29;1401:89:3;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1193:7:4::1;:15:::0;;-1:-1:-1;;1193:15:4::1;::::0;;1667:66:3;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;1125:90:4:o;3472:223:10:-;3605:12;3636:52;3658:6;3666:4;3672:1;3675:12;3605;1045:20;;4839:60;;;;-1:-1:-1;;;4839:60:10;;35588:2:29;4839:60:10;;;35570:21:29;35627:2;35607:18;;;35600:30;35666:31;35646:18;;;35639:59;35715:18;;4839:60:10;35386:353:29;4839:60:10;4911:12;4925:23;4952:6;-1:-1:-1;;;;;4952:11:10;4971:5;4978:4;4952:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4910:73;;;;5000:51;5017:7;5026:10;5038:12;5000:16;:51::i;:::-;4993:58;4559:499;-1:-1:-1;;;;;;;4559:499:10:o;6222:692::-;6368:12;6396:7;6392:516;;;-1:-1:-1;6426:10:10;6419:17;;6392:516;6537:17;;:21;6533:365;;6731:10;6725:17;6791:15;6778:10;6774:2;6770:19;6763:44;6533:365;6870:12;6863:20;;-1:-1:-1;;;6863:20:10;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:258:29;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:29;244:16;;237:27;14:258::o;277:442::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;635:2;623:15;-1:-1:-1;;619:88:29;604:104;;;;710:2;600:113;;277:442;-1:-1:-1;;277:442:29:o;724:301::-;783:6;836:2;824:9;815:7;811:23;807:32;804:52;;;852:1;849;842:12;804:52;891:9;878:23;941:34;934:5;930:46;923:5;920:57;910:85;;991:1;988;981:12;1030:154;-1:-1:-1;;;;;1109:5:29;1105:54;1098:5;1095:65;1085:93;;1174:1;1171;1164:12;1189:315;1257:6;1265;1318:2;1306:9;1297:7;1293:23;1289:32;1286:52;;;1334:1;1331;1324:12;1286:52;1373:9;1360:23;1392:31;1417:5;1392:31;:::i;:::-;1442:5;1494:2;1479:18;;;;1466:32;;-1:-1:-1;;;1189:315:29:o;1701:699::-;1890:2;1942:21;;;2012:13;;1915:18;;;2034:22;;;1861:4;;1890:2;2113:15;;;;2087:2;2072:18;;;1861:4;2156:218;2170:6;2167:1;2164:13;2156:218;;;2235:13;;-1:-1:-1;;;;;2231:62:29;2219:75;;2349:15;;;;2314:12;;;;2192:1;2185:9;2156:218;;;-1:-1:-1;2391:3:29;;1701:699;-1:-1:-1;;;;;;1701:699:29:o;2587:180::-;2646:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;-1:-1:-1;2738:23:29;;2587:180;-1:-1:-1;2587:180:29:o;2772:247::-;2831:6;2884:2;2872:9;2863:7;2859:23;2855:32;2852:52;;;2900:1;2897;2890:12;2852:52;2939:9;2926:23;2958:31;2983:5;2958:31;:::i;3277:456::-;3354:6;3362;3370;3423:2;3411:9;3402:7;3398:23;3394:32;3391:52;;;3439:1;3436;3429:12;3391:52;3478:9;3465:23;3497:31;3522:5;3497:31;:::i;:::-;3547:5;-1:-1:-1;3604:2:29;3589:18;;3576:32;3617:33;3576:32;3617:33;:::i;:::-;3277:456;;3669:7;;-1:-1:-1;;;3723:2:29;3708:18;;;;3695:32;;3277:456::o;5007:248::-;5075:6;5083;5136:2;5124:9;5115:7;5111:23;5107:32;5104:52;;;5152:1;5149;5142:12;5104:52;-1:-1:-1;;5175:23:29;;;5245:2;5230:18;;;5217:32;;-1:-1:-1;5007:248:29:o;5516:284::-;5574:6;5627:2;5615:9;5606:7;5602:23;5598:32;5595:52;;;5643:1;5640;5633:12;5595:52;5682:9;5669:23;5732:18;5725:5;5721:30;5714:5;5711:41;5701:69;;5766:1;5763;5756:12;5805:633;5909:6;5917;5970:2;5958:9;5949:7;5945:23;5941:32;5938:52;;;5986:1;5983;5976:12;5938:52;6026:9;6013:23;6055:18;6096:2;6088:6;6085:14;6082:34;;;6112:1;6109;6102:12;6082:34;6150:6;6139:9;6135:22;6125:32;;6195:7;6188:4;6184:2;6180:13;6176:27;6166:55;;6217:1;6214;6207:12;6166:55;6257:2;6244:16;6283:2;6275:6;6272:14;6269:34;;;6299:1;6296;6289:12;6269:34;6352:7;6347:2;6337:6;6334:1;6330:14;6326:2;6322:23;6318:32;6315:45;6312:65;;;6373:1;6370;6363:12;6312:65;6404:2;6396:11;;;;;6426:6;;-1:-1:-1;5805:633:29;;-1:-1:-1;;;;5805:633:29:o;7484:388::-;7552:6;7560;7613:2;7601:9;7592:7;7588:23;7584:32;7581:52;;;7629:1;7626;7619:12;7581:52;7668:9;7655:23;7687:31;7712:5;7687:31;:::i;:::-;7737:5;-1:-1:-1;7794:2:29;7779:18;;7766:32;7807:33;7766:32;7807:33;:::i;:::-;7859:7;7849:17;;;7484:388;;;;;:::o;8127:715::-;8257:6;8265;8273;8281;8334:3;8322:9;8313:7;8309:23;8305:33;8302:53;;;8351:1;8348;8341:12;8302:53;8390:9;8377:23;8409:31;8434:5;8409:31;:::i;:::-;8459:5;-1:-1:-1;8516:2:29;8501:18;;8488:32;8529:33;8488:32;8529:33;:::i;:::-;8581:7;-1:-1:-1;8640:2:29;8625:18;;8612:32;8653:33;8612:32;8653:33;:::i;:::-;8705:7;-1:-1:-1;8764:2:29;8749:18;;8736:32;8777:33;8736:32;8777:33;:::i;:::-;8127:715;;;;-1:-1:-1;8127:715:29;;-1:-1:-1;;8127:715:29:o;8847:437::-;8926:1;8922:12;;;;8969;;;8990:61;;9044:4;9036:6;9032:17;9022:27;;8990:61;9097:2;9089:6;9086:14;9066:18;9063:38;9060:218;;;9134:77;9131:1;9124:88;9235:4;9232:1;9225:15;9263:4;9260:1;9253:15;9060:218;;8847:437;;;:::o;9636:277::-;9703:6;9756:2;9744:9;9735:7;9731:23;9727:32;9724:52;;;9772:1;9769;9762:12;9724:52;9804:9;9798:16;9857:5;9850:13;9843:21;9836:5;9833:32;9823:60;;9879:1;9876;9869:12;10665:184;10717:77;10714:1;10707:88;10814:4;10811:1;10804:15;10838:4;10835:1;10828:15;10854:236;10893:3;10921:18;10966:2;10963:1;10959:10;10996:2;10993:1;10989:10;11027:3;11023:2;11019:12;11014:3;11011:21;11008:47;;;11035:18;;:::i;:::-;11071:13;;10854:236;-1:-1:-1;;;;10854:236:29:o;11501:128::-;11541:3;11572:1;11568:6;11565:1;11562:13;11559:39;;;11578:18;;:::i;:::-;-1:-1:-1;11614:9:29;;11501:128::o;12041:125::-;12081:4;12109:1;12106;12103:8;12100:34;;;12114:18;;:::i;:::-;-1:-1:-1;12151:9:29;;12041:125::o;12941:184::-;12993:77;12990:1;12983:88;13090:4;13087:1;13080:15;13114:4;13111:1;13104:15;15063:184;15133:6;15186:2;15174:9;15165:7;15161:23;15157:32;15154:52;;;15202:1;15199;15192:12;15154:52;-1:-1:-1;15225:16:29;;15063:184;-1:-1:-1;15063:184:29:o;16060:746::-;16259:2;16311:21;;;16284:18;;;16367:22;;;16230:4;;16446:6;16420:2;16405:18;;16230:4;16480:300;16494:6;16491:1;16488:13;16480:300;;;16569:6;16556:20;16589:31;16614:5;16589:31;:::i;:::-;-1:-1:-1;;;;;16645:54:29;16633:67;;16755:15;;;;16720:12;;;;16516:1;16509:9;16480:300;;;-1:-1:-1;16797:3:29;16060:746;-1:-1:-1;;;;;;16060:746:29:o;17632:276::-;17672:4;17701:64;17815:10;;;;17785;;17837:12;;;17834:38;;;17852:18;;:::i;:::-;17889:13;;17632:276;-1:-1:-1;;;17632:276:29:o;17913:273::-;17981:6;18034:2;18022:9;18013:7;18009:23;18005:32;18002:52;;;18050:1;18047;18040:12;18002:52;18082:9;18076:16;18132:4;18125:5;18121:16;18114:5;18111:27;18101:55;;18152:1;18149;18142:12;20124:253;20164:3;20192:34;20253:2;20250:1;20246:10;20283:2;20280:1;20276:10;20314:3;20310:2;20306:12;20301:3;20298:21;20295:47;;;20322:18;;:::i;20736:184::-;20788:77;20785:1;20778:88;20885:4;20882:1;20875:15;20909:4;20906:1;20899:15;21281:195;21320:3;-1:-1:-1;;21344:5:29;21341:77;21338:103;;;21421:18;;:::i;:::-;-1:-1:-1;21468:1:29;21457:13;;21281:195::o;21837:277::-;21933:6;21986:2;21974:9;21965:7;21961:23;21957:32;21954:52;;;22002:1;21999;21992:12;21954:52;22034:9;22028:16;22053:31;22078:5;22053:31;:::i;22894:184::-;22946:77;22943:1;22936:88;23043:4;23040:1;23033:15;23067:4;23064:1;23057:15;23083:943;23163:6;23216:2;23204:9;23195:7;23191:23;23187:32;23184:52;;;23232:1;23229;23222:12;23184:52;23265:9;23259:16;23294:18;23335:2;23327:6;23324:14;23321:34;;;23351:1;23348;23341:12;23321:34;23389:6;23378:9;23374:22;23364:32;;23434:7;23427:4;23423:2;23419:13;23415:27;23405:55;;23456:1;23453;23446:12;23405:55;23485:2;23479:9;23507:2;23503;23500:10;23497:36;;;23513:18;;:::i;:::-;23647:2;23641:9;23709:4;23701:13;;-1:-1:-1;;23697:22:29;;;23721:2;23693:31;23689:40;23677:53;;;23745:18;;;23765:22;;;23742:46;23739:72;;;23791:18;;:::i;:::-;23831:10;23827:2;23820:22;23866:2;23858:6;23851:18;23906:7;23901:2;23896;23892;23888:11;23884:20;23881:33;23878:53;;;23927:1;23924;23917:12;23878:53;23940:55;23992:2;23987;23979:6;23975:15;23970:2;23966;23962:11;23940:55;:::i;24031:932::-;24432:3;24470:6;24464:13;24486:53;24532:6;24527:3;24520:4;24512:6;24508:17;24486:53;:::i;:::-;24570:6;24565:3;24561:16;24548:29;;24596:3;24622:2;24615:5;24608:17;24656:6;24650:13;24672:65;24728:8;24724:1;24717:5;24713:13;24706:4;24698:6;24694:17;24672:65;:::i;:::-;24800:1;24756:20;;24792:10;;;24785:22;24832:13;;24854:62;24832:13;24903:1;24895:10;;24888:4;24876:17;;24854:62;:::i;:::-;24936:17;24955:1;24932:25;;24031:932;-1:-1:-1;;;;;24031:932:29:o;24968:466::-;25143:3;25181:6;25175:13;25197:53;25243:6;25238:3;25231:4;25223:6;25219:17;25197:53;:::i;:::-;25313:13;;25272:16;;;;25335:57;25313:13;25272:16;25369:4;25357:17;;25335:57;:::i;25439:482::-;25528:1;25571:5;25528:1;25585:330;25606:7;25596:8;25593:21;25585:330;;;25725:4;-1:-1:-1;;25653:77:29;25647:4;25644:87;25641:113;;;25734:18;;:::i;:::-;25784:7;25774:8;25770:22;25767:55;;;25804:16;;;;25767:55;25883:22;;;;25843:15;;;;25585:330;;;25589:3;25439:482;;;;;:::o;25926:866::-;25975:5;26005:8;25995:80;;-1:-1:-1;26046:1:29;26060:5;;25995:80;26094:4;26084:76;;-1:-1:-1;26131:1:29;26145:5;;26084:76;26176:4;26194:1;26189:59;;;;26262:1;26257:130;;;;26169:218;;26189:59;26219:1;26210:10;;26233:5;;;26257:130;26294:3;26284:8;26281:17;26278:43;;;26301:18;;:::i;:::-;-1:-1:-1;;26357:1:29;26343:16;;26372:5;;26169:218;;26471:2;26461:8;26458:16;26452:3;26446:4;26443:13;26439:36;26433:2;26423:8;26420:16;26415:2;26409:4;26406:12;26402:35;26399:77;26396:159;;;-1:-1:-1;26508:19:29;;;26540:5;;26396:159;26587:34;26612:8;26606:4;26587:34;:::i;:::-;26717:6;-1:-1:-1;;26645:79:29;26636:7;26633:92;26630:118;;;26728:18;;:::i;:::-;26766:20;;25926:866;-1:-1:-1;;;25926:866:29:o;26797:140::-;26855:5;26884:47;26925:4;26915:8;26911:19;26905:4;26884:47;:::i;28157:196::-;28196:3;28224:5;28214:39;;28233:18;;:::i;:::-;-1:-1:-1;;;28269:78:29;;28157:196::o;33653:274::-;33693:1;33719;33709:189;;33754:77;33751:1;33744:88;33855:4;33852:1;33845:15;33883:4;33880:1;33873:15;33709:189;-1:-1:-1;33912:9:29;;33653:274::o;33932:228::-;33972:7;34098:1;-1:-1:-1;;34026:74:29;34023:1;34020:81;34015:1;34008:9;34001:17;33997:105;33994:131;;;34105:18;;:::i;:::-;-1:-1:-1;34145:9:29;;33932:228::o;35744:274::-;35873:3;35911:6;35905:13;35927:53;35973:6;35968:3;35961:4;35953:6;35949:17;35927:53;:::i;:::-;35996:16;;;;;35744:274;-1:-1:-1;;35744:274:29:o",
  "language": "Solidity",
  "natspec": {
    "author": "dantop114",
    "events": {
      "AuthUpdated(address)": {
        "params": {
          "newAuth": "The new IVaultAuth module."
        }
      },
      "BurningFeePercentUpdated(uint256)": {
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "BurningFeeReceiverUpdated(address)": {
        "params": {
          "receiver": "The new receiver"
        }
      },
      "Deposit(address,address,uint256)": {
        "params": {
          "from": "The user depositing into the vault.",
          "to": "The user receiving Vault's shares.",
          "value": "The shares `to` is receiving."
        }
      },
      "DepositLimitsUpdated(uint256,uint256)": {
        "params": {
          "perUser": "New underlying limit per address.",
          "perVault": "New underlying limit per vault."
        }
      },
      "EnterBatchBurn(uint256,address,uint256)": {
        "params": {
          "account": "User's address.",
          "amount": "Amount of shares to be burned.",
          "round": "Batched burn round."
        }
      },
      "ExecuteBatchBurn(uint256,address,uint256,uint256)": {
        "params": {
          "amount": "Total amount of underlying redeemed.",
          "executor": "User that executes the batch burn.",
          "round": "Batched burn round.",
          "shares": "Total amount of burned shares."
        }
      },
      "ExitBatchBurn(uint256,address,uint256)": {
        "params": {
          "account": "User's address.",
          "amount": "Amount of underlying redeemed.",
          "round": "Batched burn round."
        }
      },
      "Harvest(address,address[])": {
        "params": {
          "account": "The harvester address.",
          "strategies": "The set of strategies."
        }
      },
      "HarvestDelayUpdateScheduled(uint64)": {
        "params": {
          "newHarvestDelay": "The scheduled updated harvest delay."
        }
      },
      "HarvestDelayUpdated(address,uint64)": {
        "params": {
          "account": "The address changing the harvest delay",
          "newHarvestDelay": "The new harvest delay."
        }
      },
      "HarvestFeePercentUpdated(uint256)": {
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "HarvestFeeReceiverUpdated(address)": {
        "params": {
          "receiver": "The new receiver"
        }
      },
      "StrategyDeposit(address,address,uint256)": {
        "params": {
          "account": "The address depositing funds into the strategy.",
          "strategy": "The strategy that was deposited into.",
          "underlyingAmount": "The amount of underlying tokens that were deposited."
        }
      },
      "StrategyDistrusted(address)": {
        "params": {
          "strategy": "The strategy that became untrusted."
        }
      },
      "StrategyTrusted(address)": {
        "params": {
          "strategy": "The strategy that became trusted."
        }
      },
      "StrategyWithdrawal(address,address,uint256)": {
        "params": {
          "account": "The user pulling funds from the strategy",
          "strategy": "The strategy that was withdrawn from.",
          "underlyingAmount": "The amount of underlying tokens that were withdrawn."
        }
      },
      "WithdrawalQueueSet(address[])": {
        "params": {
          "replacedWithdrawalQueue": "The new withdrawal queue."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "BASE_UNIT()": {
        "notice": "The base unit of the underlying token and hence the Vault share token."
      },
      "BLOCKS_PER_YEAR()": {
        "notice": "Blocks mined in a year."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "auth()": {
        "notice": "Vault Auth module."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "balanceOfUnderlying(address)": {
        "notice": "Returns a user's Vault balance in underlying tokens.",
        "params": {
          "user": "THe user to get the underlying balance of."
        },
        "returns": {
          "_0": "The user's Vault balance in underlying tokens."
        }
      },
      "batchBurnBalance()": {
        "notice": "Balance reserved to batched burning withdrawals."
      },
      "batchBurnRound()": {
        "notice": "Current batched burning round."
      },
      "batchBurns(uint256)": {
        "notice": "Maps social burning events rounds to batched burn details."
      },
      "burningFeePercent()": {
        "notice": "The percentage of shares recognized each burning to reserve as fees."
      },
      "burningFeeReceiver()": {
        "notice": "The address receiving burning fees (denominated in Vault's shares)."
      },
      "calculateShares(uint256)": {
        "notice": "Calculates the amount of Vault's shares for a given amount of underlying tokens.",
        "params": {
          "underlyingAmount": "The underlying token's amount."
        },
        "returns": {
          "_0": "The amount of shares given `underlyingAmount`."
        }
      },
      "calculateUnderlying(uint256)": {
        "notice": "Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.",
        "params": {
          "sharesAmount": "The shares amount."
        },
        "returns": {
          "_0": "The amount of underlying given `sharesAmount`."
        }
      },
      "decimals()": {
        "details": "Needed because Openzeppelin's logic for decimals.",
        "notice": "Overrides `decimals` method.",
        "returns": {
          "_0": "Vault's shares token decimals (underlying token decimals)."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "details": "User needs to approve `underlyingAmount` of underlying tokens to spend.",
        "notice": "Deposit a specific amount of underlying tokens.",
        "params": {
          "to": "The address to receive shares corresponding to the deposit.",
          "underlyingAmount": "The amount of the underlying token to deposit."
        },
        "returns": {
          "shares": "The amount of shares minted using `underlyingAmount`."
        }
      },
      "depositIntoStrategy(address,uint256)": {
        "notice": "Deposit a specific amount of float into a trusted strategy.",
        "params": {
          "strategy": "The trusted strategy to deposit into.",
          "underlyingAmount": "The amount of underlying tokens in float to deposit."
        }
      },
      "distrustStrategy(address)": {
        "notice": "Store a strategy as untrusted, disabling it from being harvested.",
        "params": {
          "strategy": "The strategy to make untrusted."
        }
      },
      "enterBatchBurn(uint256)": {
        "details": "Each user can take part to one batched burn event a time.User's shares amount will be staked until the burn happens.",
        "notice": "Enter a batched burn event.",
        "params": {
          "shares": "Shares to withdraw during the next batched burn event."
        }
      },
      "estimatedReturn()": {
        "notice": "Estimated return recorded during last harvest."
      },
      "exchangeRate()": {
        "notice": "Returns the amount of underlying tokens a share can be redeemed for.",
        "returns": {
          "_0": "The amount of underlying tokens a share can be redeemed for."
        }
      },
      "execBatchBurn()": {
        "notice": "Execute batched burns"
      },
      "exitBatchBurn()": {
        "notice": "Withdraw underlying redeemed in batched burning events."
      },
      "getStrategyData(address)": {
        "notice": "Maps strategies to data the Vault holds on them."
      },
      "getWithdrawalQueue()": {
        "details": "This is provided because Solidity converts public arrays into index getters, but we need a way to allow external contracts and users to access the whole array.",
        "notice": "Gets the full withdrawal queue.",
        "returns": {
          "_0": "An ordered array of strategies representing the withdrawal queue."
        }
      },
      "harvest(address[])": {
        "details": "Will always revert if called outside of an active harvest window or before the harvest delay has passed.",
        "notice": "Harvest a set of trusted strategies.",
        "params": {
          "strategies": "The trusted strategies to harvest."
        }
      },
      "harvestDelay()": {
        "notice": "The period in seconds over which locked profit is unlocked."
      },
      "harvestFeePercent()": {
        "notice": "The percentage of profit recognized each harvest to reserve as fees."
      },
      "harvestFeeReceiver()": {
        "notice": "The address receiving harvest fees (denominated in Vault's shares)."
      },
      "harvestWindow()": {
        "notice": "The period in seconds during which multiple harvests can occur regardless if they are taking place before the harvest delay has elapsed."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(address,address,address,address)": {
        "notice": "The initialize method",
        "params": {
          "underlying_": "The underlying token the vault accepts"
        }
      },
      "lastHarvest()": {
        "notice": "A timestamp representing when the most recent harvest occurred."
      },
      "lastHarvestExchangeRate()": {
        "notice": "Exchange rate at the beginning of latest harvest window"
      },
      "lastHarvestIntervalInBlocks()": {
        "notice": "Latest harvest interval in blocks"
      },
      "lastHarvestWindowStart()": {
        "notice": "A timestamp representing when the first harvest in the most recent harvest window occurred."
      },
      "lastHarvestWindowStartBlock()": {
        "notice": "The block number when the first harvest in the most recent harvest window occurred."
      },
      "lockedProfit()": {
        "notice": "Calculate the current amount of locked profit.",
        "returns": {
          "_0": "The current amount of locked profit."
        }
      },
      "maxLockedProfit()": {
        "notice": "The amount of locked profit at the end of the last harvest."
      },
      "mint(address,uint256)": {
        "details": "User needs to approve `underlyingAmount` of underlying tokens to spend.",
        "notice": "Deposit a specific amount of underlying tokens.",
        "params": {
          "shares": "The amount of Vault's shares to mint.",
          "to": "The address to receive shares corresponding to the deposit."
        },
        "returns": {
          "underlyingAmount": "The amount needed to mint `shares` amount of shares."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nextHarvestDelay()": {
        "notice": "The value that will replace harvestDelay next harvest."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "setAuth(address)": {
        "notice": "Set a new IVaultAuth module.",
        "params": {
          "newAuth": "The new IVaultAuth module."
        }
      },
      "setBatchedBurningFeePercent(uint256)": {
        "notice": "Set a new burning fee percentage.",
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "setBlocksPerYear(uint256)": {
        "notice": "Sets blocks per year.",
        "params": {
          "blocks": "Blocks in a given year."
        }
      },
      "setBurningFeeReceiver(address)": {
        "notice": "Set a new burning fees receiver.",
        "params": {
          "burningFeeReceiver_": "The new burning fees receiver."
        }
      },
      "setDepositLimits(uint256,uint256)": {
        "notice": "Set new deposit limits for this vault.",
        "params": {
          "user": "New user deposit limit.",
          "vault": "New vault deposit limit."
        }
      },
      "setHarvestDelay(uint64)": {
        "details": "If the current harvest delay is 0, meaning it has not been set before, it will be updated immediately; otherwise it will be scheduled to take effect after the next harvest.",
        "notice": "Set a new harvest delay delay.",
        "params": {
          "newHarvestDelay": "The new harvest delay to set."
        }
      },
      "setHarvestFeePercent(uint256)": {
        "notice": "Set a new fee percentage.",
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "setHarvestFeeReceiver(address)": {
        "notice": "Set a new harvest fees receiver.",
        "params": {
          "harvestFeeReceiver_": "The new harvest fees receiver."
        }
      },
      "setHarvestWindow(uint128)": {
        "details": "The Vault's harvestDelay must already be set before calling.",
        "notice": "Set a new harvest window.",
        "params": {
          "newHarvestWindow": "The new harvest window."
        }
      },
      "setWithdrawalQueue(address[])": {
        "details": "Strategies that are untrusted, duplicated, or have no balance are filtered out when encountered at withdrawal time, not validated upfront.",
        "notice": "Set the withdrawal queue.",
        "params": {
          "newQueue": "The new withdrawal queue."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalFloat()": {
        "notice": "Returns the amount of underlying tokens that idly sit in the Vault.",
        "returns": {
          "_0": "The amount of underlying tokens that sit idly in the Vault."
        }
      },
      "totalStrategyHoldings()": {
        "notice": "The total amount of underlying tokens held in strategies at the time of the last harvest."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalUnderlying()": {
        "notice": "Calculates the total amount of underlying tokens the Vault holds.",
        "returns": {
          "totalUnderlyingHeld": "The total amount of underlying tokens the Vault holds."
        }
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "triggerPause()": {
        "details": "Only owner can call this method.",
        "notice": "Triggers the Vault's pause"
      },
      "trustStrategy(address)": {
        "notice": "Store a strategy as trusted, enabling it to be harvested.",
        "params": {
          "strategy": "The strategy to make trusted."
        }
      },
      "underlying()": {
        "notice": "The underlying token the vault accepts."
      },
      "underlyingDecimals()": {
        "notice": "The underlying token decimals."
      },
      "userBatchBurnReceipts(address)": {
        "notice": "Maps user's address to withdrawal request."
      },
      "userDepositLimit()": {
        "notice": "Amount of shares a single address can hold."
      },
      "vaultDepositLimit()": {
        "notice": "Amount of underlying cap for this vault."
      },
      "version()": {
        "notice": "Vault's API version."
      },
      "withdrawFromStrategy(address,uint256)": {
        "details": "Withdrawing from a strategy will not remove it from the withdrawal queue.",
        "notice": "Withdraw a specific amount of underlying tokens from a strategy.",
        "params": {
          "strategy": "The strategy to withdraw from.",
          "underlyingAmount": "The amount of underlying tokens to withdraw."
        }
      },
      "withdrawalQueue(uint256)": {
        "notice": "An ordered array of strategies representing the withdrawal queue."
      }
    },
    "notice": "A vault seeking for yield.",
    "stateVariables": {
      "BASE_UNIT": {
        "details": "Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic."
      },
      "burningFeePercent": {
        "details": "A fixed point number where 1e18 represents 100% and 0 represents 0%."
      },
      "harvestDelay": {
        "details": "Cannot be 0 as it opens harvests up to sandwich attacks."
      },
      "harvestFeePercent": {
        "details": "A fixed point number where 1e18 represents 100% and 0 represents 0%."
      },
      "harvestWindow": {
        "details": "Long harvest delays open up the Vault to profit distribution DOS attacks."
      },
      "lastHarvestWindowStart": {
        "details": "May be equal to lastHarvest if there was/has only been one harvest in the most last/current window."
      },
      "nextHarvestDelay": {
        "details": "In the case that the next delay is 0, no update will be applied."
      },
      "totalStrategyHoldings": {
        "details": "Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings."
      },
      "withdrawalQueue": {
        "details": "The queue is processed in descending order, meaning the last index will be withdrawn from first.Strategies that are untrusted, duplicated, or have no balance are filtered out when encountered at withdrawal time, not validated upfront, meaning the queue may not reflect the \"true\" set used for withdrawals."
      }
    },
    "title": "Vault",
    "version": 1
  },
  "offset": [
    899,
    44782
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x793101A5 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0xC822ADDA GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xE33CC0A8 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xECC404B5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF1A392DA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF1A392DA EQ PUSH2 0xAC5 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xF97D2ED7 EQ PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xECC404B5 EQ PUSH2 0xA9E JUMPI DUP1 PUSH4 0xEED74E67 EQ PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE33CC0A8 EQ PUSH2 0xA66 JUMPI DUP1 PUSH4 0xE5FA2B70 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xEC523AFD EQ PUSH2 0xA82 JUMPI DUP1 PUSH4 0xECAD9565 EQ PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD00364BE GT PUSH2 0x11F JUMPI DUP1 PUSH4 0xDD11DD45 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDD11DD45 EQ PUSH2 0xA07 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA1A JUMPI DUP1 PUSH4 0xDE9375F2 EQ PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD00364BE EQ PUSH2 0x9AD JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC822ADDA EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0xC866983B EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0xC89D3460 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xCBC43F89 EQ PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xAC579B77 GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB53D0958 GT PUSH2 0x197 JUMPI DUP1 PUSH4 0xB53D0958 EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0xBDF06C8E EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xC70920BC EQ PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAC579B77 EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xAC86AC72 EQ PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8D6 JUMPI DUP1 PUSH4 0x9EE02C7F EQ PUSH2 0x8DE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x8E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x836CA0F6 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x86DC4800 GT PUSH2 0x21F JUMPI DUP1 PUSH4 0x86DC4800 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0x912F74CD EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0x9291DF6B EQ PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x836CA0F6 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0x841219E5 EQ PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x793101A5 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x797BA463 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0x7B72AEB9 EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0x7CCFB43F EQ PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x391 JUMPI DUP1 PUSH4 0x4EDDEA06 GT PUSH2 0x309 JUMPI DUP1 PUSH4 0x63874446 GT PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x6BD95612 GT PUSH2 0x2BD JUMPI DUP1 PUSH4 0x6BD95612 EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x63874446 EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0x6833F60D EQ PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EDDEA06 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0x5E4F9451 EQ PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3EC16194 GT PUSH2 0x360 JUMPI DUP1 PUSH4 0x448F56B9 GT PUSH2 0x345 JUMPI DUP1 PUSH4 0x448F56B9 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x44B81396 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3EC16194 EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0x3C66A8FA EQ PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x424 JUMPI DUP1 PUSH4 0x25A760C2 GT PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x2B2E05C1 GT PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x2B2E05C1 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x31024F3B EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25A760C2 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x2968676E EQ PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x1BBA16DB EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x1EC36BFA EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE962F00 GT PUSH2 0x460 JUMPI DUP1 PUSH4 0xE962F00 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x11E57A3E EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x13E86B28 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x14FBAE04 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x7B35D1D EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xE73ECEF EQ PUSH2 0x4E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49A PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x5010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x5043 JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D8 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x50B6 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x506 PUSH1 0xAB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x5139 JUMP JUMPDEST PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x5C7 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x624 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x9D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x146B JUMP JUMPDEST PUSH2 0x506 PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x729 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x517A JUMP JUMPDEST PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x49A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E310000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xAC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x1800 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x7ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x813 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x729 SWAP1 PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x874 CALLDATASIZE PUSH1 0x4 PUSH2 0x519C JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x8B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x49A PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x506 PUSH1 0xAD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x1F35 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x908 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x91B CALLDATASIZE PUSH1 0x4 PUSH2 0x51C6 JUMP JUMPDEST PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x92E CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x941 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x954 CALLDATASIZE PUSH1 0x4 PUSH2 0x508A JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x506 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x7ED PUSH2 0x96F CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x29A8 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x982 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x51C6 JUMP JUMPDEST PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x9A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x3119 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x9DD SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x7ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x506 PUSH2 0xA28 CALLDATASIZE PUSH1 0x4 PUSH2 0x523B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH2 0x7ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x9B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0xA7D CALLDATASIZE PUSH1 0x4 PUSH2 0x5103 JUMP JUMPDEST PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0xA90 CALLDATASIZE PUSH1 0x4 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x332A JUMP JUMPDEST PUSH2 0x506 PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x7ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x729 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x729 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0xAF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5274 JUMP JUMPDEST PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x9DD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x52D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x52D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9F SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND GT ISZERO PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737457696E646F773A3A57494E444F575F544F4F5F4C4F4E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9F DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5AAC860870A2B99320DF1D1B908931B370150F1C11074466FB332528E5B910B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD96 CALLER DUP5 DUP5 PUSH2 0x397B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDDA JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A PUSH2 0xE0E PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x3ACB JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9E DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB5D8934A1F336D4CF641AE9F680C3E196F624F0BD9271749BE60D98B70F70060 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0x1037 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV AND PUSH2 0x5375 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62617463684275726E3A3A4C41544553545F484152564553545F4E4F545F4558 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5049524544000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0xA7 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH2 0x10CA DUP4 DUP6 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62617463684275726E3A3A544F54414C5F5348415245535F43414E4E4F545F42 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x455F5A45524F0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117B PUSH2 0xE0E PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1187 PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11AA JUMPI PUSH1 0x0 PUSH2 0x119D DUP3 DUP5 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A8 DUP2 PUSH2 0x3AE6 JUMP JUMPDEST POP JUMPDEST PUSH2 0x11B4 ADDRESS DUP5 PUSH2 0x3D56 JUMP JUMPDEST PUSH1 0x9D SLOAD ISZERO PUSH2 0x1204 JUMPI PUSH1 0x9D SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11D6 SWAP1 DUP5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3ACB JUMP JUMPDEST SWAP1 POP PUSH2 0x11E2 DUP2 DUP5 PUSH2 0x53B9 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH1 0x99 SLOAD SWAP2 SWAP5 POP PUSH2 0x1202 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3EDB JUMP JUMPDEST POP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x1214 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA8 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x123B SWAP1 DUP5 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 DUP8 SWAP2 PUSH32 0x464420EE56151EE74D491D95CFA6B42D6C6504B38DEBC567F5532168243F1D8D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1292 DUP5 DUP5 DUP5 PUSH2 0x3FA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x132C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x1339 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x397B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x1405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDCB0BC5ECFADC1F3129303F7C1F12B82107806277374A010DFFE2C367708EF41 SWAP1 PUSH1 0x20 ADD PUSH2 0xD7D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xD96 SWAP2 DUP6 SWAP1 PUSH2 0x14A2 SWAP1 DUP7 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST PUSH2 0x397B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD9A SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14D5 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14E4 JUMPI POP POP PUSH1 0x9A SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14FA DUP2 PUSH1 0x9A SLOAD PUSH2 0x14F3 PUSH2 0x2981 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3F84 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1535 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 ADD DUP4 SWAP1 SSTORE PUSH2 0x15AC JUMP JUMPDEST DUP2 DUP2 EQ PUSH2 0x1584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656E74657242617463684275726E3A3A444946464552454E545F524F554E4453 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x15A6 SWAP1 DUP5 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x15CA SWAP1 DUP5 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15DA SWAP1 POP ADDRESS DUP5 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0xA34C4835838212C803863F6698244F8A1E56F479D6DBA7D4F33B34A2CDECF1CE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A PUSH2 0x162D PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP4 DUP4 PUSH2 0x1648 DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP DUP4 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH1 0x9F SLOAD PUSH1 0x0 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP1 DUP3 ADD TIMESTAMP LT PUSH2 0x1699 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 TIMESTAMP DUP5 SWAP1 SUB DUP3 MUL DUP2 PUSH2 0x16D6 JUMPI PUSH2 0x16D6 PUSH2 0x53D0 JUMP JUMPDEST DIV SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP4 PUSH2 0x16EF DUP5 PUSH2 0x1620 JUMP JUMPDEST SWAP3 POP DUP3 DUP5 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176B SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0xAB DUP4 SWAP1 SSTORE PUSH1 0xAC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB2AD710F2954A5376267A683F9ECE9EC46EE7DFB47075163379904EE941DF8DA SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1873 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x18D4 JUMPI PUSH2 0x18D1 PUSH2 0x448D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x4532 JUMP JUMPDEST PUSH1 0xA7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578697442617463684275726E3A3A4E4F5F4445504F53495453000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST DUP1 MLOAD DUP3 GT PUSH2 0x19CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578697442617463684275726E3A3A524F554E445F4E4F545F45584543555445 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP5 MSTORE PUSH1 0xAA DUP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD PUSH1 0x9A SLOAD SWAP2 DUP5 ADD MLOAD PUSH2 0x1A0B SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3ACB JUMP JUMPDEST PUSH1 0xA8 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x99 SLOAD SWAP1 SWAP2 POP PUSH2 0x1A2E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x3EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x2027C7E85003814492322D04D360D8DF81AEBEB8A40A069FFFCCC25CDF9E359B SWAP1 PUSH1 0x20 ADD PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x1B21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1B9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737444656C61793A3A44454C41595F43414E4E4F545F4245 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5F5A45524F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH4 0x1E13380 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737444656C61793A3A44454C41595F544F4F5F4C4F4E4700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x1CA7 JUMPI PUSH1 0x9F DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x9F DUP1 SLOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x12CE22E477E3FC08E5FDA24CDEC059A7C62A276344417F2C365D7476401BCA6F SWAP1 PUSH1 0x20 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D97 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x1DE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x1E61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574426174636865644275726E696E6746656550657263656E743A3A464545 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5F544F4F5F484947480000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9D DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xEA0B688AABE63E0B1F8D23FBFAAF5978C8D6B74C5B21BDC9787B4651482B8F4B SWAP1 PUSH1 0x20 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0xA8 SLOAD PUSH1 0x99 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F20 SWAP2 SWAP1 PUSH2 0x53FF JUMP JUMPDEST SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x52D0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1FCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x1FDC CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x397B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD96 CALLER DUP5 DUP5 PUSH2 0x3FA6 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2042 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2066 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x20B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x2129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365745769746864726177616C51756575653A3A51554555455F544F4F5F4249 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x2135 PUSH1 0xA6 DUP5 DUP5 PUSH2 0x4EE4 JUMP JUMPDEST POP PUSH32 0x7F5ECD11ABC947C192F7D36828C4A649DDECD0867F27DF66489E78D3EC80B6FE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17F3 SWAP3 SWAP2 SWAP1 PUSH2 0x5418 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21DA SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x2226 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9C DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBA702855580CDA8666C4FE8E4AE71D8F5DD19DB067455EEB54E2BAC95C46AF13 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22FC SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x2348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A554E545255535445445F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5354524154454759000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x2449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A414D4F554E545F43414E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E4F545F42455F5A45524F000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x2452 DUP3 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x24A0 SWAP1 DUP5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5466 JUMP JUMPDEST DUP3 SLOAD PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH1 0xA0 DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2584 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A8 SWAP2 SWAP1 PUSH2 0x54A6 JUMP JUMPDEST PUSH1 0xFF AND ISZERO PUSH2 0x261E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A52454445454D5F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4C45440000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2672 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2696 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x26E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A554E545255535445445F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5452415445475900000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x27E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A414D4F554E545F43414E4E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F545F42455F5A45524F00000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH1 0xA0 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27F5 SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2804 SWAP1 POP DUP3 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND SWAP1 SWAP7 ADD AND SWAP1 SWAP5 MUL PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH32 0x49E9138FE0DACF001EA634236E38AA8BD229EFD55EC4D7975228D679DB6CE8F9 SWAP1 PUSH2 0x288E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x99 SLOAD PUSH2 0x28AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB6B55F2500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x290D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2931 SWAP2 SWAP1 PUSH2 0x54A6 JUMP JUMPDEST PUSH1 0xFF AND ISZERO PUSH2 0x261E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A4D494E545F4641494C4544 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298B PUSH2 0x1650 JUMP JUMPDEST PUSH1 0xA0 SLOAD SUB SWAP1 POP PUSH2 0x2999 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x29A3 SWAP1 DUP3 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x29B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A45 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x2A91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xE14D923EC37225F1AAB033B03F5C98CF911D68BBA31F6908192DB6C24B0511C9 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH32 0xE6CF324000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE6CF3240 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B67 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x2BB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F484152564553544552000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0x2BF0 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV AND PUSH2 0x5375 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT PUSH2 0x2C58 JUMPI PUSH2 0x2C08 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0xA2 SSTORE PUSH1 0xA4 SLOAD PUSH2 0x2C18 SWAP1 NUMBER PUSH2 0x53B9 JUMP JUMPDEST PUSH1 0xA3 SSTORE NUMBER PUSH1 0xA4 SSTORE PUSH1 0xA5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND OR SWAP1 SSTORE PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0x2C84 SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x54C9 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x2CE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686172766573743A3A4241445F484152564553545F54494D4500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0xA0 SLOAD PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EDB JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x2D09 JUMPI PUSH2 0x2D09 PUSH2 0x54F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2D1E SWAP2 SWAP1 PUSH2 0x511C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x2D89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686172766573743A3A554E545255535445445F53545241544547590000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x27E5CBAF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 SWAP3 PUSH4 0x27E5CBAF SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E40 SWAP2 SWAP1 PUSH2 0x53FF JUMP JUMPDEST SWAP1 POP PUSH2 0x2E4B DUP2 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 PUSH2 0x2EA3 DUP3 DUP8 PUSH2 0x53A1 JUMP JUMPDEST PUSH2 0x2EAD SWAP2 SWAP1 PUSH2 0x53B9 JUMP JUMPDEST SWAP5 POP DUP2 DUP2 GT PUSH2 0x2EBD JUMPI PUSH1 0x0 PUSH2 0x2EC1 JUMP JUMPDEST DUP2 DUP2 SUB JUMPDEST DUP7 ADD SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0x2ED3 SWAP1 PUSH2 0x5523 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CED JUMP JUMPDEST POP PUSH1 0x9B SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2EF6 SWAP1 DUP5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3ACB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2F11 JUMPI POP PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2F41 JUMPI PUSH1 0x9C SLOAD PUSH2 0x2F41 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F3C PUSH2 0x2F31 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP6 SWAP2 SWAP1 PUSH2 0x3F84 JUMP JUMPDEST PUSH2 0x4735 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F69 DUP3 DUP6 PUSH2 0x2F50 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x2F5A SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST PUSH2 0x2F64 SWAP2 SWAP1 PUSH2 0x53B9 JUMP JUMPDEST PUSH2 0x4814 JUMP JUMPDEST PUSH1 0xA5 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH17 0x100000000000000000000000000000000 DUP2 MUL SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2FAD SWAP1 DUP6 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FCE DUP2 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA3 SLOAD PUSH2 0x4833 JUMP JUMPDEST PUSH1 0xAD SSTORE PUSH1 0xA0 DUP5 SWAP1 SSTORE PUSH1 0xA5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x69E9C71F6799744A94D9897E77C3ED426CC2F92BA0EF3300785368209B6F4B2D SWAP1 PUSH2 0x3049 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x5418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x9F SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x310D JUMPI PUSH1 0x9F DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 MUL PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318C SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x31D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x3230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657446656550657263656E743A3A4645455F544F4F5F484947480000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x9B DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2930745C0414DCBC7EBF3FEA0D713C9B1F0D69DD75345906FCF43AE322AD578 SWAP1 PUSH1 0x20 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32D8 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x3324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST POP PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x91006745 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x91006745 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x339D SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x33E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6F307DC300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0x6F307DC3 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x344E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3472 SWAP2 SWAP1 PUSH2 0x553E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x34C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737453747261746567793A3A57524F4E475F554E4445524C59494E4700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x1EECB33217FCE2D414C96C97C7E082F4557817585C876A72ECA5305AFB15F1F1 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x352E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x35A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x35C2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4175786F20000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3660 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x558A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x205661756C740000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x562C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6175786F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3757 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x558A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3768 SWAP3 SWAP2 SWAP1 PUSH2 0x56A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x3783 DUP3 DUP3 PUSH2 0x4887 JUMP JUMPDEST PUSH2 0x378B PUSH2 0x495C JUMP JUMPDEST PUSH2 0x3793 PUSH2 0x448D JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x381D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3841 SWAP2 SWAP1 PUSH2 0x54A6 JUMP JUMPDEST PUSH2 0x384C SWAP1 PUSH1 0xA PUSH2 0x57AC JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3890 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B4 SWAP2 SWAP1 PUSH2 0x54A6 JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x9E DUP1 SLOAD DUP6 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x9C DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA7 SSTORE PUSH3 0x259E9D PUSH1 0x97 SSTORE DUP1 ISZERO PUSH2 0x3974 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x39F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3A72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x1613 JUMP JUMPDEST DUP3 DUP3 MUL DUP4 ISZERO DUP5 DUP3 DIV DUP5 EQ OR PUSH2 0x3ADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA6 SLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3AFA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0xA6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3B12 JUMPI PUSH2 0x3B12 PUSH2 0x54F4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xA1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 DUP3 DIV AND SWAP1 PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x3B6E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3B7A JUMPI POP POP PUSH2 0x3D36 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP6 GT ISZERO PUSH2 0x3B8A JUMPI DUP2 PUSH2 0x3B8C JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0x3B9A DUP2 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH2 0x100 MUL PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD SWAP7 DUP4 SWAP1 SUB SWAP7 CALLER SWAP1 PUSH32 0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE SWAP1 PUSH2 0x3C22 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CAE SWAP2 SWAP1 PUSH2 0x54A6 JUMP JUMPDEST PUSH1 0xFF AND ISZERO PUSH2 0x3D24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70756C6C46726F6D5769746864726177616C51756575653A3A52454445454D5F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4641494C45440000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST POP DUP5 PUSH2 0x3D32 JUMPI POP POP POP PUSH2 0x3D48 JUMP JUMPDEST POP POP POP JUMPDEST DUP1 PUSH2 0x3D40 DUP2 PUSH2 0x57BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3AFD JUMP JUMPDEST POP POP PUSH1 0xA0 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3E61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3E90 SWAP1 DUP5 SWAP1 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x261E SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4A2D JUMP JUMPDEST DUP3 DUP2 MUL DUP3 ISZERO ISZERO DUP5 ISZERO DUP6 DUP4 DIV DUP5 EQ OR AND PUSH2 0x3F9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x409E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x412D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4164 SWAP1 DUP5 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x41B0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14D9A97900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 SWAP3 AND SWAP1 PUSH4 0x14D9A979 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x424C SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x4298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F723A3A4E4F545F4445504F5349544F52000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4310 PUSH2 0x522 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x431A SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x4327 PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x4331 SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 POP PUSH1 0xAB SLOAD DUP3 GT ISZERO PUSH2 0x43AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6465706F7369743A3A555345525F4445504F5349545F4C494D4954535F5245 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4143484544000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0xAC SLOAD DUP2 GT ISZERO PUSH2 0x4423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6465706F7369743A3A5641554C545F4445504F5349545F4C494D4954535F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4541434845440000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x442D DUP7 DUP7 PUSH2 0x4735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 CALLER SWAP1 PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x99 SLOAD PUSH2 0x4485 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x4B12 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x44E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x4515 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x4584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x4515 JUMP JUMPDEST PUSH1 0x0 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x467A JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4678 SWAP2 SWAP1 PUSH2 0x53FF JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x46EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x261E SWAP1 DUP5 SWAP1 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x3F20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x478B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x479D SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x47CA SWAP1 DUP5 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x4840 JUMPI POP DUP3 ISZERO JUMPDEST PUSH2 0x487C JUMPI DUP2 PUSH1 0x97 SLOAD PUSH2 0x4852 SWAP2 SWAP1 PUSH2 0x57D2 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x4862 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x3F84 JUMP JUMPDEST PUSH2 0x486C SWAP2 SWAP1 PUSH2 0x580D JUMP JUMPDEST PUSH2 0x4877 SWAP1 PUSH1 0x64 PUSH2 0x580D JUMP JUMPDEST PUSH2 0x487F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x48A0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x4912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4934 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x493C PUSH2 0x4B63 JUMP JUMPDEST PUSH2 0x4946 DUP4 DUP4 PUSH2 0x4C23 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x261E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x4975 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x49E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4A09 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x4A11 PUSH2 0x4B63 JUMP JUMPDEST PUSH2 0x4A19 PUSH2 0x4D0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A82 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4DD9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x261E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4AA0 SWAP2 SWAP1 PUSH2 0x5324 JUMP JUMPDEST PUSH2 0x261E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x41B9 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x3F20 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x4B7C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x4BEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4A19 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x4C3C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x4CAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4CD0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP3 MLOAD PUSH2 0x4CE3 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x4F5B JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x4CF7 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x4F5B JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x261E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x4D27 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x4D99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4DBB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x487F DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x4E32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4E4E SWAP2 SWAP1 PUSH2 0x582C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4E8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4E90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4EA0 DUP3 DUP3 DUP7 PUSH2 0x4EAB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4EBA JUMPI POP DUP2 PUSH2 0x133F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4ECA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP2 SWAP1 PUSH2 0x5010 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4F4F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4F4F JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4F04 JUMP JUMPDEST POP PUSH2 0x45E3 SWAP3 SWAP2 POP PUSH2 0x4FCF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4F67 SWAP1 PUSH2 0x52D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4F89 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4F4F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4FA2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4F4F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4F4F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4F4F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4FB4 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4FD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4FFF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4FE7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x41B9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x502F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4FE4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x509D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x50A8 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50F7 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x50D2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x512E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x133F DUP2 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x514E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5159 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x5169 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x518D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x51F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x5229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x524E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5259 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5269 DUP2 PUSH2 0x5075 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x528A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x5295 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x52A5 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x52B5 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x52C5 DUP2 PUSH2 0x5075 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x52E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x531E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x5398 JUMPI PUSH2 0x5398 PUSH2 0x5346 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x53B4 JUMPI PUSH2 0x53B4 PUSH2 0x5346 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x53CB JUMPI PUSH2 0x53CB PUSH2 0x5346 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x545B JUMPI DUP3 CALLDATALOAD PUSH2 0x5440 DUP2 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x542D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x549E JUMPI PUSH2 0x549E PUSH2 0x5346 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x5398 JUMPI PUSH2 0x5398 PUSH2 0x5346 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x5537 JUMPI PUSH2 0x5537 PUSH2 0x5346 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x133F DUP2 PUSH2 0x5075 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x559C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x55B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x55DA JUMPI PUSH2 0x55DA PUSH2 0x555B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5602 JUMPI PUSH2 0x5602 PUSH2 0x555B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x561B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA0 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4FE4 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x563E DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x4FE4 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE DUP6 MLOAD PUSH2 0x567A DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4FE4 JUMP JUMPDEST PUSH1 0x1 SWAP3 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x5695 DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4FE4 JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x56B4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x4FE4 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5398 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x4FE4 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5703 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x56E9 JUMPI PUSH2 0x56E9 PUSH2 0x5346 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x56F6 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x56CD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x571A JUMPI POP PUSH1 0x1 PUSH2 0xD9A JUMP JUMPDEST DUP2 PUSH2 0x5727 JUMPI POP PUSH1 0x0 PUSH2 0xD9A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x573D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5747 JUMPI PUSH2 0x5763 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD9A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5758 JUMPI PUSH2 0x5758 PUSH2 0x5346 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xD9A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5786 JUMPI POP DUP2 DUP2 EXP PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x5790 DUP4 DUP4 PUSH2 0x56C8 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x57A4 JUMPI PUSH2 0x57A4 PUSH2 0x5346 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133F PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x570B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x57CA JUMPI PUSH2 0x57CA PUSH2 0x5346 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5808 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5827 JUMPI PUSH2 0x5827 PUSH2 0x5346 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x583E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4FE4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 JUMP CALL EXTCODEHASH 0xF6 LOG0 EXTCODESIZE 0xCB DUP16 0xAE SWAP5 0xE7 PUSH30 0x6A69A747AA90C9ACD90A598C14F2974FEB825364736F6C634300080A0033 ",
  "pcMap": {
    "0": {
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48D"
    },
    "25": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x793101A5"
    },
    "38": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x26B"
    },
    "42": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC822ADDA"
    },
    "49": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x150"
    },
    "53": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE33CC0A8"
    },
    "60": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC8"
    },
    "64": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xECC404B5"
    },
    "71": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97"
    },
    "75": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF1A392DA"
    },
    "82": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "86": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF1A392DA"
    },
    "93": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAC5"
    },
    "97": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF8C8765E"
    },
    "104": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAE5"
    },
    "108": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF97D2ED7"
    },
    "115": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF8"
    },
    "119": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xECC404B5"
    },
    "131": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA9E"
    },
    "135": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEED74E67"
    },
    "142": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAB1"
    },
    "146": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "150": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "151": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "152": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "153": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE33CC0A8"
    },
    "158": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA66"
    },
    "162": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "163": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "164": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE5FA2B70"
    },
    "169": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "170": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA6F"
    },
    "173": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEC523AFD"
    },
    "180": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA82"
    },
    "184": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xECAD9565"
    },
    "191": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA95"
    },
    "195": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "199": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "200": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "201": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "202": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD00364BE"
    },
    "207": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11F"
    },
    "211": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "212": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "213": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD11DD45"
    },
    "218": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x104"
    },
    "222": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "223": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "224": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD11DD45"
    },
    "229": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA07"
    },
    "233": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "235": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD62ED3E"
    },
    "240": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA1A"
    },
    "244": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDE9375F2"
    },
    "251": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA53"
    },
    "255": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "259": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "260": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "261": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "262": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD00364BE"
    },
    "267": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9AD"
    },
    "271": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "272": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "273": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD37DB1D2"
    },
    "278": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "279": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9FE"
    },
    "282": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "283": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "285": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "286": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "287": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "288": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "289": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC822ADDA"
    },
    "294": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x961"
    },
    "298": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "299": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "300": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC866983B"
    },
    "305": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x974"
    },
    "309": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "310": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "311": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC89D3460"
    },
    "316": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x987"
    },
    "320": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "321": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "322": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCBC43F89"
    },
    "327": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x99A"
    },
    "331": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "332": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "334": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "335": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "336": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "337": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "343": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "344": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E3"
    },
    "347": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "348": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAC579B77"
    },
    "354": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "355": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B2"
    },
    "358": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "359": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB53D0958"
    },
    "365": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "366": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x197"
    },
    "369": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "370": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "371": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB53D0958"
    },
    "376": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x933"
    },
    "380": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "381": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "382": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBDF06C8E"
    },
    "387": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x946"
    },
    "391": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "392": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "393": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC70920BC"
    },
    "398": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x959"
    },
    "402": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "403": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "405": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "406": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "407": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "408": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAC579B77"
    },
    "414": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "415": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90D"
    },
    "418": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "419": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "420": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAC86AC72"
    },
    "425": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x920"
    },
    "429": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "430": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "432": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "433": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "434": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "435": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "441": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "442": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8D6"
    },
    "445": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "446": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9EE02C7F"
    },
    "452": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "453": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8DE"
    },
    "456": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "457": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA457C2D7"
    },
    "463": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "464": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8E7"
    },
    "467": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "468": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA9059CBB"
    },
    "474": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "475": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8FA"
    },
    "478": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "479": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "481": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "482": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "483": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "484": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x836CA0F6"
    },
    "490": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "491": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23A"
    },
    "494": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "495": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86DC4800"
    },
    "501": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "502": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21F"
    },
    "505": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "506": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86DC4800"
    },
    "512": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "513": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x89D"
    },
    "516": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "517": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x912F74CD"
    },
    "523": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "524": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8A6"
    },
    "527": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "528": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "529": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9291DF6B"
    },
    "534": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "535": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8CD"
    },
    "538": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "539": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "541": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "542": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "543": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "544": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "545": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x836CA0F6"
    },
    "550": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "551": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88C"
    },
    "554": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "555": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "556": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x841219E5"
    },
    "561": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "562": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x895"
    },
    "565": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "566": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "568": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "569": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "570": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "571": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "572": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x793101A5"
    },
    "577": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "578": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82E"
    },
    "581": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "582": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "583": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x797BA463"
    },
    "588": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "589": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x836"
    },
    "592": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "593": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "594": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7B72AEB9"
    },
    "599": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "600": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x866"
    },
    "603": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "604": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "605": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7CCFB43F"
    },
    "610": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "611": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x879"
    },
    "614": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "615": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "617": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "618": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "619": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "620": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "621": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x39509351"
    },
    "626": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "627": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x391"
    },
    "630": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "631": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "632": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4EDDEA06"
    },
    "637": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "638": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x309"
    },
    "641": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "642": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "643": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x63874446"
    },
    "648": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "649": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D8"
    },
    "652": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "653": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "654": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6BD95612"
    },
    "659": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "660": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BD"
    },
    "663": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "664": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "665": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6BD95612"
    },
    "670": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "671": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7D1"
    },
    "674": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "675": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "676": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6F307DC3"
    },
    "681": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "682": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7DA"
    },
    "685": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "686": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "687": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "692": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "693": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x805"
    },
    "696": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "697": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "699": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "700": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "701": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "702": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "703": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x63874446"
    },
    "708": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "709": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C0"
    },
    "712": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "713": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "714": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6833F60D"
    },
    "719": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "720": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C9"
    },
    "723": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "724": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "726": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "727": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "728": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "729": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "730": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4EDDEA06"
    },
    "735": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "736": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x75D"
    },
    "739": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "740": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "741": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x54FD4D50"
    },
    "746": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "747": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x770"
    },
    "750": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "751": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "752": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5C975ABB"
    },
    "757": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "758": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7AC"
    },
    "761": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "762": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "763": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5E4F9451"
    },
    "768": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "769": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7B7"
    },
    "772": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "773": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "775": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "776": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "777": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "778": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "779": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3EC16194"
    },
    "784": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "785": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x360"
    },
    "788": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "789": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "790": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x448F56B9"
    },
    "795": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "796": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x345"
    },
    "799": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "800": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "801": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x448F56B9"
    },
    "806": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "807": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x701"
    },
    "810": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "811": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "812": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x44B81396"
    },
    "817": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "818": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x742"
    },
    "821": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "822": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "823": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x47E7EF24"
    },
    "828": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "829": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x74A"
    },
    "832": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "833": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "835": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "836": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "837": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "838": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "839": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3EC16194"
    },
    "844": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "845": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6DB"
    },
    "848": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "849": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "850": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x40C10F19"
    },
    "855": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "856": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6EE"
    },
    "859": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "860": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "862": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "863": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "864": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "865": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "866": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x39509351"
    },
    "871": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "872": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x69A"
    },
    "875": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "876": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "877": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3AF9E669"
    },
    "882": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "883": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6AD"
    },
    "886": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "887": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "888": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3BA0B9A9"
    },
    "893": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "894": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6C0"
    },
    "897": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "898": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "899": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3C66A8FA"
    },
    "904": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "905": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6C8"
    },
    "908": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "909": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "911": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "912": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "913": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "914": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "915": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "920": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "921": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x424"
    },
    "924": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "925": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "926": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x25A760C2"
    },
    "931": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "932": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F3"
    },
    "935": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "936": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "937": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2B2E05C1"
    },
    "942": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "943": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D8"
    },
    "946": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "947": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "948": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2B2E05C1"
    },
    "953": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "954": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x65B"
    },
    "957": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "958": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "959": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x31024F3B"
    },
    "964": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "965": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x66E"
    },
    "968": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "969": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "970": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x313CE567"
    },
    "975": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "976": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x677"
    },
    "979": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "980": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "982": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "983": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "984": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "985": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "986": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x25A760C2"
    },
    "991": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "992": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5A2"
    },
    "995": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "996": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "997": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2968676E"
    },
    "1002": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1003": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5D9"
    },
    "1006": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1007": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1009": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1010": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1011": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1012": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1013": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "1018": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1019": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x576"
    },
    "1022": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1023": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1024": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1BBA16DB"
    },
    "1029": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1030": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57E"
    },
    "1033": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1034": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1035": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1EC36BFA"
    },
    "1040": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1041": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x586"
    },
    "1044": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1045": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1046": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "1051": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1052": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58F"
    },
    "1055": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1056": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1058": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1059": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1060": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1061": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1062": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE962F00"
    },
    "1067": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "GT",
      "path": "18"
    },
    "1068": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x460"
    },
    "1071": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1072": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1073": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE962F00"
    },
    "1078": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1079": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4FD"
    },
    "1082": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1083": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1084": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x11E57A3E"
    },
    "1089": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1090": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x514"
    },
    "1093": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1094": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1095": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x13E86B28"
    },
    "1100": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1101": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x527"
    },
    "1104": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1105": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1106": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x14FBAE04"
    },
    "1111": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1112": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A"
    },
    "1115": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1116": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1118": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1119": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1120": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1121": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1122": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "1127": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1128": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x492"
    },
    "1131": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1132": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1133": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7B35D1D"
    },
    "1138": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1139": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4B0"
    },
    "1142": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1143": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1144": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "1149": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1150": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C5"
    },
    "1153": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1154": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1155": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE73ECEF"
    },
    "1160": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "EQ",
      "path": "18"
    },
    "1161": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E8"
    },
    "1164": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1165": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1166": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1168": {
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1169": {
      "first_revert": true,
      "fn": null,
      "offset": [
        899,
        44782
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1170": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1171": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49A"
    },
    "1174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB14"
    },
    "1177": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1179": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1181": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A7"
    },
    "1185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1187": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5010"
    },
    "1190": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1192": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1194": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1197": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SUB",
      "path": "6"
    },
    "1198": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "RETURN",
      "path": "6"
    },
    "1200": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1201": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1204": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4BE"
    },
    "1207": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1208": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1210": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5043"
    },
    "1213": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1214": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1215": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBA6"
    },
    "1218": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1219": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1220": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "STOP",
      "path": "18"
    },
    "1221": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1222": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "1225": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D3"
    },
    "1228": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1229": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1231": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508A"
    },
    "1234": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1235": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1236": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD89"
    },
    "1239": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1240": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1241": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1243": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "ISZERO"
    },
    "1246": {
      "op": "ISZERO"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A7"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1257": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F0"
    },
    "1260": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDA0"
    },
    "1263": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "i",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1264": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1265": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1267": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1268": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1271": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1272": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1273": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50B6"
    },
    "1276": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "i",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1277": {
      "offset": [
        3622,
        3646
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1278": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1281": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "1283": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1284": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1285": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1286": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1287": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1289": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        3622,
        3646
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1290": {
      "op": "SWAP1"
    },
    "1291": {
      "op": "DUP2"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "offset": [
        3622,
        3646
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1299": {
      "op": "JUMP"
    },
    "1300": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1301": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1304": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x522"
    },
    "1307": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1308": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1310": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "1313": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1314": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1315": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE01"
    },
    "1318": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1319": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1320": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1323": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x535"
    },
    "1326": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1327": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1329": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "1332": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1333": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1334": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE19"
    },
    "1337": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1338": {
      "offset": [
        7053,
        7100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1339": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x561"
    },
    "1342": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x548"
    },
    "1345": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1346": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1348": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "1351": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        7053,
        7100
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1352": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1353": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAA"
    },
    "1355": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1357": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1358": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1360": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1361": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1362": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1363": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1365": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1366": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1367": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1368": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1369": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1371": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1372": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1373": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "ADD",
      "path": "18"
    },
    "1374": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1375": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1376": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1377": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1378": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1380": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1381": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7053,
        7100
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1382": {
      "op": "SWAP3"
    },
    "1383": {
      "op": "DUP4"
    },
    "1384": {
      "op": "MSTORE"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1387": {
      "op": "DUP4"
    },
    "1388": {
      "op": "ADD"
    },
    "1389": {
      "op": "SWAP2"
    },
    "1390": {
      "op": "SWAP1"
    },
    "1391": {
      "op": "SWAP2"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "offset": [
        7053,
        7100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1397": {
      "op": "JUMP"
    },
    "1398": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1399": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x35"
    },
    "1401": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1402": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x506"
    },
    "1405": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1406": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26430,
        28186
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1407": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26430,
        28186
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1410": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26430,
        28186
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF3B"
    },
    "1413": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26430,
        28186
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1414": {
      "offset": [
        7167,
        7198
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1415": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7167,
        7198
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1418": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7167,
        7198
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAB"
    },
    "1420": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7167,
        7198
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1421": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7167,
        7198
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1422": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7167,
        7198
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1423": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1424": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "1427": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59D"
    },
    "1430": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1431": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5139"
    },
    "1436": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1437": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1438": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1285"
    },
    "1441": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1442": {
      "offset": [
        3416,
        3447
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1443": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x99"
    },
    "1445": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1446": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C7"
    },
    "1449": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1450": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH21",
      "path": "18",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1472": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1473": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "DIV",
      "path": "18"
    },
    "1474": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1476": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "AND",
      "path": "18"
    },
    "1477": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1478": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1479": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1480": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1482": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3416,
        3447
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1485": {
      "op": "SWAP1"
    },
    "1486": {
      "op": "SWAP2"
    },
    "1487": {
      "op": "AND"
    },
    "1488": {
      "op": "DUP2"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "offset": [
        3416,
        3447
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1496": {
      "op": "JUMP"
    },
    "1497": {
      "offset": [
        5279,
        5336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1498": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x624"
    },
    "1501": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1505": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1507": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "1510": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5279,
        5336
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1511": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1512": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "1514": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1517": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1519": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1520": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1521": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1522": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1524": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1525": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1526": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1527": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1529": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1530": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "AND",
      "path": "18"
    },
    "1531": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1532": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1535": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1536": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "DIV",
      "path": "18"
    },
    "1537": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1569": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "AND",
      "path": "18"
    },
    "1570": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1571": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1572": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1573": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1576": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5279,
        5336
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1577": {
      "op": "SWAP3"
    },
    "1578": {
      "op": "ISZERO"
    },
    "1579": {
      "op": "ISZERO"
    },
    "1580": {
      "op": "DUP4"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH31",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1614": {
      "op": "SWAP1"
    },
    "1615": {
      "op": "SWAP2"
    },
    "1616": {
      "op": "AND"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "op": "DUP4"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "offset": [
        5279,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1626": {
      "op": "JUMP"
    },
    "1627": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1628": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1631": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x669"
    },
    "1634": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1635": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1637": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "1640": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        16055,
        16189
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1641": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1642": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1346"
    },
    "1645": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        16055,
        16189
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1646": {
      "offset": [
        4150,
        4182
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1647": {
      "fn": "Vault.setAuth",
      "offset": [
        4150,
        4182
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1650": {
      "fn": "Vault.setAuth",
      "offset": [
        4150,
        4182
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9D"
    },
    "1652": {
      "fn": "Vault.setAuth",
      "offset": [
        4150,
        4182
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1653": {
      "fn": "Vault.setAuth",
      "offset": [
        4150,
        4182
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1654": {
      "fn": "Vault.setAuth",
      "offset": [
        4150,
        4182
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1655": {
      "fn": "Vault.decimals",
      "offset": [
        15122,
        15221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1656": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 1,
      "value": "0x99"
    },
    "1658": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1659": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "PUSH21",
      "path": "18",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1681": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1682": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "DIV",
      "path": "18"
    },
    "1683": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1685": {
      "fn": "Vault.decimals",
      "offset": [
        15196,
        15214
      ],
      "op": "AND",
      "path": "18"
    },
    "1686": {
      "fn": "Vault.decimals",
      "offset": [
        15122,
        15221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C7"
    },
    "1689": {
      "fn": "Vault.decimals",
      "offset": [
        15122,
        15221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1690": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1691": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "1694": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A8"
    },
    "1697": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1698": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1700": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508A"
    },
    "1703": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1704": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1705": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146B"
    },
    "1708": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1709": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1710": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1713": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6BB"
    },
    "1716": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1717": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1719": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "1722": {
      "fn": "Vault.balanceOfUnderlying",
      "jump": "i",
      "offset": [
        42042,
        42177
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1723": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1724": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14A7"
    },
    "1727": {
      "fn": "Vault.balanceOfUnderlying",
      "jump": "i",
      "offset": [
        42042,
        42177
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1728": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41497,
        41841
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1729": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41497,
        41841
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1732": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41497,
        41841
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "1735": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        41497,
        41841
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1736": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1737": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1740": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6D6"
    },
    "1743": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1744": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1746": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "1749": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1750": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1751": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1500"
    },
    "1754": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1755": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1756": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1759": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E9"
    },
    "1762": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1763": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1765": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "1768": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        29572,
        29725
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1769": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1770": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1620"
    },
    "1773": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        29572,
        29725
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1774": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1775": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1778": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6FC"
    },
    "1781": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1782": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1784": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x508A"
    },
    "1787": {
      "fn": "Vault.mint",
      "jump": "i",
      "offset": [
        23900,
        24073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1788": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1789": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1638"
    },
    "1792": {
      "fn": "Vault.mint",
      "jump": "i",
      "offset": [
        23900,
        24073
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1793": {
      "offset": [
        4742,
        4768
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1794": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "1796": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1797": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x729"
    },
    "1800": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1801": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "1819": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1820": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "DIV",
      "path": "18"
    },
    "1821": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1830": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "AND",
      "path": "18"
    },
    "1831": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1832": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1833": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1834": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1836": {
      "fn": "Vault.mint",
      "offset": [
        4742,
        4768
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1837": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1846": {
      "op": "SWAP1"
    },
    "1847": {
      "op": "SWAP2"
    },
    "1848": {
      "op": "AND"
    },
    "1849": {
      "op": "DUP2"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "offset": [
        4742,
        4768
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "1857": {
      "op": "JUMP"
    },
    "1858": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1859": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1862": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1650"
    },
    "1865": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        42735,
        43654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1866": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1867": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1870": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x758"
    },
    "1873": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1874": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1876": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x508A"
    },
    "1879": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23339,
        23521
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1880": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1881": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16E0"
    },
    "1884": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23339,
        23521
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1885": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1886": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1889": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x76B"
    },
    "1892": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1893": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1895": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x517A"
    },
    "1898": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1899": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1900": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16F8"
    },
    "1903": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1904": {
      "offset": [
        1683,
        1721
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1905": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x49A"
    },
    "1908": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1910": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1911": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1912": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1914": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "ADD",
      "path": "18"
    },
    "1915": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1917": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1918": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1919": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1921": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1922": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1923": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1925": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "ADD",
      "path": "18"
    },
    "1926": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x302E310000000000000000000000000000000000000000000000000000000000"
    },
    "1959": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1960": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1961": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "POP",
      "path": "18"
    },
    "1962": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1963": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        1683,
        1721
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1964": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1965": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x65"
    },
    "1967": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1968": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1970": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "1971": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D8"
    },
    "1974": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1975": {
      "offset": [
        5415,
        5453
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1976": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5415,
        5453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1979": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5415,
        5453
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA2"
    },
    "1981": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5415,
        5453
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1982": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5415,
        5453
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1983": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5415,
        5453
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1984": {
      "offset": [
        7262,
        7294
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1985": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7262,
        7294
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "1988": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7262,
        7294
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAC"
    },
    "1990": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7262,
        7294
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1991": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7262,
        7294
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1992": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7262,
        7294
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1993": {
      "fn": "Vault.triggerPause",
      "offset": [
        13411,
        13515
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1994": {
      "fn": "Vault.triggerPause",
      "offset": [
        13411,
        13515
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "1997": {
      "fn": "Vault.triggerPause",
      "offset": [
        13411,
        13515
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1800"
    },
    "2000": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        13411,
        13515
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2001": {
      "offset": [
        6708,
        6737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2002": {
      "fn": "Vault.triggerPause",
      "offset": [
        6708,
        6737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2005": {
      "fn": "Vault.triggerPause",
      "offset": [
        6708,
        6737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA7"
    },
    "2007": {
      "fn": "Vault.triggerPause",
      "offset": [
        6708,
        6737
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2008": {
      "fn": "Vault.triggerPause",
      "offset": [
        6708,
        6737
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2009": {
      "fn": "Vault.triggerPause",
      "offset": [
        6708,
        6737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2010": {
      "offset": [
        3339,
        3362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2011": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x99"
    },
    "2013": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2014": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7ED"
    },
    "2017": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "offset": [
        3339,
        3362
      ],
      "op": "AND",
      "path": "18"
    },
    "2027": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2028": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2029": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2030": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2032": {
      "fn": "Vault.triggerPause",
      "offset": [
        3339,
        3362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "op": "SWAP1"
    },
    "2042": {
      "op": "SWAP2"
    },
    "2043": {
      "op": "AND"
    },
    "2044": {
      "op": "DUP2"
    },
    "2045": {
      "op": "MSTORE"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "offset": [
        3339,
        3362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "2052": {
      "op": "JUMP"
    },
    "2053": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2054": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x506"
    },
    "2057": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x813"
    },
    "2060": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2061": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2063": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x511C"
    },
    "2066": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2067": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "op": "SUB"
    },
    "2076": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6",
      "statement": 3
    },
    "2077": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3773,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2079": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2080": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2081": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2082": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "2084": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2086": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2087": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2089": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2090": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2091": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2092": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2093": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2094": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25537,
        26386
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2095": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25537,
        26386
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2098": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25537,
        26386
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18DC"
    },
    "2101": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25537,
        26386
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2102": {
      "offset": [
        4924,
        4954
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2103": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "2105": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2106": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x729"
    },
    "2109": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2110": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "PUSH25",
      "path": "18",
      "value": "0x1000000000000000000000000000000000000000000000000"
    },
    "2136": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2137": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "DIV",
      "path": "18"
    },
    "2138": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2147": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "AND",
      "path": "18"
    },
    "2148": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2149": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        4924,
        4954
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2150": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2151": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2154": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x874"
    },
    "2157": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2158": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2160": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x519C"
    },
    "2163": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2164": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2165": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A62"
    },
    "2168": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2169": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2170": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2173": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x887"
    },
    "2176": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2177": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2179": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "2182": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "jump": "i",
      "offset": [
        17336,
        17714
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2183": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2184": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D24"
    },
    "2187": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "jump": "i",
      "offset": [
        17336,
        17714
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2188": {
      "offset": [
        5510,
        5552
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2189": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        5510,
        5552
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2192": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        5510,
        5552
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA3"
    },
    "2194": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        5510,
        5552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2195": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        5510,
        5552
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2196": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        5510,
        5552
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2197": {
      "fn": "Vault.totalFloat",
      "offset": [
        42343,
        42613
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2198": {
      "fn": "Vault.totalFloat",
      "offset": [
        42343,
        42613
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2201": {
      "fn": "Vault.totalFloat",
      "offset": [
        42343,
        42613
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E96"
    },
    "2204": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        42343,
        42613
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2205": {
      "offset": [
        6809,
        6840
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2206": {
      "fn": "Vault.totalFloat",
      "offset": [
        6809,
        6840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2209": {
      "fn": "Vault.totalFloat",
      "offset": [
        6809,
        6840
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA8"
    },
    "2211": {
      "fn": "Vault.totalFloat",
      "offset": [
        6809,
        6840
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2212": {
      "fn": "Vault.totalFloat",
      "offset": [
        6809,
        6840
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2213": {
      "fn": "Vault.totalFloat",
      "offset": [
        6809,
        6840
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2214": {
      "offset": [
        6906,
        6971
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2215": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x561"
    },
    "2218": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8B4"
    },
    "2221": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2222": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2224": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "2227": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        6906,
        6971
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2228": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2229": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "2231": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2233": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2234": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2236": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2237": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2238": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2239": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2241": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2242": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2243": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2244": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2245": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2247": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2248": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2249": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "ADD",
      "path": "18"
    },
    "2250": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2251": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2252": {
      "fn": "Vault.totalFloat",
      "offset": [
        6906,
        6971
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2253": {
      "offset": [
        5659,
        5701
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2254": {
      "fn": "Vault.totalFloat",
      "offset": [
        5659,
        5701
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2257": {
      "fn": "Vault.totalFloat",
      "offset": [
        5659,
        5701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA4"
    },
    "2259": {
      "fn": "Vault.totalFloat",
      "offset": [
        5659,
        5701
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2260": {
      "fn": "Vault.totalFloat",
      "offset": [
        5659,
        5701
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2261": {
      "fn": "Vault.totalFloat",
      "offset": [
        5659,
        5701
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2262": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2263": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49A"
    },
    "2266": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F26"
    },
    "2269": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2270": {
      "offset": [
        7364,
        7394
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2271": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7364,
        7394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2274": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7364,
        7394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAD"
    },
    "2276": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7364,
        7394
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2277": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7364,
        7394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2278": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7364,
        7394
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2279": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2280": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "2283": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "2286": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2287": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2289": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508A"
    },
    "2292": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2293": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2294": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F35"
    },
    "2297": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2298": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2299": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "2302": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x908"
    },
    "2305": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2306": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2308": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508A"
    },
    "2311": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2312": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2313": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FE6"
    },
    "2316": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2317": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2318": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2321": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x91B"
    },
    "2324": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2325": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2327": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51C6"
    },
    "2330": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21247,
        21596
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2331": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2332": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF3"
    },
    "2335": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21247,
        21596
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2336": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2337": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2340": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x92E"
    },
    "2343": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2344": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2346": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "2349": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2350": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2351": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2167"
    },
    "2354": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2355": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2356": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2359": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x941"
    },
    "2362": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2363": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2365": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x508A"
    },
    "2368": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2369": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2370": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2289"
    },
    "2373": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2374": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2375": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2378": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x954"
    },
    "2381": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2382": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2384": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x508A"
    },
    "2387": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35638,
        36871
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2388": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2389": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2623"
    },
    "2392": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35638,
        36871
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2393": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43833,
        44223
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2394": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43833,
        44223
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2397": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43833,
        44223
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2981"
    },
    "2400": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        43833,
        44223
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2401": {
      "offset": [
        6620,
        6654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2402": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7ED"
    },
    "2405": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x96F"
    },
    "2408": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2409": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2411": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "2414": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2415": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2416": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29A8"
    },
    "2419": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2420": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2421": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2424": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x982"
    },
    "2427": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2428": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2430": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "2433": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2434": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2435": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29D2"
    },
    "2438": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2439": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2440": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2443": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x995"
    },
    "2446": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2447": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2449": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51C6"
    },
    "2452": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2453": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2454": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2ADB"
    },
    "2457": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2458": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2459": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2462": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A8"
    },
    "2465": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2466": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2468": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "2471": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        16870,
        17227
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2472": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2473": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3119"
    },
    "2476": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        16870,
        17227
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2477": {
      "offset": [
        6160,
        6190
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2478": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "2480": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2481": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9DD"
    },
    "2484": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2485": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "2503": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2504": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "DIV",
      "path": "18"
    },
    "2505": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2522": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "AND",
      "path": "18"
    },
    "2523": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2524": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2525": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2526": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2528": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6160,
        6190
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2529": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2546": {
      "op": "SWAP1"
    },
    "2547": {
      "op": "SWAP2"
    },
    "2548": {
      "op": "AND"
    },
    "2549": {
      "op": "DUP2"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2553": {
      "op": "ADD"
    },
    "2554": {
      "offset": [
        6160,
        6190
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A7"
    },
    "2557": {
      "op": "JUMP"
    },
    "2558": {
      "offset": [
        3182,
        3212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2559": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        3182,
        3212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2562": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        3182,
        3212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x97"
    },
    "2564": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        3182,
        3212
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2565": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        3182,
        3212
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2566": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        3182,
        3212
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2567": {
      "offset": [
        4273,
        4306
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2568": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9E"
    },
    "2570": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2571": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7ED"
    },
    "2574": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2581": {
      "op": "SHL"
    },
    "2582": {
      "op": "SUB"
    },
    "2583": {
      "offset": [
        4273,
        4306
      ],
      "op": "AND",
      "path": "18"
    },
    "2584": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2585": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4273,
        4306
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2586": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2587": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x506"
    },
    "2590": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA28"
    },
    "2593": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2594": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2596": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523B"
    },
    "2599": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2600": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "SUB"
    },
    "2609": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 4
    },
    "2610": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2611": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "AND",
      "path": "6"
    },
    "2612": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4346,
        4353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2614": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2615": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2616": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2617": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4383
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "2619": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2621": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2622": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2623": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2624": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2626": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2627": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2628": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2629": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2630": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2631": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2632": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "AND",
      "path": "6"
    },
    "2633": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2634": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2635": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2636": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2637": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2638": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2639": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2640": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2641": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2642": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2643": {
      "offset": [
        3254,
        3276
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2644": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "2646": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2647": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7ED"
    },
    "2650": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "offset": [
        3254,
        3276
      ],
      "op": "AND",
      "path": "18"
    },
    "2660": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2661": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3254,
        3276
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2662": {
      "offset": [
        3820,
        3852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2663": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3820,
        3852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2666": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3820,
        3852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9B"
    },
    "2668": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3820,
        3852
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2669": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3820,
        3852
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2670": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3820,
        3852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2671": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2672": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2675": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA7D"
    },
    "2678": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2679": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2681": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5103"
    },
    "2684": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2685": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2686": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3265"
    },
    "2689": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2690": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2691": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2694": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA90"
    },
    "2697": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2698": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2700": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "2703": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2704": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2705": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x332A"
    },
    "2708": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2709": {
      "offset": [
        5171,
        5207
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2710": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5171,
        5207
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x506"
    },
    "2713": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5171,
        5207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "2715": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5171,
        5207
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2716": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5171,
        5207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2717": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5171,
        5207
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2718": {
      "offset": [
        3943,
        3976
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2719": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9C"
    },
    "2721": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2722": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7ED"
    },
    "2725": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2732": {
      "op": "SHL"
    },
    "2733": {
      "op": "SUB"
    },
    "2734": {
      "offset": [
        3943,
        3976
      ],
      "op": "AND",
      "path": "18"
    },
    "2735": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2736": {
      "fn": "Vault.trustStrategy",
      "offset": [
        3943,
        3976
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2737": {
      "offset": [
        5929,
        5965
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2738": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "2740": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2741": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x729"
    },
    "2744": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2745": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2754": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "AND",
      "path": "18"
    },
    "2755": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2756": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5929,
        5965
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2757": {
      "offset": [
        6052,
        6077
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2758": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "2760": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2761": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x729"
    },
    "2764": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2765": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "PUSH9",
      "path": "18",
      "value": "0x10000000000000000"
    },
    "2775": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2776": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "DIV",
      "path": "18"
    },
    "2777": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2786": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "AND",
      "path": "18"
    },
    "2787": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2788": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6052,
        6077
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2789": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2790": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C3"
    },
    "2793": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF3"
    },
    "2796": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2797": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2799": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5274"
    },
    "2802": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2803": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2804": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3515"
    },
    "2807": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2808": {
      "offset": [
        4561,
        4589
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2809": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "2811": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2812": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9DD"
    },
    "2815": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2816": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2833": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "AND",
      "path": "18"
    },
    "2834": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2835": {
      "fn": "Vault.initialize",
      "offset": [
        4561,
        4589
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2836": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2501,
        2514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2839": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2533,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x36"
    },
    "2841": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2842": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2843": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB23"
    },
    "2846": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2847": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x52D0"
    },
    "2850": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2851": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2852": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2853": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2855": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2856": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2858": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2859": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2860": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DIV",
      "path": "6"
    },
    "2861": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MUL",
      "path": "6"
    },
    "2862": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2864": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2865": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2867": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2868": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2869": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2870": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2871": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2873": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2874": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2875": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2876": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2877": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2878": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2879": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2880": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2881": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2883": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2884": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2885": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2886": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2887": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4F"
    },
    "2890": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2891": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x52D0"
    },
    "2894": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2895": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2896": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2897": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2898": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9C"
    },
    "2901": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2902": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2903": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2905": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "LT",
      "path": "6"
    },
    "2906": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB71"
    },
    "2909": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2910": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2913": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2914": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2915": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2916": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DIV",
      "path": "6"
    },
    "2917": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MUL",
      "path": "6"
    },
    "2918": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2919": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2920": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2921": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2923": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2924": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2925": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9C"
    },
    "2928": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2929": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2930": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2931": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2932": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2933": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2934": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2936": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2937": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2939": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2941": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2942": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2943": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2944": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2945": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2946": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2947": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2948": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2949": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2951": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2952": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2953": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2955": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2956": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2958": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "GT",
      "path": "6"
    },
    "2959": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7F"
    },
    "2962": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2963": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2964": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2965": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SUB",
      "path": "6"
    },
    "2966": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2968": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "AND",
      "path": "6"
    },
    "2969": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2970": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2971": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2972": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2973": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2974": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2975": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2976": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2977": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2978": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2980": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2981": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2982": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2983": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "2985": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2986": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2988": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2989": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2998": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2999": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3000": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3002": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3003": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3004": {
      "op": "MSTORE"
    },
    "3005": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18887,
        18897
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3008": {
      "op": "DUP3"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "op": "DUP2"
    },
    "3011": {
      "op": "SWAP1"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18887,
        18897
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "SUB"
    },
    "3022": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "3023": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3024": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "3029": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3032": {
      "op": "ADD"
    },
    "3033": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3035": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3037": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3038": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3039": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3040": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "3041": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3042": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3043": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "3044": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3045": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3046": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3047": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3048": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBF5"
    },
    "3051": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3052": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3053": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3055": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3056": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3057": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3058": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3060": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "3061": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3062": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3063": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3064": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3065": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3066": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3068": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3069": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3070": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3072": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "3073": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3075": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3076": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3077": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "3078": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3079": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3080": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3081": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3083": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3084": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3085": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3086": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3087": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3088": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC19"
    },
    "3091": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3092": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3093": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "3096": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3097": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3098": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC6A"
    },
    "3101": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3102": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3104": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3113": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3116": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3118": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3119": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "3120": {
      "op": "MSTORE"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3125": {
      "op": "DUP3"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "op": "MSTORE"
    },
    "3128": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3163": {
      "op": "DUP3"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3168": {
      "op": "ADD"
    },
    "3169": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3170": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3172": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3173": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3174": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3175": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "SUB",
      "path": "18"
    },
    "3176": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3177": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3178": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3179": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 6,
      "value": "0x9F"
    },
    "3181": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3182": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "3200": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3201": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "DIV",
      "path": "18"
    },
    "3202": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3211": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19015,
        19027
      ],
      "op": "AND",
      "path": "18"
    },
    "3212": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18995,
        19027
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3229": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18995,
        19027
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3230": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18995,
        19027
      ],
      "op": "AND",
      "path": "18"
    },
    "3231": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18995,
        19027
      ],
      "op": "GT",
      "path": "18"
    },
    "3232": {
      "branch": 191,
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18995,
        19027
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3233": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD12"
    },
    "3236": {
      "branch": 191,
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3237": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3239": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3248": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3251": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3253": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3254": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "ADD",
      "path": "18"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH32",
      "value": "0x7365744861727665737457696E646F773A3A57494E444F575F544F4F5F4C4F4E"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH32",
      "value": "0x4700000000000000000000000000000000000000000000000000000000000000"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3336": {
      "op": "DUP3"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "3345": {
      "op": "JUMP"
    },
    "3346": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18987,
        19065
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3347": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19127
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 7,
      "value": "0x9F"
    },
    "3349": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3350": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3351": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000"
    },
    "3384": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "AND",
      "path": "18"
    },
    "3385": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3402": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3403": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "AND",
      "path": "18"
    },
    "3404": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3405": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3406": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "OR",
      "path": "18"
    },
    "3407": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3408": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3409": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19114,
        19146
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3410": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 8,
      "value": "0x40"
    },
    "3412": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3413": {
      "op": "SWAP1"
    },
    "3414": {
      "op": "DUP2"
    },
    "3415": {
      "op": "MSTORE"
    },
    "3416": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE5AAC860870A2B99320DF1D1B908931B370150F1C11074466FB332528E5B910B"
    },
    "3449": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3454": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3456": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3457": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3458": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3459": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "SUB",
      "path": "18"
    },
    "3460": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3461": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19162,
        19200
      ],
      "op": "LOG1",
      "path": "18"
    },
    "3462": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "POP",
      "path": "18"
    },
    "3463": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        18816,
        19207
      ],
      "op": "POP",
      "path": "18"
    },
    "3464": {
      "fn": "Vault.setHarvestWindow",
      "jump": "o",
      "offset": [
        18816,
        19207
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3465": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3466": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4627,
        4631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3468": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4682
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0xD96"
    },
    "3471": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 10
    },
    "3472": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4666,
        4673
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3473": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4675,
        4681
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3474": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397B"
    },
    "3477": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4643,
        4682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3478": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4699,
        4703
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x1"
    },
    "3482": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3483": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3484": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3485": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "POP",
      "path": "6"
    },
    "3486": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "POP",
      "path": "6"
    },
    "3487": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3488": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3489": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20930,
        20948
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3491": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20967,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 12,
      "value": "0xA6"
    },
    "3493": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3494": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3495": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3496": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3498": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MUL",
      "path": "18"
    },
    "3499": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3501": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3502": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3504": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3505": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3506": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3507": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3508": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3510": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3511": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3512": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3513": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3514": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3515": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3516": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3517": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3518": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3520": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3521": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3522": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3523": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3524": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3525": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3526": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB9C"
    },
    "3529": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3530": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3532": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MUL",
      "path": "18"
    },
    "3533": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3534": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3535": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3536": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3537": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3539": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3540": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3542": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3544": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3545": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3546": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3547": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3548": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3555": {
      "op": "SHL"
    },
    "3556": {
      "op": "SUB"
    },
    "3557": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "AND",
      "path": "18"
    },
    "3558": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3559": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3560": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3562": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3563": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3564": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3565": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3566": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3568": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "ADD",
      "path": "18"
    },
    "3569": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3570": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3571": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "GT",
      "path": "18"
    },
    "3572": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDDA"
    },
    "3575": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3576": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3577": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3578": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3579": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3580": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3581": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3582": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20960,
        20982
      ],
      "op": "POP",
      "path": "18"
    },
    "3583": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        20877,
        20989
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3584": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "o",
      "offset": [
        20877,
        20989
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3585": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3586": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30023,
        30030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3588": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30049,
        30093
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 13,
      "value": "0xD9A"
    },
    "3591": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30067,
        30081
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE0E"
    },
    "3594": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30067,
        30079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "3597": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        30067,
        30081
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3598": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30067,
        30081
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3599": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30083,
        30092
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "3601": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30083,
        30092
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3602": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30049,
        30061
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3603": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30049,
        30061
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3604": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30049,
        30093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3605": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        30049,
        30066
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ACB"
    },
    "3608": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        30049,
        30093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3609": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3610": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "3612": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3613": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3615": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3616": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3623": {
      "op": "SHL"
    },
    "3624": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3625": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3626": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3627": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3629": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3630": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18283,
        18293
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3635": {
      "op": "DUP3"
    },
    "3636": {
      "op": "ADD"
    },
    "3637": {
      "op": "DUP2"
    },
    "3638": {
      "op": "SWAP1"
    },
    "3639": {
      "op": "MSTORE"
    },
    "3640": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18283,
        18293
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3647": {
      "op": "SHL"
    },
    "3648": {
      "op": "SUB"
    },
    "3649": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "3650": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3651": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "3656": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3662": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3664": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3665": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3666": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3667": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "3668": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3669": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3670": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "3671": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3672": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3673": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3674": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3675": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE68"
    },
    "3678": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3679": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3680": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3682": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3683": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3684": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3685": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3687": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3688": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3689": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3690": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3691": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3692": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3693": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3695": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3696": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3697": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3699": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "3700": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3702": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3703": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3704": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "3705": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3706": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3707": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3708": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3710": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3711": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3712": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3713": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3714": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3715": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE8C"
    },
    "3718": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3719": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3720": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "3723": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3724": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3725": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xED8"
    },
    "3728": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3729": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3731": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3740": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3743": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3745": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3746": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3752": {
      "op": "DUP3"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "3799": {
      "op": "JUMP"
    },
    "3800": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3801": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18361
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 14,
      "value": "0x9E"
    },
    "3803": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3804": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3805": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "3838": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "AND",
      "path": "18"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3848": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "AND",
      "path": "18"
    },
    "3849": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3850": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3851": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "OR",
      "path": "18"
    },
    "3852": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3853": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3854": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18343,
        18383
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3855": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18399,
        18445
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 15,
      "value": "0x40"
    },
    "3857": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18399,
        18445
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3858": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18399,
        18445
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xB5D8934A1F336D4CF641AE9F680C3E196F624F0BD9271749BE60D98B70F70060"
    },
    "3891": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18399,
        18445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3894": {
      "op": "SWAP1"
    },
    "3895": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18399,
        18445
      ],
      "op": "LOG2",
      "path": "18"
    },
    "3896": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "POP",
      "path": "18"
    },
    "3897": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18204,
        18452
      ],
      "op": "POP",
      "path": "18"
    },
    "3898": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "o",
      "offset": [
        18204,
        18452
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3899": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26430,
        28186
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3900": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "3902": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3903": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3905": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3906": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3915": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3916": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3917": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3919": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3920": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3921": {
      "op": "MSTORE"
    },
    "3922": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26474,
        26484
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3925": {
      "op": "DUP3"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "DUP2"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "MSTORE"
    },
    "3930": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26474,
        26484
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "3940": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3941": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "3946": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3952": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3954": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3955": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3956": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3957": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "3958": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3959": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3960": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "3961": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3962": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3963": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3964": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3965": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF8A"
    },
    "3968": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3969": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3970": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3972": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3973": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3974": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3975": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3977": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3978": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3979": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3980": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3981": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3982": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "3983": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3985": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3986": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3987": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3989": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "3990": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3992": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3993": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3994": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "3995": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3996": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "3997": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3998": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4000": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4001": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "4002": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4003": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "4004": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4005": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFAE"
    },
    "4008": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4009": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4010": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "4013": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4014": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4015": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFA"
    },
    "4018": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4019": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4021": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4030": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4033": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4035": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4036": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "4037": {
      "op": "MSTORE"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4042": {
      "op": "DUP3"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "MSTORE"
    },
    "4045": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4080": {
      "op": "DUP3"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "op": "MSTORE"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "4089": {
      "op": "JUMP"
    },
    "4090": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4091": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 16,
      "value": "0x9F"
    },
    "4093": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4094": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "4096": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4097": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26600
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1037"
    },
    "4100": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26600
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4101": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4110": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "4128": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4129": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4130": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "DIV",
      "path": "18"
    },
    "4131": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4132": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "AND",
      "path": "18"
    },
    "4133": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26588,
        26600
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4134": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "PUSH9",
      "path": "18",
      "value": "0x10000000000000000"
    },
    "4144": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4145": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "DIV",
      "path": "18"
    },
    "4146": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26585
      ],
      "op": "AND",
      "path": "18"
    },
    "4147": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26600
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5375"
    },
    "4150": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26574,
        26600
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4151": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26574,
        26600
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4152": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26554,
        26601
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4161": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26554,
        26601
      ],
      "op": "AND",
      "path": "18"
    },
    "4162": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26554,
        26569
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "4163": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26554,
        26601
      ],
      "op": "LT",
      "path": "18"
    },
    "4164": {
      "branch": 192,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26554,
        26601
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4165": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10B6"
    },
    "4168": {
      "branch": 192,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4169": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4171": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4180": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4183": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4185": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4186": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "ADD",
      "path": "18"
    },
    "4187": {
      "op": "MSTORE"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4192": {
      "op": "DUP3"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "PUSH32",
      "value": "0x62617463684275726E3A3A4C41544553545F484152564553545F4E4F545F4558"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH32",
      "value": "0x5049524544000000000000000000000000000000000000000000000000000000"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4268": {
      "op": "DUP3"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "4277": {
      "op": "JUMP"
    },
    "4278": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26546,
        26643
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4279": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26680,
        26694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA7"
    },
    "4281": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26680,
        26694
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4282": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26680,
        26694
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4283": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26680,
        26694
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4284": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26722,
        26723
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 17,
      "value": "0x1"
    },
    "4286": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26722,
        26723
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4287": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26654,
        26677
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4289": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CA"
    },
    "4292": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26722,
        26723
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4293": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26680,
        26694
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4294": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "4297": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26704,
        26723
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4298": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4299": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4300": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4301": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26704,
        26723
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4302": {
      "op": "POP"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26760
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4306": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4307": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4308": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4309": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAA"
    },
    "4311": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4313": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4314": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4315": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4316": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4318": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4319": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4320": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4321": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26763,
        26790
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4322": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4323": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4324": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4325": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4326": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "ADD",
      "path": "18"
    },
    "4327": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4328": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4329": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4330": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4331": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4332": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4333": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4334": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4335": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4337": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4338": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4339": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "ADD",
      "path": "18"
    },
    "4340": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4341": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4342": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4343": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "ADD",
      "path": "18"
    },
    "4344": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4345": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4346": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4347": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26734,
        26790
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4348": {
      "branch": 193,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26908,
        26924
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 18
    },
    "4349": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x116E"
    },
    "4352": {
      "branch": 193,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4353": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4355": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4362": {
      "op": "SHL"
    },
    "4363": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4364": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4367": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4369": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4370": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "ADD",
      "path": "18"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH32",
      "value": "0x62617463684275726E3A3A544F54414C5F5348415245535F43414E4E4F545F42"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4414": {
      "op": "DUP3"
    },
    "4415": {
      "op": "ADD"
    },
    "4416": {
      "op": "MSTORE"
    },
    "4417": {
      "op": "PUSH32",
      "value": "0x455F5A45524F0000000000000000000000000000000000000000000000000000"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4452": {
      "op": "DUP3"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "MSTORE"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "4461": {
      "op": "JUMP"
    },
    "4462": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26900,
        26967
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4463": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27082,
        27106
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4465": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27109,
        27152
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x117B"
    },
    "4468": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27126,
        27140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE0E"
    },
    "4471": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27126,
        27138
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "4474": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27126,
        27140
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4475": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27109,
        27152
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4476": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27082,
        27152
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4477": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27082,
        27152
      ],
      "op": "POP",
      "path": "18"
    },
    "4478": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27162,
        27175
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4480": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27178,
        27190
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1187"
    },
    "4483": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27178,
        27188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E96"
    },
    "4486": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27178,
        27190
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4487": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27178,
        27190
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4488": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27162,
        27190
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4489": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27162,
        27190
      ],
      "op": "POP",
      "path": "18"
    },
    "4490": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27302,
        27307
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4491": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27283,
        27299
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4492": {
      "branch": 194,
      "fn": "Vault.execBatchBurn",
      "offset": [
        27283,
        27307
      ],
      "op": "GT",
      "path": "18"
    },
    "4493": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27279,
        27587
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4494": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27279,
        27587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11AA"
    },
    "4497": {
      "branch": 194,
      "fn": "Vault.execBatchBurn",
      "offset": [
        27279,
        27587
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4498": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27399,
        27432
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4500": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27435,
        27459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x119D"
    },
    "4503": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27454,
        27459
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4504": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27435,
        27451
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4505": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27435,
        27459
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "4508": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27435,
        27459
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4509": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27435,
        27459
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4510": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27399,
        27459
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4511": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27399,
        27459
      ],
      "op": "POP",
      "path": "18"
    },
    "4512": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27526,
        27576
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 19,
      "value": "0x11A8"
    },
    "4515": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27550,
        27575
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4516": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27526,
        27549
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AE6"
    },
    "4519": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27526,
        27576
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4520": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27526,
        27576
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4521": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27309,
        27587
      ],
      "op": "POP",
      "path": "18"
    },
    "4522": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27279,
        27587
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4523": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27597,
        27630
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 20,
      "value": "0x11B4"
    },
    "4526": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27611,
        27615
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4527": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27618,
        27629
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4528": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27597,
        27602
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D56"
    },
    "4531": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27597,
        27630
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4532": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27597,
        27630
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4533": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27707,
        27724
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9D"
    },
    "4535": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27707,
        27724
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4536": {
      "branch": 195,
      "fn": "Vault.execBatchBurn",
      "offset": [
        27707,
        27729
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4537": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27703,
        27942
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1204"
    },
    "4540": {
      "branch": 195,
      "fn": "Vault.execBatchBurn",
      "offset": [
        27703,
        27942
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4541": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27789,
        27806
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9D"
    },
    "4543": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27789,
        27806
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4544": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27745,
        27764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4546": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27745,
        27764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4547": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27815
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11D6"
    },
    "4550": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27815
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4551": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27783
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4552": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4553": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27808,
        27814
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xDE0B6B3A7640000"
    },
    "4562": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27788
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ACB"
    },
    "4565": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27767,
        27815
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4566": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27767,
        27815
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4567": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27745,
        27815
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 21,
      "value": "0x11E2"
    },
    "4572": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27745,
        27815
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4573": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4574": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "4577": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27829,
        27860
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4578": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4579": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27899,
        27917
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 22,
      "value": "0x9E"
    },
    "4581": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27899,
        27917
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4582": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x99"
    },
    "4584": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4585": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4586": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27829,
        27860
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27931
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1202"
    },
    "4591": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27931
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "op": "SUB"
    },
    "4600": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4601": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4602": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "AND",
      "path": "18"
    },
    "4603": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27885
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4604": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27899,
        27917
      ],
      "op": "AND",
      "path": "18"
    },
    "4605": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27919,
        27930
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4606": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3EDB"
    },
    "4609": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27875,
        27931
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4610": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27875,
        27931
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4611": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27731,
        27942
      ],
      "op": "POP",
      "path": "18"
    },
    "4612": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27703,
        27942
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4613": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28031,
        28040
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 23,
      "value": "0x9A"
    },
    "4615": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28031,
        28040
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4616": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28041
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1214"
    },
    "4619": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28041
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4620": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28012
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4621": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4622": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28018,
        28029
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4623": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28018,
        28029
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4624": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28017
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F84"
    },
    "4627": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27996,
        28041
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4628": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27996,
        28041
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4629": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4631": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4632": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4633": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4634": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27961
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAA"
    },
    "4636": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4638": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4639": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4641": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4642": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4643": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27993
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4645": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27993
      ],
      "op": "ADD",
      "path": "18"
    },
    "4646": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        28041
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4647": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        28041
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4648": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        28041
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4649": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        28041
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4650": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28067
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 24,
      "value": "0xA8"
    },
    "4652": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4653": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4654": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28071,
        28087
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4655": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28071,
        28087
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4656": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27951,
        27978
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4657": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x123B"
    },
    "4660": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4661": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28071,
        28087
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4662": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28071,
        28087
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4663": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "4666": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        28051,
        28087
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4667": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4668": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4669": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4670": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28051,
        28087
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4671": {
      "op": "POP"
    },
    "4672": {
      "op": "POP"
    },
    "4673": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 25,
      "value": "0x40"
    },
    "4675": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4676": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4677": {
      "op": "DUP5"
    },
    "4678": {
      "op": "DUP2"
    },
    "4679": {
      "op": "MSTORE"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4682": {
      "op": "DUP2"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "DUP5"
    },
    "4685": {
      "op": "SWAP1"
    },
    "4686": {
      "op": "MSTORE"
    },
    "4687": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28137,
        28147
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4688": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28137,
        28147
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4689": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28120,
        28135
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4690": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28120,
        28135
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4691": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x464420EE56151EE74D491D95CFA6B42D6C6504B38DEBC567F5532168243F1D8D"
    },
    "4724": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4728": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4729": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4730": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4731": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "SUB",
      "path": "18"
    },
    "4732": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4733": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        28103,
        28179
      ],
      "op": "LOG3",
      "path": "18"
    },
    "4734": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26486,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4735": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26486,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4736": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26486,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4737": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26486,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4738": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26486,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4739": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26430,
        28186
      ],
      "op": "POP",
      "path": "18"
    },
    "4740": {
      "fn": "Vault.execBatchBurn",
      "jump": "o",
      "offset": [
        26430,
        28186
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4741": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4742": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5313,
        5317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4744": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5365
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 26,
      "value": "0x1292"
    },
    "4747": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5339,
        5345
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4748": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5347,
        5356
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4749": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5358,
        5364
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4750": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FA6"
    },
    "4753": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5329,
        5365
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4754": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5365
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "SUB"
    },
    "4763": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4764": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "AND",
      "path": "6"
    },
    "4765": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5376,
        5400
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4767": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4768": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4769": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4770": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "4772": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4774": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4775": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4776": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4777": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4779": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4780": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4781": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4782": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4783": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4784": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4785": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4786": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4787": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4788": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4789": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4790": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4791": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 27
    },
    "4792": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4793": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "LT",
      "path": "6"
    },
    "4794": {
      "branch": 234,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4795": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x132C"
    },
    "4798": {
      "branch": 234,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4799": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4801": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4810": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4813": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4815": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4816": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "ADD",
      "path": "6"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "ADD"
    },
    "4824": {
      "op": "MSTORE"
    },
    "4825": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4860": {
      "op": "DUP3"
    },
    "4861": {
      "op": "ADD"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "PUSH32",
      "value": "0x6C6C6F77616E6365000000000000000000000000000000000000000000000000"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4898": {
      "op": "DUP3"
    },
    "4899": {
      "op": "ADD"
    },
    "4900": {
      "op": "MSTORE"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "4907": {
      "op": "JUMP"
    },
    "4908": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4909": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5616
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 28,
      "value": "0x1339"
    },
    "4912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5568,
        5574
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4913": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4914": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5609,
        5615
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4915": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5590,
        5606
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4916": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5590,
        5615
      ],
      "op": "SUB",
      "path": "6"
    },
    "4917": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397B"
    },
    "4920": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5559,
        5616
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4921": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4922": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5644,
        5648
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 29,
      "value": "0x1"
    },
    "4924": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "POP",
      "path": "6"
    },
    "4926": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "POP",
      "path": "6"
    },
    "4927": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4929": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4930": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4931": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4932": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4933": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4934": {
      "fn": "Vault.setAuth",
      "offset": [
        16055,
        16189
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4935": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "4937": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4938": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4940": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4941": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4948": {
      "op": "SHL"
    },
    "4949": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4950": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4951": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4952": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4954": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4955": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "4956": {
      "op": "MSTORE"
    },
    "4957": {
      "fn": "Vault.setAuth",
      "offset": [
        16111,
        16121
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "DUP2"
    },
    "4963": {
      "op": "SWAP1"
    },
    "4964": {
      "op": "MSTORE"
    },
    "4965": {
      "fn": "Vault.setAuth",
      "offset": [
        16111,
        16121
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "4975": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4976": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "4981": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4984": {
      "op": "ADD"
    },
    "4985": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4987": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4989": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4990": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4991": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4992": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "4993": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4994": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4995": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "4996": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "4997": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4998": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4999": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5000": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1395"
    },
    "5003": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5004": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5005": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5007": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5008": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5009": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5010": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5012": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5013": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5014": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5015": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5016": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5017": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5018": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5020": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5021": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5022": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5024": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "5025": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5027": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5028": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5029": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "5030": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5031": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5032": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5033": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5035": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5036": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5037": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5038": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5039": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5040": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13B9"
    },
    "5043": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5044": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5045": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "5048": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5049": {
      "fn": "Vault.setAuth",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5050": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1405"
    },
    "5053": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5054": {
      "fn": "Vault.setAuth",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5056": {
      "fn": "Vault.setAuth",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5065": {
      "fn": "Vault.setAuth",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5068": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5070": {
      "fn": "Vault.setAuth",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5071": {
      "fn": "Vault.setAuth",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "5072": {
      "op": "MSTORE"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5077": {
      "op": "DUP3"
    },
    "5078": {
      "op": "ADD"
    },
    "5079": {
      "op": "MSTORE"
    },
    "5080": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5115": {
      "op": "DUP3"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "op": "MSTORE"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5120": {
      "op": "ADD"
    },
    "5121": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "5124": {
      "op": "JUMP"
    },
    "5125": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5126": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16137
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 30,
      "value": "0x98"
    },
    "5128": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5129": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5130": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "5163": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "AND",
      "path": "18"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5170": {
      "op": "SHL"
    },
    "5171": {
      "op": "SUB"
    },
    "5172": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5173": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "AND",
      "path": "18"
    },
    "5174": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5175": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5176": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "OR",
      "path": "18"
    },
    "5177": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5178": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5179": {
      "fn": "Vault.setAuth",
      "offset": [
        16133,
        16147
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5180": {
      "fn": "Vault.setAuth",
      "offset": [
        16162,
        16182
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 31,
      "value": "0x40"
    },
    "5182": {
      "fn": "Vault.setAuth",
      "offset": [
        16162,
        16182
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5183": {
      "op": "SWAP1"
    },
    "5184": {
      "op": "DUP2"
    },
    "5185": {
      "op": "MSTORE"
    },
    "5186": {
      "fn": "Vault.setAuth",
      "offset": [
        16162,
        16182
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDCB0BC5ECFADC1F3129303F7C1F12B82107806277374A010DFFE2C367708EF41"
    },
    "5219": {
      "fn": "Vault.setAuth",
      "offset": [
        16162,
        16182
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5222": {
      "op": "ADD"
    },
    "5223": {
      "fn": "Vault.setAuth",
      "offset": [
        16162,
        16182
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7D"
    },
    "5226": {
      "op": "JUMP"
    },
    "5227": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5228": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5229": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5231": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 32
    },
    "5232": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5233": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5234": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6197
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "5236": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5238": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5239": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5240": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5241": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5243": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5244": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5245": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "op": "SUB"
    },
    "5254": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5255": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "AND",
      "path": "6"
    },
    "5256": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5257": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5258": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5259": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5260": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5261": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5262": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5263": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5264": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5265": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5266": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD96"
    },
    "5269": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6234
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5270": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6177,
        6184
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5271": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6177,
        6184
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5272": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14A2"
    },
    "5275": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5276": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6223,
        6233
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5277": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6223,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5278": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53A1"
    },
    "5281": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6186,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5282": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5283": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6162
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397B"
    },
    "5286": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6154,
        6234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5287": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42042,
        42177
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "op": "SUB"
    },
    "5296": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5297": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6"
    },
    "5298": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42108,
        42115
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5300": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5301": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5302": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5303": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "5305": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5307": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5308": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5310": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5311": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5312": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5313": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42134,
        42170
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 33,
      "value": "0xD9A"
    },
    "5316": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        42134,
        42170
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5317": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29951,
        30100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE01"
    },
    "5320": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29951,
        30100
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5321": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41497,
        41841
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5322": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41542,
        41549
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5324": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41604,
        41623
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5325": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41626,
        41639
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14D5"
    },
    "5328": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x35"
    },
    "5330": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5331": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5332": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5333": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41626,
        41639
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5334": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41604,
        41639
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5335": {
      "op": "POP"
    },
    "5336": {
      "branch": 196,
      "fn": "Vault.exchangeRate",
      "offset": [
        41736,
        41752
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5337": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41732,
        41770
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14E4"
    },
    "5340": {
      "branch": 196,
      "fn": "Vault.exchangeRate",
      "offset": [
        41732,
        41770
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "op": "POP"
    },
    "5343": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41761,
        41770
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 34,
      "value": "0x9A"
    },
    "5345": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41761,
        41770
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5346": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41761,
        41770
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5347": {
      "fn": "Vault.exchangeRate",
      "jump": "o",
      "offset": [
        41497,
        41841
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5348": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41732,
        41770
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5349": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41834
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 35,
      "value": "0x14FA"
    },
    "5352": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41811,
        41822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5353": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41824,
        41833
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "5355": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41824,
        41833
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5356": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41805
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14F3"
    },
    "5359": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41803
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2981"
    },
    "5362": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        41788,
        41805
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5363": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41805
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5364": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41810
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5365": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5366": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F84"
    },
    "5369": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        41788,
        41834
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5370": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41788,
        41834
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5371": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41781,
        41834
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5372": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41781,
        41834
      ],
      "op": "POP",
      "path": "18"
    },
    "5373": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41781,
        41834
      ],
      "op": "POP",
      "path": "18"
    },
    "5374": {
      "fn": "Vault.exchangeRate",
      "offset": [
        41497,
        41841
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5375": {
      "fn": "Vault.exchangeRate",
      "jump": "o",
      "offset": [
        41497,
        41841
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5376": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5377": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24429,
        24443
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA7"
    },
    "5379": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24429,
        24443
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5380": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24495,
        24505
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5381": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24403,
        24426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5383": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5384": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5385": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5386": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24494
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "5388": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5390": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5391": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5393": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5394": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24506
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5395": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24473,
        24512
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5396": {
      "branch": 197,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24527,
        24541
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5397": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1535"
    },
    "5400": {
      "branch": 197,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5401": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24699,
        24709
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 36
    },
    "5402": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5404": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5405": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5406": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5407": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "5409": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5411": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5412": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5414": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5415": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24710
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5416": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24734
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5417": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24734
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5418": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24677,
        24734
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5419": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24748,
        24788
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 37,
      "value": "0x1"
    },
    "5421": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24748,
        24788
      ],
      "op": "ADD",
      "path": "18"
    },
    "5422": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24748,
        24797
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5423": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24748,
        24797
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5424": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24748,
        24797
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5425": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15AC"
    },
    "5428": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5429": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5430": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25148,
        25163
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 38
    },
    "5431": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25135,
        25144
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5432": {
      "branch": 198,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25135,
        25163
      ],
      "op": "EQ",
      "path": "18"
    },
    "5433": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1584"
    },
    "5436": {
      "branch": 198,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5437": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5439": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5446": {
      "op": "SHL"
    },
    "5447": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5448": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5451": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5453": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5454": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "ADD",
      "path": "18"
    },
    "5455": {
      "op": "DUP2"
    },
    "5456": {
      "op": "SWAP1"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5460": {
      "op": "DUP3"
    },
    "5461": {
      "op": "ADD"
    },
    "5462": {
      "op": "MSTORE"
    },
    "5463": {
      "op": "PUSH32",
      "value": "0x656E74657242617463684275726E3A3A444946464552454E545F524F554E4453"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5498": {
      "op": "DUP3"
    },
    "5499": {
      "op": "ADD"
    },
    "5500": {
      "op": "MSTORE"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5503": {
      "op": "ADD"
    },
    "5504": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "5507": {
      "op": "JUMP"
    },
    "5508": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25127,
        25200
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5509": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25236,
        25246
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 39
    },
    "5510": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5512": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5513": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5514": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5515": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25235
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "5517": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5519": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5520": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5522": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5523": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5524": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25254
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "5526": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25254
      ],
      "op": "ADD",
      "path": "18"
    },
    "5527": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5528": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5529": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25258,
        25264
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5530": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25258,
        25264
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5531": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25247
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5532": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15A6"
    },
    "5535": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5536": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25258,
        25264
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5537": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25258,
        25264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5538": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "5541": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        25214,
        25264
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5542": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5543": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5544": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5545": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25214,
        25264
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24523,
        25275
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5549": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 40,
      "value": "0x0"
    },
    "5551": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5552": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5553": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5554": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25295
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAA"
    },
    "5556": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5558": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5559": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5561": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5562": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5563": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5564": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5565": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25328,
        25334
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5566": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25328,
        25334
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5567": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25312
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5568": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15CA"
    },
    "5571": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5572": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25328,
        25334
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5573": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25328,
        25334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5574": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "5577": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        25285,
        25334
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5578": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5579": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5580": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5581": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25285,
        25334
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25353,
        25384
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 41,
      "value": "0x15DA"
    },
    "5586": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25353,
        25384
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5587": {
      "op": "POP"
    },
    "5588": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25370,
        25374
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5589": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25377,
        25383
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5590": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25353,
        25361
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FE6"
    },
    "5593": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        25353,
        25384
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5594": {
      "branch": 199,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25353,
        25384
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5595": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15E3"
    },
    "5598": {
      "branch": 199,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5599": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5601": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5602": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5603": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25345,
        25385
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5604": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 42,
      "value": "0x40"
    },
    "5606": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5607": {
      "op": "DUP4"
    },
    "5608": {
      "op": "DUP2"
    },
    "5609": {
      "op": "MSTORE"
    },
    "5610": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25433,
        25443
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5611": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25433,
        25443
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5612": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25416,
        25431
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5613": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25416,
        25431
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5614": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xA34C4835838212C803863F6698244F8A1E56F479D6DBA7D4F33B34A2CDECF1CE"
    },
    "5647": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5652": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5654": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5655": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5656": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5657": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "SUB",
      "path": "18"
    },
    "5658": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5659": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25401,
        25452
      ],
      "op": "LOG3",
      "path": "18"
    },
    "5660": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24393,
        25459
      ],
      "op": "POP",
      "path": "18"
    },
    "5661": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24393,
        25459
      ],
      "op": "POP",
      "path": "18"
    },
    "5662": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24344,
        25459
      ],
      "op": "POP",
      "path": "18"
    },
    "5663": {
      "fn": "Vault.enterBatchBurn",
      "jump": "o",
      "offset": [
        24344,
        25459
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5664": {
      "fn": "Vault.calculateShares",
      "offset": [
        29572,
        29725
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5665": {
      "fn": "Vault.calculateShares",
      "offset": [
        29644,
        29651
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5667": {
      "fn": "Vault.calculateShares",
      "offset": [
        29670,
        29718
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0xD9A"
    },
    "5670": {
      "fn": "Vault.calculateShares",
      "offset": [
        29692,
        29706
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x162D"
    },
    "5673": {
      "fn": "Vault.calculateShares",
      "offset": [
        29692,
        29704
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "5676": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        29692,
        29706
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5677": {
      "fn": "Vault.calculateShares",
      "offset": [
        29692,
        29706
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5678": {
      "fn": "Vault.calculateShares",
      "offset": [
        29708,
        29717
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "5680": {
      "fn": "Vault.calculateShares",
      "offset": [
        29708,
        29717
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5681": {
      "fn": "Vault.calculateShares",
      "offset": [
        29670,
        29686
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5682": {
      "fn": "Vault.calculateShares",
      "offset": [
        29670,
        29686
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5683": {
      "fn": "Vault.calculateShares",
      "offset": [
        29670,
        29718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5684": {
      "fn": "Vault.calculateShares",
      "offset": [
        29670,
        29691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F84"
    },
    "5687": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        29670,
        29718
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5688": {
      "fn": "Vault.mint",
      "offset": [
        23900,
        24073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5689": {
      "fn": "Vault.mint",
      "offset": [
        23960,
        23984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5691": {
      "fn": "Vault.mint",
      "offset": [
        23996,
        24066
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0xD9A"
    },
    "5694": {
      "fn": "Vault.mint",
      "offset": [
        24005,
        24007
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5695": {
      "fn": "Vault.mint",
      "offset": [
        24009,
        24015
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5696": {
      "fn": "Vault.mint",
      "offset": [
        24037,
        24064
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1648"
    },
    "5699": {
      "fn": "Vault.mint",
      "offset": [
        24057,
        24063
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5700": {
      "fn": "Vault.mint",
      "offset": [
        24037,
        24056
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE01"
    },
    "5703": {
      "fn": "Vault.mint",
      "jump": "i",
      "offset": [
        24037,
        24064
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5704": {
      "fn": "Vault.mint",
      "offset": [
        24037,
        24064
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5705": {
      "fn": "Vault.mint",
      "offset": [
        24018,
        24064
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5706": {
      "fn": "Vault.mint",
      "offset": [
        24018,
        24064
      ],
      "op": "POP",
      "path": "18"
    },
    "5707": {
      "fn": "Vault.mint",
      "offset": [
        24018,
        24064
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5708": {
      "fn": "Vault.mint",
      "offset": [
        23996,
        24004
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41BF"
    },
    "5711": {
      "fn": "Vault.mint",
      "jump": "i",
      "offset": [
        23996,
        24066
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5712": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5713": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "5715": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5716": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "5718": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5719": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42780,
        42787
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5721": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42780,
        42787
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5722": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5731": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "PUSH9",
      "path": "18",
      "value": "0x10000000000000000"
    },
    "5741": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5742": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5743": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "DIV",
      "path": "18"
    },
    "5744": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5745": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "AND",
      "path": "18"
    },
    "5746": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42876,
        42887
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5747": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "5765": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5766": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "DIV",
      "path": "18"
    },
    "5767": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42923,
        42935
      ],
      "op": "AND",
      "path": "18"
    },
    "5768": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43152,
        43185
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5769": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43152,
        43185
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5770": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43152,
        43185
      ],
      "op": "ADD",
      "path": "18"
    },
    "5771": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43133,
        43148
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "5772": {
      "branch": 200,
      "fn": "Vault.lockedProfit",
      "offset": [
        43133,
        43185
      ],
      "op": "LT",
      "path": "18"
    },
    "5773": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43129,
        43195
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1699"
    },
    "5776": {
      "branch": 200,
      "fn": "Vault.lockedProfit",
      "offset": [
        43129,
        43195
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5777": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43194,
        43195
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 45,
      "value": "0x0"
    },
    "5779": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43187,
        43195
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5780": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43187,
        43195
      ],
      "op": "POP",
      "path": "18"
    },
    "5781": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43187,
        43195
      ],
      "op": "POP",
      "path": "18"
    },
    "5782": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43187,
        43195
      ],
      "op": "POP",
      "path": "18"
    },
    "5783": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5784": {
      "fn": "Vault.lockedProfit",
      "jump": "o",
      "offset": [
        42735,
        43654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5785": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43129,
        43195
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5786": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "5788": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5789": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "5807": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5808": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "DIV",
      "path": "18"
    },
    "5809": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5826": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43295,
        43310
      ],
      "op": "AND",
      "path": "18"
    },
    "5827": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43622,
        43637
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 46
    },
    "5828": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43584,
        43599
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "5829": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43584,
        43617
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5830": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43584,
        43617
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5831": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43584,
        43617
      ],
      "op": "SUB",
      "path": "18"
    },
    "5832": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43561,
        43618
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5833": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43561,
        43618
      ],
      "op": "MUL",
      "path": "18"
    },
    "5834": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43622,
        43637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5835": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16D6"
    },
    "5838": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5839": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16D6"
    },
    "5842": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53D0"
    },
    "5845": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        43560,
        43637
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5846": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5847": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43560,
        43637
      ],
      "op": "DIV",
      "path": "18"
    },
    "5848": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43538,
        43637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5849": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43538,
        43637
      ],
      "op": "SUB",
      "path": "18"
    },
    "5850": {
      "fn": "Vault.lockedProfit",
      "offset": [
        43538,
        43637
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5851": {
      "fn": "Vault.lockedProfit",
      "offset": [
        42735,
        43654
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5852": {
      "op": "POP"
    },
    "5853": {
      "op": "POP"
    },
    "5854": {
      "op": "POP"
    },
    "5855": {
      "fn": "Vault.lockedProfit",
      "jump": "o",
      "offset": [
        42735,
        43654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5856": {
      "fn": "Vault.deposit",
      "offset": [
        23339,
        23521
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5857": {
      "fn": "Vault.deposit",
      "offset": [
        23412,
        23426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5859": {
      "fn": "Vault.deposit",
      "offset": [
        23438,
        23514
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 47,
      "value": "0xD9A"
    },
    "5862": {
      "fn": "Vault.deposit",
      "offset": [
        23447,
        23449
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5863": {
      "fn": "Vault.deposit",
      "offset": [
        23461,
        23494
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16EF"
    },
    "5866": {
      "fn": "Vault.deposit",
      "offset": [
        23477,
        23493
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5867": {
      "fn": "Vault.deposit",
      "offset": [
        23461,
        23476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1620"
    },
    "5870": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23461,
        23494
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5871": {
      "fn": "Vault.deposit",
      "offset": [
        23461,
        23494
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5872": {
      "fn": "Vault.deposit",
      "offset": [
        23452,
        23494
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5873": {
      "fn": "Vault.deposit",
      "offset": [
        23452,
        23494
      ],
      "op": "POP",
      "path": "18"
    },
    "5874": {
      "fn": "Vault.deposit",
      "offset": [
        23452,
        23494
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5875": {
      "fn": "Vault.deposit",
      "offset": [
        23497,
        23513
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5876": {
      "fn": "Vault.deposit",
      "offset": [
        23438,
        23446
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41BF"
    },
    "5879": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23438,
        23514
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5880": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5881": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "5883": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5884": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5886": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5887": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5894": {
      "op": "SHL"
    },
    "5895": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5896": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5897": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5898": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5900": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5901": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15635,
        15645
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "DUP2"
    },
    "5909": {
      "op": "SWAP1"
    },
    "5910": {
      "op": "MSTORE"
    },
    "5911": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15635,
        15645
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5918": {
      "op": "SHL"
    },
    "5919": {
      "op": "SUB"
    },
    "5920": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "5921": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5922": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "5927": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5930": {
      "op": "ADD"
    },
    "5931": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5933": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5935": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5936": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5937": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5938": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "5939": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5940": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5941": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "5942": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5943": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5944": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5945": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5946": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1747"
    },
    "5949": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5950": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5951": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5953": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5954": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5955": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5956": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5958": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5959": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5960": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5961": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5962": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5963": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5964": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5966": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5967": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5968": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5970": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "5971": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5973": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5974": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5975": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "5976": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5977": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5978": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5979": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5981": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5982": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "5983": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5984": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "5985": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5986": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x176B"
    },
    "5989": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5990": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5991": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "5994": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5995": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5996": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17B7"
    },
    "5999": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6000": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6002": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6011": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6014": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6016": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6017": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "6018": {
      "op": "MSTORE"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6023": {
      "op": "DUP3"
    },
    "6024": {
      "op": "ADD"
    },
    "6025": {
      "op": "MSTORE"
    },
    "6026": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6061": {
      "op": "DUP3"
    },
    "6062": {
      "op": "ADD"
    },
    "6063": {
      "op": "MSTORE"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6066": {
      "op": "ADD"
    },
    "6067": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "6070": {
      "op": "JUMP"
    },
    "6071": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6072": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15657,
        15673
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 48,
      "value": "0xAB"
    },
    "6074": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15657,
        15680
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6075": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15657,
        15680
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6076": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15657,
        15680
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6077": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15690,
        15707
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 49,
      "value": "0xAC"
    },
    "6079": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15690,
        15715
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6080": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15690,
        15715
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6081": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15690,
        15715
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6082": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 50,
      "value": "0x40"
    },
    "6084": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6085": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6086": {
      "op": "DUP5"
    },
    "6087": {
      "op": "DUP2"
    },
    "6088": {
      "op": "MSTORE"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6091": {
      "op": "DUP2"
    },
    "6092": {
      "op": "ADD"
    },
    "6093": {
      "op": "DUP5"
    },
    "6094": {
      "op": "SWAP1"
    },
    "6095": {
      "op": "MSTORE"
    },
    "6096": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xB2AD710F2954A5376267A683F9ECE9EC46EE7DFB47075163379904EE941DF8DA"
    },
    "6129": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6130": {
      "op": "ADD"
    },
    "6131": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6132": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6134": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6135": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6136": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6137": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "SUB",
      "path": "18"
    },
    "6138": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6139": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15731,
        15764
      ],
      "op": "LOG1",
      "path": "18"
    },
    "6140": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "POP",
      "path": "18"
    },
    "6141": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "POP",
      "path": "18"
    },
    "6142": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15561,
        15771
      ],
      "op": "POP",
      "path": "18"
    },
    "6143": {
      "fn": "Vault.setDepositLimits",
      "jump": "o",
      "offset": [
        15561,
        15771
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6144": {
      "fn": "Vault.triggerPause",
      "offset": [
        13411,
        13515
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6145": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "6147": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6148": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6150": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6151": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6158": {
      "op": "SHL"
    },
    "6159": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6160": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6161": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "6162": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6164": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6165": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6166": {
      "op": "MSTORE"
    },
    "6167": {
      "fn": "Vault.triggerPause",
      "offset": [
        13454,
        13464
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6170": {
      "op": "DUP3"
    },
    "6171": {
      "op": "ADD"
    },
    "6172": {
      "op": "DUP2"
    },
    "6173": {
      "op": "SWAP1"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "fn": "Vault.triggerPause",
      "offset": [
        13454,
        13464
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6182": {
      "op": "SHL"
    },
    "6183": {
      "op": "SUB"
    },
    "6184": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "6185": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6186": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "6191": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6194": {
      "op": "ADD"
    },
    "6195": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6197": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6199": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6200": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6201": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6202": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "6203": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6204": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6205": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "6206": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "6207": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6208": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6209": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6210": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x184F"
    },
    "6213": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6214": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6215": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6217": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6218": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "6219": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6220": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6222": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6223": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6224": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6225": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6226": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6227": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6228": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6230": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6231": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6232": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6234": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "6235": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6237": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6238": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6239": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "6240": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6241": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6242": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6243": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6245": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6246": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6247": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6248": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6249": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6250": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1873"
    },
    "6253": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6254": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6255": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "6258": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6259": {
      "fn": "Vault.triggerPause",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6260": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18BF"
    },
    "6263": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6264": {
      "fn": "Vault.triggerPause",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6266": {
      "fn": "Vault.triggerPause",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6275": {
      "fn": "Vault.triggerPause",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6278": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6280": {
      "fn": "Vault.triggerPause",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6281": {
      "fn": "Vault.triggerPause",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "6282": {
      "op": "MSTORE"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6325": {
      "op": "DUP3"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "op": "MSTORE"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "6334": {
      "op": "JUMP"
    },
    "6335": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6336": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "6338": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6339": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "6341": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "6342": {
      "fn": "Vault.triggerPause",
      "offset": [
        13476,
        13508
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 51,
      "value": "0x18D4"
    },
    "6345": {
      "fn": "Vault.triggerPause",
      "offset": [
        13476,
        13508
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6346": {
      "fn": "Vault.triggerPause",
      "offset": [
        13500,
        13508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18D1"
    },
    "6349": {
      "fn": "Vault.triggerPause",
      "offset": [
        13500,
        13506
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x448D"
    },
    "6352": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        13500,
        13508
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6353": {
      "fn": "Vault.triggerPause",
      "offset": [
        13500,
        13508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6354": {
      "fn": "Vault.triggerPause",
      "offset": [
        13411,
        13515
      ],
      "op": "POP",
      "path": "18"
    },
    "6355": {
      "fn": "Vault.triggerPause",
      "jump": "o",
      "offset": [
        13411,
        13515
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6356": {
      "fn": "Vault.triggerPause",
      "offset": [
        13476,
        13508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6357": {
      "fn": "Vault.triggerPause",
      "offset": [
        13487,
        13497
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18D1"
    },
    "6360": {
      "fn": "Vault.triggerPause",
      "offset": [
        13487,
        13495
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4532"
    },
    "6363": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        13487,
        13497
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6364": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25537,
        26386
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6365": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25607,
        25621
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA7"
    },
    "6367": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25607,
        25621
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6368": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25687,
        25697
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6369": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25581,
        25604
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6371": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6372": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6373": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6374": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25686
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "6376": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6378": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6379": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6380": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6381": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6383": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6384": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6385": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6386": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25665,
        25698
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6387": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6388": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6389": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6390": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6391": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "ADD",
      "path": "18"
    },
    "6392": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6393": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6394": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6395": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6396": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6397": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6398": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6399": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6400": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6402": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6403": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6404": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "ADD",
      "path": "18"
    },
    "6405": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6406": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6407": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6408": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "ADD",
      "path": "18"
    },
    "6409": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6410": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6411": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6412": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25631,
        25698
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6413": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 52,
      "value": "0x1958"
    },
    "6416": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6417": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6419": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6426": {
      "op": "SHL"
    },
    "6427": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6428": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6431": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6433": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6434": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "ADD",
      "path": "18"
    },
    "6435": {
      "op": "MSTORE"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6440": {
      "op": "DUP3"
    },
    "6441": {
      "op": "ADD"
    },
    "6442": {
      "op": "MSTORE"
    },
    "6443": {
      "op": "PUSH32",
      "value": "0x6578697442617463684275726E3A3A4E4F5F4445504F53495453000000000000"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6478": {
      "op": "DUP3"
    },
    "6479": {
      "op": "ADD"
    },
    "6480": {
      "op": "MSTORE"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6483": {
      "op": "ADD"
    },
    "6484": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "6487": {
      "op": "JUMP"
    },
    "6488": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25766
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6489": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25784,
        25797
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 53
    },
    "6490": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25784,
        25797
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6491": {
      "branch": 201,
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25784,
        25815
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6492": {
      "op": "GT"
    },
    "6493": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19CE"
    },
    "6496": {
      "branch": 201,
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6497": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6499": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6506": {
      "op": "SHL"
    },
    "6507": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6508": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6511": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6513": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6514": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "ADD",
      "path": "18"
    },
    "6515": {
      "op": "MSTORE"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "ADD"
    },
    "6522": {
      "op": "MSTORE"
    },
    "6523": {
      "op": "PUSH32",
      "value": "0x6578697442617463684275726E3A3A524F554E445F4E4F545F45584543555445"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6558": {
      "op": "DUP3"
    },
    "6559": {
      "op": "ADD"
    },
    "6560": {
      "op": "MSTORE"
    },
    "6561": {
      "op": "PUSH32",
      "value": "0x4400000000000000000000000000000000000000000000000000000000000000"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6596": {
      "op": "DUP3"
    },
    "6597": {
      "op": "ADD"
    },
    "6598": {
      "op": "MSTORE"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6601": {
      "op": "ADD"
    },
    "6602": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "6605": {
      "op": "JUMP"
    },
    "6606": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25776,
        25853
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6607": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25886,
        25896
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 54
    },
    "6608": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25906,
        25907
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6610": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6611": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6612": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6613": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25885
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA9"
    },
    "6615": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6617": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6618": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6619": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6620": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6622": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6623": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6624": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25897
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6625": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25907
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6626": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25907
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6627": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25907
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6628": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25957
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 55,
      "value": "0x1"
    },
    "6630": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25957
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6631": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25957
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6632": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25957
      ],
      "op": "ADD",
      "path": "18"
    },
    "6633": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25961
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6634": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25961
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6635": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25917,
        25961
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6636": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26030,
        26043
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6637": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26030,
        26043
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6638": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6639": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6640": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26029
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAA"
    },
    "6642": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6643": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6644": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6645": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6646": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26044
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6647": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26059
      ],
      "op": "ADD",
      "path": "18"
    },
    "6648": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26059
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6649": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26061,
        26070
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "6651": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26061,
        26070
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6652": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6653": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6654": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "ADD",
      "path": "18"
    },
    "6655": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6656": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26071
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0B"
    },
    "6659": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26071
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6660": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6661": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26013
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6662": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26019,
        26059
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6663": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26018
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ACB"
    },
    "6666": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25999,
        26071
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6667": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25999,
        26071
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6668": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26210
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 56,
      "value": "0xA8"
    },
    "6670": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6671": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6672": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6673": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6674": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "SUB",
      "path": "18"
    },
    "6675": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6676": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26194,
        26230
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6677": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26260
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 57,
      "value": "0x99"
    },
    "6679": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26260
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6680": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25972,
        26071
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6681": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25972,
        26071
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6682": {
      "op": "POP"
    },
    "6683": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26303
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A2E"
    },
    "6686": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26303
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6693": {
      "op": "SHL"
    },
    "6694": {
      "op": "SUB"
    },
    "6695": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26260
      ],
      "op": "AND",
      "path": "18"
    },
    "6696": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26274,
        26284
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6697": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25972,
        26071
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6698": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26273
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3EDB"
    },
    "6701": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        26250,
        26303
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6702": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26250,
        26303
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6703": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26319,
        26379
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 58,
      "value": "0x40"
    },
    "6705": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26319,
        26379
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6706": {
      "op": "DUP2"
    },
    "6707": {
      "op": "DUP2"
    },
    "6708": {
      "op": "MSTORE"
    },
    "6709": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26350,
        26360
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6710": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26350,
        26360
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6711": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26333,
        26348
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6712": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26333,
        26348
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6713": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26319,
        26379
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x2027C7E85003814492322D04D360D8DF81AEBEB8A40A069FFFCCC25CDF9E359B"
    },
    "6746": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26319,
        26379
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        26319,
        26379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1613"
    },
    "6753": {
      "op": "JUMP"
    },
    "6754": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6755": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "6757": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6758": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6760": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6761": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6768": {
      "op": "SHL"
    },
    "6769": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6770": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6771": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "6772": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6774": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6775": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6776": {
      "op": "MSTORE"
    },
    "6777": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19591,
        19601
      ],
      "op": "CALLER",
      "path": "18"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6780": {
      "op": "DUP3"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "DUP2"
    },
    "6783": {
      "op": "SWAP1"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19591,
        19601
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6792": {
      "op": "SHL"
    },
    "6793": {
      "op": "SUB"
    },
    "6794": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "6795": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6796": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "6801": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6804": {
      "op": "ADD"
    },
    "6805": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6807": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6809": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6810": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6811": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6812": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "6813": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6814": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6815": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "6816": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "6817": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6818": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6819": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6820": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AB1"
    },
    "6823": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6824": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6825": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6827": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6828": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "6829": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6830": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6832": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6833": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6834": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6835": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6836": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6837": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6838": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6840": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6841": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6842": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6844": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "6845": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6847": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6848": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6849": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "6850": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6851": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6852": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6853": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6855": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6856": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "6857": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6858": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "6859": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6860": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AD5"
    },
    "6863": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6864": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6865": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "6868": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6869": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6870": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B21"
    },
    "6873": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6874": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6876": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6885": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6888": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6890": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6891": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "6892": {
      "op": "MSTORE"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6897": {
      "op": "DUP3"
    },
    "6898": {
      "op": "ADD"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6935": {
      "op": "DUP3"
    },
    "6936": {
      "op": "ADD"
    },
    "6937": {
      "op": "MSTORE"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6940": {
      "op": "ADD"
    },
    "6941": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "6944": {
      "op": "JUMP"
    },
    "6945": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6946": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19700,
        19720
      ],
      "op": "PUSH8",
      "path": "18",
      "statement": 59,
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6955": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19700,
        19720
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6956": {
      "branch": 202,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19700,
        19720
      ],
      "op": "AND",
      "path": "18"
    },
    "6957": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B9E"
    },
    "6960": {
      "branch": 202,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6961": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6963": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6970": {
      "op": "SHL"
    },
    "6971": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6972": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6975": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6977": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6978": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "ADD",
      "path": "18"
    },
    "6979": {
      "op": "MSTORE"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6984": {
      "op": "DUP3"
    },
    "6985": {
      "op": "ADD"
    },
    "6986": {
      "op": "MSTORE"
    },
    "6987": {
      "op": "PUSH32",
      "value": "0x7365744861727665737444656C61793A3A44454C41595F43414E4E4F545F4245"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7022": {
      "op": "DUP3"
    },
    "7023": {
      "op": "ADD"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "op": "PUSH32",
      "value": "0x5F5A45524F000000000000000000000000000000000000000000000000000000"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7060": {
      "op": "DUP3"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "MSTORE"
    },
    "7063": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7065": {
      "op": "ADD"
    },
    "7066": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "7069": {
      "op": "JUMP"
    },
    "7070": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19692,
        19762
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7071": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19866,
        19874
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 60,
      "value": "0x1E13380"
    },
    "7076": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19847,
        19862
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7077": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19847,
        19874
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7086": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19847,
        19874
      ],
      "op": "AND",
      "path": "18"
    },
    "7087": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19847,
        19874
      ],
      "op": "GT",
      "path": "18"
    },
    "7088": {
      "branch": 203,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19847,
        19874
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7089": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BFC"
    },
    "7092": {
      "branch": 203,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7093": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7095": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7104": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7107": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7109": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7110": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "ADD",
      "path": "18"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7116": {
      "op": "DUP3"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH32",
      "value": "0x7365744861727665737444656C61793A3A44454C41595F544F4F5F4C4F4E4700"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7159": {
      "op": "ADD"
    },
    "7160": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "7163": {
      "op": "JUMP"
    },
    "7164": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19839,
        19910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7165": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "7167": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7168": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "7186": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7187": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "DIV",
      "path": "18"
    },
    "7188": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7197": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19999,
        20011
      ],
      "op": "AND",
      "path": "18"
    },
    "7198": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19995,
        20373
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CA7"
    },
    "7201": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19995,
        20373
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7202": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20095
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 61,
      "value": "0x9F"
    },
    "7204": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7205": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7206": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7239": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "AND",
      "path": "18"
    },
    "7240": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "7258": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7267": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7268": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "AND",
      "path": "18"
    },
    "7269": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7270": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7271": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "MUL",
      "path": "18"
    },
    "7272": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7273": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7274": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7275": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "OR",
      "path": "18"
    },
    "7276": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7277": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7278": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20083,
        20113
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7279": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 62,
      "value": "0x40"
    },
    "7281": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7282": {
      "op": "SWAP1"
    },
    "7283": {
      "op": "DUP2"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20153,
        20163
      ],
      "op": "CALLER",
      "path": "18"
    },
    "7286": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20153,
        20163
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7287": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F"
    },
    "7320": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7323": {
      "op": "ADD"
    },
    "7324": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7326": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7327": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7328": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7329": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "SUB",
      "path": "18"
    },
    "7330": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7331": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20133,
        20181
      ],
      "op": "LOG2",
      "path": "18"
    },
    "7332": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "POP",
      "path": "18"
    },
    "7333": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "POP",
      "path": "18"
    },
    "7334": {
      "fn": "Vault.setHarvestDelay",
      "jump": "o",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7335": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19995,
        20373
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7336": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20280
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 63,
      "value": "0x9F"
    },
    "7338": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7339": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7340": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "PUSH24",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7365": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "AND",
      "path": "18"
    },
    "7366": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "PUSH25",
      "path": "18",
      "value": "0x1000000000000000000000000000000000000000000000000"
    },
    "7392": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7401": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7402": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "AND",
      "path": "18"
    },
    "7403": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7404": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7405": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "MUL",
      "path": "18"
    },
    "7406": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7407": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7408": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7409": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "OR",
      "path": "18"
    },
    "7410": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7411": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7412": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20264,
        20298
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7413": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20318,
        20362
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 64,
      "value": "0x40"
    },
    "7415": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20318,
        20362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7416": {
      "op": "SWAP1"
    },
    "7417": {
      "op": "DUP2"
    },
    "7418": {
      "op": "MSTORE"
    },
    "7419": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20318,
        20362
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x12CE22E477E3FC08E5FDA24CDEC059A7C62A276344417F2C365D7476401BCA6F"
    },
    "7452": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20318,
        20362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7455": {
      "op": "ADD"
    },
    "7456": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20318,
        20362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7D"
    },
    "7459": {
      "op": "JUMP"
    },
    "7460": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17336,
        17714
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7461": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "7463": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7464": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7466": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7467": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7476": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7477": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "7478": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7480": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7481": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "7482": {
      "op": "MSTORE"
    },
    "7483": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17415,
        17425
      ],
      "op": "CALLER",
      "path": "18"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7486": {
      "op": "DUP3"
    },
    "7487": {
      "op": "ADD"
    },
    "7488": {
      "op": "DUP2"
    },
    "7489": {
      "op": "SWAP1"
    },
    "7490": {
      "op": "MSTORE"
    },
    "7491": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17415,
        17425
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7498": {
      "op": "SHL"
    },
    "7499": {
      "op": "SUB"
    },
    "7500": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "7501": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7502": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "7507": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7510": {
      "op": "ADD"
    },
    "7511": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7513": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7515": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7516": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7517": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7518": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "7519": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7520": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7521": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "7522": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7523": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7524": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7525": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7526": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D73"
    },
    "7529": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7530": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7531": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7533": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7534": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7535": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7536": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7538": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7539": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7540": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "7541": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "7542": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "7543": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "7544": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7546": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7547": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7548": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7550": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "7551": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7553": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7554": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "7555": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "7556": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7557": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "7558": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7559": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7561": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7562": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "7563": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7564": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "7565": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7566": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D97"
    },
    "7569": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7570": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7571": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "7574": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7575": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7576": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DE3"
    },
    "7579": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7580": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7582": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7589": {
      "op": "SHL"
    },
    "7590": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7591": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7594": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7596": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7597": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "7598": {
      "op": "MSTORE"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7603": {
      "op": "DUP3"
    },
    "7604": {
      "op": "ADD"
    },
    "7605": {
      "op": "MSTORE"
    },
    "7606": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7641": {
      "op": "DUP3"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "op": "MSTORE"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7646": {
      "op": "ADD"
    },
    "7647": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "7650": {
      "op": "JUMP"
    },
    "7651": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7652": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17520,
        17524
      ],
      "op": "PUSH8",
      "path": "18",
      "statement": 65,
      "value": "0xDE0B6B3A7640000"
    },
    "7661": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17503,
        17516
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7662": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17503,
        17524
      ],
      "op": "GT",
      "path": "18"
    },
    "7663": {
      "branch": 204,
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17503,
        17524
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7664": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E61"
    },
    "7667": {
      "branch": 204,
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7668": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7670": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7677": {
      "op": "SHL"
    },
    "7678": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7679": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7682": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7684": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7685": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "ADD",
      "path": "18"
    },
    "7686": {
      "op": "MSTORE"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7691": {
      "op": "DUP3"
    },
    "7692": {
      "op": "ADD"
    },
    "7693": {
      "op": "MSTORE"
    },
    "7694": {
      "op": "PUSH32",
      "value": "0x736574426174636865644275726E696E6746656550657263656E743A3A464545"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7729": {
      "op": "DUP3"
    },
    "7730": {
      "op": "ADD"
    },
    "7731": {
      "op": "MSTORE"
    },
    "7732": {
      "op": "PUSH32",
      "value": "0x5F544F4F5F484947480000000000000000000000000000000000000000000000"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7767": {
      "op": "DUP3"
    },
    "7768": {
      "op": "ADD"
    },
    "7769": {
      "op": "MSTORE"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "7776": {
      "op": "JUMP"
    },
    "7777": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17495,
        17570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7778": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17619,
        17636
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 66,
      "value": "0x9D"
    },
    "7780": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17619,
        17652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7781": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17619,
        17652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7782": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17619,
        17652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7783": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17668,
        17707
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 67,
      "value": "0x40"
    },
    "7785": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17668,
        17707
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7786": {
      "op": "DUP3"
    },
    "7787": {
      "op": "DUP2"
    },
    "7788": {
      "op": "MSTORE"
    },
    "7789": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17668,
        17707
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xEA0B688AABE63E0B1F8D23FBFAAF5978C8D6B74C5B21BDC9787B4651482B8F4B"
    },
    "7822": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17668,
        17707
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "fn": "Vault.setBatchedBurningFeePercent",
      "offset": [
        17668,
        17707
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7D"
    },
    "7829": {
      "op": "JUMP"
    },
    "7830": {
      "fn": "Vault.totalFloat",
      "offset": [
        42343,
        42613
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7831": {
      "fn": "Vault.totalFloat",
      "offset": [
        42580,
        42596
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 68,
      "value": "0xA8"
    },
    "7833": {
      "fn": "Vault.totalFloat",
      "offset": [
        42580,
        42596
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7834": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42552
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x99"
    },
    "7836": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7837": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7839": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7840": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x70A0823100000000000000000000000000000000000000000000000000000000"
    },
    "7873": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7874": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7875": {
      "fn": "Vault.totalFloat",
      "offset": [
        42571,
        42575
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "7876": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7878": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7879": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ADD",
      "path": "18"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "fn": "Vault.totalFloat",
      "offset": [
        42386,
        42393
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7883": {
      "fn": "Vault.totalFloat",
      "offset": [
        42386,
        42393
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7884": {
      "fn": "Vault.totalFloat",
      "offset": [
        42580,
        42596
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7891": {
      "op": "SHL"
    },
    "7892": {
      "op": "SUB"
    },
    "7893": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42552
      ],
      "op": "AND",
      "path": "18"
    },
    "7894": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7895": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42562
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "7900": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42562
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7903": {
      "op": "ADD"
    },
    "7904": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7906": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7908": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7909": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7910": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7911": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "SUB",
      "path": "18"
    },
    "7912": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7913": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7914": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "GAS",
      "path": "18"
    },
    "7915": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7916": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7917": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7918": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7919": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EFC"
    },
    "7922": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7923": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7924": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7926": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7927": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7928": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7929": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7931": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7932": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7933": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "POP",
      "path": "18"
    },
    "7934": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "POP",
      "path": "18"
    },
    "7935": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "POP",
      "path": "18"
    },
    "7936": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "POP",
      "path": "18"
    },
    "7937": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7939": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7940": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7941": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7943": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "NOT",
      "path": "18"
    },
    "7944": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7946": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7947": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ADD",
      "path": "18"
    },
    "7948": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "AND",
      "path": "18"
    },
    "7949": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7950": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ADD",
      "path": "18"
    },
    "7951": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7952": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7954": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7955": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "POP",
      "path": "18"
    },
    "7956": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7957": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "ADD",
      "path": "18"
    },
    "7958": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7959": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F20"
    },
    "7962": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7963": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7964": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53FF"
    },
    "7967": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        42542,
        42577
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7968": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42577
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7969": {
      "fn": "Vault.totalFloat",
      "offset": [
        42542,
        42596
      ],
      "op": "SUB",
      "path": "18"
    },
    "7970": {
      "fn": "Vault.totalFloat",
      "offset": [
        42535,
        42596
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7971": {
      "fn": "Vault.totalFloat",
      "offset": [
        42535,
        42596
      ],
      "op": "POP",
      "path": "18"
    },
    "7972": {
      "fn": "Vault.totalFloat",
      "offset": [
        42343,
        42613
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7973": {
      "fn": "Vault.totalFloat",
      "jump": "o",
      "offset": [
        42343,
        42613
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7974": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7975": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2714,
        2727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7977": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2746,
        2753
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x37"
    },
    "7979": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7980": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7981": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB23"
    },
    "7984": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7985": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x52D0"
    },
    "7988": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2739,
        2753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7989": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7990": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7991": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6842,
        6846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7993": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7994": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7995": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7996": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "7998": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8000": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8001": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8002": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8003": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8005": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8006": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8007": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8014": {
      "op": "SHL"
    },
    "8015": {
      "op": "SUB"
    },
    "8016": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8017": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "AND",
      "path": "6"
    },
    "8018": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8019": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8020": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8021": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8022": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8023": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8024": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8025": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8026": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 70
    },
    "8027": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8028": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "LT",
      "path": "6"
    },
    "8029": {
      "branch": 235,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8030": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FCF"
    },
    "8033": {
      "branch": 235,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8034": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8036": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8043": {
      "op": "SHL"
    },
    "8044": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8045": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8048": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8050": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8051": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "ADD",
      "path": "6"
    },
    "8052": {
      "op": "MSTORE"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8057": {
      "op": "DUP3"
    },
    "8058": {
      "op": "ADD"
    },
    "8059": {
      "op": "MSTORE"
    },
    "8060": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8095": {
      "op": "DUP3"
    },
    "8096": {
      "op": "ADD"
    },
    "8097": {
      "op": "MSTORE"
    },
    "8098": {
      "op": "PUSH32",
      "value": "0x207A65726F000000000000000000000000000000000000000000000000000000"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8133": {
      "op": "DUP3"
    },
    "8134": {
      "op": "ADD"
    },
    "8135": {
      "op": "MSTORE"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8138": {
      "op": "ADD"
    },
    "8139": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "8142": {
      "op": "JUMP"
    },
    "8143": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8144": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7115
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x1FDC"
    },
    "8147": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8148": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7071,
        7078
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8149": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7099,
        7114
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8150": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7080,
        7096
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8151": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7080,
        7114
      ],
      "op": "SUB",
      "path": "6"
    },
    "8152": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397B"
    },
    "8155": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7048,
        7115
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8156": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8157": {
      "op": "POP"
    },
    "8158": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7143,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 72,
      "value": "0x1"
    },
    "8160": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7143,
        7147
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8161": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8162": {
      "op": "POP"
    },
    "8163": {
      "op": "POP"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "o",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8166": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8167": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4113,
        4117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8169": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4129,
        4171
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 73,
      "value": "0xD96"
    },
    "8172": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8173": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4153,
        4162
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8174": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4164,
        4170
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8175": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4129,
        4138
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FA6"
    },
    "8178": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4129,
        4171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8179": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21247,
        21596
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8180": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "8182": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8183": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8185": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8186": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8193": {
      "op": "SHL"
    },
    "8194": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8195": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8196": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "8197": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8199": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8200": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8201": {
      "op": "MSTORE"
    },
    "8202": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21325,
        21335
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8205": {
      "op": "DUP3"
    },
    "8206": {
      "op": "ADD"
    },
    "8207": {
      "op": "DUP2"
    },
    "8208": {
      "op": "SWAP1"
    },
    "8209": {
      "op": "MSTORE"
    },
    "8210": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21325,
        21335
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8217": {
      "op": "SHL"
    },
    "8218": {
      "op": "SUB"
    },
    "8219": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "8220": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8221": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "8226": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8229": {
      "op": "ADD"
    },
    "8230": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8232": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8234": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8235": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8236": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8237": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "8238": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8239": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8240": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "8241": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "8242": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8243": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8244": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8245": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2042"
    },
    "8248": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8249": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8250": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8252": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8253": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8254": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8255": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8257": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8258": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8259": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8260": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8261": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8262": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8263": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8265": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8266": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8267": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8269": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "8270": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8272": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8273": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8274": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "8275": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8276": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8277": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8278": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8280": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8281": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8282": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8283": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8284": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8285": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2066"
    },
    "8288": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8289": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8290": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "8293": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8294": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8295": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20B2"
    },
    "8298": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8299": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8301": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8308": {
      "op": "SHL"
    },
    "8309": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8310": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8313": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8315": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8316": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "8317": {
      "op": "MSTORE"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8322": {
      "op": "DUP3"
    },
    "8323": {
      "op": "ADD"
    },
    "8324": {
      "op": "MSTORE"
    },
    "8325": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8360": {
      "op": "DUP3"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "MSTORE"
    },
    "8363": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8365": {
      "op": "ADD"
    },
    "8366": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "8369": {
      "op": "JUMP"
    },
    "8370": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8371": {
      "offset": [
        1637,
        1639
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "8373": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21396,
        21429
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 74
    },
    "8374": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21396,
        21429
      ],
      "op": "GT",
      "path": "18"
    },
    "8375": {
      "branch": 205,
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21396,
        21429
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8376": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2129"
    },
    "8379": {
      "branch": 205,
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8380": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8382": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8389": {
      "op": "SHL"
    },
    "8390": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8391": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8394": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8396": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8397": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "ADD",
      "path": "18"
    },
    "8398": {
      "op": "MSTORE"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8403": {
      "op": "DUP3"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "MSTORE"
    },
    "8406": {
      "op": "PUSH32",
      "value": "0x7365745769746864726177616C51756575653A3A51554555455F544F4F5F4249"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8441": {
      "op": "DUP3"
    },
    "8442": {
      "op": "ADD"
    },
    "8443": {
      "op": "MSTORE"
    },
    "8444": {
      "op": "PUSH32",
      "value": "0x4700000000000000000000000000000000000000000000000000000000000000"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8479": {
      "op": "DUP3"
    },
    "8480": {
      "op": "ADD"
    },
    "8481": {
      "op": "MSTORE"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "8488": {
      "op": "JUMP"
    },
    "8489": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21388,
        21467
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8490": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21519,
        21545
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 75,
      "value": "0x2135"
    },
    "8493": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21519,
        21534
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA6"
    },
    "8495": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21537,
        21545
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8496": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21537,
        21545
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8497": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21519,
        21545
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4EE4"
    },
    "8500": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21519,
        21545
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8501": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21519,
        21545
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8502": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21519,
        21545
      ],
      "op": "POP",
      "path": "18"
    },
    "8503": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 76,
      "value": "0x7F5ECD11ABC947C192F7D36828C4A649DDECD0867F27DF66489E78D3EC80B6FE"
    },
    "8536": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21580,
        21588
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8537": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21580,
        21588
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8538": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8540": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8541": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17F3"
    },
    "8544": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8545": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8546": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8547": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21561,
        21589
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5418"
    },
    "8550": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21561,
        21589
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8551": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8552": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "8554": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8555": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8557": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8558": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8565": {
      "op": "SHL"
    },
    "8566": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8567": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8568": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "8569": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8571": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8572": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8573": {
      "op": "MSTORE"
    },
    "8574": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17914,
        17924
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8577": {
      "op": "DUP3"
    },
    "8578": {
      "op": "ADD"
    },
    "8579": {
      "op": "DUP2"
    },
    "8580": {
      "op": "SWAP1"
    },
    "8581": {
      "op": "MSTORE"
    },
    "8582": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17914,
        17924
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8589": {
      "op": "SHL"
    },
    "8590": {
      "op": "SUB"
    },
    "8591": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "8592": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8593": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "8598": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8601": {
      "op": "ADD"
    },
    "8602": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8604": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8606": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8607": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8608": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8609": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "8610": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8611": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8612": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "8613": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "8614": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8615": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8616": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8617": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21B6"
    },
    "8620": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8621": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8622": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8624": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8625": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8626": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8627": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8629": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8630": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8631": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8632": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8633": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8634": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8635": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8637": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8638": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8639": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8641": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "8642": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8644": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8645": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8646": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "8647": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8648": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8649": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8650": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8652": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8653": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8654": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8655": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8656": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8657": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21DA"
    },
    "8660": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8661": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8662": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "8665": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8666": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8667": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2226"
    },
    "8670": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8671": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8673": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8680": {
      "op": "SHL"
    },
    "8681": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8682": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8685": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8687": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8688": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "8689": {
      "op": "MSTORE"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8694": {
      "op": "DUP3"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "op": "MSTORE"
    },
    "8697": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8732": {
      "op": "DUP3"
    },
    "8733": {
      "op": "ADD"
    },
    "8734": {
      "op": "MSTORE"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8737": {
      "op": "ADD"
    },
    "8738": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "8741": {
      "op": "JUMP"
    },
    "8742": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8743": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        17992
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 77,
      "value": "0x9C"
    },
    "8745": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8746": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8747": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "8780": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "AND",
      "path": "18"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8787": {
      "op": "SHL"
    },
    "8788": {
      "op": "SUB"
    },
    "8789": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8790": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "AND",
      "path": "18"
    },
    "8791": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8792": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8793": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "OR",
      "path": "18"
    },
    "8794": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8795": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8796": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17974,
        18014
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8797": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18030,
        18076
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 78,
      "value": "0x40"
    },
    "8799": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18030,
        18076
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8800": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18030,
        18076
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xBA702855580CDA8666C4FE8E4AE71D8F5DD19DB067455EEB54E2BAC95C46AF13"
    },
    "8833": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18030,
        18076
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8836": {
      "op": "SWAP1"
    },
    "8837": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18030,
        18076
      ],
      "op": "LOG2",
      "path": "18"
    },
    "8838": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "POP",
      "path": "18"
    },
    "8839": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        17835,
        18083
      ],
      "op": "POP",
      "path": "18"
    },
    "8840": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "o",
      "offset": [
        17835,
        18083
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8841": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8842": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "8844": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8845": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8847": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8848": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8855": {
      "op": "SHL"
    },
    "8856": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8857": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8858": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "8859": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8861": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8862": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8863": {
      "op": "MSTORE"
    },
    "8864": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37273,
        37283
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8867": {
      "op": "DUP3"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "DUP2"
    },
    "8870": {
      "op": "SWAP1"
    },
    "8871": {
      "op": "MSTORE"
    },
    "8872": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37273,
        37283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8879": {
      "op": "SHL"
    },
    "8880": {
      "op": "SUB"
    },
    "8881": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "8882": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8883": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "8888": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8894": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8896": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8897": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8898": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8899": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "8900": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8901": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8902": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "8903": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "8904": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8905": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8906": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8907": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22D8"
    },
    "8910": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8911": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8912": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8914": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8915": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "8916": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8917": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8919": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8920": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8921": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8922": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8923": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8924": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8925": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8927": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8928": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "8929": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8931": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "8932": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8934": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8935": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8936": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "8937": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8938": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8939": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8940": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8942": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8943": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "8944": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8945": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "8946": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8947": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22FC"
    },
    "8950": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8951": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8952": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "8955": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8956": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8957": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2348"
    },
    "8960": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8961": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8963": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8970": {
      "op": "SHL"
    },
    "8971": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8972": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8975": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8977": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8978": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "8979": {
      "op": "MSTORE"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8984": {
      "op": "DUP3"
    },
    "8985": {
      "op": "ADD"
    },
    "8986": {
      "op": "MSTORE"
    },
    "8987": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9022": {
      "op": "DUP3"
    },
    "9023": {
      "op": "ADD"
    },
    "9024": {
      "op": "MSTORE"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9027": {
      "op": "ADD"
    },
    "9028": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "9031": {
      "op": "JUMP"
    },
    "9032": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9039": {
      "op": "SHL"
    },
    "9040": {
      "op": "SUB"
    },
    "9041": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 79
    },
    "9042": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "AND",
      "path": "18"
    },
    "9043": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9045": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9046": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9047": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9048": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37389
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "9050": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9052": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9053": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9055": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9056": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37399
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9057": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37407
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9058": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9060": {
      "branch": 206,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37374,
        37407
      ],
      "op": "AND",
      "path": "18"
    },
    "9061": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23D6"
    },
    "9064": {
      "branch": 206,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9065": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9067": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9074": {
      "op": "SHL"
    },
    "9075": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9076": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9079": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9081": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9082": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "ADD",
      "path": "18"
    },
    "9083": {
      "op": "MSTORE"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9088": {
      "op": "DUP3"
    },
    "9089": {
      "op": "ADD"
    },
    "9090": {
      "op": "MSTORE"
    },
    "9091": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A554E545255535445445F"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9126": {
      "op": "DUP3"
    },
    "9127": {
      "op": "ADD"
    },
    "9128": {
      "op": "MSTORE"
    },
    "9129": {
      "op": "PUSH32",
      "value": "0x5354524154454759000000000000000000000000000000000000000000000000"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9164": {
      "op": "DUP3"
    },
    "9165": {
      "op": "ADD"
    },
    "9166": {
      "op": "MSTORE"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9169": {
      "op": "ADD"
    },
    "9170": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "9173": {
      "op": "JUMP"
    },
    "9174": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37366,
        37452
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9175": {
      "branch": 207,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37548,
        37569
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 80
    },
    "9176": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2449"
    },
    "9179": {
      "branch": 207,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9180": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9182": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9189": {
      "op": "SHL"
    },
    "9190": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9191": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9194": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9196": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9197": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "ADD",
      "path": "18"
    },
    "9198": {
      "op": "MSTORE"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9203": {
      "op": "DUP3"
    },
    "9204": {
      "op": "ADD"
    },
    "9205": {
      "op": "MSTORE"
    },
    "9206": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A414D4F554E545F43414E"
    },
    "9239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9241": {
      "op": "DUP3"
    },
    "9242": {
      "op": "ADD"
    },
    "9243": {
      "op": "MSTORE"
    },
    "9244": {
      "op": "PUSH32",
      "value": "0x4E4F545F42455F5A45524F000000000000000000000000000000000000000000"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9279": {
      "op": "DUP3"
    },
    "9280": {
      "op": "ADD"
    },
    "9281": {
      "op": "MSTORE"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9284": {
      "op": "ADD"
    },
    "9285": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "9288": {
      "op": "JUMP"
    },
    "9289": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37540,
        37617
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9290": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37744,
        37776
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 81,
      "value": "0x2452"
    },
    "9293": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37744,
        37760
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9294": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37744,
        37774
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B5"
    },
    "9297": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        37744,
        37776
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9298": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37744,
        37776
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9305": {
      "op": "SHL"
    },
    "9306": {
      "op": "SUB"
    },
    "9307": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9308": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "AND",
      "path": "18"
    },
    "9309": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9311": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9312": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9313": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9314": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37722
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "9316": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9318": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9319": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9321": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9322": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37732
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9323": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9324": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9325": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37740
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "9327": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37740
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9328": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A0"
    },
    "9331": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9332": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9333": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9334": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "9337": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9338": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DIV",
      "path": "18"
    },
    "9339": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9371": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "AND",
      "path": "18"
    },
    "9372": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5466"
    },
    "9375": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        37707,
        37776
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9376": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9377": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9378": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9379": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9411": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9412": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9413": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "AND",
      "path": "18"
    },
    "9414": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "9417": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9418": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9419": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9420": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "EXP",
      "path": "18"
    },
    "9421": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9422": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9423": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "MUL",
      "path": "18"
    },
    "9424": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9425": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9426": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9427": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "MUL",
      "path": "18"
    },
    "9428": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "NOT",
      "path": "18"
    },
    "9429": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9430": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9431": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "AND",
      "path": "18"
    },
    "9432": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "OR",
      "path": "18"
    },
    "9433": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9434": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37707,
        37776
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9435": {
      "op": "POP"
    },
    "9436": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38006
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 82,
      "value": "0xA0"
    },
    "9438": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9439": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9440": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9441": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9442": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "SUB",
      "path": "18"
    },
    "9443": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9444": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37985,
        38026
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9445": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 83,
      "value": "0x40"
    },
    "9447": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9448": {
      "op": "DUP3"
    },
    "9449": {
      "op": "DUP2"
    },
    "9450": {
      "op": "MSTORE"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9457": {
      "op": "SHL"
    },
    "9458": {
      "op": "SUB"
    },
    "9459": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9460": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "AND",
      "path": "18"
    },
    "9461": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9462": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38071,
        38081
      ],
      "op": "CALLER",
      "path": "18"
    },
    "9463": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38071,
        38081
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9464": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE"
    },
    "9497": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9500": {
      "op": "ADD"
    },
    "9501": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9503": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9504": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9505": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9506": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "SUB",
      "path": "18"
    },
    "9507": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9508": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38052,
        38110
      ],
      "op": "LOG3",
      "path": "18"
    },
    "9509": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 84,
      "value": "0x40"
    },
    "9511": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9512": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x2E1A7D4D00000000000000000000000000000000000000000000000000000000"
    },
    "9545": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9546": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9547": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9549": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9550": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ADD",
      "path": "18"
    },
    "9551": {
      "op": "DUP4"
    },
    "9552": {
      "op": "SWAP1"
    },
    "9553": {
      "op": "MSTORE"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9560": {
      "op": "SHL"
    },
    "9561": {
      "op": "SUB"
    },
    "9562": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38221
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9563": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38221
      ],
      "op": "AND",
      "path": "18"
    },
    "9564": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9565": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38221
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2E1A7D4D"
    },
    "9570": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9573": {
      "op": "ADD"
    },
    "9574": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9576": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9578": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9579": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9580": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9581": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "SUB",
      "path": "18"
    },
    "9582": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9583": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9585": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP8",
      "path": "18"
    },
    "9586": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "GAS",
      "path": "18"
    },
    "9587": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "CALL",
      "path": "18"
    },
    "9588": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9589": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9590": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9591": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2584"
    },
    "9594": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9595": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9596": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9598": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9599": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "9600": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9601": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9603": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "REVERT",
      "path": "18"
    },
    "9604": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9605": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "POP",
      "path": "18"
    },
    "9606": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "POP",
      "path": "18"
    },
    "9607": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "POP",
      "path": "18"
    },
    "9608": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "POP",
      "path": "18"
    },
    "9609": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9611": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9612": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9613": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9615": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "NOT",
      "path": "18"
    },
    "9616": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9618": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9619": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ADD",
      "path": "18"
    },
    "9620": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "AND",
      "path": "18"
    },
    "9621": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9622": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ADD",
      "path": "18"
    },
    "9623": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9624": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9626": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9627": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "POP",
      "path": "18"
    },
    "9628": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9629": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "ADD",
      "path": "18"
    },
    "9630": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9631": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25A8"
    },
    "9634": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9635": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9636": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54A6"
    },
    "9639": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        38204,
        38239
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9640": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38239
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9641": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38244
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9643": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38244
      ],
      "op": "AND",
      "path": "18"
    },
    "9644": {
      "branch": 208,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38204,
        38244
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9645": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x261E"
    },
    "9648": {
      "branch": 208,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9649": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9651": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9658": {
      "op": "SHL"
    },
    "9659": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9660": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9663": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9665": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9666": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "ADD",
      "path": "18"
    },
    "9667": {
      "op": "MSTORE"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9672": {
      "op": "DUP3"
    },
    "9673": {
      "op": "ADD"
    },
    "9674": {
      "op": "MSTORE"
    },
    "9675": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A52454445454D5F464149"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9710": {
      "op": "DUP3"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "MSTORE"
    },
    "9713": {
      "op": "PUSH32",
      "value": "0x4C45440000000000000000000000000000000000000000000000000000000000"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9748": {
      "op": "DUP3"
    },
    "9749": {
      "op": "ADD"
    },
    "9750": {
      "op": "MSTORE"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9753": {
      "op": "ADD"
    },
    "9754": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "9757": {
      "op": "JUMP"
    },
    "9758": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        38196,
        38284
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9759": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "9760": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "9761": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "9762": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "o",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9763": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35638,
        36871
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9764": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "9766": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9767": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9769": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9770": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9777": {
      "op": "SHL"
    },
    "9778": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9779": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9780": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "9781": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9783": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9784": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "9785": {
      "op": "MSTORE"
    },
    "9786": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35732,
        35742
      ],
      "op": "CALLER",
      "path": "18"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9789": {
      "op": "DUP3"
    },
    "9790": {
      "op": "ADD"
    },
    "9791": {
      "op": "DUP2"
    },
    "9792": {
      "op": "SWAP1"
    },
    "9793": {
      "op": "MSTORE"
    },
    "9794": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35732,
        35742
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9801": {
      "op": "SHL"
    },
    "9802": {
      "op": "SUB"
    },
    "9803": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "9804": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9805": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "9810": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9813": {
      "op": "ADD"
    },
    "9814": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9816": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9818": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9819": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9820": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9821": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "9822": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9823": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "9824": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "9825": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "9826": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9827": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9828": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9829": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2672"
    },
    "9832": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9833": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9834": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9836": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9837": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "9838": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9839": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9841": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "9842": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9843": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "9844": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "9845": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "9846": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "9847": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9849": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9850": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9851": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9853": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "9854": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9856": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9857": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "9858": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "9859": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9860": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "9861": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9862": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9864": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9865": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "9866": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9867": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "9868": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9869": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2696"
    },
    "9872": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9873": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9874": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "9877": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9878": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9879": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x26E2"
    },
    "9882": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9883": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9885": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9892": {
      "op": "SHL"
    },
    "9893": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9894": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9897": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9899": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9900": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "9901": {
      "op": "MSTORE"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9906": {
      "op": "DUP3"
    },
    "9907": {
      "op": "ADD"
    },
    "9908": {
      "op": "MSTORE"
    },
    "9909": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9944": {
      "op": "DUP3"
    },
    "9945": {
      "op": "ADD"
    },
    "9946": {
      "op": "MSTORE"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9949": {
      "op": "ADD"
    },
    "9950": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "9953": {
      "op": "JUMP"
    },
    "9954": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9961": {
      "op": "SHL"
    },
    "9962": {
      "op": "SUB"
    },
    "9963": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 85
    },
    "9964": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "AND",
      "path": "18"
    },
    "9965": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9967": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9968": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9969": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9970": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35848
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "9972": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9974": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9975": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9977": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9978": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35858
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9979": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35866
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9980": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35866
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9982": {
      "branch": 209,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35833,
        35866
      ],
      "op": "AND",
      "path": "18"
    },
    "9983": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2770"
    },
    "9986": {
      "branch": 209,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9987": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9989": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9996": {
      "op": "SHL"
    },
    "9997": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9998": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10001": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10003": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10004": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "ADD",
      "path": "18"
    },
    "10005": {
      "op": "MSTORE"
    },
    "10006": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10010": {
      "op": "DUP3"
    },
    "10011": {
      "op": "ADD"
    },
    "10012": {
      "op": "MSTORE"
    },
    "10013": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A554E545255535445445F53"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10048": {
      "op": "DUP3"
    },
    "10049": {
      "op": "ADD"
    },
    "10050": {
      "op": "MSTORE"
    },
    "10051": {
      "op": "PUSH32",
      "value": "0x5452415445475900000000000000000000000000000000000000000000000000"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "ADD"
    },
    "10088": {
      "op": "MSTORE"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10091": {
      "op": "ADD"
    },
    "10092": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "10095": {
      "op": "JUMP"
    },
    "10096": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35825,
        35910
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10097": {
      "branch": 210,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36005,
        36026
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 86
    },
    "10098": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27E3"
    },
    "10101": {
      "branch": 210,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10102": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10104": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10111": {
      "op": "SHL"
    },
    "10112": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10113": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10116": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10118": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10119": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "ADD",
      "path": "18"
    },
    "10120": {
      "op": "MSTORE"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10125": {
      "op": "DUP3"
    },
    "10126": {
      "op": "ADD"
    },
    "10127": {
      "op": "MSTORE"
    },
    "10128": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A414D4F554E545F43414E4E"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10163": {
      "op": "DUP3"
    },
    "10164": {
      "op": "ADD"
    },
    "10165": {
      "op": "MSTORE"
    },
    "10166": {
      "op": "PUSH32",
      "value": "0x4F545F42455F5A45524F00000000000000000000000000000000000000000000"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10201": {
      "op": "DUP3"
    },
    "10202": {
      "op": "ADD"
    },
    "10203": {
      "op": "MSTORE"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10206": {
      "op": "ADD"
    },
    "10207": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "10210": {
      "op": "JUMP"
    },
    "10211": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35997,
        36073
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10212": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36179,
        36195
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 87
    },
    "10213": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36175
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "10215": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36175
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10217": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10218": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10219": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10220": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27F5"
    },
    "10223": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10224": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10225": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "10228": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        36154,
        36195
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10229": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10230": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10231": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10232": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36154,
        36195
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "10233": {
      "op": "POP"
    },
    "10234": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36438,
        36470
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 88,
      "value": "0x2804"
    },
    "10237": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36438,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10238": {
      "op": "POP"
    },
    "10239": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36438,
        36454
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10240": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36438,
        36468
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B5"
    },
    "10243": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        36438,
        36470
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10244": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36438,
        36470
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10251": {
      "op": "SHL"
    },
    "10252": {
      "op": "SUB"
    },
    "10253": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "DUP5",
      "path": "18"
    },
    "10254": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "AND",
      "path": "18"
    },
    "10255": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10257": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10258": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10259": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10260": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "10262": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "10264": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10265": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10267": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10268": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10269": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10270": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36426
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "10271": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10272": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10273": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10305": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "10308": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10309": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "DUP4",
      "path": "18"
    },
    "10310": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "DIV",
      "path": "18"
    },
    "10311": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10312": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "AND",
      "path": "18"
    },
    "10313": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10314": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "10315": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "ADD",
      "path": "18"
    },
    "10316": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "AND",
      "path": "18"
    },
    "10317": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10318": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "10319": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "MUL",
      "path": "18"
    },
    "10320": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "10322": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10323": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "10324": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "AND",
      "path": "18"
    },
    "10325": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "10326": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10327": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "10328": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "OR",
      "path": "18"
    },
    "10329": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10330": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "10331": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36401,
        36470
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "10332": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 89
    },
    "10333": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10334": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36512,
        36522
      ],
      "op": "CALLER",
      "path": "18"
    },
    "10335": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36512,
        36522
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10336": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x49E9138FE0DACF001EA634236E38AA8BD229EFD55EC4D7975228D679DB6CE8F9"
    },
    "10369": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10370": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x288E"
    },
    "10373": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10374": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36534,
        36550
      ],
      "op": "DUP7",
      "path": "18"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "MSTORE"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10379": {
      "op": "ADD"
    },
    "10380": {
      "op": "SWAP1"
    },
    "10381": {
      "op": "JUMP"
    },
    "10382": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10383": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10385": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10386": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10387": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10388": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SUB",
      "path": "18"
    },
    "10389": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10390": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36496,
        36551
      ],
      "op": "LOG3",
      "path": "18"
    },
    "10391": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36643
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 90,
      "value": "0x99"
    },
    "10393": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36643
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10394": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36692
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28AD"
    },
    "10397": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36692
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10404": {
      "op": "SHL"
    },
    "10405": {
      "op": "SUB"
    },
    "10406": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36643
      ],
      "op": "AND",
      "path": "18"
    },
    "10407": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36664,
        36672
      ],
      "op": "DUP5",
      "path": "18"
    },
    "10408": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36675,
        36691
      ],
      "op": "DUP5",
      "path": "18"
    },
    "10409": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36655
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45E7"
    },
    "10412": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        36633,
        36692
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10413": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36633,
        36692
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10414": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 91,
      "value": "0x40"
    },
    "10416": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10417": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xB6B55F2500000000000000000000000000000000000000000000000000000000"
    },
    "10450": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10451": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10452": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10454": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10455": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10456": {
      "op": "DUP4"
    },
    "10457": {
      "op": "SWAP1"
    },
    "10458": {
      "op": "MSTORE"
    },
    "10459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10465": {
      "op": "SHL"
    },
    "10466": {
      "op": "SUB"
    },
    "10467": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36804
      ],
      "op": "DUP5",
      "path": "18"
    },
    "10468": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36804
      ],
      "op": "AND",
      "path": "18"
    },
    "10469": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36804
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10470": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36804
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB6B55F25"
    },
    "10475": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36804
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10478": {
      "op": "ADD"
    },
    "10479": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "10481": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10483": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10484": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10485": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "10486": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "SUB",
      "path": "18"
    },
    "10487": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10488": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10490": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP8",
      "path": "18"
    },
    "10491": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "GAS",
      "path": "18"
    },
    "10492": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "CALL",
      "path": "18"
    },
    "10493": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "10494": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10495": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "10496": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x290D"
    },
    "10499": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10500": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10501": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10503": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10504": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "10505": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10506": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10508": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "10509": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10510": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "POP",
      "path": "18"
    },
    "10511": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "POP",
      "path": "18"
    },
    "10512": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "POP",
      "path": "18"
    },
    "10513": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "POP",
      "path": "18"
    },
    "10514": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10516": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10517": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10518": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "10520": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "NOT",
      "path": "18"
    },
    "10521": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "10523": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10524": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10525": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "AND",
      "path": "18"
    },
    "10526": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10527": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10528": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10529": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10531": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10532": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "POP",
      "path": "18"
    },
    "10533": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10534": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10535": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10536": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2931"
    },
    "10539": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10540": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10541": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54A6"
    },
    "10544": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        36788,
        36822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10545": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10546": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36827
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "10548": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36827
      ],
      "op": "AND",
      "path": "18"
    },
    "10549": {
      "branch": 211,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36788,
        36827
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "10550": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x261E"
    },
    "10553": {
      "branch": 211,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10554": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10556": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10557": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10563": {
      "op": "SHL"
    },
    "10564": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10565": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10568": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10570": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10571": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "ADD",
      "path": "18"
    },
    "10572": {
      "op": "DUP2"
    },
    "10573": {
      "op": "SWAP1"
    },
    "10574": {
      "op": "MSTORE"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10577": {
      "op": "DUP3"
    },
    "10578": {
      "op": "ADD"
    },
    "10579": {
      "op": "MSTORE"
    },
    "10580": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A4D494E545F4641494C4544"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10615": {
      "op": "DUP3"
    },
    "10616": {
      "op": "ADD"
    },
    "10617": {
      "op": "MSTORE"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10620": {
      "op": "ADD"
    },
    "10621": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        36780,
        36864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "10624": {
      "op": "JUMP"
    },
    "10625": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43833,
        44223
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10626": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43889,
        43916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10628": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44085,
        44099
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 92,
      "value": "0x298B"
    },
    "10631": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44085,
        44097
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1650"
    },
    "10634": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        44085,
        44099
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10635": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44085,
        44099
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10636": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44061,
        44082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "10638": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44061,
        44082
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10639": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44061,
        44099
      ],
      "op": "SUB",
      "path": "18"
    },
    "10640": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44039,
        44099
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10641": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44039,
        44099
      ],
      "op": "POP",
      "path": "18"
    },
    "10642": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44204,
        44216
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 93,
      "value": "0x2999"
    },
    "10645": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44204,
        44214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E96"
    },
    "10648": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        44204,
        44216
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10649": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44204,
        44216
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10650": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29A3"
    },
    "10653": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10654": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10655": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "10658": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        44181,
        44216
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10659": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10660": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10661": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        44181,
        44216
      ],
      "op": "POP",
      "path": "18"
    },
    "10662": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        43833,
        44223
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10663": {
      "fn": "Vault.totalUnderlying",
      "jump": "o",
      "offset": [
        43833,
        44223
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10664": {
      "offset": [
        6620,
        6654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10665": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA6"
    },
    "10667": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10668": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10669": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10670": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10671": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "LT",
      "path": "18"
    },
    "10672": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29B8"
    },
    "10675": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10676": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10678": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10679": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "REVERT",
      "path": "18"
    },
    "10680": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10681": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10683": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10684": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10685": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10686": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "10688": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10689": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10690": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "10691": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "ADD",
      "path": "18"
    },
    "10692": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10699": {
      "op": "SHL"
    },
    "10700": {
      "op": "SUB"
    },
    "10701": {
      "offset": [
        6620,
        6654
      ],
      "op": "AND",
      "path": "18"
    },
    "10702": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6620,
        6654
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10703": {
      "op": "POP"
    },
    "10704": {
      "offset": [
        6620,
        6654
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10705": {
      "fn": "Vault.totalUnderlying",
      "jump": "o",
      "offset": [
        6620,
        6654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10706": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10707": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "10709": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10710": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10712": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10713": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10720": {
      "op": "SHL"
    },
    "10721": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10722": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10723": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "10724": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10726": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10727": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10728": {
      "op": "MSTORE"
    },
    "10729": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22611,
        22621
      ],
      "op": "CALLER",
      "path": "18"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10732": {
      "op": "DUP3"
    },
    "10733": {
      "op": "ADD"
    },
    "10734": {
      "op": "DUP2"
    },
    "10735": {
      "op": "SWAP1"
    },
    "10736": {
      "op": "MSTORE"
    },
    "10737": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22611,
        22621
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10744": {
      "op": "SHL"
    },
    "10745": {
      "op": "SUB"
    },
    "10746": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "10747": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10748": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "10753": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10756": {
      "op": "ADD"
    },
    "10757": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "10759": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10761": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10762": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10763": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "10764": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "10765": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10766": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "10767": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "10768": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "10769": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "10770": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10771": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "10772": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A21"
    },
    "10775": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10776": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10777": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10779": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10780": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "10781": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10782": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10784": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "10785": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10786": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "10787": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "10788": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "10789": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "10790": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10792": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10793": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "10794": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "10796": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "10797": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "10799": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10800": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10801": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "10802": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10803": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10804": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10805": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10807": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10808": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "10809": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10810": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "10811": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10812": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A45"
    },
    "10815": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10816": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10817": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "10820": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10821": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10822": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A91"
    },
    "10825": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "10826": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10828": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10835": {
      "op": "SHL"
    },
    "10836": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10837": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10840": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "10842": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10843": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "10844": {
      "op": "MSTORE"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10849": {
      "op": "DUP3"
    },
    "10850": {
      "op": "ADD"
    },
    "10851": {
      "op": "MSTORE"
    },
    "10852": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "10885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10887": {
      "op": "DUP3"
    },
    "10888": {
      "op": "ADD"
    },
    "10889": {
      "op": "MSTORE"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10892": {
      "op": "ADD"
    },
    "10893": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "10896": {
      "op": "JUMP"
    },
    "10897": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10904": {
      "op": "SHL"
    },
    "10905": {
      "op": "SUB"
    },
    "10906": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 94
    },
    "10907": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "AND",
      "path": "18"
    },
    "10908": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22713,
        22718
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "10910": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10911": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "DUP2",
      "path": "18"
    },
    "10912": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10913": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22692
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "10915": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "10917": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "10918": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10920": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10921": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "DUP3",
      "path": "18"
    },
    "10922": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22702
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "10923": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22718
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10924": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22718
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10925": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10927": {
      "op": "NOT"
    },
    "10928": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22718
      ],
      "op": "AND",
      "path": "18"
    },
    "10929": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10930": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22677,
        22718
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "10931": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22734,
        22762
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 95
    },
    "10932": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22734,
        22762
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE14D923EC37225F1AAB033B03F5C98CF911D68BBA31F6908192DB6C24B0511C9"
    },
    "10965": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22734,
        22762
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "10966": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22713,
        22718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "10967": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22734,
        22762
      ],
      "op": "LOG2",
      "path": "18"
    },
    "10968": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "POP",
      "path": "18"
    },
    "10969": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22546,
        22769
      ],
      "op": "POP",
      "path": "18"
    },
    "10970": {
      "fn": "Vault.distrustStrategy",
      "jump": "o",
      "offset": [
        22546,
        22769
      ],
      "op": "JUMP",
      "path": "18"
    },
    "10971": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "10972": {
      "offset": [
        13035,
        13039
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "10974": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13039
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "10975": {
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "10977": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "10978": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE6CF324000000000000000000000000000000000000000000000000000000000"
    },
    "11011": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11012": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11013": {
      "offset": [
        13067,
        13071
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "11014": {
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11016": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11017": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ADD",
      "path": "18"
    },
    "11018": {
      "op": "MSTORE"
    },
    "11019": {
      "fn": "Vault.harvest",
      "offset": [
        30602,
        30612
      ],
      "op": "CALLER",
      "path": "18"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11022": {
      "op": "DUP3"
    },
    "11023": {
      "op": "ADD"
    },
    "11024": {
      "op": "DUP2"
    },
    "11025": {
      "op": "SWAP1"
    },
    "11026": {
      "op": "MSTORE"
    },
    "11027": {
      "fn": "Vault.harvest",
      "offset": [
        30602,
        30612
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11034": {
      "op": "SHL"
    },
    "11035": {
      "op": "SUB"
    },
    "11036": {
      "offset": [
        13035,
        13039
      ],
      "op": "AND",
      "path": "18"
    },
    "11037": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13039
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11038": {
      "offset": [
        13035,
        13051
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE6CF3240"
    },
    "11043": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13051
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11046": {
      "op": "ADD"
    },
    "11047": {
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11049": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11051": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11052": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11053": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11054": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "SUB",
      "path": "18"
    },
    "11055": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11056": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP7",
      "path": "18"
    },
    "11057": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "GAS",
      "path": "18"
    },
    "11058": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "11059": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11060": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11061": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11062": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B43"
    },
    "11065": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11066": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11067": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11069": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11070": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "11071": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11072": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11074": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "REVERT",
      "path": "18"
    },
    "11075": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11076": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "POP",
      "path": "18"
    },
    "11077": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "POP",
      "path": "18"
    },
    "11078": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "POP",
      "path": "18"
    },
    "11079": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "POP",
      "path": "18"
    },
    "11080": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11082": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11083": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11084": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11086": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "NOT",
      "path": "18"
    },
    "11087": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11089": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11090": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ADD",
      "path": "18"
    },
    "11091": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "AND",
      "path": "18"
    },
    "11092": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11093": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ADD",
      "path": "18"
    },
    "11094": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11095": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11097": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11098": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "POP",
      "path": "18"
    },
    "11099": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11100": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "ADD",
      "path": "18"
    },
    "11101": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11102": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B67"
    },
    "11105": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11106": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11107": {
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "11110": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        13035,
        13082
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11111": {
      "branch": 212,
      "fn": "Vault.harvest",
      "offset": [
        13035,
        13082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11112": {
      "offset": [
        13027,
        13107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB3"
    },
    "11115": {
      "branch": 212,
      "offset": [
        13027,
        13107
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11116": {
      "fn": "Vault.harvest",
      "offset": [
        13027,
        13107
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11118": {
      "fn": "Vault.harvest",
      "offset": [
        13027,
        13107
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11125": {
      "op": "SHL"
    },
    "11126": {
      "offset": [
        13027,
        13107
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11127": {
      "fn": "Vault.harvest",
      "offset": [
        13027,
        13107
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11130": {
      "offset": [
        13027,
        13107
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11132": {
      "fn": "Vault.harvest",
      "offset": [
        13027,
        13107
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11133": {
      "fn": "Vault.harvest",
      "offset": [
        13027,
        13107
      ],
      "op": "ADD",
      "path": "18"
    },
    "11134": {
      "op": "MSTORE"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11139": {
      "op": "DUP3"
    },
    "11140": {
      "op": "ADD"
    },
    "11141": {
      "op": "MSTORE"
    },
    "11142": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F484152564553544552000000000000000000000000"
    },
    "11175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11177": {
      "op": "DUP3"
    },
    "11178": {
      "op": "ADD"
    },
    "11179": {
      "op": "MSTORE"
    },
    "11180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11182": {
      "op": "ADD"
    },
    "11183": {
      "offset": [
        13027,
        13107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "11186": {
      "op": "JUMP"
    },
    "11187": {
      "offset": [
        13027,
        13107
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11188": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "11190": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11191": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "11193": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11194": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30736
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BF0"
    },
    "11197": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30736
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11198": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11207": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "11225": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11226": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11227": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "DIV",
      "path": "18"
    },
    "11228": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11229": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "AND",
      "path": "18"
    },
    "11230": {
      "fn": "Vault.harvest",
      "offset": [
        30724,
        30736
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11231": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "PUSH9",
      "path": "18",
      "value": "0x10000000000000000"
    },
    "11241": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11242": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "DIV",
      "path": "18"
    },
    "11243": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30721
      ],
      "op": "AND",
      "path": "18"
    },
    "11244": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30736
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5375"
    },
    "11247": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30710,
        30736
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11248": {
      "fn": "Vault.harvest",
      "offset": [
        30710,
        30736
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11249": {
      "fn": "Vault.harvest",
      "offset": [
        30691,
        30736
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11258": {
      "fn": "Vault.harvest",
      "offset": [
        30691,
        30736
      ],
      "op": "AND",
      "path": "18"
    },
    "11259": {
      "fn": "Vault.harvest",
      "offset": [
        30691,
        30706
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "11260": {
      "branch": 213,
      "fn": "Vault.harvest",
      "offset": [
        30691,
        30736
      ],
      "op": "LT",
      "path": "18"
    },
    "11261": {
      "fn": "Vault.harvest",
      "offset": [
        30687,
        31535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C58"
    },
    "11264": {
      "branch": 213,
      "fn": "Vault.harvest",
      "offset": [
        30687,
        31535
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11265": {
      "fn": "Vault.harvest",
      "offset": [
        30958,
        30972
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 96,
      "value": "0x2C08"
    },
    "11268": {
      "fn": "Vault.harvest",
      "offset": [
        30958,
        30970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "11271": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30958,
        30972
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11272": {
      "fn": "Vault.harvest",
      "offset": [
        30958,
        30972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11273": {
      "fn": "Vault.harvest",
      "offset": [
        30932,
        30955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA2"
    },
    "11275": {
      "fn": "Vault.harvest",
      "offset": [
        30932,
        30972
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11276": {
      "fn": "Vault.harvest",
      "offset": [
        31031,
        31058
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 97,
      "value": "0xA4"
    },
    "11278": {
      "fn": "Vault.harvest",
      "offset": [
        31031,
        31058
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11279": {
      "fn": "Vault.harvest",
      "offset": [
        31016,
        31058
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C18"
    },
    "11282": {
      "fn": "Vault.harvest",
      "offset": [
        31016,
        31058
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11283": {
      "fn": "Vault.harvest",
      "offset": [
        31016,
        31028
      ],
      "op": "NUMBER",
      "path": "18"
    },
    "11284": {
      "fn": "Vault.harvest",
      "offset": [
        31016,
        31058
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "11287": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31016,
        31058
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11288": {
      "fn": "Vault.harvest",
      "offset": [
        31016,
        31058
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11289": {
      "fn": "Vault.harvest",
      "offset": [
        30986,
        31013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA3"
    },
    "11291": {
      "fn": "Vault.harvest",
      "offset": [
        30986,
        31058
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11292": {
      "fn": "Vault.harvest",
      "offset": [
        31102,
        31114
      ],
      "op": "NUMBER",
      "path": "18",
      "statement": 98
    },
    "11293": {
      "fn": "Vault.harvest",
      "offset": [
        31072,
        31099
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA4"
    },
    "11295": {
      "fn": "Vault.harvest",
      "offset": [
        31072,
        31114
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11296": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31268
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 99,
      "value": "0xA5"
    },
    "11298": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11299": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11300": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000"
    },
    "11333": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "AND",
      "path": "18"
    },
    "11334": {
      "fn": "Vault.harvest",
      "offset": [
        31278,
        31293
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "11335": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11344": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "AND",
      "path": "18"
    },
    "11345": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "OR",
      "path": "18"
    },
    "11346": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11347": {
      "fn": "Vault.harvest",
      "offset": [
        31246,
        31294
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11348": {
      "fn": "Vault.harvest",
      "offset": [
        30687,
        31535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CE5"
    },
    "11351": {
      "fn": "Vault.harvest",
      "offset": [
        30687,
        31535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11352": {
      "fn": "Vault.harvest",
      "offset": [
        30687,
        31535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11353": {
      "fn": "Vault.harvest",
      "offset": [
        31481,
        31494
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 100,
      "value": "0x9F"
    },
    "11355": {
      "fn": "Vault.harvest",
      "offset": [
        31481,
        31494
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11356": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31478
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA5"
    },
    "11358": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31478
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11359": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31494
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C84"
    },
    "11362": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31494
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11363": {
      "fn": "Vault.harvest",
      "offset": [
        31481,
        31494
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11380": {
      "fn": "Vault.harvest",
      "offset": [
        31481,
        31494
      ],
      "op": "AND",
      "path": "18"
    },
    "11381": {
      "fn": "Vault.harvest",
      "offset": [
        31481,
        31494
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11382": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31478
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11391": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31478
      ],
      "op": "AND",
      "path": "18"
    },
    "11392": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31494
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54C9"
    },
    "11395": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31456,
        31494
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11396": {
      "fn": "Vault.harvest",
      "offset": [
        31456,
        31494
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11397": {
      "fn": "Vault.harvest",
      "offset": [
        31437,
        31494
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11414": {
      "fn": "Vault.harvest",
      "offset": [
        31437,
        31494
      ],
      "op": "AND",
      "path": "18"
    },
    "11415": {
      "fn": "Vault.harvest",
      "offset": [
        31437,
        31452
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "11416": {
      "fn": "Vault.harvest",
      "offset": [
        31437,
        31494
      ],
      "op": "GT",
      "path": "18"
    },
    "11417": {
      "branch": 214,
      "fn": "Vault.harvest",
      "offset": [
        31437,
        31494
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11418": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CE5"
    },
    "11421": {
      "branch": 214,
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11422": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11424": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11431": {
      "op": "SHL"
    },
    "11432": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11433": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11436": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11438": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11439": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "ADD",
      "path": "18"
    },
    "11440": {
      "op": "MSTORE"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11445": {
      "op": "DUP3"
    },
    "11446": {
      "op": "ADD"
    },
    "11447": {
      "op": "MSTORE"
    },
    "11448": {
      "op": "PUSH32",
      "value": "0x686172766573743A3A4241445F484152564553545F54494D4500000000000000"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11483": {
      "op": "DUP3"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "MSTORE"
    },
    "11486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11488": {
      "op": "ADD"
    },
    "11489": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "11492": {
      "op": "JUMP"
    },
    "11493": {
      "fn": "Vault.harvest",
      "offset": [
        31429,
        31524
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11494": {
      "fn": "Vault.harvest",
      "offset": [
        31640,
        31661
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "11496": {
      "fn": "Vault.harvest",
      "offset": [
        31640,
        31661
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11497": {
      "fn": "Vault.harvest",
      "offset": [
        31605,
        31637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11499": {
      "fn": "Vault.harvest",
      "offset": [
        31640,
        31661
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11500": {
      "fn": "Vault.harvest",
      "offset": [
        31605,
        31637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11501": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11502": {
      "fn": "Vault.harvest",
      "offset": [
        32016,
        32037
      ],
      "op": "DUP6",
      "path": "18"
    },
    "11503": {
      "fn": "Vault.harvest",
      "offset": [
        32016,
        32037
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11504": {
      "fn": "Vault.harvest",
      "offset": [
        32016,
        32037
      ],
      "op": "LT",
      "path": "18"
    },
    "11505": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11506": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EDB"
    },
    "11509": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11510": {
      "fn": "Vault.harvest",
      "offset": [
        32112,
        32130
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11512": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32143
      ],
      "op": "DUP8",
      "path": "18"
    },
    "11513": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32143
      ],
      "op": "DUP8",
      "path": "18"
    },
    "11514": {
      "fn": "Vault.harvest",
      "offset": [
        32144,
        32145
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11515": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11516": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11517": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "LT",
      "path": "18"
    },
    "11518": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D09"
    },
    "11521": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11522": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D09"
    },
    "11525": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54F4"
    },
    "11528": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32133,
        32146
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11529": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11530": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11531": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "POP",
      "path": "18"
    },
    "11532": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11534": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "MUL",
      "path": "18"
    },
    "11535": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "ADD",
      "path": "18"
    },
    "11536": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11538": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11539": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "ADD",
      "path": "18"
    },
    "11540": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11541": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D1E"
    },
    "11544": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11545": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11546": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x511C"
    },
    "11549": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32133,
        32146
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11550": {
      "fn": "Vault.harvest",
      "offset": [
        32133,
        32146
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11557": {
      "op": "SHL"
    },
    "11558": {
      "op": "SUB"
    },
    "11559": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 101
    },
    "11560": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "AND",
      "path": "18"
    },
    "11561": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11563": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11564": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11565": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11566": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32361
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "11568": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11570": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11571": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11573": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11574": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32371
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11575": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32379
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11576": {
      "fn": "Vault.harvest",
      "offset": [
        32112,
        32146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11577": {
      "fn": "Vault.harvest",
      "offset": [
        32112,
        32146
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11578": {
      "op": "POP"
    },
    "11579": {
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32379
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "11581": {
      "branch": 215,
      "fn": "Vault.harvest",
      "offset": [
        32346,
        32379
      ],
      "op": "AND",
      "path": "18"
    },
    "11582": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D89"
    },
    "11585": {
      "branch": 215,
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11586": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11588": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11595": {
      "op": "SHL"
    },
    "11596": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11597": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11600": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11602": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11603": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "ADD",
      "path": "18"
    },
    "11604": {
      "op": "MSTORE"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11609": {
      "op": "DUP3"
    },
    "11610": {
      "op": "ADD"
    },
    "11611": {
      "op": "MSTORE"
    },
    "11612": {
      "op": "PUSH32",
      "value": "0x686172766573743A3A554E545255535445445F53545241544547590000000000"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11647": {
      "op": "DUP3"
    },
    "11648": {
      "op": "ADD"
    },
    "11649": {
      "op": "MSTORE"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11652": {
      "op": "ADD"
    },
    "11653": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "11656": {
      "op": "JUMP"
    },
    "11657": {
      "fn": "Vault.harvest",
      "offset": [
        32338,
        32411
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11664": {
      "op": "SHL"
    },
    "11665": {
      "op": "SUB"
    },
    "11666": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11667": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "AND",
      "path": "18"
    },
    "11668": {
      "fn": "Vault.harvest",
      "offset": [
        32490,
        32516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11670": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11671": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11672": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11673": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32534
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "11675": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11677": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11678": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11679": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11680": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11682": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11683": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11684": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11685": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11686": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11687": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11688": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x27E5CBAF00000000000000000000000000000000000000000000000000000000"
    },
    "11721": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11722": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11723": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11724": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11725": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "11728": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11729": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11730": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "DIV",
      "path": "18"
    },
    "11731": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11763": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "AND",
      "path": "18"
    },
    "11764": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32552
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "11765": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11766": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32623
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x27E5CBAF"
    },
    "11771": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32623
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11772": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11774": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11775": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11776": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ADD",
      "path": "18"
    },
    "11777": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "11778": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11779": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11780": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11781": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SUB",
      "path": "18"
    },
    "11782": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ADD",
      "path": "18"
    },
    "11783": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11784": {
      "fn": "Vault.harvest",
      "offset": [
        32490,
        32516
      ],
      "op": "DUP8",
      "path": "18"
    },
    "11785": {
      "fn": "Vault.harvest",
      "offset": [
        32519,
        32544
      ],
      "op": "DUP8",
      "path": "18"
    },
    "11786": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "GAS",
      "path": "18"
    },
    "11787": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "CALL",
      "path": "18"
    },
    "11788": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11789": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11790": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11791": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E1C"
    },
    "11794": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11795": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11796": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11798": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11799": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "11800": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11801": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11803": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "REVERT",
      "path": "18"
    },
    "11804": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11805": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11806": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11807": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11808": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11809": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11811": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11812": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "11813": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11815": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "NOT",
      "path": "18"
    },
    "11816": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11818": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11819": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ADD",
      "path": "18"
    },
    "11820": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "AND",
      "path": "18"
    },
    "11821": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11822": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ADD",
      "path": "18"
    },
    "11823": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11824": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11826": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11827": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11828": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11829": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "ADD",
      "path": "18"
    },
    "11830": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11831": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E40"
    },
    "11834": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11835": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11836": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53FF"
    },
    "11839": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32595,
        32625
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11840": {
      "fn": "Vault.harvest",
      "offset": [
        32595,
        32625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11841": {
      "fn": "Vault.harvest",
      "offset": [
        32566,
        32625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11842": {
      "fn": "Vault.harvest",
      "offset": [
        32566,
        32625
      ],
      "op": "POP",
      "path": "18"
    },
    "11843": {
      "fn": "Vault.harvest",
      "offset": [
        32759,
        32793
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 102,
      "value": "0x2E4B"
    },
    "11846": {
      "fn": "Vault.harvest",
      "offset": [
        32759,
        32777
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11847": {
      "fn": "Vault.harvest",
      "offset": [
        32759,
        32791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B5"
    },
    "11850": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32759,
        32793
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11851": {
      "fn": "Vault.harvest",
      "offset": [
        32759,
        32793
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11858": {
      "op": "SHL"
    },
    "11859": {
      "op": "SUB"
    },
    "11860": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11861": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "AND",
      "path": "18"
    },
    "11862": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11864": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11865": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11866": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11867": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32738
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "11869": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11871": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11872": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11874": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11875": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32748
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11876": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11877": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11878": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11910": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11911": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11912": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11913": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "AND",
      "path": "18"
    },
    "11914": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "11917": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "MUL",
      "path": "18"
    },
    "11918": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "11920": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11921": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11922": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "AND",
      "path": "18"
    },
    "11923": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11924": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11925": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11926": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "OR",
      "path": "18"
    },
    "11927": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11928": {
      "fn": "Vault.harvest",
      "offset": [
        32723,
        32793
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "11929": {
      "fn": "Vault.harvest",
      "offset": [
        33089,
        33107
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 103
    },
    "11930": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EA3"
    },
    "11933": {
      "fn": "Vault.harvest",
      "offset": [
        33068,
        33086
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11934": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33065
      ],
      "op": "DUP8",
      "path": "18"
    },
    "11935": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "11938": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33041,
        33086
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11939": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33086
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11940": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EAD"
    },
    "11943": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33107
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11944": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33107
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11945": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "11948": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33041,
        33107
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11949": {
      "fn": "Vault.harvest",
      "offset": [
        33041,
        33107
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11950": {
      "fn": "Vault.harvest",
      "offset": [
        33014,
        33107
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "11951": {
      "fn": "Vault.harvest",
      "offset": [
        33014,
        33107
      ],
      "op": "POP",
      "path": "18"
    },
    "11952": {
      "fn": "Vault.harvest",
      "offset": [
        33375,
        33393
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 104
    },
    "11953": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11954": {
      "branch": 216,
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33393
      ],
      "op": "GT",
      "path": "18"
    },
    "11955": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EBD"
    },
    "11958": {
      "branch": 216,
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11959": {
      "fn": "Vault.harvest",
      "offset": [
        33509,
        33510
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11961": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EC1"
    },
    "11964": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11965": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11966": {
      "fn": "Vault.harvest",
      "offset": [
        33437,
        33455
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11967": {
      "fn": "Vault.harvest",
      "offset": [
        33416,
        33434
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11968": {
      "fn": "Vault.harvest",
      "offset": [
        33416,
        33455
      ],
      "op": "SUB",
      "path": "18"
    },
    "11969": {
      "fn": "Vault.harvest",
      "offset": [
        33354,
        33510
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11970": {
      "fn": "Vault.harvest",
      "offset": [
        33332,
        33510
      ],
      "op": "DUP7",
      "path": "18"
    },
    "11971": {
      "fn": "Vault.harvest",
      "offset": [
        33332,
        33510
      ],
      "op": "ADD",
      "path": "18"
    },
    "11972": {
      "fn": "Vault.harvest",
      "offset": [
        33332,
        33510
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "11973": {
      "fn": "Vault.harvest",
      "offset": [
        33332,
        33510
      ],
      "op": "POP",
      "path": "18"
    },
    "11974": {
      "fn": "Vault.harvest",
      "offset": [
        32044,
        33606
      ],
      "op": "POP",
      "path": "18"
    },
    "11975": {
      "fn": "Vault.harvest",
      "offset": [
        32044,
        33606
      ],
      "op": "POP",
      "path": "18"
    },
    "11976": {
      "fn": "Vault.harvest",
      "offset": [
        32044,
        33606
      ],
      "op": "POP",
      "path": "18"
    },
    "11977": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 105
    },
    "11978": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11979": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2ED3"
    },
    "11982": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11983": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5523"
    },
    "11986": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32039,
        32042
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11987": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11988": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11989": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "POP",
      "path": "18"
    },
    "11990": {
      "fn": "Vault.harvest",
      "offset": [
        32039,
        32042
      ],
      "op": "POP",
      "path": "18"
    },
    "11991": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CED"
    },
    "11994": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11995": {
      "fn": "Vault.harvest",
      "offset": [
        31996,
        33606
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11996": {
      "op": "POP"
    },
    "11997": {
      "fn": "Vault.harvest",
      "offset": [
        33731,
        33748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9B"
    },
    "11999": {
      "fn": "Vault.harvest",
      "offset": [
        33731,
        33748
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12000": {
      "fn": "Vault.harvest",
      "offset": [
        33685,
        33704
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12002": {
      "fn": "Vault.harvest",
      "offset": [
        33685,
        33704
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12003": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33755
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EF6"
    },
    "12006": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12007": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33725
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12008": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33725
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12009": {
      "fn": "Vault.harvest",
      "offset": [
        33750,
        33754
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xDE0B6B3A7640000"
    },
    "12018": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33730
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ACB"
    },
    "12021": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33707,
        33755
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12022": {
      "fn": "Vault.harvest",
      "offset": [
        33707,
        33755
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12023": {
      "fn": "Vault.harvest",
      "offset": [
        33685,
        33755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12024": {
      "op": "POP"
    },
    "12025": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33866
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12026": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33866
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12027": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33866
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12028": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33866
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12029": {
      "branch": 217,
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33866
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12030": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33902
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F11"
    },
    "12033": {
      "branch": 217,
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33902
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12034": {
      "op": "POP"
    },
    "12035": {
      "fn": "Vault.harvest",
      "offset": [
        33870,
        33888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9C"
    },
    "12037": {
      "fn": "Vault.harvest",
      "offset": [
        33870,
        33888
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12044": {
      "op": "SHL"
    },
    "12045": {
      "op": "SUB"
    },
    "12046": {
      "fn": "Vault.harvest",
      "offset": [
        33870,
        33888
      ],
      "op": "AND",
      "path": "18"
    },
    "12047": {
      "fn": "Vault.harvest",
      "offset": [
        33870,
        33902
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12048": {
      "branch": 218,
      "fn": "Vault.harvest",
      "offset": [
        33870,
        33902
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12049": {
      "fn": "Vault.harvest",
      "offset": [
        33850,
        33902
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12050": {
      "fn": "Vault.harvest",
      "offset": [
        33846,
        33999
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12051": {
      "fn": "Vault.harvest",
      "offset": [
        33846,
        33999
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F41"
    },
    "12054": {
      "branch": 218,
      "fn": "Vault.harvest",
      "offset": [
        33846,
        33999
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12055": {
      "fn": "Vault.harvest",
      "offset": [
        33924,
        33942
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 106,
      "value": "0x9C"
    },
    "12057": {
      "fn": "Vault.harvest",
      "offset": [
        33924,
        33942
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12058": {
      "fn": "Vault.harvest",
      "offset": [
        33918,
        33988
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F41"
    },
    "12061": {
      "fn": "Vault.harvest",
      "offset": [
        33918,
        33988
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12068": {
      "op": "SHL"
    },
    "12069": {
      "op": "SUB"
    },
    "12070": {
      "fn": "Vault.harvest",
      "offset": [
        33924,
        33942
      ],
      "op": "AND",
      "path": "18"
    },
    "12071": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33987
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F3C"
    },
    "12074": {
      "fn": "Vault.harvest",
      "offset": [
        33961,
        33975
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F31"
    },
    "12077": {
      "fn": "Vault.harvest",
      "offset": [
        33961,
        33973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C9"
    },
    "12080": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33961,
        33975
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12081": {
      "fn": "Vault.harvest",
      "offset": [
        33961,
        33975
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12082": {
      "fn": "Vault.harvest",
      "offset": [
        33977,
        33986
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "12084": {
      "fn": "Vault.harvest",
      "offset": [
        33977,
        33986
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12085": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33955
      ],
      "op": "DUP6",
      "path": "18"
    },
    "12086": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33955
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12087": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33987
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12088": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33960
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F84"
    },
    "12091": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33944,
        33987
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12092": {
      "fn": "Vault.harvest",
      "offset": [
        33944,
        33987
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12093": {
      "fn": "Vault.harvest",
      "offset": [
        33918,
        33923
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4735"
    },
    "12096": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33918,
        33988
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12097": {
      "fn": "Vault.harvest",
      "offset": [
        33918,
        33988
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12098": {
      "fn": "Vault.harvest",
      "offset": [
        34101,
        34125
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12100": {
      "fn": "Vault.harvest",
      "offset": [
        34128,
        34195
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F69"
    },
    "12103": {
      "fn": "Vault.harvest",
      "offset": [
        34167,
        34178
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12104": {
      "fn": "Vault.harvest",
      "offset": [
        34146,
        34164
      ],
      "op": "DUP6",
      "path": "18"
    },
    "12105": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34143
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F50"
    },
    "12108": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34141
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1650"
    },
    "12111": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34129,
        34143
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12112": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34143
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12113": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34164
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F5A"
    },
    "12116": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34164
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12117": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34164
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12118": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34164
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "12121": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34129,
        34164
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12122": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34164
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12123": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34178
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F64"
    },
    "12126": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34178
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12127": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34178
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12128": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34178
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "12131": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34129,
        34178
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12132": {
      "fn": "Vault.harvest",
      "offset": [
        34129,
        34178
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12133": {
      "fn": "Vault.harvest",
      "offset": [
        34128,
        34193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4814"
    },
    "12136": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34128,
        34195
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12137": {
      "fn": "Vault.harvest",
      "offset": [
        34128,
        34195
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12138": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34220
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 107,
      "value": "0xA5"
    },
    "12140": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12141": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12142": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12159": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12160": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12161": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "AND",
      "path": "18"
    },
    "12162": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "12180": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12181": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "MUL",
      "path": "18"
    },
    "12182": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12183": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12184": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12185": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "AND",
      "path": "18"
    },
    "12186": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "OR",
      "path": "18"
    },
    "12187": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12188": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12189": {
      "fn": "Vault.harvest",
      "offset": [
        34205,
        34239
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12190": {
      "fn": "Vault.harvest",
      "offset": [
        34101,
        34195
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12191": {
      "fn": "Vault.harvest",
      "offset": [
        34101,
        34195
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12192": {
      "op": "POP"
    },
    "12193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12195": {
      "op": "SWAP1"
    },
    "12196": {
      "fn": "Vault.harvest",
      "offset": [
        34314,
        34366
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2FAD"
    },
    "12199": {
      "fn": "Vault.harvest",
      "offset": [
        34314,
        34366
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12200": {
      "fn": "Vault.harvest",
      "offset": [
        34314,
        34338
      ],
      "op": "DUP6",
      "path": "18"
    },
    "12201": {
      "fn": "Vault.harvest",
      "offset": [
        34314,
        34366
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "12204": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34314,
        34366
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12205": {
      "fn": "Vault.harvest",
      "offset": [
        34314,
        34366
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12206": {
      "fn": "Vault.harvest",
      "offset": [
        34287,
        34366
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12207": {
      "fn": "Vault.harvest",
      "offset": [
        34287,
        34366
      ],
      "op": "POP",
      "path": "18"
    },
    "12208": {
      "fn": "Vault.harvest",
      "offset": [
        34394,
        34491
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 108,
      "value": "0x2FCE"
    },
    "12211": {
      "fn": "Vault.harvest",
      "offset": [
        34418,
        34434
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12212": {
      "fn": "Vault.harvest",
      "offset": [
        34444,
        34460
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12213": {
      "fn": "Vault.harvest",
      "offset": [
        34436,
        34461
      ],
      "op": "PUSH16",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12230": {
      "fn": "Vault.harvest",
      "offset": [
        34436,
        34461
      ],
      "op": "AND",
      "path": "18"
    },
    "12231": {
      "fn": "Vault.harvest",
      "offset": [
        34463,
        34490
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA3"
    },
    "12233": {
      "fn": "Vault.harvest",
      "offset": [
        34463,
        34490
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12234": {
      "fn": "Vault.harvest",
      "offset": [
        34394,
        34417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4833"
    },
    "12237": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34394,
        34491
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12238": {
      "fn": "Vault.harvest",
      "offset": [
        34394,
        34491
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12239": {
      "fn": "Vault.harvest",
      "offset": [
        34376,
        34391
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xAD"
    },
    "12241": {
      "fn": "Vault.harvest",
      "offset": [
        34376,
        34491
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12242": {
      "fn": "Vault.harvest",
      "offset": [
        34553,
        34574
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 109,
      "value": "0xA0"
    },
    "12244": {
      "fn": "Vault.harvest",
      "offset": [
        34553,
        34601
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12245": {
      "fn": "Vault.harvest",
      "offset": [
        34553,
        34601
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12246": {
      "fn": "Vault.harvest",
      "offset": [
        34553,
        34601
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12247": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34717
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 110,
      "value": "0xA5"
    },
    "12249": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12250": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12251": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"
    },
    "12284": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "AND",
      "path": "18"
    },
    "12285": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "PUSH9",
      "path": "18",
      "value": "0x10000000000000000"
    },
    "12295": {
      "fn": "Vault.harvest",
      "offset": [
        34727,
        34742
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "12296": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12305": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "AND",
      "path": "18"
    },
    "12306": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "MUL",
      "path": "18"
    },
    "12307": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "OR",
      "path": "18"
    },
    "12308": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12309": {
      "fn": "Vault.harvest",
      "offset": [
        34706,
        34743
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12310": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 111,
      "value": "0x40"
    },
    "12312": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12313": {
      "fn": "Vault.harvest",
      "offset": [
        34767,
        34777
      ],
      "op": "CALLER",
      "path": "18"
    },
    "12314": {
      "fn": "Vault.harvest",
      "offset": [
        34767,
        34777
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12315": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x69E9C71F6799744A94D9897E77C3ED426CC2F92BA0EF3300785368209B6F4B2D"
    },
    "12348": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12349": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3049"
    },
    "12352": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12353": {
      "fn": "Vault.harvest",
      "offset": [
        34779,
        34789
      ],
      "op": "DUP13",
      "path": "18"
    },
    "12354": {
      "fn": "Vault.harvest",
      "offset": [
        34779,
        34789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12355": {
      "fn": "Vault.harvest",
      "offset": [
        34779,
        34789
      ],
      "op": "DUP13",
      "path": "18"
    },
    "12356": {
      "fn": "Vault.harvest",
      "offset": [
        34779,
        34789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12357": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5418"
    },
    "12360": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        34759,
        34790
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12361": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12362": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12364": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12365": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12366": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12367": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "SUB",
      "path": "18"
    },
    "12368": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12369": {
      "fn": "Vault.harvest",
      "offset": [
        34759,
        34790
      ],
      "op": "LOG2",
      "path": "18"
    },
    "12370": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9F"
    },
    "12372": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12373": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "PUSH25",
      "path": "18",
      "value": "0x1000000000000000000000000000000000000000000000000"
    },
    "12399": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12400": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "DIV",
      "path": "18"
    },
    "12401": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12410": {
      "fn": "Vault.harvest",
      "offset": [
        34865,
        34881
      ],
      "op": "AND",
      "path": "18"
    },
    "12411": {
      "fn": "Vault.harvest",
      "offset": [
        34943,
        34963
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12412": {
      "branch": 219,
      "fn": "Vault.harvest",
      "offset": [
        34943,
        34963
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12413": {
      "fn": "Vault.harvest",
      "offset": [
        34939,
        35209
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x310D"
    },
    "12416": {
      "branch": 219,
      "fn": "Vault.harvest",
      "offset": [
        34939,
        35209
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12417": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35032
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 112,
      "value": "0x9F"
    },
    "12419": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12420": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12421": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "PUSH16",
      "path": "18",
      "statement": 113,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12438": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "AND",
      "path": "18"
    },
    "12439": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "PUSH17",
      "path": "18",
      "value": "0x100000000000000000000000000000000"
    },
    "12457": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12466": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12467": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "AND",
      "path": "18"
    },
    "12468": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12469": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12470": {
      "fn": "Vault.harvest",
      "offset": [
        35020,
        35050
      ],
      "op": "MUL",
      "path": "18"
    },
    "12471": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "PUSH24",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12496": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "AND",
      "path": "18"
    },
    "12497": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12498": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12499": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12500": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "OR",
      "path": "18"
    },
    "12501": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12502": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12503": {
      "fn": "Vault.harvest",
      "offset": [
        35110,
        35130
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12504": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 114,
      "value": "0x40"
    },
    "12506": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12507": {
      "op": "SWAP1"
    },
    "12508": {
      "op": "DUP2"
    },
    "12509": {
      "op": "MSTORE"
    },
    "12510": {
      "fn": "Vault.harvest",
      "offset": [
        35170,
        35180
      ],
      "op": "CALLER",
      "path": "18"
    },
    "12511": {
      "fn": "Vault.harvest",
      "offset": [
        35170,
        35180
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12512": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F"
    },
    "12545": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12548": {
      "op": "ADD"
    },
    "12549": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12551": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12552": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12553": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12554": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "SUB",
      "path": "18"
    },
    "12555": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12556": {
      "fn": "Vault.harvest",
      "offset": [
        35150,
        35198
      ],
      "op": "LOG2",
      "path": "18"
    },
    "12557": {
      "fn": "Vault.harvest",
      "offset": [
        34939,
        35209
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12558": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12559": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12560": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12561": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12562": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12563": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12564": {
      "fn": "Vault.harvest",
      "offset": [
        30614,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12565": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12566": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12567": {
      "fn": "Vault.harvest",
      "offset": [
        30529,
        35215
      ],
      "op": "POP",
      "path": "18"
    },
    "12568": {
      "fn": "Vault.harvest",
      "jump": "o",
      "offset": [
        30529,
        35215
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12569": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16870,
        17227
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12570": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "12572": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12573": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12575": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12576": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12583": {
      "op": "SHL"
    },
    "12584": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12585": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12586": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "12587": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12589": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12590": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12591": {
      "op": "MSTORE"
    },
    "12592": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16942,
        16952
      ],
      "op": "CALLER",
      "path": "18"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12595": {
      "op": "DUP3"
    },
    "12596": {
      "op": "ADD"
    },
    "12597": {
      "op": "DUP2"
    },
    "12598": {
      "op": "SWAP1"
    },
    "12599": {
      "op": "MSTORE"
    },
    "12600": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        16942,
        16952
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12607": {
      "op": "SHL"
    },
    "12608": {
      "op": "SUB"
    },
    "12609": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "12610": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12611": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "12616": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12617": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12619": {
      "op": "ADD"
    },
    "12620": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12622": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12624": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12625": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12626": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12627": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "12628": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12629": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "12630": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "12631": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "12632": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12633": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12634": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12635": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3168"
    },
    "12638": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12639": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12640": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12642": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12643": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "12644": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12645": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12647": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "12648": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12649": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12650": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12651": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12652": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12653": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12655": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12656": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12657": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12659": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "12660": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12662": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12663": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12664": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "12665": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12666": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12667": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12668": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12670": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12671": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12672": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12673": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12674": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12675": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x318C"
    },
    "12678": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12679": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12680": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "12683": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12684": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12685": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31D8"
    },
    "12688": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12689": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12691": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12698": {
      "op": "SHL"
    },
    "12699": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12700": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12703": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12705": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12706": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "12707": {
      "op": "MSTORE"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12712": {
      "op": "DUP3"
    },
    "12713": {
      "op": "ADD"
    },
    "12714": {
      "op": "MSTORE"
    },
    "12715": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "12748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12750": {
      "op": "DUP3"
    },
    "12751": {
      "op": "ADD"
    },
    "12752": {
      "op": "MSTORE"
    },
    "12753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12755": {
      "op": "ADD"
    },
    "12756": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "12759": {
      "op": "JUMP"
    },
    "12760": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12761": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17047,
        17051
      ],
      "op": "PUSH8",
      "path": "18",
      "statement": 115,
      "value": "0xDE0B6B3A7640000"
    },
    "12770": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17030,
        17043
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12771": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17030,
        17051
      ],
      "op": "GT",
      "path": "18"
    },
    "12772": {
      "branch": 220,
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17030,
        17051
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12773": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3230"
    },
    "12776": {
      "branch": 220,
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12777": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12779": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12786": {
      "op": "SHL"
    },
    "12787": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12788": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12791": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12793": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12794": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "ADD",
      "path": "18"
    },
    "12795": {
      "op": "MSTORE"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "12798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12800": {
      "op": "DUP3"
    },
    "12801": {
      "op": "ADD"
    },
    "12802": {
      "op": "MSTORE"
    },
    "12803": {
      "op": "PUSH32",
      "value": "0x73657446656550657263656E743A3A4645455F544F4F5F484947480000000000"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12838": {
      "op": "DUP3"
    },
    "12839": {
      "op": "ADD"
    },
    "12840": {
      "op": "MSTORE"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12843": {
      "op": "ADD"
    },
    "12844": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "12847": {
      "op": "JUMP"
    },
    "12848": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17022,
        17083
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12849": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17132,
        17149
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 116,
      "value": "0x9B"
    },
    "12851": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17132,
        17165
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12852": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17132,
        17165
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12853": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17132,
        17165
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12854": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17181,
        17220
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 117,
      "value": "0x40"
    },
    "12856": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17181,
        17220
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12857": {
      "op": "DUP3"
    },
    "12858": {
      "op": "DUP2"
    },
    "12859": {
      "op": "MSTORE"
    },
    "12860": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17181,
        17220
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xC2930745C0414DCBC7EBF3FEA0D713C9B1F0D69DD75345906FCF43AE322AD578"
    },
    "12893": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17181,
        17220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12896": {
      "op": "ADD"
    },
    "12897": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17181,
        17220
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7D"
    },
    "12900": {
      "op": "JUMP"
    },
    "12901": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12902": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "12904": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12905": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12907": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12908": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "12913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12915": {
      "op": "SHL"
    },
    "12916": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12917": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12918": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "12919": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12921": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12922": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12923": {
      "op": "MSTORE"
    },
    "12924": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16531,
        16541
      ],
      "op": "CALLER",
      "path": "18"
    },
    "12925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12927": {
      "op": "DUP3"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "DUP2"
    },
    "12930": {
      "op": "SWAP1"
    },
    "12931": {
      "op": "MSTORE"
    },
    "12932": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16531,
        16541
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12939": {
      "op": "SHL"
    },
    "12940": {
      "op": "SUB"
    },
    "12941": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "12942": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12943": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "12948": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12951": {
      "op": "ADD"
    },
    "12952": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12954": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12956": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12957": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12958": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12959": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "12960": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12961": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "12962": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "12963": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "12964": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12965": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12966": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12967": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32B4"
    },
    "12970": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12971": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12972": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12974": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12975": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "12976": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12977": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12979": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "12980": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12981": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12982": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12983": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12984": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "12985": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12987": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12988": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12989": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12991": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "12992": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12994": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12995": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12996": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "12997": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12998": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "12999": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13000": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13002": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13003": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13004": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13005": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "13006": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13007": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32D8"
    },
    "13010": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13011": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13012": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "13015": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13016": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13017": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3324"
    },
    "13020": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13021": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13023": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13030": {
      "op": "SHL"
    },
    "13031": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13032": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13035": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13037": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13038": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "13039": {
      "op": "MSTORE"
    },
    "13040": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13044": {
      "op": "DUP3"
    },
    "13045": {
      "op": "ADD"
    },
    "13046": {
      "op": "MSTORE"
    },
    "13047": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "13080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13082": {
      "op": "DUP3"
    },
    "13083": {
      "op": "ADD"
    },
    "13084": {
      "op": "MSTORE"
    },
    "13085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13087": {
      "op": "ADD"
    },
    "13088": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "13091": {
      "op": "JUMP"
    },
    "13092": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13093": {
      "op": "POP"
    },
    "13094": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16553,
        16568
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 118,
      "value": "0x97"
    },
    "13096": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16553,
        16577
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "13097": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "o",
      "offset": [
        16470,
        16584
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13098": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13099": {
      "offset": [
        12779,
        12783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "13101": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13102": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13104": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13105": {
      "op": "PUSH4",
      "value": "0x91006745"
    },
    "13110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13112": {
      "op": "SHL"
    },
    "13113": {
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13114": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13115": {
      "offset": [
        12807,
        12811
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "13116": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13118": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13119": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "13120": {
      "op": "MSTORE"
    },
    "13121": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21984,
        21994
      ],
      "op": "CALLER",
      "path": "18"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13124": {
      "op": "DUP3"
    },
    "13125": {
      "op": "ADD"
    },
    "13126": {
      "op": "DUP2"
    },
    "13127": {
      "op": "SWAP1"
    },
    "13128": {
      "op": "MSTORE"
    },
    "13129": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21984,
        21994
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13136": {
      "op": "SHL"
    },
    "13137": {
      "op": "SUB"
    },
    "13138": {
      "offset": [
        12779,
        12783
      ],
      "op": "AND",
      "path": "18"
    },
    "13139": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13140": {
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x91006745"
    },
    "13145": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13148": {
      "op": "ADD"
    },
    "13149": {
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13151": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13153": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13154": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13155": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13156": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SUB",
      "path": "18"
    },
    "13157": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13158": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP7",
      "path": "18"
    },
    "13159": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "GAS",
      "path": "18"
    },
    "13160": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "13161": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13162": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13163": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13164": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3379"
    },
    "13167": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13168": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13169": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13171": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13172": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "13173": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13174": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13176": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "REVERT",
      "path": "18"
    },
    "13177": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13178": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13179": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13180": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13181": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13182": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13184": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13185": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13186": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13188": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "NOT",
      "path": "18"
    },
    "13189": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13191": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13192": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "13193": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "AND",
      "path": "18"
    },
    "13194": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13195": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "13196": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13197": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13199": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13200": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "POP",
      "path": "18"
    },
    "13201": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13202": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "ADD",
      "path": "18"
    },
    "13203": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13204": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x339D"
    },
    "13207": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13208": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13209": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "13212": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13213": {
      "branch": 221,
      "fn": "Vault.trustStrategy",
      "offset": [
        12779,
        12822
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13214": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33E9"
    },
    "13217": {
      "branch": 221,
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13218": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13220": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13227": {
      "op": "SHL"
    },
    "13228": {
      "offset": [
        12771,
        12843
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13229": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13232": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13234": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13235": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12771,
        12843
      ],
      "op": "ADD",
      "path": "18"
    },
    "13236": {
      "op": "MSTORE"
    },
    "13237": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13241": {
      "op": "DUP3"
    },
    "13242": {
      "op": "ADD"
    },
    "13243": {
      "op": "MSTORE"
    },
    "13244": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F41444D494E00000000000000000000000000000000"
    },
    "13277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13279": {
      "op": "DUP3"
    },
    "13280": {
      "op": "ADD"
    },
    "13281": {
      "op": "MSTORE"
    },
    "13282": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13284": {
      "op": "ADD"
    },
    "13285": {
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "13288": {
      "op": "JUMP"
    },
    "13289": {
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13290": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 119,
      "value": "0x99"
    },
    "13292": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13293": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13295": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13296": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13297": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x6F307DC300000000000000000000000000000000000000000000000000000000"
    },
    "13330": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13331": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13332": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13333": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13340": {
      "op": "SHL"
    },
    "13341": {
      "op": "SUB"
    },
    "13342": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13343": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13344": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "AND",
      "path": "18"
    },
    "13345": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22215,
        22225
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13346": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "DUP6",
      "path": "18"
    },
    "13347": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "AND",
      "path": "18"
    },
    "13348": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13349": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6F307DC3"
    },
    "13354": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13355": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13357": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13358": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13359": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ADD",
      "path": "18"
    },
    "13360": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13361": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13363": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13364": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13365": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13366": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13367": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13368": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SUB",
      "path": "18"
    },
    "13369": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ADD",
      "path": "18"
    },
    "13370": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13371": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22209
      ],
      "op": "DUP7",
      "path": "18"
    },
    "13372": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "GAS",
      "path": "18"
    },
    "13373": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "13374": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13375": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13376": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13377": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x344E"
    },
    "13380": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13381": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13382": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13384": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13385": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "13386": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13387": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13389": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "REVERT",
      "path": "18"
    },
    "13390": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13391": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "POP",
      "path": "18"
    },
    "13392": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "POP",
      "path": "18"
    },
    "13393": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "POP",
      "path": "18"
    },
    "13394": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "POP",
      "path": "18"
    },
    "13395": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13397": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13398": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13399": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13401": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "NOT",
      "path": "18"
    },
    "13402": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13404": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13405": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ADD",
      "path": "18"
    },
    "13406": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "AND",
      "path": "18"
    },
    "13407": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13408": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ADD",
      "path": "18"
    },
    "13409": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13410": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13412": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13413": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "POP",
      "path": "18"
    },
    "13414": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13415": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "ADD",
      "path": "18"
    },
    "13416": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13417": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3472"
    },
    "13420": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13421": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13422": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x553E"
    },
    "13425": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        22190,
        22211
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13426": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13433": {
      "op": "SHL"
    },
    "13434": {
      "op": "SUB"
    },
    "13435": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22225
      ],
      "op": "AND",
      "path": "18"
    },
    "13436": {
      "branch": 222,
      "fn": "Vault.trustStrategy",
      "offset": [
        22190,
        22225
      ],
      "op": "EQ",
      "path": "18"
    },
    "13437": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34C8"
    },
    "13440": {
      "branch": 222,
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13441": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13443": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13450": {
      "op": "SHL"
    },
    "13451": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13452": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13455": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13457": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13458": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "ADD",
      "path": "18"
    },
    "13459": {
      "op": "MSTORE"
    },
    "13460": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13464": {
      "op": "DUP3"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "op": "MSTORE"
    },
    "13467": {
      "op": "PUSH32",
      "value": "0x747275737453747261746567793A3A57524F4E475F554E4445524C59494E4700"
    },
    "13500": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13502": {
      "op": "DUP3"
    },
    "13503": {
      "op": "ADD"
    },
    "13504": {
      "op": "MSTORE"
    },
    "13505": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13507": {
      "op": "ADD"
    },
    "13508": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "13511": {
      "op": "JUMP"
    },
    "13512": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22182,
        22261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13519": {
      "op": "SHL"
    },
    "13520": {
      "op": "SUB"
    },
    "13521": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 120
    },
    "13522": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "AND",
      "path": "18"
    },
    "13523": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13525": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13526": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13527": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13528": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "13530": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13532": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13533": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13535": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13536": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13537": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "13538": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13539": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13540": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13542": {
      "op": "NOT"
    },
    "13543": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "AND",
      "path": "18"
    },
    "13544": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22350,
        22354
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "13546": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "OR",
      "path": "18"
    },
    "13547": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13548": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22354
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "13549": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22370,
        22395
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 121
    },
    "13550": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22370,
        22395
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1EECB33217FCE2D414C96C97C7E082F4557817585C876A72ECA5305AFB15F1F1"
    },
    "13583": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22370,
        22395
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13584": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22314,
        22339
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13585": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22370,
        22395
      ],
      "op": "LOG2",
      "path": "18"
    },
    "13586": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "POP",
      "path": "18"
    },
    "13587": {
      "fn": "Vault.trustStrategy",
      "offset": [
        21922,
        22402
      ],
      "op": "POP",
      "path": "18"
    },
    "13588": {
      "fn": "Vault.trustStrategy",
      "jump": "o",
      "offset": [
        21922,
        22402
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13589": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13590": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13592": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13593": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "13596": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13597": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "13598": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "13600": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "13601": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13602": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x352E"
    },
    "13605": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13606": {
      "op": "POP"
    },
    "13607": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13609": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13610": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "13612": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "13613": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13614": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13615": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35A0"
    },
    "13618": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13619": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13621": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13628": {
      "op": "SHL"
    },
    "13629": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13630": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13633": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13635": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13636": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "13637": {
      "op": "MSTORE"
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "13640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13642": {
      "op": "DUP3"
    },
    "13643": {
      "op": "ADD"
    },
    "13644": {
      "op": "MSTORE"
    },
    "13645": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "13678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13680": {
      "op": "DUP3"
    },
    "13681": {
      "op": "ADD"
    },
    "13682": {
      "op": "MSTORE"
    },
    "13683": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13718": {
      "op": "DUP3"
    },
    "13719": {
      "op": "ADD"
    },
    "13720": {
      "op": "MSTORE"
    },
    "13721": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13723": {
      "op": "ADD"
    },
    "13724": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "13727": {
      "op": "JUMP"
    },
    "13728": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13729": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13731": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13732": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "13735": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13736": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "13737": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "13739": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "13740": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13741": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13742": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13743": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35C2"
    },
    "13746": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13747": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13749": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13750": {
      "fn": "Vault.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13751": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13754": {
      "op": "NOT"
    },
    "13755": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "13756": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "13759": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "13760": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13761": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "13762": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13763": {
      "fn": "Vault.initialize",
      "offset": [
        13828,
        13847
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13765": {
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13767": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13768": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13769": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13771": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "ADD",
      "path": "18"
    },
    "13772": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13774": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13775": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13776": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "13778": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13779": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13780": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13782": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "ADD",
      "path": "18"
    },
    "13783": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x4175786F20000000000000000000000000000000000000000000000000000000"
    },
    "13816": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13817": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13818": {
      "fn": "Vault.initialize",
      "offset": [
        1407,
        1421
      ],
      "op": "POP",
      "path": "18"
    },
    "13819": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13901
      ],
      "op": "DUP7",
      "path": "18"
    },
    "13820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13826": {
      "op": "SHL"
    },
    "13827": {
      "op": "SUB"
    },
    "13828": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13906
      ],
      "op": "AND",
      "path": "18"
    },
    "13829": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13906
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "13834": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13836": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13837": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13838": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "13843": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "AND",
      "path": "18"
    },
    "13844": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "13846": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SHL",
      "path": "18"
    },
    "13847": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13848": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13849": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13851": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ADD",
      "path": "18"
    },
    "13852": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13854": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13856": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13857": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13858": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13859": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SUB",
      "path": "18"
    },
    "13860": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13861": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP7",
      "path": "18"
    },
    "13862": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "GAS",
      "path": "18"
    },
    "13863": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "13864": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13865": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13866": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13867": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3638"
    },
    "13870": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13871": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13872": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13874": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13875": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "13876": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13877": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13879": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "REVERT",
      "path": "18"
    },
    "13880": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13881": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "POP",
      "path": "18"
    },
    "13882": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "POP",
      "path": "18"
    },
    "13883": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "POP",
      "path": "18"
    },
    "13884": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "POP",
      "path": "18"
    },
    "13885": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13887": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13888": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13889": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13891": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13892": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "13893": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13895": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "13896": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13897": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13898": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ADD",
      "path": "18"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13901": {
      "op": "NOT"
    },
    "13902": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "AND",
      "path": "18"
    },
    "13903": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13904": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ADD",
      "path": "18"
    },
    "13905": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13907": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13908": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3660"
    },
    "13911": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13912": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13913": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13914": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "ADD",
      "path": "18"
    },
    "13915": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13916": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x558A"
    },
    "13919": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13890,
        13908
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13920": {
      "fn": "Vault.initialize",
      "offset": [
        13890,
        13908
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13921": {
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13923": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13924": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13925": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13927": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "ADD",
      "path": "18"
    },
    "13928": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13930": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13931": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13932": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "13934": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13935": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13936": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13938": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "ADD",
      "path": "18"
    },
    "13939": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x205661756C740000000000000000000000000000000000000000000000000000"
    },
    "13972": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13973": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13974": {
      "fn": "Vault.initialize",
      "offset": [
        1509,
        1524
      ],
      "op": "POP",
      "path": "18"
    },
    "13975": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13977": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13978": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13980": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "ADD",
      "path": "18"
    },
    "13981": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x36A8"
    },
    "13984": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "13985": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13986": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13987": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13988": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x562C"
    },
    "13991": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13857,
        13924
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13992": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13993": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13995": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13996": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13998": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13999": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14000": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SUB",
      "path": "18"
    },
    "14001": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SUB",
      "path": "18"
    },
    "14002": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14003": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14004": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14005": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14007": {
      "fn": "Vault.initialize",
      "offset": [
        13857,
        13924
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14008": {
      "fn": "Vault.initialize",
      "offset": [
        13828,
        13925
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14009": {
      "fn": "Vault.initialize",
      "offset": [
        13828,
        13925
      ],
      "op": "POP",
      "path": "18"
    },
    "14010": {
      "fn": "Vault.initialize",
      "offset": [
        13935,
        13956
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14012": {
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14014": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14015": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14016": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14018": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "ADD",
      "path": "18"
    },
    "14019": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14021": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14022": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14023": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14025": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14026": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14027": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14029": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "ADD",
      "path": "18"
    },
    "14030": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x6175786F00000000000000000000000000000000000000000000000000000000"
    },
    "14063": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14064": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14065": {
      "fn": "Vault.initialize",
      "offset": [
        1306,
        1319
      ],
      "op": "POP",
      "path": "18"
    },
    "14066": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14005
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14073": {
      "op": "SHL"
    },
    "14074": {
      "op": "SUB"
    },
    "14075": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14012
      ],
      "op": "AND",
      "path": "18"
    },
    "14076": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14012
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "14081": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14083": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14084": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14085": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "14090": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "AND",
      "path": "18"
    },
    "14091": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "14093": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SHL",
      "path": "18"
    },
    "14094": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14095": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14096": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14098": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ADD",
      "path": "18"
    },
    "14099": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14101": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14103": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14104": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14105": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14106": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SUB",
      "path": "18"
    },
    "14107": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14108": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14109": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "GAS",
      "path": "18"
    },
    "14110": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14111": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14112": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14113": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14114": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x372F"
    },
    "14117": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14118": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14119": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14121": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14122": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14123": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14124": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14126": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14127": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14128": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "POP",
      "path": "18"
    },
    "14129": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "POP",
      "path": "18"
    },
    "14130": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "POP",
      "path": "18"
    },
    "14131": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "POP",
      "path": "18"
    },
    "14132": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14134": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14135": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14136": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14138": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14139": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14140": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14142": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14143": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14144": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14145": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ADD",
      "path": "18"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14148": {
      "op": "NOT"
    },
    "14149": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "AND",
      "path": "18"
    },
    "14150": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14151": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ADD",
      "path": "18"
    },
    "14152": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14154": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14155": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3757"
    },
    "14158": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14159": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14160": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14161": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "ADD",
      "path": "18"
    },
    "14162": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14163": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x558A"
    },
    "14166": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13994,
        14014
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14167": {
      "fn": "Vault.initialize",
      "offset": [
        13994,
        14014
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14168": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14170": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14171": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14173": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "ADD",
      "path": "18"
    },
    "14174": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3768"
    },
    "14177": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14178": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14179": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14180": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x56A2"
    },
    "14183": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        13966,
        14016
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14184": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14185": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14187": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14188": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14190": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14191": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14192": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SUB",
      "path": "18"
    },
    "14193": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SUB",
      "path": "18"
    },
    "14194": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14195": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14196": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14197": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14199": {
      "fn": "Vault.initialize",
      "offset": [
        13966,
        14016
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14200": {
      "fn": "Vault.initialize",
      "offset": [
        13935,
        14017
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14201": {
      "fn": "Vault.initialize",
      "offset": [
        13935,
        14017
      ],
      "op": "POP",
      "path": "18"
    },
    "14202": {
      "fn": "Vault.initialize",
      "offset": [
        14056,
        14084
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 122,
      "value": "0x3783"
    },
    "14205": {
      "fn": "Vault.initialize",
      "offset": [
        14069,
        14074
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14206": {
      "fn": "Vault.initialize",
      "offset": [
        14076,
        14083
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14207": {
      "fn": "Vault.initialize",
      "offset": [
        14056,
        14068
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4887"
    },
    "14210": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14056,
        14084
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14211": {
      "fn": "Vault.initialize",
      "offset": [
        14056,
        14084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14212": {
      "fn": "Vault.initialize",
      "offset": [
        14094,
        14111
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 123,
      "value": "0x378B"
    },
    "14215": {
      "fn": "Vault.initialize",
      "offset": [
        14094,
        14109
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x495C"
    },
    "14218": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14094,
        14111
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14219": {
      "fn": "Vault.initialize",
      "offset": [
        14094,
        14111
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14220": {
      "fn": "Vault.initialize",
      "offset": [
        14153,
        14161
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 124,
      "value": "0x3793"
    },
    "14223": {
      "fn": "Vault.initialize",
      "offset": [
        14153,
        14159
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x448D"
    },
    "14226": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14153,
        14161
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14227": {
      "fn": "Vault.initialize",
      "offset": [
        14153,
        14161
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14228": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14206
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 125,
      "value": "0x99"
    },
    "14230": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14231": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14232": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "14265": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "AND",
      "path": "18"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14272": {
      "op": "SHL"
    },
    "14273": {
      "op": "SUB"
    },
    "14274": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "DUP10",
      "path": "18"
    },
    "14275": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "AND",
      "path": "18"
    },
    "14276": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14277": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14278": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "OR",
      "path": "18"
    },
    "14279": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14280": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14281": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14282": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 126,
      "value": "0x40"
    },
    "14284": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14285": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14286": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x313CE56700000000000000000000000000000000000000000000000000000000"
    },
    "14319": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14320": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14321": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14322": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14323": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14266
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x313CE567"
    },
    "14328": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14266
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14329": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14331": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14332": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14333": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "14334": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14335": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14337": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14338": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14339": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14340": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14341": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14342": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14343": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SUB",
      "path": "18"
    },
    "14344": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "14345": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14346": {
      "fn": "Vault.initialize",
      "offset": [
        14196,
        14220
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14347": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "GAS",
      "path": "18"
    },
    "14348": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14349": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14350": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14351": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14352": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x381D"
    },
    "14355": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14356": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14357": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14359": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14360": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14361": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14362": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14364": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14365": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14366": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14367": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14368": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14369": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14370": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14372": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14373": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14374": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14376": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "NOT",
      "path": "18"
    },
    "14377": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14379": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14380": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "14381": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "AND",
      "path": "18"
    },
    "14382": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14383": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "14384": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14385": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14387": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14388": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14389": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14390": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "ADD",
      "path": "18"
    },
    "14391": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14392": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3841"
    },
    "14395": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14396": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14397": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54A6"
    },
    "14400": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14246,
        14268
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14401": {
      "fn": "Vault.initialize",
      "offset": [
        14246,
        14268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14402": {
      "fn": "Vault.initialize",
      "offset": [
        14242,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x384C"
    },
    "14405": {
      "fn": "Vault.initialize",
      "offset": [
        14242,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14406": {
      "fn": "Vault.initialize",
      "offset": [
        14242,
        14244
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "14408": {
      "fn": "Vault.initialize",
      "offset": [
        14242,
        14268
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57AC"
    },
    "14411": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14242,
        14268
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14412": {
      "fn": "Vault.initialize",
      "offset": [
        14242,
        14268
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14413": {
      "fn": "Vault.initialize",
      "offset": [
        14230,
        14239
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "14415": {
      "fn": "Vault.initialize",
      "offset": [
        14230,
        14268
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14416": {
      "fn": "Vault.initialize",
      "offset": [
        14230,
        14268
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14417": {
      "fn": "Vault.initialize",
      "offset": [
        14230,
        14268
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14418": {
      "fn": "Vault.initialize",
      "offset": [
        14230,
        14268
      ],
      "op": "POP",
      "path": "18"
    },
    "14419": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14310
      ],
      "op": "DUP7",
      "path": "18",
      "statement": 127
    },
    "14420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14426": {
      "op": "SHL"
    },
    "14427": {
      "op": "SUB"
    },
    "14428": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14319
      ],
      "op": "AND",
      "path": "18"
    },
    "14429": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14319
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x313CE567"
    },
    "14434": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14436": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14437": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14438": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "14443": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "AND",
      "path": "18"
    },
    "14444": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "14446": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "SHL",
      "path": "18"
    },
    "14447": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14448": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14449": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14451": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ADD",
      "path": "18"
    },
    "14452": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14454": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14456": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14457": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14458": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14459": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "SUB",
      "path": "18"
    },
    "14460": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14461": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14462": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "GAS",
      "path": "18"
    },
    "14463": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14464": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14465": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14466": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14467": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3890"
    },
    "14470": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14471": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14472": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14474": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14475": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14476": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14477": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14479": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14480": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14481": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "POP",
      "path": "18"
    },
    "14482": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "POP",
      "path": "18"
    },
    "14483": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "POP",
      "path": "18"
    },
    "14484": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "POP",
      "path": "18"
    },
    "14485": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14487": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14488": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14489": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14491": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "NOT",
      "path": "18"
    },
    "14492": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14494": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14495": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ADD",
      "path": "18"
    },
    "14496": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "AND",
      "path": "18"
    },
    "14497": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14498": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ADD",
      "path": "18"
    },
    "14499": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14500": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14502": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14503": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "POP",
      "path": "18"
    },
    "14504": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14505": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "ADD",
      "path": "18"
    },
    "14506": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14507": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38B4"
    },
    "14510": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14511": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14512": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54A6"
    },
    "14515": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14299,
        14321
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14516": {
      "fn": "Vault.initialize",
      "offset": [
        14299,
        14321
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14517": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14296
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x99"
    },
    "14519": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14520": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14521": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "14523": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14524": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14525": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14526": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "AND",
      "path": "18"
    },
    "14527": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "PUSH21",
      "path": "18",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "14549": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "MUL",
      "path": "18"
    },
    "14550": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "14583": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14584": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14585": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "AND",
      "path": "18"
    },
    "14586": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14587": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14588": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14589": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "OR",
      "path": "18"
    },
    "14590": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14591": {
      "fn": "Vault.initialize",
      "offset": [
        14278,
        14321
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14592": {
      "op": "POP"
    },
    "14593": {
      "op": "POP"
    },
    "14594": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14336
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 128,
      "value": "0x98"
    },
    "14596": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14597": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14604": {
      "op": "SHL"
    },
    "14605": {
      "op": "SUB"
    },
    "14606": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14607": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14608": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "AND",
      "path": "18"
    },
    "14609": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "14642": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14643": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14644": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "AND",
      "path": "18"
    },
    "14645": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "OR",
      "path": "18"
    },
    "14646": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14647": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14648": {
      "fn": "Vault.initialize",
      "offset": [
        14332,
        14344
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14649": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14372
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 129,
      "value": "0x9E"
    },
    "14651": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14652": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14653": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14654": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14655": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "AND",
      "path": "18"
    },
    "14656": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14657": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14658": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "AND",
      "path": "18"
    },
    "14659": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "OR",
      "path": "18"
    },
    "14660": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14661": {
      "fn": "Vault.initialize",
      "offset": [
        14354,
        14391
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14662": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14419
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 130,
      "value": "0x9C"
    },
    "14664": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14665": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14666": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14667": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14668": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "AND",
      "path": "18"
    },
    "14669": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14670": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14671": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14672": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "AND",
      "path": "18"
    },
    "14673": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14674": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14675": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14676": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "OR",
      "path": "18"
    },
    "14677": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14678": {
      "fn": "Vault.initialize",
      "offset": [
        14401,
        14441
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14681": {
      "fn": "Vault.initialize",
      "offset": [
        14553,
        14567
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 131,
      "value": "0xA7"
    },
    "14683": {
      "fn": "Vault.initialize",
      "offset": [
        14553,
        14571
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14684": {
      "fn": "Vault.initialize",
      "offset": [
        14736,
        14743
      ],
      "op": "PUSH3",
      "path": "18",
      "statement": 132,
      "value": "0x259E9D"
    },
    "14688": {
      "fn": "Vault.initialize",
      "offset": [
        14718,
        14733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x97"
    },
    "14690": {
      "fn": "Vault.initialize",
      "offset": [
        14718,
        14743
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "14691": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14692": {
      "fn": "Vault.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14693": {
      "fn": "Vault.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3974"
    },
    "14696": {
      "fn": "Vault.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14697": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14699": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14700": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "14701": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "14704": {
      "op": "NOT"
    },
    "14705": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "14706": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14707": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "14708": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14709": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "14710": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "POP",
      "path": "18"
    },
    "14711": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "POP",
      "path": "18"
    },
    "14712": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "POP",
      "path": "18"
    },
    "14713": {
      "fn": "Vault.initialize",
      "offset": [
        13625,
        14750
      ],
      "op": "POP",
      "path": "18"
    },
    "14714": {
      "fn": "Vault.initialize",
      "jump": "o",
      "offset": [
        13625,
        14750
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14715": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10325,
        10695
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14722": {
      "op": "SHL"
    },
    "14723": {
      "op": "SUB"
    },
    "14724": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10475
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 133
    },
    "14725": {
      "branch": 236,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10475
      ],
      "op": "AND",
      "path": "6"
    },
    "14726": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39F6"
    },
    "14729": {
      "branch": 236,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "14730": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14732": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "14733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14739": {
      "op": "SHL"
    },
    "14740": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14741": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14744": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "14746": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14747": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "ADD",
      "path": "6"
    },
    "14748": {
      "op": "MSTORE"
    },
    "14749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14751": {
      "op": "DUP1"
    },
    "14752": {
      "op": "DUP3"
    },
    "14753": {
      "op": "ADD"
    },
    "14754": {
      "op": "MSTORE"
    },
    "14755": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14790": {
      "op": "DUP3"
    },
    "14791": {
      "op": "ADD"
    },
    "14792": {
      "op": "MSTORE"
    },
    "14793": {
      "op": "PUSH32",
      "value": "0x7265737300000000000000000000000000000000000000000000000000000000"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14828": {
      "op": "DUP3"
    },
    "14829": {
      "op": "ADD"
    },
    "14830": {
      "op": "MSTORE"
    },
    "14831": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14833": {
      "op": "ADD"
    },
    "14834": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "14837": {
      "op": "JUMP"
    },
    "14838": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14845": {
      "op": "SHL"
    },
    "14846": {
      "op": "SUB"
    },
    "14847": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10534,
        10555
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 134
    },
    "14848": {
      "branch": 237,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10534,
        10555
      ],
      "op": "AND",
      "path": "6"
    },
    "14849": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A72"
    },
    "14852": {
      "branch": 237,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "14853": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14855": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "14856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14862": {
      "op": "SHL"
    },
    "14863": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14864": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14867": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "14869": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14870": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "ADD",
      "path": "6"
    },
    "14871": {
      "op": "MSTORE"
    },
    "14872": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14876": {
      "op": "DUP3"
    },
    "14877": {
      "op": "ADD"
    },
    "14878": {
      "op": "MSTORE"
    },
    "14879": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "14912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14914": {
      "op": "DUP3"
    },
    "14915": {
      "op": "ADD"
    },
    "14916": {
      "op": "MSTORE"
    },
    "14917": {
      "op": "PUSH32",
      "value": "0x7373000000000000000000000000000000000000000000000000000000000000"
    },
    "14950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14952": {
      "op": "DUP3"
    },
    "14953": {
      "op": "ADD"
    },
    "14954": {
      "op": "MSTORE"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14957": {
      "op": "ADD"
    },
    "14958": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "14961": {
      "op": "JUMP"
    },
    "14962": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14969": {
      "op": "SHL"
    },
    "14970": {
      "op": "SUB"
    },
    "14971": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 135
    },
    "14972": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14973": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "AND",
      "path": "6"
    },
    "14974": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14976": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14977": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14978": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14979": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "14981": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "14983": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14984": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14985": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14986": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14988": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP1",
      "path": "6"
    },
    "14989": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP4",
      "path": "6"
    },
    "14990": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "14991": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "14992": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP8",
      "path": "6"
    },
    "14993": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "AND",
      "path": "6"
    },
    "14994": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP1",
      "path": "6"
    },
    "14995": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP5",
      "path": "6"
    },
    "14996": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14997": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "14998": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14999": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15000": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "15001": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP3",
      "path": "6"
    },
    "15002": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15003": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "15004": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "DUP6",
      "path": "6"
    },
    "15005": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15006": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "15007": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 136
    },
    "15008": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "15009": {
      "op": "DUP5"
    },
    "15010": {
      "op": "DUP2"
    },
    "15011": {
      "op": "MSTORE"
    },
    "15012": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "15045": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "15046": {
      "op": "ADD"
    },
    "15047": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1613"
    },
    "15050": {
      "op": "JUMP"
    },
    "15051": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        818,
        1320
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "15052": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "DUP3",
      "path": "22"
    },
    "15053": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "DUP3",
      "path": "22"
    },
    "15054": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "MUL",
      "path": "22"
    },
    "15055": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1116,
        1125
      ],
      "op": "DUP4",
      "path": "22"
    },
    "15056": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1116,
        1125
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "15057": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DUP5",
      "path": "22"
    },
    "15058": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DUP3",
      "path": "22"
    },
    "15059": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DIV",
      "path": "22"
    },
    "15060": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1127,
        1143
      ],
      "op": "DUP5",
      "path": "22"
    },
    "15061": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1127,
        1143
      ],
      "op": "EQ",
      "path": "22"
    },
    "15062": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1113,
        1144
      ],
      "op": "OR",
      "path": "22"
    },
    "15063": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3ADF"
    },
    "15066": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "15067": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1174,
        1175
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "15069": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1171,
        1172
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15070": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1164,
        1176
      ],
      "op": "REVERT",
      "path": "22"
    },
    "15071": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "15072": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1288,
        1304
      ],
      "op": "DIV",
      "path": "22"
    },
    "15073": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1288,
        1304
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "15074": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        818,
        1320
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "15075": {
      "op": "POP"
    },
    "15076": {
      "op": "POP"
    },
    "15077": {
      "fn": "FixedPointMathLib.fmul",
      "jump": "o",
      "offset": [
        818,
        1320
      ],
      "op": "JUMP",
      "path": "22"
    },
    "15078": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38565,
        41146
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15079": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38874
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA6"
    },
    "15081": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38881
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15082": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38738,
        38754
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15083": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38738,
        38754
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15084": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38711,
        38735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15086": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38711,
        38735
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15087": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38885
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AFA"
    },
    "15090": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38885
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15091": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38884,
        38885
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "15093": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38884,
        38885
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15094": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38885
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B9"
    },
    "15097": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "i",
      "offset": [
        38859,
        38885
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15098": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38859,
        38885
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15099": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38836,
        38885
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15100": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        38836,
        38885
      ],
      "op": "POP",
      "path": "18"
    },
    "15101": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39083,
        40890
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15102": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39182,
        39200
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15104": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39218
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA6"
    },
    "15106": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39219,
        39231
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15107": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15108": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15109": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15110": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "LT",
      "path": "18"
    },
    "15111": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B12"
    },
    "15114": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15115": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B12"
    },
    "15118": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54F4"
    },
    "15121": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "i",
      "offset": [
        39203,
        39232
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15122": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15123": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15125": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15126": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15127": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15128": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15130": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15131": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15132": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "15133": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15134": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15135": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "ADD",
      "path": "18"
    },
    "15136": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15143": {
      "op": "SHL"
    },
    "15144": {
      "op": "SUB"
    },
    "15145": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "AND",
      "path": "18"
    },
    "15146": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15147": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15148": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15149": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39363
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "15151": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15152": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15153": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15154": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15156": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15157": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15158": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39373
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "15159": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15160": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15161": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15162": {
      "op": "POP"
    },
    "15163": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "15195": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39203,
        39232
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "15198": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15199": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "DIV",
      "path": "18"
    },
    "15200": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "AND",
      "path": "18"
    },
    "15201": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39348,
        39381
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15202": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39506,
        39539
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "15204": {
      "branch": 223,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39506,
        39539
      ],
      "op": "AND",
      "path": "18"
    },
    "15205": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39505,
        39539
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15206": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39505,
        39539
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15207": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39505,
        39563
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B6E"
    },
    "15210": {
      "branch": 223,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39505,
        39563
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15211": {
      "op": "POP"
    },
    "15212": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39543,
        39563
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15213": {
      "branch": 224,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39543,
        39563
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15214": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39505,
        39563
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15215": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39501,
        39573
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15216": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39501,
        39573
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B7A"
    },
    "15219": {
      "branch": 224,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39501,
        39573
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15220": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39565,
        39573
      ],
      "op": "POP",
      "path": "18",
      "statement": 137
    },
    "15221": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39565,
        39573
      ],
      "op": "POP",
      "path": "18"
    },
    "15222": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39565,
        39573
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D36"
    },
    "15225": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39565,
        39573
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15226": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39501,
        39573
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15227": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39682,
        39702
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15229": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39726,
        39741
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15230": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39706,
        39722
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15231": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39706,
        39741
      ],
      "op": "GT",
      "path": "18"
    },
    "15232": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39706,
        39741
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15233": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B8A"
    },
    "15236": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15237": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39764,
        39779
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15238": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B8C"
    },
    "15241": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15242": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15243": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39745,
        39761
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15244": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39705,
        39779
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15245": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39682,
        39779
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15246": {
      "op": "POP"
    },
    "15247": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40046,
        40076
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15248": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40046,
        40076
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15249": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40046,
        40076
      ],
      "op": "SUB",
      "path": "18"
    },
    "15250": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40218,
        40264
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 138,
      "value": "0x3B9A"
    },
    "15253": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40046,
        40076
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15254": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40218,
        40262
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45B5"
    },
    "15257": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "i",
      "offset": [
        40218,
        40264
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15258": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40218,
        40264
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15265": {
      "op": "SHL"
    },
    "15266": {
      "op": "SUB"
    },
    "15267": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15268": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "AND",
      "path": "18"
    },
    "15269": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15271": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15272": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15273": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15274": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40197
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA1"
    },
    "15276": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15278": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15279": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15281": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15282": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15283": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15284": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40207
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "15285": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15286": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15287": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "PUSH31",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "15319": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "15320": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15321": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "15322": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "AND",
      "path": "18"
    },
    "15323": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "15326": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "MUL",
      "path": "18"
    },
    "15327": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "15329": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15330": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "15331": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "AND",
      "path": "18"
    },
    "15332": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "15333": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15334": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "15335": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "OR",
      "path": "18"
    },
    "15336": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15337": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15338": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40182,
        40264
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "15339": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 139
    },
    "15340": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15341": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40460,
        40492
      ],
      "op": "SWAP7",
      "path": "18",
      "statement": 140
    },
    "15342": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40460,
        40492
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15343": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40460,
        40492
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15344": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40460,
        40492
      ],
      "op": "SUB",
      "path": "18"
    },
    "15345": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40460,
        40492
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "15346": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40535,
        40545
      ],
      "op": "CALLER",
      "path": "18"
    },
    "15347": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40535,
        40545
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15348": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE"
    },
    "15381": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15382": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C22"
    },
    "15385": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15386": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40480,
        40492
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15387": {
      "op": "DUP2"
    },
    "15388": {
      "op": "MSTORE"
    },
    "15389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15391": {
      "op": "ADD"
    },
    "15392": {
      "op": "SWAP1"
    },
    "15393": {
      "op": "JUMP"
    },
    "15394": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15395": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15397": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15398": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15399": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15400": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SUB",
      "path": "18"
    },
    "15401": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15402": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40516,
        40570
      ],
      "op": "LOG3",
      "path": "18"
    },
    "15403": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 141,
      "value": "0x40"
    },
    "15405": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15406": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x2E1A7D4D00000000000000000000000000000000000000000000000000000000"
    },
    "15439": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15440": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15441": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15443": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15444": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ADD",
      "path": "18"
    },
    "15445": {
      "op": "DUP4"
    },
    "15446": {
      "op": "SWAP1"
    },
    "15447": {
      "op": "MSTORE"
    },
    "15448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15454": {
      "op": "SHL"
    },
    "15455": {
      "op": "SUB"
    },
    "15456": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40697
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15457": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40697
      ],
      "op": "AND",
      "path": "18"
    },
    "15458": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40697
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15459": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40697
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2E1A7D4D"
    },
    "15464": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40697
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15467": {
      "op": "ADD"
    },
    "15468": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15470": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15472": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15473": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15474": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15475": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "SUB",
      "path": "18"
    },
    "15476": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15477": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15479": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15480": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "GAS",
      "path": "18"
    },
    "15481": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "CALL",
      "path": "18"
    },
    "15482": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15483": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15484": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15485": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C8A"
    },
    "15488": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15489": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15490": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15492": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15493": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "15494": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15495": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15497": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15498": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15499": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "POP",
      "path": "18"
    },
    "15500": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "POP",
      "path": "18"
    },
    "15501": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "POP",
      "path": "18"
    },
    "15502": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "POP",
      "path": "18"
    },
    "15503": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15505": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15506": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15507": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15509": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "NOT",
      "path": "18"
    },
    "15510": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15512": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15513": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ADD",
      "path": "18"
    },
    "15514": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "AND",
      "path": "18"
    },
    "15515": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15516": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ADD",
      "path": "18"
    },
    "15517": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15518": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15520": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15521": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "POP",
      "path": "18"
    },
    "15522": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15523": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "ADD",
      "path": "18"
    },
    "15524": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15525": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CAE"
    },
    "15528": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15529": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15530": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54A6"
    },
    "15533": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "i",
      "offset": [
        40680,
        40711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15534": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15535": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40716
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "15537": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40716
      ],
      "op": "AND",
      "path": "18"
    },
    "15538": {
      "branch": 225,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40680,
        40716
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15539": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D24"
    },
    "15542": {
      "branch": 225,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15543": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15545": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15552": {
      "op": "SHL"
    },
    "15553": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15554": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15557": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15559": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15560": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "ADD",
      "path": "18"
    },
    "15561": {
      "op": "MSTORE"
    },
    "15562": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "15564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15566": {
      "op": "DUP3"
    },
    "15567": {
      "op": "ADD"
    },
    "15568": {
      "op": "MSTORE"
    },
    "15569": {
      "op": "PUSH32",
      "value": "0x70756C6C46726F6D5769746864726177616C51756575653A3A52454445454D5F"
    },
    "15602": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15604": {
      "op": "DUP3"
    },
    "15605": {
      "op": "ADD"
    },
    "15606": {
      "op": "MSTORE"
    },
    "15607": {
      "op": "PUSH32",
      "value": "0x4641494C45440000000000000000000000000000000000000000000000000000"
    },
    "15640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15642": {
      "op": "DUP3"
    },
    "15643": {
      "op": "ADD"
    },
    "15644": {
      "op": "MSTORE"
    },
    "15645": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15647": {
      "op": "ADD"
    },
    "15648": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "15651": {
      "op": "JUMP"
    },
    "15652": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40672,
        40759
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15653": {
      "op": "POP"
    },
    "15654": {
      "branch": 226,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40851,
        40872
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15655": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40847,
        40879
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D32"
    },
    "15658": {
      "branch": 226,
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40847,
        40879
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15659": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40874,
        40879
      ],
      "op": "POP",
      "path": "18",
      "statement": 142
    },
    "15660": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40874,
        40879
      ],
      "op": "POP",
      "path": "18"
    },
    "15661": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40874,
        40879
      ],
      "op": "POP",
      "path": "18"
    },
    "15662": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40874,
        40879
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D48"
    },
    "15665": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40874,
        40879
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15666": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        40847,
        40879
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15667": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39108,
        40890
      ],
      "op": "POP",
      "path": "18"
    },
    "15668": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39108,
        40890
      ],
      "op": "POP",
      "path": "18"
    },
    "15669": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39108,
        40890
      ],
      "op": "POP",
      "path": "18"
    },
    "15670": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39083,
        40890
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15671": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 143
    },
    "15672": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D40"
    },
    "15675": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15676": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57BB"
    },
    "15679": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "i",
      "offset": [
        39092,
        39106
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15680": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15681": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15682": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "POP",
      "path": "18"
    },
    "15683": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39092,
        39106
      ],
      "op": "POP",
      "path": "18"
    },
    "15684": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39083,
        40890
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AFD"
    },
    "15687": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39083,
        40890
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15688": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        39083,
        40890
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15689": {
      "op": "POP"
    },
    "15690": {
      "op": "POP"
    },
    "15691": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41109
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 144,
      "value": "0xA0"
    },
    "15693": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15694": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15695": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15696": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15697": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15698": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SUB",
      "path": "18"
    },
    "15699": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15700": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "offset": [
        41088,
        41129
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "15701": {
      "fn": "Vault.pullFromWithdrawalQueue",
      "jump": "o",
      "offset": [
        38565,
        41146
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15702": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9326,
        9902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15709": {
      "op": "SHL"
    },
    "15710": {
      "op": "SUB"
    },
    "15711": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9409,
        9430
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 145
    },
    "15712": {
      "branch": 238,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9409,
        9430
      ],
      "op": "AND",
      "path": "6"
    },
    "15713": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DD2"
    },
    "15716": {
      "branch": 238,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "15717": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "15719": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "15720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15726": {
      "op": "SHL"
    },
    "15727": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15728": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15731": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "15733": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "DUP3",
      "path": "6"
    },
    "15734": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "ADD",
      "path": "6"
    },
    "15735": {
      "op": "MSTORE"
    },
    "15736": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "15738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15740": {
      "op": "DUP3"
    },
    "15741": {
      "op": "ADD"
    },
    "15742": {
      "op": "MSTORE"
    },
    "15743": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "15776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15778": {
      "op": "DUP3"
    },
    "15779": {
      "op": "ADD"
    },
    "15780": {
      "op": "MSTORE"
    },
    "15781": {
      "op": "PUSH32",
      "value": "0x7300000000000000000000000000000000000000000000000000000000000000"
    },
    "15814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15816": {
      "op": "DUP3"
    },
    "15817": {
      "op": "ADD"
    },
    "15818": {
      "op": "MSTORE"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15821": {
      "op": "ADD"
    },
    "15822": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "15825": {
      "op": "JUMP"
    },
    "15826": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15833": {
      "op": "SHL"
    },
    "15834": {
      "op": "SUB"
    },
    "15835": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "DUP3",
      "path": "6"
    },
    "15836": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "AND",
      "path": "6"
    },
    "15837": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9539,
        9561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15839": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15840": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15841": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15842": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "15844": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "15846": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15847": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "15849": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15850": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "15851": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "15852": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 146
    },
    "15853": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15854": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "LT",
      "path": "6"
    },
    "15855": {
      "branch": 239,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "15856": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E61"
    },
    "15859": {
      "branch": 239,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "15860": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "15862": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "15863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15869": {
      "op": "SHL"
    },
    "15870": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15871": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15874": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "15876": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "DUP3",
      "path": "6"
    },
    "15877": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "ADD",
      "path": "6"
    },
    "15878": {
      "op": "MSTORE"
    },
    "15879": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15883": {
      "op": "DUP3"
    },
    "15884": {
      "op": "ADD"
    },
    "15885": {
      "op": "MSTORE"
    },
    "15886": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "15919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15921": {
      "op": "DUP3"
    },
    "15922": {
      "op": "ADD"
    },
    "15923": {
      "op": "MSTORE"
    },
    "15924": {
      "op": "PUSH32",
      "value": "0x6365000000000000000000000000000000000000000000000000000000000000"
    },
    "15957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15959": {
      "op": "DUP3"
    },
    "15960": {
      "op": "ADD"
    },
    "15961": {
      "op": "MSTORE"
    },
    "15962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15964": {
      "op": "ADD"
    },
    "15965": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "15968": {
      "op": "JUMP"
    },
    "15969": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15976": {
      "op": "SHL"
    },
    "15977": {
      "op": "SUB"
    },
    "15978": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 147
    },
    "15979": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "AND",
      "path": "6"
    },
    "15980": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15982": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15983": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15984": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15985": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9706
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "15987": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "15989": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "15990": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "15992": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "15993": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "15994": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "15995": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "15996": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "SUB",
      "path": "6"
    },
    "15997": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "15998": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9741
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "15999": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9773
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 148,
      "value": "0x35"
    },
    "16001": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "16002": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "16003": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16004": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "16005": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16006": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E90"
    },
    "16009": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16010": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16011": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16012": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53B9"
    },
    "16015": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9761,
        9783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16016": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16017": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16018": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "16019": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "16020": {
      "op": "POP"
    },
    "16021": {
      "op": "POP"
    },
    "16022": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 149,
      "value": "0x40"
    },
    "16024": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16025": {
      "op": "DUP3"
    },
    "16026": {
      "op": "DUP2"
    },
    "16027": {
      "op": "MSTORE"
    },
    "16028": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9825,
        9826
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "16030": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9825,
        9826
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16037": {
      "op": "SHL"
    },
    "16038": {
      "op": "SUB"
    },
    "16039": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16040": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "AND",
      "path": "6"
    },
    "16041": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16042": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "16075": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16078": {
      "op": "ADD"
    },
    "16079": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16081": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16082": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "DUP1",
      "path": "6"
    },
    "16083": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "16084": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SUB",
      "path": "6"
    },
    "16085": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16086": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "LOG3",
      "path": "6"
    },
    "16087": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "16088": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "16089": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        37178,
        38291
      ],
      "op": "POP",
      "path": "18"
    },
    "16090": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "o",
      "offset": [
        37178,
        38291
      ],
      "op": "JUMP",
      "path": "18"
    },
    "16091": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        678,
        894
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16092": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 150,
      "value": "0x40"
    },
    "16094": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16101": {
      "op": "SHL"
    },
    "16102": {
      "op": "SUB"
    },
    "16103": {
      "op": "DUP4"
    },
    "16104": {
      "op": "AND"
    },
    "16105": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "16107": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP3",
      "path": "9"
    },
    "16108": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "16109": {
      "op": "MSTORE"
    },
    "16110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16112": {
      "op": "DUP2"
    },
    "16113": {
      "op": "ADD"
    },
    "16114": {
      "op": "DUP3"
    },
    "16115": {
      "op": "SWAP1"
    },
    "16116": {
      "op": "MSTORE"
    },
    "16117": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        887
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x261E"
    },
    "16120": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        887
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16121": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        821,
        826
      ],
      "op": "DUP5",
      "path": "9"
    },
    "16122": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        821,
        826
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16123": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        851,
        874
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA9059CBB00000000000000000000000000000000000000000000000000000000"
    },
    "16156": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        851,
        874
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16159": {
      "op": "ADD"
    },
    "16160": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16161": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "16163": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16164": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16167": {
      "op": "NOT"
    },
    "16168": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16169": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP5",
      "path": "9"
    },
    "16170": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SUB",
      "path": "9"
    },
    "16171": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "16172": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16173": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16174": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "16175": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16176": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16177": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "16179": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16180": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "16181": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16182": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16183": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH28",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "16212": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "AND",
      "path": "9"
    },
    "16213": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"
    },
    "16246": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16247": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "16248": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "AND",
      "path": "9"
    },
    "16249": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "16250": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16251": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "16252": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "OR",
      "path": "9"
    },
    "16253": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16254": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "16255": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16256": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        820
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A2D"
    },
    "16259": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "jump": "i",
      "offset": [
        801,
        887
      ],
      "op": "JUMP",
      "path": "9"
    },
    "16260": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1326,
        1900
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "16261": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "DUP3",
      "path": "22"
    },
    "16262": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "DUP2",
      "path": "22"
    },
    "16263": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "MUL",
      "path": "22"
    },
    "16264": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1672,
        1681
      ],
      "op": "DUP3",
      "path": "22"
    },
    "16265": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1672,
        1681
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "16266": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1665,
        1682
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "16267": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1687,
        1696
      ],
      "op": "DUP5",
      "path": "22"
    },
    "16268": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1687,
        1696
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "16269": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DUP6",
      "path": "22"
    },
    "16270": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DUP4",
      "path": "22"
    },
    "16271": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DIV",
      "path": "22"
    },
    "16272": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1698,
        1721
      ],
      "op": "DUP5",
      "path": "22"
    },
    "16273": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1698,
        1721
      ],
      "op": "EQ",
      "path": "22"
    },
    "16274": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1684,
        1722
      ],
      "op": "OR",
      "path": "22"
    },
    "16275": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1661,
        1723
      ],
      "op": "AND",
      "path": "22"
    },
    "16276": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F9C"
    },
    "16279": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "16280": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "16282": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1750,
        1751
      ],
      "op": "DUP1",
      "path": "22"
    },
    "16283": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1743,
        1755
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16284": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "16285": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "16286": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "16287": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "16288": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "DIV",
      "path": "22"
    },
    "16289": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "16290": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1326,
        1900
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "16291": {
      "op": "POP"
    },
    "16292": {
      "op": "POP"
    },
    "16293": {
      "fn": "FixedPointMathLib.fdiv",
      "jump": "o",
      "offset": [
        1326,
        1900
      ],
      "op": "JUMP",
      "path": "22"
    },
    "16294": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16301": {
      "op": "SHL"
    },
    "16302": {
      "op": "SUB"
    },
    "16303": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7763,
        7783
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 151
    },
    "16304": {
      "branch": 240,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7763,
        7783
      ],
      "op": "AND",
      "path": "6"
    },
    "16305": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4022"
    },
    "16308": {
      "branch": 240,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "16309": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16311": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16318": {
      "op": "SHL"
    },
    "16319": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16320": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16323": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "16325": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "DUP3",
      "path": "6"
    },
    "16326": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "ADD",
      "path": "6"
    },
    "16327": {
      "op": "MSTORE"
    },
    "16328": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16332": {
      "op": "DUP3"
    },
    "16333": {
      "op": "ADD"
    },
    "16334": {
      "op": "MSTORE"
    },
    "16335": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "16368": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16370": {
      "op": "DUP3"
    },
    "16371": {
      "op": "ADD"
    },
    "16372": {
      "op": "MSTORE"
    },
    "16373": {
      "op": "PUSH32",
      "value": "0x6472657373000000000000000000000000000000000000000000000000000000"
    },
    "16406": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16408": {
      "op": "DUP3"
    },
    "16409": {
      "op": "ADD"
    },
    "16410": {
      "op": "MSTORE"
    },
    "16411": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16413": {
      "op": "ADD"
    },
    "16414": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "16417": {
      "op": "JUMP"
    },
    "16418": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16425": {
      "op": "SHL"
    },
    "16426": {
      "op": "SUB"
    },
    "16427": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7843,
        7866
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 152
    },
    "16428": {
      "branch": 241,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7843,
        7866
      ],
      "op": "AND",
      "path": "6"
    },
    "16429": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x409E"
    },
    "16432": {
      "branch": 241,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "16433": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16435": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16442": {
      "op": "SHL"
    },
    "16443": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16444": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16447": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "16449": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "DUP3",
      "path": "6"
    },
    "16450": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "ADD",
      "path": "6"
    },
    "16451": {
      "op": "MSTORE"
    },
    "16452": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "16454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16456": {
      "op": "DUP3"
    },
    "16457": {
      "op": "ADD"
    },
    "16458": {
      "op": "MSTORE"
    },
    "16459": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "16492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16494": {
      "op": "DUP3"
    },
    "16495": {
      "op": "ADD"
    },
    "16496": {
      "op": "MSTORE"
    },
    "16497": {
      "op": "PUSH32",
      "value": "0x6573730000000000000000000000000000000000000000000000000000000000"
    },
    "16530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16532": {
      "op": "DUP3"
    },
    "16533": {
      "op": "ADD"
    },
    "16534": {
      "op": "MSTORE"
    },
    "16535": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16537": {
      "op": "ADD"
    },
    "16538": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "16541": {
      "op": "JUMP"
    },
    "16542": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16549": {
      "op": "SHL"
    },
    "16550": {
      "op": "SUB"
    },
    "16551": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "DUP4",
      "path": "6"
    },
    "16552": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "AND",
      "path": "6"
    },
    "16553": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "16555": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16556": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16557": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16558": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "16560": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "16562": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16563": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16565": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16566": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "16567": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "16568": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 153
    },
    "16569": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16570": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "LT",
      "path": "6"
    },
    "16571": {
      "branch": 242,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "16572": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x412D"
    },
    "16575": {
      "branch": 242,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "16576": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16578": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16585": {
      "op": "SHL"
    },
    "16586": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16587": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16590": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "16592": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "DUP3",
      "path": "6"
    },
    "16593": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "ADD",
      "path": "6"
    },
    "16594": {
      "op": "MSTORE"
    },
    "16595": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "16597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16599": {
      "op": "DUP3"
    },
    "16600": {
      "op": "ADD"
    },
    "16601": {
      "op": "MSTORE"
    },
    "16602": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "16635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16637": {
      "op": "DUP3"
    },
    "16638": {
      "op": "ADD"
    },
    "16639": {
      "op": "MSTORE"
    },
    "16640": {
      "op": "PUSH32",
      "value": "0x616C616E63650000000000000000000000000000000000000000000000000000"
    },
    "16673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16675": {
      "op": "DUP3"
    },
    "16676": {
      "op": "ADD"
    },
    "16677": {
      "op": "MSTORE"
    },
    "16678": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16680": {
      "op": "ADD"
    },
    "16681": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "16684": {
      "op": "JUMP"
    },
    "16685": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16692": {
      "op": "SHL"
    },
    "16693": {
      "op": "SUB"
    },
    "16694": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 154
    },
    "16695": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16696": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "AND",
      "path": "6"
    },
    "16697": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "16699": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16700": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16701": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16702": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8143
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "16704": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "16706": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16707": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16709": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "16710": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP3",
      "path": "6"
    },
    "16711": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "16712": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16713": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16714": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "SUB",
      "path": "6"
    },
    "16715": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16716": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8176
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "16717": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 155
    },
    "16718": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16719": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "AND",
      "path": "6"
    },
    "16720": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16721": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "16722": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16723": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16724": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "16725": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "DUP1",
      "path": "6"
    },
    "16726": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "16727": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16728": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "16729": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16730": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4164"
    },
    "16733": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16734": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16735": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16736": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53A1"
    },
    "16739": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8196,
        8226
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16740": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16741": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "16742": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "16743": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "16744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "DUP2",
      "path": "6"
    },
    "16745": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16746": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "16747": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "16748": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8259,
        8268
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 156
    },
    "16749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16755": {
      "op": "SHL"
    },
    "16756": {
      "op": "SUB"
    },
    "16757": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "AND",
      "path": "6"
    },
    "16758": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8251,
        8257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16765": {
      "op": "SHL"
    },
    "16766": {
      "op": "SUB"
    },
    "16767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "AND",
      "path": "6"
    },
    "16768": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "16801": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8270,
        8276
      ],
      "op": "DUP5",
      "path": "6"
    },
    "16802": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16804": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16805": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41B0"
    },
    "16808": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "16809": {
      "op": "DUP2"
    },
    "16810": {
      "op": "MSTORE"
    },
    "16811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16813": {
      "op": "ADD"
    },
    "16814": {
      "op": "SWAP1"
    },
    "16815": {
      "op": "JUMP"
    },
    "16816": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16817": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "16819": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16820": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "DUP1",
      "path": "6"
    },
    "16821": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "16822": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SUB",
      "path": "6"
    },
    "16823": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16824": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "LOG3",
      "path": "6"
    },
    "16825": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8288,
        8334
      ],
      "op": "JUMPDEST",
      "path": "6",
      "statement": 157
    },
    "16826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "16827": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "16828": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "16829": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "16830": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "o",
      "offset": [
        7628,
        8341
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16831": {
      "fn": "Vault._deposit",
      "offset": [
        28467,
        29343
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "16832": {
      "offset": [
        12523,
        12527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x98"
    },
    "16834": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12527
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "16835": {
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "16837": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "16838": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x14D9A97900000000000000000000000000000000000000000000000000000000"
    },
    "16871": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "16872": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "16873": {
      "offset": [
        12555,
        12559
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "16874": {
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "16876": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "16877": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ADD",
      "path": "18"
    },
    "16878": {
      "op": "MSTORE"
    },
    "16879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16885": {
      "op": "SHL"
    },
    "16886": {
      "op": "SUB"
    },
    "16887": {
      "op": "DUP1"
    },
    "16888": {
      "op": "DUP7"
    },
    "16889": {
      "op": "AND"
    },
    "16890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16892": {
      "op": "DUP4"
    },
    "16893": {
      "op": "ADD"
    },
    "16894": {
      "op": "MSTORE"
    },
    "16895": {
      "fn": "Vault._deposit",
      "offset": [
        28600,
        28602
      ],
      "op": "DUP6",
      "path": "18"
    },
    "16896": {
      "fn": "Vault._deposit",
      "offset": [
        28600,
        28602
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "16897": {
      "offset": [
        12523,
        12527
      ],
      "op": "AND",
      "path": "18"
    },
    "16898": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12527
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16899": {
      "offset": [
        12523,
        12539
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x14D9A979"
    },
    "16904": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12539
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16907": {
      "op": "ADD"
    },
    "16908": {
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "16910": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "16912": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "16913": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "16914": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP4",
      "path": "18"
    },
    "16915": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "SUB",
      "path": "18"
    },
    "16916": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "16917": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP7",
      "path": "18"
    },
    "16918": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "GAS",
      "path": "18"
    },
    "16919": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "16920": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "16921": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "16922": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "16923": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4228"
    },
    "16926": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "16927": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "16928": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "16930": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "16931": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "16932": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "16933": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "16935": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16936": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "16937": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "POP",
      "path": "18"
    },
    "16938": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "POP",
      "path": "18"
    },
    "16939": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "POP",
      "path": "18"
    },
    "16940": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "POP",
      "path": "18"
    },
    "16941": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "16943": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "16944": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "16945": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "16947": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "NOT",
      "path": "18"
    },
    "16948": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "16950": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "16951": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ADD",
      "path": "18"
    },
    "16952": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "AND",
      "path": "18"
    },
    "16953": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "16954": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ADD",
      "path": "18"
    },
    "16955": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "16956": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "16958": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "16959": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "POP",
      "path": "18"
    },
    "16960": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "16961": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "ADD",
      "path": "18"
    },
    "16962": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16963": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x424C"
    },
    "16966": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "16967": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16968": {
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5324"
    },
    "16971": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        12523,
        12570
      ],
      "op": "JUMP",
      "path": "18"
    },
    "16972": {
      "branch": 227,
      "fn": "Vault._deposit",
      "offset": [
        12523,
        12570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "16973": {
      "offset": [
        12515,
        12595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4298"
    },
    "16976": {
      "branch": 227,
      "offset": [
        12515,
        12595
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "16977": {
      "fn": "Vault._deposit",
      "offset": [
        12515,
        12595
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "16979": {
      "fn": "Vault._deposit",
      "offset": [
        12515,
        12595
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "16980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16986": {
      "op": "SHL"
    },
    "16987": {
      "offset": [
        12515,
        12595
      ],
      "op": "DUP2",
      "path": "18"
    },
    "16988": {
      "fn": "Vault._deposit",
      "offset": [
        12515,
        12595
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "16989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16991": {
      "offset": [
        12515,
        12595
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "16993": {
      "fn": "Vault._deposit",
      "offset": [
        12515,
        12595
      ],
      "op": "DUP3",
      "path": "18"
    },
    "16994": {
      "fn": "Vault._deposit",
      "offset": [
        12515,
        12595
      ],
      "op": "ADD",
      "path": "18"
    },
    "16995": {
      "op": "MSTORE"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "16998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17000": {
      "op": "DUP3"
    },
    "17001": {
      "op": "ADD"
    },
    "17002": {
      "op": "MSTORE"
    },
    "17003": {
      "op": "PUSH32",
      "value": "0x6572726F723A3A4E4F545F4445504F5349544F52000000000000000000000000"
    },
    "17036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17038": {
      "op": "DUP3"
    },
    "17039": {
      "op": "ADD"
    },
    "17040": {
      "op": "MSTORE"
    },
    "17041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17043": {
      "op": "ADD"
    },
    "17044": {
      "offset": [
        12515,
        12595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "17047": {
      "op": "JUMP"
    },
    "17048": {
      "offset": [
        12515,
        12595
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17049": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "17051": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "17052": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "17054": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "17055": {
      "offset": [
        1623,
        1632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "17056": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x42EB"
    },
    "17059": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "17060": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17062": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17069": {
      "op": "SHL"
    },
    "17070": {
      "offset": [
        1615,
        1653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17071": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17074": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "17076": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "17077": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "ADD",
      "path": "4"
    },
    "17078": {
      "op": "MSTORE"
    },
    "17079": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "17081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17083": {
      "op": "DUP3"
    },
    "17084": {
      "op": "ADD"
    },
    "17085": {
      "op": "MSTORE"
    },
    "17086": {
      "op": "PUSH32",
      "value": "0x5061757361626C653A2070617573656400000000000000000000000000000000"
    },
    "17119": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17121": {
      "op": "DUP3"
    },
    "17122": {
      "op": "ADD"
    },
    "17123": {
      "op": "MSTORE"
    },
    "17124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17126": {
      "op": "ADD"
    },
    "17127": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC61"
    },
    "17130": {
      "op": "JUMP"
    },
    "17131": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17132": {
      "fn": "Vault._deposit",
      "offset": [
        28628,
        28650
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "17134": {
      "fn": "Vault._deposit",
      "offset": [
        28690,
        28706
      ],
      "op": "DUP3",
      "path": "18"
    },
    "17135": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28687
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4310"
    },
    "17138": {
      "fn": "Vault._deposit",
      "offset": [
        28673,
        28686
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x522"
    },
    "17141": {
      "fn": "Vault._deposit",
      "offset": [
        28683,
        28685
      ],
      "op": "DUP8",
      "path": "18"
    },
    "17142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17148": {
      "op": "SHL"
    },
    "17149": {
      "op": "SUB"
    },
    "17150": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6"
    },
    "17151": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3773,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "17153": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "17154": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "17155": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "17156": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "17158": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "17160": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "17161": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "17163": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "17164": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "17165": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "17166": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "17167": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "17168": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28687
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17169": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28706
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x431A"
    },
    "17172": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28706
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "17173": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28706
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17174": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28706
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "17177": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        28653,
        28706
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17178": {
      "fn": "Vault._deposit",
      "offset": [
        28653,
        28706
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17179": {
      "fn": "Vault._deposit",
      "offset": [
        28628,
        28706
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17180": {
      "fn": "Vault._deposit",
      "offset": [
        28628,
        28706
      ],
      "op": "POP",
      "path": "18"
    },
    "17181": {
      "fn": "Vault._deposit",
      "offset": [
        28716,
        28739
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "17183": {
      "fn": "Vault._deposit",
      "offset": [
        28762,
        28778
      ],
      "op": "DUP4",
      "path": "18"
    },
    "17184": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28759
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4327"
    },
    "17187": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28757
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2981"
    },
    "17190": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        28742,
        28759
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17191": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28759
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17192": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4331"
    },
    "17195": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28778
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "17196": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17197": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28778
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53A1"
    },
    "17200": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        28742,
        28778
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17201": {
      "fn": "Vault._deposit",
      "offset": [
        28742,
        28778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17202": {
      "fn": "Vault._deposit",
      "offset": [
        28716,
        28778
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17203": {
      "fn": "Vault._deposit",
      "offset": [
        28716,
        28778
      ],
      "op": "POP",
      "path": "18"
    },
    "17204": {
      "fn": "Vault._deposit",
      "offset": [
        28815,
        28831
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 158,
      "value": "0xAB"
    },
    "17206": {
      "fn": "Vault._deposit",
      "offset": [
        28815,
        28831
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "17207": {
      "fn": "Vault._deposit",
      "offset": [
        28797,
        28811
      ],
      "op": "DUP3",
      "path": "18"
    },
    "17208": {
      "fn": "Vault._deposit",
      "offset": [
        28797,
        28831
      ],
      "op": "GT",
      "path": "18"
    },
    "17209": {
      "branch": 228,
      "fn": "Vault._deposit",
      "offset": [
        28797,
        28831
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "17210": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x43AB"
    },
    "17213": {
      "branch": 228,
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "17214": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "17216": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "17217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17223": {
      "op": "SHL"
    },
    "17224": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "DUP2",
      "path": "18"
    },
    "17225": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "17226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17228": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "17230": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "DUP3",
      "path": "18"
    },
    "17231": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "ADD",
      "path": "18"
    },
    "17232": {
      "op": "MSTORE"
    },
    "17233": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "17235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17237": {
      "op": "DUP3"
    },
    "17238": {
      "op": "ADD"
    },
    "17239": {
      "op": "MSTORE"
    },
    "17240": {
      "op": "PUSH32",
      "value": "0x5F6465706F7369743A3A555345525F4445504F5349545F4C494D4954535F5245"
    },
    "17273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17275": {
      "op": "DUP3"
    },
    "17276": {
      "op": "ADD"
    },
    "17277": {
      "op": "MSTORE"
    },
    "17278": {
      "op": "PUSH32",
      "value": "0x4143484544000000000000000000000000000000000000000000000000000000"
    },
    "17311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17313": {
      "op": "DUP3"
    },
    "17314": {
      "op": "ADD"
    },
    "17315": {
      "op": "MSTORE"
    },
    "17316": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17318": {
      "op": "ADD"
    },
    "17319": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "17322": {
      "op": "JUMP"
    },
    "17323": {
      "fn": "Vault._deposit",
      "offset": [
        28789,
        28873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17324": {
      "fn": "Vault._deposit",
      "offset": [
        28910,
        28927
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 159,
      "value": "0xAC"
    },
    "17326": {
      "fn": "Vault._deposit",
      "offset": [
        28910,
        28927
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "17327": {
      "fn": "Vault._deposit",
      "offset": [
        28891,
        28906
      ],
      "op": "DUP2",
      "path": "18"
    },
    "17328": {
      "fn": "Vault._deposit",
      "offset": [
        28891,
        28927
      ],
      "op": "GT",
      "path": "18"
    },
    "17329": {
      "branch": 229,
      "fn": "Vault._deposit",
      "offset": [
        28891,
        28927
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "17330": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4423"
    },
    "17333": {
      "branch": 229,
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "17334": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "17336": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "17337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17343": {
      "op": "SHL"
    },
    "17344": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "DUP2",
      "path": "18"
    },
    "17345": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "17346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17348": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "17350": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "DUP3",
      "path": "18"
    },
    "17351": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "ADD",
      "path": "18"
    },
    "17352": {
      "op": "MSTORE"
    },
    "17353": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "17355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17357": {
      "op": "DUP3"
    },
    "17358": {
      "op": "ADD"
    },
    "17359": {
      "op": "MSTORE"
    },
    "17360": {
      "op": "PUSH32",
      "value": "0x5F6465706F7369743A3A5641554C545F4445504F5349545F4C494D4954535F52"
    },
    "17393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17395": {
      "op": "DUP3"
    },
    "17396": {
      "op": "ADD"
    },
    "17397": {
      "op": "MSTORE"
    },
    "17398": {
      "op": "PUSH32",
      "value": "0x4541434845440000000000000000000000000000000000000000000000000000"
    },
    "17431": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17433": {
      "op": "DUP3"
    },
    "17434": {
      "op": "ADD"
    },
    "17435": {
      "op": "MSTORE"
    },
    "17436": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17438": {
      "op": "ADD"
    },
    "17439": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC61"
    },
    "17442": {
      "op": "JUMP"
    },
    "17443": {
      "fn": "Vault._deposit",
      "offset": [
        28883,
        28970
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17444": {
      "fn": "Vault._deposit",
      "offset": [
        29047,
        29064
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 160,
      "value": "0x442D"
    },
    "17447": {
      "fn": "Vault._deposit",
      "offset": [
        29053,
        29055
      ],
      "op": "DUP7",
      "path": "18"
    },
    "17448": {
      "fn": "Vault._deposit",
      "offset": [
        29057,
        29063
      ],
      "op": "DUP7",
      "path": "18"
    },
    "17449": {
      "fn": "Vault._deposit",
      "offset": [
        29047,
        29052
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4735"
    },
    "17452": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        29047,
        29064
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17453": {
      "fn": "Vault._deposit",
      "offset": [
        29047,
        29064
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17454": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 161,
      "value": "0x40"
    },
    "17456": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "17457": {
      "op": "DUP5"
    },
    "17458": {
      "op": "DUP2"
    },
    "17459": {
      "op": "MSTORE"
    },
    "17460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17466": {
      "op": "SHL"
    },
    "17467": {
      "op": "SUB"
    },
    "17468": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "DUP8",
      "path": "18"
    },
    "17469": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "AND",
      "path": "18"
    },
    "17470": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17471": {
      "fn": "Vault._deposit",
      "offset": [
        29088,
        29098
      ],
      "op": "CALLER",
      "path": "18"
    },
    "17472": {
      "fn": "Vault._deposit",
      "offset": [
        29088,
        29098
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17473": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
    },
    "17506": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17509": {
      "op": "ADD"
    },
    "17510": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "17512": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "17513": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "DUP1",
      "path": "18"
    },
    "17514": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "17515": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "SUB",
      "path": "18"
    },
    "17516": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17517": {
      "fn": "Vault._deposit",
      "offset": [
        29080,
        29121
      ],
      "op": "LOG3",
      "path": "18"
    },
    "17518": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29274
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 162,
      "value": "0x99"
    },
    "17520": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "17521": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4485"
    },
    "17524": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29336
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "17525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17531": {
      "op": "SHL"
    },
    "17532": {
      "op": "SUB"
    },
    "17533": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29274
      ],
      "op": "AND",
      "path": "18"
    },
    "17534": {
      "fn": "Vault._deposit",
      "offset": [
        29292,
        29302
      ],
      "op": "CALLER",
      "path": "18"
    },
    "17535": {
      "fn": "Vault._deposit",
      "offset": [
        29312,
        29316
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "17536": {
      "fn": "Vault._deposit",
      "offset": [
        29319,
        29335
      ],
      "op": "DUP8",
      "path": "18"
    },
    "17537": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4B12"
    },
    "17540": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        29264,
        29336
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17541": {
      "fn": "Vault._deposit",
      "offset": [
        29264,
        29336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17542": {
      "fn": "Vault._deposit",
      "offset": [
        28618,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17543": {
      "fn": "Vault._deposit",
      "offset": [
        28618,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17544": {
      "fn": "Vault._deposit",
      "offset": [
        28467,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17545": {
      "fn": "Vault._deposit",
      "offset": [
        28467,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17546": {
      "fn": "Vault._deposit",
      "offset": [
        28467,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17547": {
      "fn": "Vault._deposit",
      "offset": [
        28467,
        29343
      ],
      "op": "POP",
      "path": "18"
    },
    "17548": {
      "fn": "Vault._deposit",
      "jump": "o",
      "offset": [
        28467,
        29343
      ],
      "op": "JUMP",
      "path": "18"
    },
    "17549": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2075,
        2190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17550": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "17552": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "17553": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "17555": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "17556": {
      "offset": [
        1623,
        1632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "17557": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x44E0"
    },
    "17560": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "17561": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17563": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17570": {
      "op": "SHL"
    },
    "17571": {
      "offset": [
        1615,
        1653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17572": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17575": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "17577": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "17578": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "ADD",
      "path": "4"
    },
    "17579": {
      "op": "MSTORE"
    },
    "17580": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "17582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17584": {
      "op": "DUP3"
    },
    "17585": {
      "op": "ADD"
    },
    "17586": {
      "op": "MSTORE"
    },
    "17587": {
      "op": "PUSH32",
      "value": "0x5061757361626C653A2070617573656400000000000000000000000000000000"
    },
    "17620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17622": {
      "op": "DUP3"
    },
    "17623": {
      "op": "ADD"
    },
    "17624": {
      "op": "MSTORE"
    },
    "17625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17627": {
      "op": "ADD"
    },
    "17628": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC61"
    },
    "17631": {
      "op": "JUMP"
    },
    "17632": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17633": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2141
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 163,
      "value": "0x65"
    },
    "17635": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17636": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "17637": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17639": {
      "op": "NOT"
    },
    "17640": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "AND",
      "path": "4"
    },
    "17641": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2144,
        2148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "17643": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "OR",
      "path": "4"
    },
    "17644": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "17645": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "17646": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 164,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "17679": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2170,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4515"
    },
    "17682": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "17683": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17684": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        823,
        919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17685": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2170,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17686": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17688": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17695": {
      "op": "SHL"
    },
    "17696": {
      "op": "SUB"
    },
    "17697": {
      "op": "SWAP1"
    },
    "17698": {
      "op": "SWAP2"
    },
    "17699": {
      "op": "AND"
    },
    "17700": {
      "op": "DUP2"
    },
    "17701": {
      "op": "MSTORE"
    },
    "17702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17704": {
      "op": "ADD"
    },
    "17705": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17707": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17708": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17709": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "17710": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SUB",
      "path": "4"
    },
    "17711": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "17712": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "LOG1",
      "path": "4"
    },
    "17713": {
      "fn": "PausableUpgradeable._pause",
      "jump": "o",
      "offset": [
        2075,
        2190
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17714": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2322,
        2439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17715": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "17717": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "17718": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "17720": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "17721": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4584"
    },
    "17724": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "17725": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17727": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17734": {
      "op": "SHL"
    },
    "17735": {
      "offset": [
        1881,
        1922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17736": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17739": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "17741": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "17742": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "ADD",
      "path": "4"
    },
    "17743": {
      "op": "MSTORE"
    },
    "17744": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17746": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17748": {
      "op": "DUP3"
    },
    "17749": {
      "op": "ADD"
    },
    "17750": {
      "op": "MSTORE"
    },
    "17751": {
      "op": "PUSH32",
      "value": "0x5061757361626C653A206E6F7420706175736564000000000000000000000000"
    },
    "17784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17786": {
      "op": "DUP3"
    },
    "17787": {
      "op": "ADD"
    },
    "17788": {
      "op": "MSTORE"
    },
    "17789": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17791": {
      "op": "ADD"
    },
    "17792": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC61"
    },
    "17795": {
      "op": "JUMP"
    },
    "17796": {
      "offset": [
        1881,
        1922
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17797": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2387
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 165,
      "value": "0x65"
    },
    "17799": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17800": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "17801": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17803": {
      "op": "NOT"
    },
    "17804": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "AND",
      "path": "4"
    },
    "17805": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "17806": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "17807": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2410,
        2432
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 166,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "17840": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "17841": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2419,
        2431
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4515"
    },
    "17844": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        823,
        919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17845": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        410,
        551
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17846": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        467,
        476
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "17848": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        501,
        518
      ],
      "op": "PUSH31",
      "path": "23",
      "statement": 167,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "17880": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "DUP3",
      "path": "23"
    },
    "17881": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "GT",
      "path": "23"
    },
    "17882": {
      "branch": 246,
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "17883": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45E3"
    },
    "17886": {
      "branch": 246,
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "17887": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "17889": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "DUP1",
      "path": "23"
    },
    "17890": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "REVERT",
      "path": "23"
    },
    "17891": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17892": {
      "op": "POP"
    },
    "17893": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        542,
        543
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 168
    },
    "17894": {
      "fn": "SafeCastLib.safeCastTo248",
      "jump": "o",
      "offset": [
        410,
        551
      ],
      "op": "JUMP",
      "path": "23"
    },
    "17895": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1412,
        2026
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17896": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 169
    },
    "17897": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "17898": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "DUP1",
      "path": "9"
    },
    "17899": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x467A"
    },
    "17902": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "17903": {
      "op": "POP"
    },
    "17904": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "17906": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "17907": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xDD62ED3E00000000000000000000000000000000000000000000000000000000"
    },
    "17940": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "17941": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "17942": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1818,
        1822
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "17943": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "17945": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "17946": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "17947": {
      "op": "MSTORE"
    },
    "17948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17954": {
      "op": "SHL"
    },
    "17955": {
      "op": "SUB"
    },
    "17956": {
      "op": "DUP4"
    },
    "17957": {
      "op": "DUP2"
    },
    "17958": {
      "op": "AND"
    },
    "17959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17961": {
      "op": "DUP4"
    },
    "17962": {
      "op": "ADD"
    },
    "17963": {
      "op": "MSTORE"
    },
    "17964": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "DUP5",
      "path": "9"
    },
    "17965": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "AND",
      "path": "9"
    },
    "17966": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "17967": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xDD62ED3E"
    },
    "17972": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "17973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17975": {
      "op": "ADD"
    },
    "17976": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "17978": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "17980": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "17981": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "17982": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP4",
      "path": "9"
    },
    "17983": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SUB",
      "path": "9"
    },
    "17984": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "17985": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP7",
      "path": "9"
    },
    "17986": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "GAS",
      "path": "9"
    },
    "17987": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "17988": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "17989": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "17990": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "17991": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4654"
    },
    "17994": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "17995": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "17996": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "17998": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "17999": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "18000": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "18001": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "18003": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "REVERT",
      "path": "9"
    },
    "18004": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "18005": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "18006": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "18007": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "18008": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "18009": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "18011": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "18012": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "18013": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "18015": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "NOT",
      "path": "9"
    },
    "18016": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "18018": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "18019": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "18020": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "AND",
      "path": "9"
    },
    "18021": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "18022": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "18023": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "18024": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "18026": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "18027": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "18028": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "18029": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "18030": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "18031": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4678"
    },
    "18034": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "18035": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "18036": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53FF"
    },
    "18039": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "jump": "i",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMP",
      "path": "9"
    },
    "18040": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "18041": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1838
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "18042": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "18043": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x46EC"
    },
    "18046": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "18047": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "18049": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "18050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18056": {
      "op": "SHL"
    },
    "18057": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "DUP2",
      "path": "9"
    },
    "18058": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "18059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18061": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "18063": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "DUP3",
      "path": "9"
    },
    "18064": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "ADD",
      "path": "9"
    },
    "18065": {
      "op": "MSTORE"
    },
    "18066": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "18068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18070": {
      "op": "DUP3"
    },
    "18071": {
      "op": "ADD"
    },
    "18072": {
      "op": "MSTORE"
    },
    "18073": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
    },
    "18106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18108": {
      "op": "DUP3"
    },
    "18109": {
      "op": "ADD"
    },
    "18110": {
      "op": "MSTORE"
    },
    "18111": {
      "op": "PUSH32",
      "value": "0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
    },
    "18144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18146": {
      "op": "DUP3"
    },
    "18147": {
      "op": "ADD"
    },
    "18148": {
      "op": "MSTORE"
    },
    "18149": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "18151": {
      "op": "ADD"
    },
    "18152": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC61"
    },
    "18155": {
      "op": "JUMP"
    },
    "18156": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "18157": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 170,
      "value": "0x40"
    },
    "18159": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "18160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18166": {
      "op": "SHL"
    },
    "18167": {
      "op": "SUB"
    },
    "18168": {
      "op": "DUP4"
    },
    "18169": {
      "op": "AND"
    },
    "18170": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "18172": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "DUP3",
      "path": "9"
    },
    "18173": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "ADD",
      "path": "9"
    },
    "18174": {
      "op": "MSTORE"
    },
    "18175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18177": {
      "op": "DUP2"
    },
    "18178": {
      "op": "ADD"
    },
    "18179": {
      "op": "DUP3"
    },
    "18180": {
      "op": "SWAP1"
    },
    "18181": {
      "op": "MSTORE"
    },
    "18182": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1929,
        2019
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x261E"
    },
    "18185": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1929,
        2019
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "18186": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1949,
        1954
      ],
      "op": "DUP5",
      "path": "9"
    },
    "18187": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1949,
        1954
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "18188": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1979,
        2001
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x95EA7B300000000000000000000000000000000000000000000000000000000"
    },
    "18221": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1979,
        2001
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "18222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18224": {
      "op": "ADD"
    },
    "18225": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3F20"
    },
    "18228": {
      "op": "JUMP"
    },
    "18229": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8617,
        9006
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18236": {
      "op": "SHL"
    },
    "18237": {
      "op": "SUB"
    },
    "18238": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8700,
        8721
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 171
    },
    "18239": {
      "branch": 243,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8700,
        8721
      ],
      "op": "AND",
      "path": "6"
    },
    "18240": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x478B"
    },
    "18243": {
      "branch": 243,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "18244": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "18246": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "18247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18253": {
      "op": "SHL"
    },
    "18254": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "DUP2",
      "path": "6"
    },
    "18255": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "18256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18258": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "18260": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "DUP3",
      "path": "6"
    },
    "18261": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "ADD",
      "path": "6"
    },
    "18262": {
      "op": "MSTORE"
    },
    "18263": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18267": {
      "op": "DUP3"
    },
    "18268": {
      "op": "ADD"
    },
    "18269": {
      "op": "MSTORE"
    },
    "18270": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "18303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18305": {
      "op": "DUP3"
    },
    "18306": {
      "op": "ADD"
    },
    "18307": {
      "op": "MSTORE"
    },
    "18308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18310": {
      "op": "ADD"
    },
    "18311": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC61"
    },
    "18314": {
      "op": "JUMP"
    },
    "18315": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18316": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8844,
        8850
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 172
    },
    "18317": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x35"
    },
    "18319": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "18321": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "DUP3",
      "path": "6"
    },
    "18322": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "DUP3",
      "path": "6"
    },
    "18323": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "18324": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x479D"
    },
    "18327": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "18328": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18329": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53A1"
    },
    "18332": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8828,
        8850
      ],
      "op": "JUMP",
      "path": "6"
    },
    "18333": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18334": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18335": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "18336": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "18337": {
      "op": "POP"
    },
    "18338": {
      "op": "POP"
    },
    "18339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18345": {
      "op": "SHL"
    },
    "18346": {
      "op": "SUB"
    },
    "18347": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 173
    },
    "18348": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "AND",
      "path": "6"
    },
    "18349": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "18351": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18352": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "18353": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "18354": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "18356": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "18358": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "18359": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "18361": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "18362": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "18363": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "DUP1",
      "path": "6"
    },
    "18364": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "18365": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "DUP4",
      "path": "6"
    },
    "18366": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "18367": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18368": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47CA"
    },
    "18371": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "DUP5",
      "path": "6"
    },
    "18373": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18374": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53A1"
    },
    "18377": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8860,
        8888
      ],
      "op": "JUMP",
      "path": "6"
    },
    "18378": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18379": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18380": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "18381": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "18382": {
      "op": "POP"
    },
    "18383": {
      "op": "POP"
    },
    "18384": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 174,
      "value": "0x40"
    },
    "18386": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "18387": {
      "op": "DUP2"
    },
    "18388": {
      "op": "DUP2"
    },
    "18389": {
      "op": "MSTORE"
    },
    "18390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18396": {
      "op": "SHL"
    },
    "18397": {
      "op": "SUB"
    },
    "18398": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "DUP4",
      "path": "6"
    },
    "18399": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "AND",
      "path": "6"
    },
    "18400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8920,
        8921
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "18403": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8920,
        8921
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18404": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "18437": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18440": {
      "op": "ADD"
    },
    "18441": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "18443": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "18444": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "18445": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "18446": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SUB",
      "path": "6"
    },
    "18447": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "18448": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "LOG3",
      "path": "6"
    },
    "18449": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "POP",
      "path": "18"
    },
    "18450": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19523,
        20379
      ],
      "op": "POP",
      "path": "18"
    },
    "18451": {
      "fn": "Vault.setHarvestDelay",
      "jump": "o",
      "offset": [
        19523,
        20379
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18452": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        557,
        698
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "18453": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        614,
        623
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "18455": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        648,
        665
      ],
      "op": "PUSH16",
      "path": "23",
      "statement": 175,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "18472": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "DUP3",
      "path": "23"
    },
    "18473": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "GT",
      "path": "23"
    },
    "18474": {
      "branch": 247,
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "18475": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45E3"
    },
    "18478": {
      "branch": 247,
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "18479": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "18481": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "DUP1",
      "path": "23"
    },
    "18482": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "REVERT",
      "path": "23"
    },
    "18483": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44534,
        44780
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18484": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44641,
        44648
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "18486": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44681
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 176
    },
    "18487": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44681
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "18488": {
      "branch": 230,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44681
      ],
      "op": "DUP1",
      "path": "18"
    },
    "18489": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44696
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4840"
    },
    "18492": {
      "branch": 230,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44696
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "18493": {
      "op": "POP"
    },
    "18494": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44685,
        44696
      ],
      "op": "DUP3",
      "path": "18"
    },
    "18495": {
      "branch": 231,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44685,
        44696
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "18496": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44668,
        44696
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18497": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x487C"
    },
    "18500": {
      "branch": 231,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "18501": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44758,
        44766
      ],
      "op": "DUP2",
      "path": "18"
    },
    "18502": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44755
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x97"
    },
    "18504": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44755
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "18505": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44766
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4852"
    },
    "18508": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44766
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "18509": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44766
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18510": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44766
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57D2"
    },
    "18513": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        44740,
        44766
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18514": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44740,
        44766
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18515": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44726,
        44735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9A"
    },
    "18517": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44726,
        44735
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "18518": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44736
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4862"
    },
    "18521": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44736
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18522": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44710
      ],
      "op": "DUP6",
      "path": "18"
    },
    "18523": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44710
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18524": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44716,
        44724
      ],
      "op": "DUP8",
      "path": "18"
    },
    "18525": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44716,
        44724
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18526": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44715
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F84"
    },
    "18529": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        44704,
        44736
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18530": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44736
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18531": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x486C"
    },
    "18534": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44767
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "18535": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44767
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18536": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44767
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x580D"
    },
    "18539": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        44704,
        44767
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18540": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44767
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18541": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4877"
    },
    "18544": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44773
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "18545": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44770,
        44773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "18547": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x580D"
    },
    "18550": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        44704,
        44773
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18551": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44704,
        44773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18552": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x487F"
    },
    "18555": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18556": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18557": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44700,
        44701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "18559": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44667,
        44773
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "18560": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44660,
        44773
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "18561": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        44534,
        44780
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "18562": {
      "op": "POP"
    },
    "18563": {
      "op": "POP"
    },
    "18564": {
      "op": "POP"
    },
    "18565": {
      "op": "POP"
    },
    "18566": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "o",
      "offset": [
        44534,
        44780
      ],
      "op": "JUMP",
      "path": "18"
    },
    "18567": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18568": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18570": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18571": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "18574": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18575": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "18576": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18578": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "18579": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18580": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48A0"
    },
    "18583": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18584": {
      "op": "POP"
    },
    "18585": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18587": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18588": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18590": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "18591": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18592": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18593": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4912"
    },
    "18596": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18597": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "18599": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "18600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18606": {
      "op": "SHL"
    },
    "18607": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "18608": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "18609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18611": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "18613": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "18614": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "18615": {
      "op": "MSTORE"
    },
    "18616": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "18618": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18620": {
      "op": "DUP3"
    },
    "18621": {
      "op": "ADD"
    },
    "18622": {
      "op": "MSTORE"
    },
    "18623": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "18656": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18658": {
      "op": "DUP3"
    },
    "18659": {
      "op": "ADD"
    },
    "18660": {
      "op": "MSTORE"
    },
    "18661": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "18694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18696": {
      "op": "DUP3"
    },
    "18697": {
      "op": "ADD"
    },
    "18698": {
      "op": "MSTORE"
    },
    "18699": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "18701": {
      "op": "ADD"
    },
    "18702": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "18705": {
      "op": "JUMP"
    },
    "18706": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18707": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18709": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18710": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "18713": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18714": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "18715": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18717": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "18718": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18719": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18720": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18721": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4934"
    },
    "18724": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18725": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18727": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18728": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18729": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18732": {
      "op": "NOT"
    },
    "18733": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "18734": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "18737": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "18738": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18739": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "18740": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18741": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 177,
      "value": "0x493C"
    },
    "18744": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2165
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B63"
    },
    "18747": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2141,
        2167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "18748": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18749": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2215
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 178,
      "value": "0x4946"
    },
    "18752": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2200,
        2205
      ],
      "op": "DUP4",
      "path": "6"
    },
    "18753": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2207,
        2214
      ],
      "op": "DUP4",
      "path": "6"
    },
    "18754": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C23"
    },
    "18757": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2177,
        2215
      ],
      "op": "JUMP",
      "path": "6"
    },
    "18758": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "18759": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18760": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18761": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x261E"
    },
    "18764": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18765": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18767": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18768": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18769": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "18772": {
      "op": "NOT"
    },
    "18773": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "18774": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18775": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "18776": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "18777": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "POP",
      "path": "6"
    },
    "18778": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "POP",
      "path": "6"
    },
    "18779": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2044,
        2222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "18780": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        991,
        1119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18781": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18783": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18784": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "18787": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18788": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "18789": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18791": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "18792": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18793": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4975"
    },
    "18796": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18797": {
      "op": "POP"
    },
    "18798": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18800": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18801": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18803": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "18804": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18805": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18806": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49E7"
    },
    "18809": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18810": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "18812": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "18813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18819": {
      "op": "SHL"
    },
    "18820": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "18821": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "18822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18824": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "18826": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "18827": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "18828": {
      "op": "MSTORE"
    },
    "18829": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "18831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18833": {
      "op": "DUP3"
    },
    "18834": {
      "op": "ADD"
    },
    "18835": {
      "op": "MSTORE"
    },
    "18836": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "18869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18871": {
      "op": "DUP3"
    },
    "18872": {
      "op": "ADD"
    },
    "18873": {
      "op": "MSTORE"
    },
    "18874": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "18907": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18909": {
      "op": "DUP3"
    },
    "18910": {
      "op": "ADD"
    },
    "18911": {
      "op": "MSTORE"
    },
    "18912": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "18914": {
      "op": "ADD"
    },
    "18915": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "18918": {
      "op": "JUMP"
    },
    "18919": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18920": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18922": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18923": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "18926": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18927": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "18928": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "18930": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "18931": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18932": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18933": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18934": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A09"
    },
    "18937": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18938": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18940": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18941": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18942": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18945": {
      "op": "NOT"
    },
    "18946": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "18947": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "18950": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "18951": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18952": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "18953": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18954": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1075
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 179,
      "value": "0x4A11"
    },
    "18957": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B63"
    },
    "18960": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "i",
      "offset": [
        1049,
        1075
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18961": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1075
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18962": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1112
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 180,
      "value": "0x4A19"
    },
    "18965": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1110
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D0E"
    },
    "18968": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "i",
      "offset": [
        1085,
        1112
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18969": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18970": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18971": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "18972": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D1"
    },
    "18975": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18976": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "18978": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "18979": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "18980": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "18983": {
      "op": "NOT"
    },
    "18984": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "18985": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18986": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "18987": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "18988": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "o",
      "offset": [
        991,
        1119
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18989": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3239,
        3956
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "18990": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "18992": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A82"
    },
    "18995": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3723,
        3727
      ],
      "op": "DUP3",
      "path": "9"
    },
    "18996": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "18998": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "18999": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19000": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19002": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "ADD",
      "path": "9"
    },
    "19003": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19005": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19006": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19007": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19009": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19010": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19011": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19013": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "ADD",
      "path": "9"
    },
    "19014": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "19047": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19048": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19049": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "POP",
      "path": "9"
    },
    "19050": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3703,
        3708
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19057": {
      "op": "SHL"
    },
    "19058": {
      "op": "SUB"
    },
    "19059": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "AND",
      "path": "9"
    },
    "19060": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4DD9"
    },
    "19063": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19064": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "19065": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19066": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19067": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "19072": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "AND",
      "path": "9"
    },
    "19073": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3695,
        3764
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19074": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19075": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3795
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19076": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3795
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19077": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3764
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19078": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3764
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19079": {
      "op": "POP"
    },
    "19080": {
      "branch": 248,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3799
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "19081": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3774,
        3950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x261E"
    },
    "19084": {
      "branch": 248,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3774,
        3950
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19085": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3873,
        3883
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 181
    },
    "19086": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19087": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19089": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "ADD",
      "path": "9"
    },
    "19090": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19091": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19092": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19093": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "ADD",
      "path": "9"
    },
    "19094": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19095": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4AA0"
    },
    "19098": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19099": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19100": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5324"
    },
    "19103": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3862,
        3892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19104": {
      "branch": 249,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19105": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x261E"
    },
    "19108": {
      "branch": 249,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19109": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19111": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19118": {
      "op": "SHL"
    },
    "19119": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19120": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19123": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "19125": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19126": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "ADD",
      "path": "9"
    },
    "19127": {
      "op": "MSTORE"
    },
    "19128": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "19130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19132": {
      "op": "DUP3"
    },
    "19133": {
      "op": "ADD"
    },
    "19134": {
      "op": "MSTORE"
    },
    "19135": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "19168": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19170": {
      "op": "DUP3"
    },
    "19171": {
      "op": "ADD"
    },
    "19172": {
      "op": "MSTORE"
    },
    "19173": {
      "op": "PUSH32",
      "value": "0x6F74207375636365656400000000000000000000000000000000000000000000"
    },
    "19206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19208": {
      "op": "DUP3"
    },
    "19209": {
      "op": "ADD"
    },
    "19210": {
      "op": "MSTORE"
    },
    "19211": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19213": {
      "op": "ADD"
    },
    "19214": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC61"
    },
    "19217": {
      "op": "JUMP"
    },
    "19218": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        900,
        1152
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19219": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 182,
      "value": "0x40"
    },
    "19221": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19228": {
      "op": "SHL"
    },
    "19229": {
      "op": "SUB"
    },
    "19230": {
      "op": "DUP1"
    },
    "19231": {
      "op": "DUP6"
    },
    "19232": {
      "op": "AND"
    },
    "19233": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "19235": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19236": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "ADD",
      "path": "9"
    },
    "19237": {
      "op": "MSTORE"
    },
    "19238": {
      "op": "DUP4"
    },
    "19239": {
      "op": "AND"
    },
    "19240": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19242": {
      "op": "DUP3"
    },
    "19243": {
      "op": "ADD"
    },
    "19244": {
      "op": "MSTORE"
    },
    "19245": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19247": {
      "op": "DUP2"
    },
    "19248": {
      "op": "ADD"
    },
    "19249": {
      "op": "DUP3"
    },
    "19250": {
      "op": "SWAP1"
    },
    "19251": {
      "op": "MSTORE"
    },
    "19252": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1049,
        1145
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x41B9"
    },
    "19255": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1049,
        1145
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19256": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1069,
        1074
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19257": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1069,
        1074
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19258": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1099,
        1126
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x23B872DD00000000000000000000000000000000000000000000000000000000"
    },
    "19291": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1099,
        1126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19292": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19294": {
      "op": "ADD"
    },
    "19295": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3F20"
    },
    "19298": {
      "op": "JUMP"
    },
    "19299": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        754,
        818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19300": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19302": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19303": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19306": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19307": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "19308": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19310": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "19311": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19312": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B7C"
    },
    "19315": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19316": {
      "op": "POP"
    },
    "19317": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19319": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19320": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19322": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "19323": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19324": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19325": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BEE"
    },
    "19328": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19329": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "19331": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19338": {
      "op": "SHL"
    },
    "19339": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19340": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19343": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19345": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19346": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "19347": {
      "op": "MSTORE"
    },
    "19348": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "19350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19352": {
      "op": "DUP3"
    },
    "19353": {
      "op": "ADD"
    },
    "19354": {
      "op": "MSTORE"
    },
    "19355": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "19388": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19390": {
      "op": "DUP3"
    },
    "19391": {
      "op": "ADD"
    },
    "19392": {
      "op": "MSTORE"
    },
    "19393": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "19426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19428": {
      "op": "DUP3"
    },
    "19429": {
      "op": "ADD"
    },
    "19430": {
      "op": "MSTORE"
    },
    "19431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19433": {
      "op": "ADD"
    },
    "19434": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "19437": {
      "op": "JUMP"
    },
    "19438": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19439": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19441": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19442": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19445": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19446": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "19447": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19449": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "19450": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19451": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19452": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19453": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A19"
    },
    "19456": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19457": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19459": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19460": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19461": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19464": {
      "op": "NOT"
    },
    "19465": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "19466": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "19469": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "19470": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19471": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19472": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19473": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19474": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D1"
    },
    "19477": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19478": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19480": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19481": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19482": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "19485": {
      "op": "NOT"
    },
    "19486": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "19487": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19488": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19489": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "19490": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        754,
        818
      ],
      "op": "JUMP",
      "path": "11"
    },
    "19491": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "19492": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19494": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19495": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19498": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19499": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "19500": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19502": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "19503": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19504": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C3C"
    },
    "19507": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19508": {
      "op": "POP"
    },
    "19509": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19511": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19512": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19514": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "19515": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19516": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19517": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CAE"
    },
    "19520": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19521": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "19523": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19530": {
      "op": "SHL"
    },
    "19531": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19532": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19535": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19537": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19538": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "19539": {
      "op": "MSTORE"
    },
    "19540": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "19542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19544": {
      "op": "DUP3"
    },
    "19545": {
      "op": "ADD"
    },
    "19546": {
      "op": "MSTORE"
    },
    "19547": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "19580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19582": {
      "op": "DUP3"
    },
    "19583": {
      "op": "ADD"
    },
    "19584": {
      "op": "MSTORE"
    },
    "19585": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "19618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19620": {
      "op": "DUP3"
    },
    "19621": {
      "op": "ADD"
    },
    "19622": {
      "op": "MSTORE"
    },
    "19623": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19625": {
      "op": "ADD"
    },
    "19626": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "19629": {
      "op": "JUMP"
    },
    "19630": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19631": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19633": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19634": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19637": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19638": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "19639": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19641": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "19642": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19643": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19644": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19645": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CD0"
    },
    "19648": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19649": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19651": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19652": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19653": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19656": {
      "op": "NOT"
    },
    "19657": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "19658": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "19661": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "19662": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19663": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19664": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19665": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 183
    },
    "19666": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "19667": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CE3"
    },
    "19670": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19671": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "19673": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19674": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "19676": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "DUP7",
      "path": "6"
    },
    "19677": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "ADD",
      "path": "6"
    },
    "19678": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19679": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F5B"
    },
    "19682": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2335,
        2348
      ],
      "op": "JUMP",
      "path": "6"
    },
    "19683": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "19684": {
      "op": "POP"
    },
    "19685": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 184
    },
    "19686": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "19687": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CF7"
    },
    "19690": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19691": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2365
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x37"
    },
    "19693": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19694": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "19696": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP6",
      "path": "6"
    },
    "19697": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "ADD",
      "path": "6"
    },
    "19698": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "19699": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F5B"
    },
    "19702": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMP",
      "path": "6"
    },
    "19703": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "19704": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "POP",
      "path": "6"
    },
    "19705": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19706": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19707": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x261E"
    },
    "19710": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19711": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19713": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19714": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19715": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "19718": {
      "op": "NOT"
    },
    "19719": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "19720": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19721": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19722": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "19723": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "POP",
      "path": "6"
    },
    "19724": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "POP",
      "path": "6"
    },
    "19725": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "o",
      "offset": [
        2228,
        2382
      ],
      "op": "JUMP",
      "path": "6"
    },
    "19726": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1125,
        1215
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19727": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19729": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19730": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19733": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19734": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "19735": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19737": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "19738": {
      "branch": 244,
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19739": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D27"
    },
    "19742": {
      "branch": 244,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19743": {
      "op": "POP"
    },
    "19744": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19746": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19747": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19749": {
      "branch": 245,
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "19750": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19751": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19752": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D99"
    },
    "19755": {
      "branch": 245,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19756": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "19758": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19765": {
      "op": "SHL"
    },
    "19766": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19767": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19770": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19772": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19773": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "19774": {
      "op": "MSTORE"
    },
    "19775": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "19777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19779": {
      "op": "DUP3"
    },
    "19780": {
      "op": "ADD"
    },
    "19781": {
      "op": "MSTORE"
    },
    "19782": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "19815": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19817": {
      "op": "DUP3"
    },
    "19818": {
      "op": "ADD"
    },
    "19819": {
      "op": "MSTORE"
    },
    "19820": {
      "op": "PUSH32",
      "value": "0x647920696E697469616C697A6564000000000000000000000000000000000000"
    },
    "19853": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19855": {
      "op": "DUP3"
    },
    "19856": {
      "op": "ADD"
    },
    "19857": {
      "op": "MSTORE"
    },
    "19858": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19860": {
      "op": "ADD"
    },
    "19861": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "19864": {
      "op": "JUMP"
    },
    "19865": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19866": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19868": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19869": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "19872": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19873": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "19874": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "19876": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "19877": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19878": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19879": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19880": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DBB"
    },
    "19883": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19884": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19886": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19887": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19888": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19891": {
      "op": "NOT"
    },
    "19892": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "19893": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "19896": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "19897": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19898": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19899": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19900": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1200
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 185,
      "value": "0x65"
    },
    "19902": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "19903": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "19904": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19906": {
      "op": "NOT"
    },
    "19907": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "AND",
      "path": "4"
    },
    "19908": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19909": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "19910": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19911": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "19912": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D1"
    },
    "19915": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19916": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19918": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19919": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "19920": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "19923": {
      "op": "NOT"
    },
    "19924": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "19925": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19926": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "19927": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "19928": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "jump": "o",
      "offset": [
        1125,
        1215
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19929": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3472,
        3695
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "19930": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3605,
        3617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "19932": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3636,
        3688
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 186,
      "value": "0x487F"
    },
    "19935": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3658,
        3664
      ],
      "op": "DUP5",
      "path": "10"
    },
    "19936": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3666,
        3670
      ],
      "op": "DUP5",
      "path": "10"
    },
    "19937": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3672,
        3673
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "19939": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3675,
        3687
      ],
      "op": "DUP6",
      "path": "10"
    },
    "19940": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3605,
        3617
      ],
      "op": "DUP6",
      "path": "10"
    },
    "19941": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "DUP5",
      "path": "10"
    },
    "19942": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "19943": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 187,
      "value": "0x4E32"
    },
    "19946": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "19947": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "19949": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "19950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19956": {
      "op": "SHL"
    },
    "19957": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "DUP2",
      "path": "10"
    },
    "19958": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "19959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19961": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "19963": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "DUP3",
      "path": "10"
    },
    "19964": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "ADD",
      "path": "10"
    },
    "19965": {
      "op": "MSTORE"
    },
    "19966": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "19968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19970": {
      "op": "DUP3"
    },
    "19971": {
      "op": "ADD"
    },
    "19972": {
      "op": "MSTORE"
    },
    "19973": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "20006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20008": {
      "op": "DUP3"
    },
    "20009": {
      "op": "ADD"
    },
    "20010": {
      "op": "MSTORE"
    },
    "20011": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "20013": {
      "op": "ADD"
    },
    "20014": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC61"
    },
    "20017": {
      "op": "JUMP"
    },
    "20018": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20019": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4911,
        4923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "20021": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4925,
        4948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20022": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4958
      ],
      "op": "DUP7",
      "path": "10"
    },
    "20023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20029": {
      "op": "SHL"
    },
    "20030": {
      "op": "SUB"
    },
    "20031": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4963
      ],
      "op": "AND",
      "path": "10"
    },
    "20032": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4971,
        4976
      ],
      "op": "DUP6",
      "path": "10"
    },
    "20033": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4978,
        4982
      ],
      "op": "DUP8",
      "path": "10"
    },
    "20034": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "20036": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20037": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E4E"
    },
    "20040": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20041": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "20042": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x582C"
    },
    "20045": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20046": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20047": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "20049": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "20051": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20052": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20053": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP4",
      "path": "10"
    },
    "20054": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SUB",
      "path": "10"
    },
    "20055": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP2",
      "path": "10"
    },
    "20056": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP6",
      "path": "10"
    },
    "20057": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP8",
      "path": "10"
    },
    "20058": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "GAS",
      "path": "10"
    },
    "20059": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "CALL",
      "path": "10"
    },
    "20060": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "20061": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20062": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20063": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20064": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "20065": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20066": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "20068": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP2",
      "path": "10"
    },
    "20069": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "EQ",
      "path": "10"
    },
    "20070": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E8B"
    },
    "20073": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "20074": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "20076": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20077": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20078": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20079": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "20081": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "NOT",
      "path": "10"
    },
    "20082": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "20084": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "20085": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "20086": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "AND",
      "path": "10"
    },
    "20087": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20088": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "20089": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "20091": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "20092": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "20093": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20094": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "20095": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "20096": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "20098": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "20100": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP5",
      "path": "10"
    },
    "20101": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "20102": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "20103": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E90"
    },
    "20106": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20107": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20108": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "20110": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20111": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20112": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20113": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20114": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20115": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20116": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20117": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "20118": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5051
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 188,
      "value": "0x4EA0"
    },
    "20121": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5017,
        5024
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20122": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5026,
        5036
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20123": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5038,
        5050
      ],
      "op": "DUP7",
      "path": "10"
    },
    "20124": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5016
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EAB"
    },
    "20127": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        5000,
        5051
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20128": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5051
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20129": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4993,
        5051
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "20130": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4559,
        5058
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "20131": {
      "op": "POP"
    },
    "20132": {
      "op": "POP"
    },
    "20133": {
      "op": "POP"
    },
    "20134": {
      "op": "POP"
    },
    "20135": {
      "op": "POP"
    },
    "20136": {
      "op": "POP"
    },
    "20137": {
      "op": "POP"
    },
    "20138": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "o",
      "offset": [
        4559,
        5058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20139": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6222,
        6914
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20140": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6368,
        6380
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "20142": {
      "branch": 232,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6396,
        6403
      ],
      "op": "DUP4",
      "path": "10"
    },
    "20143": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "20144": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EBA"
    },
    "20147": {
      "branch": 232,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "20148": {
      "op": "POP"
    },
    "20149": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6426,
        6436
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 189
    },
    "20150": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6419,
        6436
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x133F"
    },
    "20153": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6419,
        6436
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20154": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20155": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6554
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20156": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6554
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20157": {
      "branch": 233,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6558
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "20158": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4ECA"
    },
    "20161": {
      "branch": 233,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "20162": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6731,
        6741
      ],
      "op": "DUP3",
      "path": "10"
    },
    "20163": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6725,
        6742
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20164": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6791,
        6806
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20165": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6778,
        6788
      ],
      "op": "DUP5",
      "path": "10"
    },
    "20166": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6774,
        6776
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "20168": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6770,
        6789
      ],
      "op": "ADD",
      "path": "10"
    },
    "20169": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6763,
        6807
      ],
      "op": "REVERT",
      "path": "10"
    },
    "20170": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "20171": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6870,
        6882
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 190
    },
    "20172": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "20174": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "20175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "20179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "20181": {
      "op": "SHL"
    },
    "20182": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "DUP2",
      "path": "10"
    },
    "20183": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "20184": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20186": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "ADD",
      "path": "10"
    },
    "20187": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC61"
    },
    "20190": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "20191": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "20192": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5010"
    },
    "20195": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "jump": "i",
      "offset": [
        6863,
        6883
      ],
      "op": "JUMP",
      "path": "10"
    },
    "20196": {
      "op": "JUMPDEST"
    },
    "20197": {
      "op": "DUP3"
    },
    "20198": {
      "op": "DUP1"
    },
    "20199": {
      "op": "SLOAD"
    },
    "20200": {
      "op": "DUP3"
    },
    "20201": {
      "op": "DUP3"
    },
    "20202": {
      "op": "SSTORE"
    },
    "20203": {
      "op": "SWAP1"
    },
    "20204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20206": {
      "op": "MSTORE"
    },
    "20207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20211": {
      "op": "KECCAK256"
    },
    "20212": {
      "op": "SWAP1"
    },
    "20213": {
      "op": "DUP2"
    },
    "20214": {
      "op": "ADD"
    },
    "20215": {
      "op": "SWAP3"
    },
    "20216": {
      "op": "DUP3"
    },
    "20217": {
      "op": "ISZERO"
    },
    "20218": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20221": {
      "op": "JUMPI"
    },
    "20222": {
      "op": "SWAP2"
    },
    "20223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20225": {
      "op": "MUL"
    },
    "20226": {
      "op": "DUP3"
    },
    "20227": {
      "op": "ADD"
    },
    "20228": {
      "op": "JUMPDEST"
    },
    "20229": {
      "op": "DUP3"
    },
    "20230": {
      "op": "DUP2"
    },
    "20231": {
      "op": "GT"
    },
    "20232": {
      "op": "ISZERO"
    },
    "20233": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20236": {
      "op": "JUMPI"
    },
    "20237": {
      "op": "DUP2"
    },
    "20238": {
      "op": "SLOAD"
    },
    "20239": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "20272": {
      "op": "AND"
    },
    "20273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20279": {
      "op": "SHL"
    },
    "20280": {
      "op": "SUB"
    },
    "20281": {
      "op": "DUP5"
    },
    "20282": {
      "op": "CALLDATALOAD"
    },
    "20283": {
      "op": "AND"
    },
    "20284": {
      "op": "OR"
    },
    "20285": {
      "op": "DUP3"
    },
    "20286": {
      "op": "SSTORE"
    },
    "20287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20289": {
      "op": "SWAP1"
    },
    "20290": {
      "op": "SWAP3"
    },
    "20291": {
      "op": "ADD"
    },
    "20292": {
      "op": "SWAP2"
    },
    "20293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20295": {
      "op": "SWAP1"
    },
    "20296": {
      "op": "SWAP2"
    },
    "20297": {
      "op": "ADD"
    },
    "20298": {
      "op": "SWAP1"
    },
    "20299": {
      "op": "PUSH2",
      "value": "0x4F04"
    },
    "20302": {
      "op": "JUMP"
    },
    "20303": {
      "op": "JUMPDEST"
    },
    "20304": {
      "op": "POP"
    },
    "20305": {
      "op": "PUSH2",
      "value": "0x45E3"
    },
    "20308": {
      "op": "SWAP3"
    },
    "20309": {
      "op": "SWAP2"
    },
    "20310": {
      "op": "POP"
    },
    "20311": {
      "op": "PUSH2",
      "value": "0x4FCF"
    },
    "20314": {
      "jump": "i",
      "op": "JUMP"
    },
    "20315": {
      "op": "JUMPDEST"
    },
    "20316": {
      "op": "DUP3"
    },
    "20317": {
      "op": "DUP1"
    },
    "20318": {
      "op": "SLOAD"
    },
    "20319": {
      "op": "PUSH2",
      "value": "0x4F67"
    },
    "20322": {
      "op": "SWAP1"
    },
    "20323": {
      "op": "PUSH2",
      "value": "0x52D0"
    },
    "20326": {
      "jump": "i",
      "op": "JUMP"
    },
    "20327": {
      "op": "JUMPDEST"
    },
    "20328": {
      "op": "SWAP1"
    },
    "20329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20331": {
      "op": "MSTORE"
    },
    "20332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20336": {
      "op": "KECCAK256"
    },
    "20337": {
      "op": "SWAP1"
    },
    "20338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20340": {
      "op": "ADD"
    },
    "20341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20343": {
      "op": "SWAP1"
    },
    "20344": {
      "op": "DIV"
    },
    "20345": {
      "op": "DUP2"
    },
    "20346": {
      "op": "ADD"
    },
    "20347": {
      "op": "SWAP3"
    },
    "20348": {
      "op": "DUP3"
    },
    "20349": {
      "op": "PUSH2",
      "value": "0x4F89"
    },
    "20352": {
      "op": "JUMPI"
    },
    "20353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20355": {
      "op": "DUP6"
    },
    "20356": {
      "op": "SSTORE"
    },
    "20357": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20360": {
      "op": "JUMP"
    },
    "20361": {
      "op": "JUMPDEST"
    },
    "20362": {
      "op": "DUP3"
    },
    "20363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20365": {
      "op": "LT"
    },
    "20366": {
      "op": "PUSH2",
      "value": "0x4FA2"
    },
    "20369": {
      "op": "JUMPI"
    },
    "20370": {
      "op": "DUP1"
    },
    "20371": {
      "op": "MLOAD"
    },
    "20372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "20374": {
      "op": "NOT"
    },
    "20375": {
      "op": "AND"
    },
    "20376": {
      "op": "DUP4"
    },
    "20377": {
      "op": "DUP1"
    },
    "20378": {
      "op": "ADD"
    },
    "20379": {
      "op": "OR"
    },
    "20380": {
      "op": "DUP6"
    },
    "20381": {
      "op": "SSTORE"
    },
    "20382": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20385": {
      "op": "JUMP"
    },
    "20386": {
      "op": "JUMPDEST"
    },
    "20387": {
      "op": "DUP3"
    },
    "20388": {
      "op": "DUP1"
    },
    "20389": {
      "op": "ADD"
    },
    "20390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20392": {
      "op": "ADD"
    },
    "20393": {
      "op": "DUP6"
    },
    "20394": {
      "op": "SSTORE"
    },
    "20395": {
      "op": "DUP3"
    },
    "20396": {
      "op": "ISZERO"
    },
    "20397": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20400": {
      "op": "JUMPI"
    },
    "20401": {
      "op": "SWAP2"
    },
    "20402": {
      "op": "DUP3"
    },
    "20403": {
      "op": "ADD"
    },
    "20404": {
      "op": "JUMPDEST"
    },
    "20405": {
      "op": "DUP3"
    },
    "20406": {
      "op": "DUP2"
    },
    "20407": {
      "op": "GT"
    },
    "20408": {
      "op": "ISZERO"
    },
    "20409": {
      "op": "PUSH2",
      "value": "0x4F4F"
    },
    "20412": {
      "op": "JUMPI"
    },
    "20413": {
      "op": "DUP3"
    },
    "20414": {
      "op": "MLOAD"
    },
    "20415": {
      "op": "DUP3"
    },
    "20416": {
      "op": "SSTORE"
    },
    "20417": {
      "op": "SWAP2"
    },
    "20418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20420": {
      "op": "ADD"
    },
    "20421": {
      "op": "SWAP2"
    },
    "20422": {
      "op": "SWAP1"
    },
    "20423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20425": {
      "op": "ADD"
    },
    "20426": {
      "op": "SWAP1"
    },
    "20427": {
      "op": "PUSH2",
      "value": "0x4FB4"
    },
    "20430": {
      "op": "JUMP"
    },
    "20431": {
      "op": "JUMPDEST"
    },
    "20432": {
      "op": "JUMPDEST"
    },
    "20433": {
      "op": "DUP1"
    },
    "20434": {
      "op": "DUP3"
    },
    "20435": {
      "op": "GT"
    },
    "20436": {
      "op": "ISZERO"
    },
    "20437": {
      "op": "PUSH2",
      "value": "0x45E3"
    },
    "20440": {
      "op": "JUMPI"
    },
    "20441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20443": {
      "op": "DUP2"
    },
    "20444": {
      "op": "SSTORE"
    },
    "20445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20447": {
      "op": "ADD"
    },
    "20448": {
      "op": "PUSH2",
      "value": "0x4FD0"
    },
    "20451": {
      "op": "JUMP"
    },
    "20452": {
      "op": "JUMPDEST"
    },
    "20453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20455": {
      "op": "JUMPDEST"
    },
    "20456": {
      "op": "DUP4"
    },
    "20457": {
      "op": "DUP2"
    },
    "20458": {
      "op": "LT"
    },
    "20459": {
      "op": "ISZERO"
    },
    "20460": {
      "op": "PUSH2",
      "value": "0x4FFF"
    },
    "20463": {
      "op": "JUMPI"
    },
    "20464": {
      "op": "DUP2"
    },
    "20465": {
      "op": "DUP2"
    },
    "20466": {
      "op": "ADD"
    },
    "20467": {
      "op": "MLOAD"
    },
    "20468": {
      "op": "DUP4"
    },
    "20469": {
      "op": "DUP3"
    },
    "20470": {
      "op": "ADD"
    },
    "20471": {
      "op": "MSTORE"
    },
    "20472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20474": {
      "op": "ADD"
    },
    "20475": {
      "op": "PUSH2",
      "value": "0x4FE7"
    },
    "20478": {
      "op": "JUMP"
    },
    "20479": {
      "op": "JUMPDEST"
    },
    "20480": {
      "op": "DUP4"
    },
    "20481": {
      "op": "DUP2"
    },
    "20482": {
      "op": "GT"
    },
    "20483": {
      "op": "ISZERO"
    },
    "20484": {
      "op": "PUSH2",
      "value": "0x41B9"
    },
    "20487": {
      "op": "JUMPI"
    },
    "20488": {
      "op": "POP"
    },
    "20489": {
      "op": "POP"
    },
    "20490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20492": {
      "op": "SWAP2"
    },
    "20493": {
      "op": "ADD"
    },
    "20494": {
      "op": "MSTORE"
    },
    "20495": {
      "jump": "o",
      "op": "JUMP"
    },
    "20496": {
      "op": "JUMPDEST"
    },
    "20497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20499": {
      "op": "DUP2"
    },
    "20500": {
      "op": "MSTORE"
    },
    "20501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20503": {
      "op": "DUP3"
    },
    "20504": {
      "op": "MLOAD"
    },
    "20505": {
      "op": "DUP1"
    },
    "20506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20508": {
      "op": "DUP5"
    },
    "20509": {
      "op": "ADD"
    },
    "20510": {
      "op": "MSTORE"
    },
    "20511": {
      "op": "PUSH2",
      "value": "0x502F"
    },
    "20514": {
      "op": "DUP2"
    },
    "20515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20517": {
      "op": "DUP6"
    },
    "20518": {
      "op": "ADD"
    },
    "20519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20521": {
      "op": "DUP8"
    },
    "20522": {
      "op": "ADD"
    },
    "20523": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "20526": {
      "jump": "i",
      "op": "JUMP"
    },
    "20527": {
      "op": "JUMPDEST"
    },
    "20528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20530": {
      "op": "ADD"
    },
    "20531": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20533": {
      "op": "NOT"
    },
    "20534": {
      "op": "AND"
    },
    "20535": {
      "op": "SWAP2"
    },
    "20536": {
      "op": "SWAP1"
    },
    "20537": {
      "op": "SWAP2"
    },
    "20538": {
      "op": "ADD"
    },
    "20539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20541": {
      "op": "ADD"
    },
    "20542": {
      "op": "SWAP3"
    },
    "20543": {
      "op": "SWAP2"
    },
    "20544": {
      "op": "POP"
    },
    "20545": {
      "op": "POP"
    },
    "20546": {
      "jump": "o",
      "op": "JUMP"
    },
    "20547": {
      "op": "JUMPDEST"
    },
    "20548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20552": {
      "op": "DUP3"
    },
    "20553": {
      "op": "DUP5"
    },
    "20554": {
      "op": "SUB"
    },
    "20555": {
      "op": "SLT"
    },
    "20556": {
      "op": "ISZERO"
    },
    "20557": {
      "op": "PUSH2",
      "value": "0x5055"
    },
    "20560": {
      "op": "JUMPI"
    },
    "20561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20563": {
      "op": "DUP1"
    },
    "20564": {
      "op": "REVERT"
    },
    "20565": {
      "op": "JUMPDEST"
    },
    "20566": {
      "op": "DUP2"
    },
    "20567": {
      "op": "CALLDATALOAD"
    },
    "20568": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "20585": {
      "op": "DUP2"
    },
    "20586": {
      "op": "AND"
    },
    "20587": {
      "op": "DUP2"
    },
    "20588": {
      "op": "EQ"
    },
    "20589": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "20592": {
      "op": "JUMPI"
    },
    "20593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20595": {
      "op": "DUP1"
    },
    "20596": {
      "op": "REVERT"
    },
    "20597": {
      "op": "JUMPDEST"
    },
    "20598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20604": {
      "op": "SHL"
    },
    "20605": {
      "op": "SUB"
    },
    "20606": {
      "op": "DUP2"
    },
    "20607": {
      "op": "AND"
    },
    "20608": {
      "op": "DUP2"
    },
    "20609": {
      "op": "EQ"
    },
    "20610": {
      "op": "PUSH2",
      "value": "0x18D1"
    },
    "20613": {
      "op": "JUMPI"
    },
    "20614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20616": {
      "op": "DUP1"
    },
    "20617": {
      "op": "REVERT"
    },
    "20618": {
      "op": "JUMPDEST"
    },
    "20619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20621": {
      "op": "DUP1"
    },
    "20622": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20624": {
      "op": "DUP4"
    },
    "20625": {
      "op": "DUP6"
    },
    "20626": {
      "op": "SUB"
    },
    "20627": {
      "op": "SLT"
    },
    "20628": {
      "op": "ISZERO"
    },
    "20629": {
      "op": "PUSH2",
      "value": "0x509D"
    },
    "20632": {
      "op": "JUMPI"
    },
    "20633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20635": {
      "op": "DUP1"
    },
    "20636": {
      "op": "REVERT"
    },
    "20637": {
      "op": "JUMPDEST"
    },
    "20638": {
      "op": "DUP3"
    },
    "20639": {
      "op": "CALLDATALOAD"
    },
    "20640": {
      "op": "PUSH2",
      "value": "0x50A8"
    },
    "20643": {
      "op": "DUP2"
    },
    "20644": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20647": {
      "jump": "i",
      "op": "JUMP"
    },
    "20648": {
      "op": "JUMPDEST"
    },
    "20649": {
      "op": "SWAP5"
    },
    "20650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20652": {
      "op": "SWAP4"
    },
    "20653": {
      "op": "SWAP1"
    },
    "20654": {
      "op": "SWAP4"
    },
    "20655": {
      "op": "ADD"
    },
    "20656": {
      "op": "CALLDATALOAD"
    },
    "20657": {
      "op": "SWAP4"
    },
    "20658": {
      "op": "POP"
    },
    "20659": {
      "op": "POP"
    },
    "20660": {
      "op": "POP"
    },
    "20661": {
      "jump": "o",
      "op": "JUMP"
    },
    "20662": {
      "op": "JUMPDEST"
    },
    "20663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20665": {
      "op": "DUP1"
    },
    "20666": {
      "op": "DUP3"
    },
    "20667": {
      "op": "MSTORE"
    },
    "20668": {
      "op": "DUP3"
    },
    "20669": {
      "op": "MLOAD"
    },
    "20670": {
      "op": "DUP3"
    },
    "20671": {
      "op": "DUP3"
    },
    "20672": {
      "op": "ADD"
    },
    "20673": {
      "op": "DUP2"
    },
    "20674": {
      "op": "SWAP1"
    },
    "20675": {
      "op": "MSTORE"
    },
    "20676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20678": {
      "op": "SWAP2"
    },
    "20679": {
      "op": "SWAP1"
    },
    "20680": {
      "op": "DUP5"
    },
    "20681": {
      "op": "DUP3"
    },
    "20682": {
      "op": "ADD"
    },
    "20683": {
      "op": "SWAP1"
    },
    "20684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20686": {
      "op": "DUP6"
    },
    "20687": {
      "op": "ADD"
    },
    "20688": {
      "op": "SWAP1"
    },
    "20689": {
      "op": "DUP5"
    },
    "20690": {
      "op": "JUMPDEST"
    },
    "20691": {
      "op": "DUP2"
    },
    "20692": {
      "op": "DUP2"
    },
    "20693": {
      "op": "LT"
    },
    "20694": {
      "op": "ISZERO"
    },
    "20695": {
      "op": "PUSH2",
      "value": "0x50F7"
    },
    "20698": {
      "op": "JUMPI"
    },
    "20699": {
      "op": "DUP4"
    },
    "20700": {
      "op": "MLOAD"
    },
    "20701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20707": {
      "op": "SHL"
    },
    "20708": {
      "op": "SUB"
    },
    "20709": {
      "op": "AND"
    },
    "20710": {
      "op": "DUP4"
    },
    "20711": {
      "op": "MSTORE"
    },
    "20712": {
      "op": "SWAP3"
    },
    "20713": {
      "op": "DUP5"
    },
    "20714": {
      "op": "ADD"
    },
    "20715": {
      "op": "SWAP3"
    },
    "20716": {
      "op": "SWAP2"
    },
    "20717": {
      "op": "DUP5"
    },
    "20718": {
      "op": "ADD"
    },
    "20719": {
      "op": "SWAP2"
    },
    "20720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20722": {
      "op": "ADD"
    },
    "20723": {
      "op": "PUSH2",
      "value": "0x50D2"
    },
    "20726": {
      "op": "JUMP"
    },
    "20727": {
      "op": "JUMPDEST"
    },
    "20728": {
      "op": "POP"
    },
    "20729": {
      "op": "SWAP1"
    },
    "20730": {
      "op": "SWAP7"
    },
    "20731": {
      "op": "SWAP6"
    },
    "20732": {
      "op": "POP"
    },
    "20733": {
      "op": "POP"
    },
    "20734": {
      "op": "POP"
    },
    "20735": {
      "op": "POP"
    },
    "20736": {
      "op": "POP"
    },
    "20737": {
      "op": "POP"
    },
    "20738": {
      "jump": "o",
      "op": "JUMP"
    },
    "20739": {
      "op": "JUMPDEST"
    },
    "20740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20744": {
      "op": "DUP3"
    },
    "20745": {
      "op": "DUP5"
    },
    "20746": {
      "op": "SUB"
    },
    "20747": {
      "op": "SLT"
    },
    "20748": {
      "op": "ISZERO"
    },
    "20749": {
      "op": "PUSH2",
      "value": "0x5115"
    },
    "20752": {
      "op": "JUMPI"
    },
    "20753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20755": {
      "op": "DUP1"
    },
    "20756": {
      "op": "REVERT"
    },
    "20757": {
      "op": "JUMPDEST"
    },
    "20758": {
      "op": "POP"
    },
    "20759": {
      "op": "CALLDATALOAD"
    },
    "20760": {
      "op": "SWAP2"
    },
    "20761": {
      "op": "SWAP1"
    },
    "20762": {
      "op": "POP"
    },
    "20763": {
      "jump": "o",
      "op": "JUMP"
    },
    "20764": {
      "op": "JUMPDEST"
    },
    "20765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20769": {
      "op": "DUP3"
    },
    "20770": {
      "op": "DUP5"
    },
    "20771": {
      "op": "SUB"
    },
    "20772": {
      "op": "SLT"
    },
    "20773": {
      "op": "ISZERO"
    },
    "20774": {
      "op": "PUSH2",
      "value": "0x512E"
    },
    "20777": {
      "op": "JUMPI"
    },
    "20778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20780": {
      "op": "DUP1"
    },
    "20781": {
      "op": "REVERT"
    },
    "20782": {
      "op": "JUMPDEST"
    },
    "20783": {
      "op": "DUP2"
    },
    "20784": {
      "op": "CALLDATALOAD"
    },
    "20785": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "20788": {
      "op": "DUP2"
    },
    "20789": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20792": {
      "jump": "i",
      "op": "JUMP"
    },
    "20793": {
      "op": "JUMPDEST"
    },
    "20794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20796": {
      "op": "DUP1"
    },
    "20797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20799": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20801": {
      "op": "DUP5"
    },
    "20802": {
      "op": "DUP7"
    },
    "20803": {
      "op": "SUB"
    },
    "20804": {
      "op": "SLT"
    },
    "20805": {
      "op": "ISZERO"
    },
    "20806": {
      "op": "PUSH2",
      "value": "0x514E"
    },
    "20809": {
      "op": "JUMPI"
    },
    "20810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20812": {
      "op": "DUP1"
    },
    "20813": {
      "op": "REVERT"
    },
    "20814": {
      "op": "JUMPDEST"
    },
    "20815": {
      "op": "DUP4"
    },
    "20816": {
      "op": "CALLDATALOAD"
    },
    "20817": {
      "op": "PUSH2",
      "value": "0x5159"
    },
    "20820": {
      "op": "DUP2"
    },
    "20821": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20824": {
      "jump": "i",
      "op": "JUMP"
    },
    "20825": {
      "op": "JUMPDEST"
    },
    "20826": {
      "op": "SWAP3"
    },
    "20827": {
      "op": "POP"
    },
    "20828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20830": {
      "op": "DUP5"
    },
    "20831": {
      "op": "ADD"
    },
    "20832": {
      "op": "CALLDATALOAD"
    },
    "20833": {
      "op": "PUSH2",
      "value": "0x5169"
    },
    "20836": {
      "op": "DUP2"
    },
    "20837": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20840": {
      "jump": "i",
      "op": "JUMP"
    },
    "20841": {
      "op": "JUMPDEST"
    },
    "20842": {
      "op": "SWAP3"
    },
    "20843": {
      "op": "SWAP6"
    },
    "20844": {
      "op": "SWAP3"
    },
    "20845": {
      "op": "SWAP5"
    },
    "20846": {
      "op": "POP"
    },
    "20847": {
      "op": "POP"
    },
    "20848": {
      "op": "POP"
    },
    "20849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20851": {
      "op": "SWAP2"
    },
    "20852": {
      "op": "SWAP1"
    },
    "20853": {
      "op": "SWAP2"
    },
    "20854": {
      "op": "ADD"
    },
    "20855": {
      "op": "CALLDATALOAD"
    },
    "20856": {
      "op": "SWAP1"
    },
    "20857": {
      "jump": "o",
      "op": "JUMP"
    },
    "20858": {
      "op": "JUMPDEST"
    },
    "20859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20861": {
      "op": "DUP1"
    },
    "20862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20864": {
      "op": "DUP4"
    },
    "20865": {
      "op": "DUP6"
    },
    "20866": {
      "op": "SUB"
    },
    "20867": {
      "op": "SLT"
    },
    "20868": {
      "op": "ISZERO"
    },
    "20869": {
      "op": "PUSH2",
      "value": "0x518D"
    },
    "20872": {
      "op": "JUMPI"
    },
    "20873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20875": {
      "op": "DUP1"
    },
    "20876": {
      "op": "REVERT"
    },
    "20877": {
      "op": "JUMPDEST"
    },
    "20878": {
      "op": "POP"
    },
    "20879": {
      "op": "POP"
    },
    "20880": {
      "op": "DUP1"
    },
    "20881": {
      "op": "CALLDATALOAD"
    },
    "20882": {
      "op": "SWAP3"
    },
    "20883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20885": {
      "op": "SWAP1"
    },
    "20886": {
      "op": "SWAP2"
    },
    "20887": {
      "op": "ADD"
    },
    "20888": {
      "op": "CALLDATALOAD"
    },
    "20889": {
      "op": "SWAP2"
    },
    "20890": {
      "op": "POP"
    },
    "20891": {
      "jump": "o",
      "op": "JUMP"
    },
    "20892": {
      "op": "JUMPDEST"
    },
    "20893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20897": {
      "op": "DUP3"
    },
    "20898": {
      "op": "DUP5"
    },
    "20899": {
      "op": "SUB"
    },
    "20900": {
      "op": "SLT"
    },
    "20901": {
      "op": "ISZERO"
    },
    "20902": {
      "op": "PUSH2",
      "value": "0x51AE"
    },
    "20905": {
      "op": "JUMPI"
    },
    "20906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20908": {
      "op": "DUP1"
    },
    "20909": {
      "op": "REVERT"
    },
    "20910": {
      "op": "JUMPDEST"
    },
    "20911": {
      "op": "DUP2"
    },
    "20912": {
      "op": "CALLDATALOAD"
    },
    "20913": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "20922": {
      "op": "DUP2"
    },
    "20923": {
      "op": "AND"
    },
    "20924": {
      "op": "DUP2"
    },
    "20925": {
      "op": "EQ"
    },
    "20926": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "20929": {
      "op": "JUMPI"
    },
    "20930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20932": {
      "op": "DUP1"
    },
    "20933": {
      "op": "REVERT"
    },
    "20934": {
      "op": "JUMPDEST"
    },
    "20935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20937": {
      "op": "DUP1"
    },
    "20938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20940": {
      "op": "DUP4"
    },
    "20941": {
      "op": "DUP6"
    },
    "20942": {
      "op": "SUB"
    },
    "20943": {
      "op": "SLT"
    },
    "20944": {
      "op": "ISZERO"
    },
    "20945": {
      "op": "PUSH2",
      "value": "0x51D9"
    },
    "20948": {
      "op": "JUMPI"
    },
    "20949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20951": {
      "op": "DUP1"
    },
    "20952": {
      "op": "REVERT"
    },
    "20953": {
      "op": "JUMPDEST"
    },
    "20954": {
      "op": "DUP3"
    },
    "20955": {
      "op": "CALLDATALOAD"
    },
    "20956": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "20965": {
      "op": "DUP1"
    },
    "20966": {
      "op": "DUP3"
    },
    "20967": {
      "op": "GT"
    },
    "20968": {
      "op": "ISZERO"
    },
    "20969": {
      "op": "PUSH2",
      "value": "0x51F1"
    },
    "20972": {
      "op": "JUMPI"
    },
    "20973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20975": {
      "op": "DUP1"
    },
    "20976": {
      "op": "REVERT"
    },
    "20977": {
      "op": "JUMPDEST"
    },
    "20978": {
      "op": "DUP2"
    },
    "20979": {
      "op": "DUP6"
    },
    "20980": {
      "op": "ADD"
    },
    "20981": {
      "op": "SWAP2"
    },
    "20982": {
      "op": "POP"
    },
    "20983": {
      "op": "DUP6"
    },
    "20984": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20986": {
      "op": "DUP4"
    },
    "20987": {
      "op": "ADD"
    },
    "20988": {
      "op": "SLT"
    },
    "20989": {
      "op": "PUSH2",
      "value": "0x5205"
    },
    "20992": {
      "op": "JUMPI"
    },
    "20993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20995": {
      "op": "DUP1"
    },
    "20996": {
      "op": "REVERT"
    },
    "20997": {
      "op": "JUMPDEST"
    },
    "20998": {
      "op": "DUP2"
    },
    "20999": {
      "op": "CALLDATALOAD"
    },
    "21000": {
      "op": "DUP2"
    },
    "21001": {
      "op": "DUP2"
    },
    "21002": {
      "op": "GT"
    },
    "21003": {
      "op": "ISZERO"
    },
    "21004": {
      "op": "PUSH2",
      "value": "0x5214"
    },
    "21007": {
      "op": "JUMPI"
    },
    "21008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21010": {
      "op": "DUP1"
    },
    "21011": {
      "op": "REVERT"
    },
    "21012": {
      "op": "JUMPDEST"
    },
    "21013": {
      "op": "DUP7"
    },
    "21014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21016": {
      "op": "DUP3"
    },
    "21017": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "21019": {
      "op": "SHL"
    },
    "21020": {
      "op": "DUP6"
    },
    "21021": {
      "op": "ADD"
    },
    "21022": {
      "op": "ADD"
    },
    "21023": {
      "op": "GT"
    },
    "21024": {
      "op": "ISZERO"
    },
    "21025": {
      "op": "PUSH2",
      "value": "0x5229"
    },
    "21028": {
      "op": "JUMPI"
    },
    "21029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21031": {
      "op": "DUP1"
    },
    "21032": {
      "op": "REVERT"
    },
    "21033": {
      "op": "JUMPDEST"
    },
    "21034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21036": {
      "op": "SWAP3"
    },
    "21037": {
      "op": "SWAP1"
    },
    "21038": {
      "op": "SWAP3"
    },
    "21039": {
      "op": "ADD"
    },
    "21040": {
      "op": "SWAP7"
    },
    "21041": {
      "op": "SWAP2"
    },
    "21042": {
      "op": "SWAP6"
    },
    "21043": {
      "op": "POP"
    },
    "21044": {
      "op": "SWAP1"
    },
    "21045": {
      "op": "SWAP4"
    },
    "21046": {
      "op": "POP"
    },
    "21047": {
      "op": "POP"
    },
    "21048": {
      "op": "POP"
    },
    "21049": {
      "op": "POP"
    },
    "21050": {
      "jump": "o",
      "op": "JUMP"
    },
    "21051": {
      "op": "JUMPDEST"
    },
    "21052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21054": {
      "op": "DUP1"
    },
    "21055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21057": {
      "op": "DUP4"
    },
    "21058": {
      "op": "DUP6"
    },
    "21059": {
      "op": "SUB"
    },
    "21060": {
      "op": "SLT"
    },
    "21061": {
      "op": "ISZERO"
    },
    "21062": {
      "op": "PUSH2",
      "value": "0x524E"
    },
    "21065": {
      "op": "JUMPI"
    },
    "21066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21068": {
      "op": "DUP1"
    },
    "21069": {
      "op": "REVERT"
    },
    "21070": {
      "op": "JUMPDEST"
    },
    "21071": {
      "op": "DUP3"
    },
    "21072": {
      "op": "CALLDATALOAD"
    },
    "21073": {
      "op": "PUSH2",
      "value": "0x5259"
    },
    "21076": {
      "op": "DUP2"
    },
    "21077": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21080": {
      "jump": "i",
      "op": "JUMP"
    },
    "21081": {
      "op": "JUMPDEST"
    },
    "21082": {
      "op": "SWAP2"
    },
    "21083": {
      "op": "POP"
    },
    "21084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21086": {
      "op": "DUP4"
    },
    "21087": {
      "op": "ADD"
    },
    "21088": {
      "op": "CALLDATALOAD"
    },
    "21089": {
      "op": "PUSH2",
      "value": "0x5269"
    },
    "21092": {
      "op": "DUP2"
    },
    "21093": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21096": {
      "jump": "i",
      "op": "JUMP"
    },
    "21097": {
      "op": "JUMPDEST"
    },
    "21098": {
      "op": "DUP1"
    },
    "21099": {
      "op": "SWAP2"
    },
    "21100": {
      "op": "POP"
    },
    "21101": {
      "op": "POP"
    },
    "21102": {
      "op": "SWAP3"
    },
    "21103": {
      "op": "POP"
    },
    "21104": {
      "op": "SWAP3"
    },
    "21105": {
      "op": "SWAP1"
    },
    "21106": {
      "op": "POP"
    },
    "21107": {
      "jump": "o",
      "op": "JUMP"
    },
    "21108": {
      "op": "JUMPDEST"
    },
    "21109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21111": {
      "op": "DUP1"
    },
    "21112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21114": {
      "op": "DUP1"
    },
    "21115": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21117": {
      "op": "DUP6"
    },
    "21118": {
      "op": "DUP8"
    },
    "21119": {
      "op": "SUB"
    },
    "21120": {
      "op": "SLT"
    },
    "21121": {
      "op": "ISZERO"
    },
    "21122": {
      "op": "PUSH2",
      "value": "0x528A"
    },
    "21125": {
      "op": "JUMPI"
    },
    "21126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21128": {
      "op": "DUP1"
    },
    "21129": {
      "op": "REVERT"
    },
    "21130": {
      "op": "JUMPDEST"
    },
    "21131": {
      "op": "DUP5"
    },
    "21132": {
      "op": "CALLDATALOAD"
    },
    "21133": {
      "op": "PUSH2",
      "value": "0x5295"
    },
    "21136": {
      "op": "DUP2"
    },
    "21137": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21140": {
      "jump": "i",
      "op": "JUMP"
    },
    "21141": {
      "op": "JUMPDEST"
    },
    "21142": {
      "op": "SWAP4"
    },
    "21143": {
      "op": "POP"
    },
    "21144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21146": {
      "op": "DUP6"
    },
    "21147": {
      "op": "ADD"
    },
    "21148": {
      "op": "CALLDATALOAD"
    },
    "21149": {
      "op": "PUSH2",
      "value": "0x52A5"
    },
    "21152": {
      "op": "DUP2"
    },
    "21153": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21156": {
      "jump": "i",
      "op": "JUMP"
    },
    "21157": {
      "op": "JUMPDEST"
    },
    "21158": {
      "op": "SWAP3"
    },
    "21159": {
      "op": "POP"
    },
    "21160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21162": {
      "op": "DUP6"
    },
    "21163": {
      "op": "ADD"
    },
    "21164": {
      "op": "CALLDATALOAD"
    },
    "21165": {
      "op": "PUSH2",
      "value": "0x52B5"
    },
    "21168": {
      "op": "DUP2"
    },
    "21169": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21172": {
      "jump": "i",
      "op": "JUMP"
    },
    "21173": {
      "op": "JUMPDEST"
    },
    "21174": {
      "op": "SWAP2"
    },
    "21175": {
      "op": "POP"
    },
    "21176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21178": {
      "op": "DUP6"
    },
    "21179": {
      "op": "ADD"
    },
    "21180": {
      "op": "CALLDATALOAD"
    },
    "21181": {
      "op": "PUSH2",
      "value": "0x52C5"
    },
    "21184": {
      "op": "DUP2"
    },
    "21185": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21188": {
      "jump": "i",
      "op": "JUMP"
    },
    "21189": {
      "op": "JUMPDEST"
    },
    "21190": {
      "op": "SWAP4"
    },
    "21191": {
      "op": "SWAP7"
    },
    "21192": {
      "op": "SWAP3"
    },
    "21193": {
      "op": "SWAP6"
    },
    "21194": {
      "op": "POP"
    },
    "21195": {
      "op": "SWAP1"
    },
    "21196": {
      "op": "SWAP4"
    },
    "21197": {
      "op": "POP"
    },
    "21198": {
      "op": "POP"
    },
    "21199": {
      "jump": "o",
      "op": "JUMP"
    },
    "21200": {
      "op": "JUMPDEST"
    },
    "21201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21203": {
      "op": "DUP2"
    },
    "21204": {
      "op": "DUP2"
    },
    "21205": {
      "op": "SHR"
    },
    "21206": {
      "op": "SWAP1"
    },
    "21207": {
      "op": "DUP3"
    },
    "21208": {
      "op": "AND"
    },
    "21209": {
      "op": "DUP1"
    },
    "21210": {
      "op": "PUSH2",
      "value": "0x52E4"
    },
    "21213": {
      "op": "JUMPI"
    },
    "21214": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "21216": {
      "op": "DUP3"
    },
    "21217": {
      "op": "AND"
    },
    "21218": {
      "op": "SWAP2"
    },
    "21219": {
      "op": "POP"
    },
    "21220": {
      "op": "JUMPDEST"
    },
    "21221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21223": {
      "op": "DUP3"
    },
    "21224": {
      "op": "LT"
    },
    "21225": {
      "op": "DUP2"
    },
    "21226": {
      "op": "EQ"
    },
    "21227": {
      "op": "ISZERO"
    },
    "21228": {
      "op": "PUSH2",
      "value": "0x531E"
    },
    "21231": {
      "op": "JUMPI"
    },
    "21232": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "21265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21267": {
      "op": "MSTORE"
    },
    "21268": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "21270": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21272": {
      "op": "MSTORE"
    },
    "21273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21277": {
      "op": "REVERT"
    },
    "21278": {
      "op": "JUMPDEST"
    },
    "21279": {
      "op": "POP"
    },
    "21280": {
      "op": "SWAP2"
    },
    "21281": {
      "op": "SWAP1"
    },
    "21282": {
      "op": "POP"
    },
    "21283": {
      "jump": "o",
      "op": "JUMP"
    },
    "21284": {
      "op": "JUMPDEST"
    },
    "21285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21289": {
      "op": "DUP3"
    },
    "21290": {
      "op": "DUP5"
    },
    "21291": {
      "op": "SUB"
    },
    "21292": {
      "op": "SLT"
    },
    "21293": {
      "op": "ISZERO"
    },
    "21294": {
      "op": "PUSH2",
      "value": "0x5336"
    },
    "21297": {
      "op": "JUMPI"
    },
    "21298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21300": {
      "op": "DUP1"
    },
    "21301": {
      "op": "REVERT"
    },
    "21302": {
      "op": "JUMPDEST"
    },
    "21303": {
      "op": "DUP2"
    },
    "21304": {
      "op": "MLOAD"
    },
    "21305": {
      "op": "DUP1"
    },
    "21306": {
      "op": "ISZERO"
    },
    "21307": {
      "op": "ISZERO"
    },
    "21308": {
      "op": "DUP2"
    },
    "21309": {
      "op": "EQ"
    },
    "21310": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "21313": {
      "op": "JUMPI"
    },
    "21314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21316": {
      "op": "DUP1"
    },
    "21317": {
      "op": "REVERT"
    },
    "21318": {
      "op": "JUMPDEST"
    },
    "21319": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "21352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21354": {
      "op": "MSTORE"
    },
    "21355": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "21357": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21359": {
      "op": "MSTORE"
    },
    "21360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21364": {
      "op": "REVERT"
    },
    "21365": {
      "op": "JUMPDEST"
    },
    "21366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21368": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "21377": {
      "op": "DUP1"
    },
    "21378": {
      "op": "DUP4"
    },
    "21379": {
      "op": "AND"
    },
    "21380": {
      "op": "DUP2"
    },
    "21381": {
      "op": "DUP6"
    },
    "21382": {
      "op": "AND"
    },
    "21383": {
      "op": "DUP1"
    },
    "21384": {
      "op": "DUP4"
    },
    "21385": {
      "op": "SUB"
    },
    "21386": {
      "op": "DUP3"
    },
    "21387": {
      "op": "GT"
    },
    "21388": {
      "op": "ISZERO"
    },
    "21389": {
      "op": "PUSH2",
      "value": "0x5398"
    },
    "21392": {
      "op": "JUMPI"
    },
    "21393": {
      "op": "PUSH2",
      "value": "0x5398"
    },
    "21396": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21399": {
      "jump": "i",
      "op": "JUMP"
    },
    "21400": {
      "op": "JUMPDEST"
    },
    "21401": {
      "op": "ADD"
    },
    "21402": {
      "op": "SWAP5"
    },
    "21403": {
      "op": "SWAP4"
    },
    "21404": {
      "op": "POP"
    },
    "21405": {
      "op": "POP"
    },
    "21406": {
      "op": "POP"
    },
    "21407": {
      "op": "POP"
    },
    "21408": {
      "jump": "o",
      "op": "JUMP"
    },
    "21409": {
      "op": "JUMPDEST"
    },
    "21410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21412": {
      "op": "DUP3"
    },
    "21413": {
      "op": "NOT"
    },
    "21414": {
      "op": "DUP3"
    },
    "21415": {
      "op": "GT"
    },
    "21416": {
      "op": "ISZERO"
    },
    "21417": {
      "op": "PUSH2",
      "value": "0x53B4"
    },
    "21420": {
      "op": "JUMPI"
    },
    "21421": {
      "op": "PUSH2",
      "value": "0x53B4"
    },
    "21424": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21427": {
      "jump": "i",
      "op": "JUMP"
    },
    "21428": {
      "op": "JUMPDEST"
    },
    "21429": {
      "op": "POP"
    },
    "21430": {
      "op": "ADD"
    },
    "21431": {
      "op": "SWAP1"
    },
    "21432": {
      "jump": "o",
      "op": "JUMP"
    },
    "21433": {
      "op": "JUMPDEST"
    },
    "21434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21436": {
      "op": "DUP3"
    },
    "21437": {
      "op": "DUP3"
    },
    "21438": {
      "op": "LT"
    },
    "21439": {
      "op": "ISZERO"
    },
    "21440": {
      "op": "PUSH2",
      "value": "0x53CB"
    },
    "21443": {
      "op": "JUMPI"
    },
    "21444": {
      "op": "PUSH2",
      "value": "0x53CB"
    },
    "21447": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21450": {
      "jump": "i",
      "op": "JUMP"
    },
    "21451": {
      "op": "JUMPDEST"
    },
    "21452": {
      "op": "POP"
    },
    "21453": {
      "op": "SUB"
    },
    "21454": {
      "op": "SWAP1"
    },
    "21455": {
      "jump": "o",
      "op": "JUMP"
    },
    "21456": {
      "op": "JUMPDEST"
    },
    "21457": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "21490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21492": {
      "op": "MSTORE"
    },
    "21493": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "21495": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21497": {
      "op": "MSTORE"
    },
    "21498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21502": {
      "op": "REVERT"
    },
    "21503": {
      "op": "JUMPDEST"
    },
    "21504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21508": {
      "op": "DUP3"
    },
    "21509": {
      "op": "DUP5"
    },
    "21510": {
      "op": "SUB"
    },
    "21511": {
      "op": "SLT"
    },
    "21512": {
      "op": "ISZERO"
    },
    "21513": {
      "op": "PUSH2",
      "value": "0x5411"
    },
    "21516": {
      "op": "JUMPI"
    },
    "21517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21519": {
      "op": "DUP1"
    },
    "21520": {
      "op": "REVERT"
    },
    "21521": {
      "op": "JUMPDEST"
    },
    "21522": {
      "op": "POP"
    },
    "21523": {
      "op": "MLOAD"
    },
    "21524": {
      "op": "SWAP2"
    },
    "21525": {
      "op": "SWAP1"
    },
    "21526": {
      "op": "POP"
    },
    "21527": {
      "jump": "o",
      "op": "JUMP"
    },
    "21528": {
      "op": "JUMPDEST"
    },
    "21529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21531": {
      "op": "DUP1"
    },
    "21532": {
      "op": "DUP3"
    },
    "21533": {
      "op": "MSTORE"
    },
    "21534": {
      "op": "DUP2"
    },
    "21535": {
      "op": "DUP2"
    },
    "21536": {
      "op": "ADD"
    },
    "21537": {
      "op": "DUP4"
    },
    "21538": {
      "op": "SWAP1"
    },
    "21539": {
      "op": "MSTORE"
    },
    "21540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21542": {
      "op": "SWAP1"
    },
    "21543": {
      "op": "DUP5"
    },
    "21544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21546": {
      "op": "DUP5"
    },
    "21547": {
      "op": "ADD"
    },
    "21548": {
      "op": "DUP4"
    },
    "21549": {
      "op": "JUMPDEST"
    },
    "21550": {
      "op": "DUP7"
    },
    "21551": {
      "op": "DUP2"
    },
    "21552": {
      "op": "LT"
    },
    "21553": {
      "op": "ISZERO"
    },
    "21554": {
      "op": "PUSH2",
      "value": "0x545B"
    },
    "21557": {
      "op": "JUMPI"
    },
    "21558": {
      "op": "DUP3"
    },
    "21559": {
      "op": "CALLDATALOAD"
    },
    "21560": {
      "op": "PUSH2",
      "value": "0x5440"
    },
    "21563": {
      "op": "DUP2"
    },
    "21564": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21567": {
      "jump": "i",
      "op": "JUMP"
    },
    "21568": {
      "op": "JUMPDEST"
    },
    "21569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21575": {
      "op": "SHL"
    },
    "21576": {
      "op": "SUB"
    },
    "21577": {
      "op": "AND"
    },
    "21578": {
      "op": "DUP3"
    },
    "21579": {
      "op": "MSTORE"
    },
    "21580": {
      "op": "SWAP2"
    },
    "21581": {
      "op": "DUP4"
    },
    "21582": {
      "op": "ADD"
    },
    "21583": {
      "op": "SWAP2"
    },
    "21584": {
      "op": "SWAP1"
    },
    "21585": {
      "op": "DUP4"
    },
    "21586": {
      "op": "ADD"
    },
    "21587": {
      "op": "SWAP1"
    },
    "21588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21590": {
      "op": "ADD"
    },
    "21591": {
      "op": "PUSH2",
      "value": "0x542D"
    },
    "21594": {
      "op": "JUMP"
    },
    "21595": {
      "op": "JUMPDEST"
    },
    "21596": {
      "op": "POP"
    },
    "21597": {
      "op": "SWAP7"
    },
    "21598": {
      "op": "SWAP6"
    },
    "21599": {
      "op": "POP"
    },
    "21600": {
      "op": "POP"
    },
    "21601": {
      "op": "POP"
    },
    "21602": {
      "op": "POP"
    },
    "21603": {
      "op": "POP"
    },
    "21604": {
      "op": "POP"
    },
    "21605": {
      "jump": "o",
      "op": "JUMP"
    },
    "21606": {
      "op": "JUMPDEST"
    },
    "21607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21609": {
      "op": "PUSH31",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "21641": {
      "op": "DUP4"
    },
    "21642": {
      "op": "DUP2"
    },
    "21643": {
      "op": "AND"
    },
    "21644": {
      "op": "SWAP1"
    },
    "21645": {
      "op": "DUP4"
    },
    "21646": {
      "op": "AND"
    },
    "21647": {
      "op": "DUP2"
    },
    "21648": {
      "op": "DUP2"
    },
    "21649": {
      "op": "LT"
    },
    "21650": {
      "op": "ISZERO"
    },
    "21651": {
      "op": "PUSH2",
      "value": "0x549E"
    },
    "21654": {
      "op": "JUMPI"
    },
    "21655": {
      "op": "PUSH2",
      "value": "0x549E"
    },
    "21658": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21661": {
      "jump": "i",
      "op": "JUMP"
    },
    "21662": {
      "op": "JUMPDEST"
    },
    "21663": {
      "op": "SUB"
    },
    "21664": {
      "op": "SWAP4"
    },
    "21665": {
      "op": "SWAP3"
    },
    "21666": {
      "op": "POP"
    },
    "21667": {
      "op": "POP"
    },
    "21668": {
      "op": "POP"
    },
    "21669": {
      "jump": "o",
      "op": "JUMP"
    },
    "21670": {
      "op": "JUMPDEST"
    },
    "21671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21675": {
      "op": "DUP3"
    },
    "21676": {
      "op": "DUP5"
    },
    "21677": {
      "op": "SUB"
    },
    "21678": {
      "op": "SLT"
    },
    "21679": {
      "op": "ISZERO"
    },
    "21680": {
      "op": "PUSH2",
      "value": "0x54B8"
    },
    "21683": {
      "op": "JUMPI"
    },
    "21684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21686": {
      "op": "DUP1"
    },
    "21687": {
      "op": "REVERT"
    },
    "21688": {
      "op": "JUMPDEST"
    },
    "21689": {
      "op": "DUP2"
    },
    "21690": {
      "op": "MLOAD"
    },
    "21691": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "21693": {
      "op": "DUP2"
    },
    "21694": {
      "op": "AND"
    },
    "21695": {
      "op": "DUP2"
    },
    "21696": {
      "op": "EQ"
    },
    "21697": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "21700": {
      "op": "JUMPI"
    },
    "21701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21703": {
      "op": "DUP1"
    },
    "21704": {
      "op": "REVERT"
    },
    "21705": {
      "op": "JUMPDEST"
    },
    "21706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21708": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "21725": {
      "op": "DUP1"
    },
    "21726": {
      "op": "DUP4"
    },
    "21727": {
      "op": "AND"
    },
    "21728": {
      "op": "DUP2"
    },
    "21729": {
      "op": "DUP6"
    },
    "21730": {
      "op": "AND"
    },
    "21731": {
      "op": "DUP1"
    },
    "21732": {
      "op": "DUP4"
    },
    "21733": {
      "op": "SUB"
    },
    "21734": {
      "op": "DUP3"
    },
    "21735": {
      "op": "GT"
    },
    "21736": {
      "op": "ISZERO"
    },
    "21737": {
      "op": "PUSH2",
      "value": "0x5398"
    },
    "21740": {
      "op": "JUMPI"
    },
    "21741": {
      "op": "PUSH2",
      "value": "0x5398"
    },
    "21744": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21747": {
      "jump": "i",
      "op": "JUMP"
    },
    "21748": {
      "op": "JUMPDEST"
    },
    "21749": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "21782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21784": {
      "op": "MSTORE"
    },
    "21785": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "21787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21789": {
      "op": "MSTORE"
    },
    "21790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21794": {
      "op": "REVERT"
    },
    "21795": {
      "op": "JUMPDEST"
    },
    "21796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21800": {
      "op": "NOT"
    },
    "21801": {
      "op": "DUP3"
    },
    "21802": {
      "op": "EQ"
    },
    "21803": {
      "op": "ISZERO"
    },
    "21804": {
      "op": "PUSH2",
      "value": "0x5537"
    },
    "21807": {
      "op": "JUMPI"
    },
    "21808": {
      "op": "PUSH2",
      "value": "0x5537"
    },
    "21811": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21814": {
      "jump": "i",
      "op": "JUMP"
    },
    "21815": {
      "op": "JUMPDEST"
    },
    "21816": {
      "op": "POP"
    },
    "21817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21819": {
      "op": "ADD"
    },
    "21820": {
      "op": "SWAP1"
    },
    "21821": {
      "jump": "o",
      "op": "JUMP"
    },
    "21822": {
      "op": "JUMPDEST"
    },
    "21823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21827": {
      "op": "DUP3"
    },
    "21828": {
      "op": "DUP5"
    },
    "21829": {
      "op": "SUB"
    },
    "21830": {
      "op": "SLT"
    },
    "21831": {
      "op": "ISZERO"
    },
    "21832": {
      "op": "PUSH2",
      "value": "0x5550"
    },
    "21835": {
      "op": "JUMPI"
    },
    "21836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21838": {
      "op": "DUP1"
    },
    "21839": {
      "op": "REVERT"
    },
    "21840": {
      "op": "JUMPDEST"
    },
    "21841": {
      "op": "DUP2"
    },
    "21842": {
      "op": "MLOAD"
    },
    "21843": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "21846": {
      "op": "DUP2"
    },
    "21847": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "21850": {
      "jump": "i",
      "op": "JUMP"
    },
    "21851": {
      "op": "JUMPDEST"
    },
    "21852": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "21885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21887": {
      "op": "MSTORE"
    },
    "21888": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "21890": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21892": {
      "op": "MSTORE"
    },
    "21893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21897": {
      "op": "REVERT"
    },
    "21898": {
      "op": "JUMPDEST"
    },
    "21899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21903": {
      "op": "DUP3"
    },
    "21904": {
      "op": "DUP5"
    },
    "21905": {
      "op": "SUB"
    },
    "21906": {
      "op": "SLT"
    },
    "21907": {
      "op": "ISZERO"
    },
    "21908": {
      "op": "PUSH2",
      "value": "0x559C"
    },
    "21911": {
      "op": "JUMPI"
    },
    "21912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21914": {
      "op": "DUP1"
    },
    "21915": {
      "op": "REVERT"
    },
    "21916": {
      "op": "JUMPDEST"
    },
    "21917": {
      "op": "DUP2"
    },
    "21918": {
      "op": "MLOAD"
    },
    "21919": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "21928": {
      "op": "DUP1"
    },
    "21929": {
      "op": "DUP3"
    },
    "21930": {
      "op": "GT"
    },
    "21931": {
      "op": "ISZERO"
    },
    "21932": {
      "op": "PUSH2",
      "value": "0x55B4"
    },
    "21935": {
      "op": "JUMPI"
    },
    "21936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21938": {
      "op": "DUP1"
    },
    "21939": {
      "op": "REVERT"
    },
    "21940": {
      "op": "JUMPDEST"
    },
    "21941": {
      "op": "DUP2"
    },
    "21942": {
      "op": "DUP5"
    },
    "21943": {
      "op": "ADD"
    },
    "21944": {
      "op": "SWAP2"
    },
    "21945": {
      "op": "POP"
    },
    "21946": {
      "op": "DUP5"
    },
    "21947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21949": {
      "op": "DUP4"
    },
    "21950": {
      "op": "ADD"
    },
    "21951": {
      "op": "SLT"
    },
    "21952": {
      "op": "PUSH2",
      "value": "0x55C8"
    },
    "21955": {
      "op": "JUMPI"
    },
    "21956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21958": {
      "op": "DUP1"
    },
    "21959": {
      "op": "REVERT"
    },
    "21960": {
      "op": "JUMPDEST"
    },
    "21961": {
      "op": "DUP2"
    },
    "21962": {
      "op": "MLOAD"
    },
    "21963": {
      "op": "DUP2"
    },
    "21964": {
      "op": "DUP2"
    },
    "21965": {
      "op": "GT"
    },
    "21966": {
      "op": "ISZERO"
    },
    "21967": {
      "op": "PUSH2",
      "value": "0x55DA"
    },
    "21970": {
      "op": "JUMPI"
    },
    "21971": {
      "op": "PUSH2",
      "value": "0x55DA"
    },
    "21974": {
      "op": "PUSH2",
      "value": "0x555B"
    },
    "21977": {
      "jump": "i",
      "op": "JUMP"
    },
    "21978": {
      "op": "JUMPDEST"
    },
    "21979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21981": {
      "op": "MLOAD"
    },
    "21982": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21984": {
      "op": "DUP3"
    },
    "21985": {
      "op": "ADD"
    },
    "21986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21988": {
      "op": "NOT"
    },
    "21989": {
      "op": "SWAP1"
    },
    "21990": {
      "op": "DUP2"
    },
    "21991": {
      "op": "AND"
    },
    "21992": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "21994": {
      "op": "ADD"
    },
    "21995": {
      "op": "AND"
    },
    "21996": {
      "op": "DUP2"
    },
    "21997": {
      "op": "ADD"
    },
    "21998": {
      "op": "SWAP1"
    },
    "21999": {
      "op": "DUP4"
    },
    "22000": {
      "op": "DUP3"
    },
    "22001": {
      "op": "GT"
    },
    "22002": {
      "op": "DUP2"
    },
    "22003": {
      "op": "DUP4"
    },
    "22004": {
      "op": "LT"
    },
    "22005": {
      "op": "OR"
    },
    "22006": {
      "op": "ISZERO"
    },
    "22007": {
      "op": "PUSH2",
      "value": "0x5602"
    },
    "22010": {
      "op": "JUMPI"
    },
    "22011": {
      "op": "PUSH2",
      "value": "0x5602"
    },
    "22014": {
      "op": "PUSH2",
      "value": "0x555B"
    },
    "22017": {
      "jump": "i",
      "op": "JUMP"
    },
    "22018": {
      "op": "JUMPDEST"
    },
    "22019": {
      "op": "DUP2"
    },
    "22020": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22022": {
      "op": "MSTORE"
    },
    "22023": {
      "op": "DUP3"
    },
    "22024": {
      "op": "DUP2"
    },
    "22025": {
      "op": "MSTORE"
    },
    "22026": {
      "op": "DUP8"
    },
    "22027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22029": {
      "op": "DUP5"
    },
    "22030": {
      "op": "DUP8"
    },
    "22031": {
      "op": "ADD"
    },
    "22032": {
      "op": "ADD"
    },
    "22033": {
      "op": "GT"
    },
    "22034": {
      "op": "ISZERO"
    },
    "22035": {
      "op": "PUSH2",
      "value": "0x561B"
    },
    "22038": {
      "op": "JUMPI"
    },
    "22039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22041": {
      "op": "DUP1"
    },
    "22042": {
      "op": "REVERT"
    },
    "22043": {
      "op": "JUMPDEST"
    },
    "22044": {
      "op": "PUSH2",
      "value": "0x4EA0"
    },
    "22047": {
      "op": "DUP4"
    },
    "22048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22050": {
      "op": "DUP4"
    },
    "22051": {
      "op": "ADD"
    },
    "22052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22054": {
      "op": "DUP9"
    },
    "22055": {
      "op": "ADD"
    },
    "22056": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22059": {
      "jump": "i",
      "op": "JUMP"
    },
    "22060": {
      "op": "JUMPDEST"
    },
    "22061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22063": {
      "op": "DUP5"
    },
    "22064": {
      "op": "MLOAD"
    },
    "22065": {
      "op": "PUSH2",
      "value": "0x563E"
    },
    "22068": {
      "op": "DUP2"
    },
    "22069": {
      "op": "DUP5"
    },
    "22070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22072": {
      "op": "DUP10"
    },
    "22073": {
      "op": "ADD"
    },
    "22074": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22077": {
      "jump": "i",
      "op": "JUMP"
    },
    "22078": {
      "op": "JUMPDEST"
    },
    "22079": {
      "op": "DUP1"
    },
    "22080": {
      "op": "DUP4"
    },
    "22081": {
      "op": "ADD"
    },
    "22082": {
      "op": "SWAP1"
    },
    "22083": {
      "op": "POP"
    },
    "22084": {
      "op": "PUSH32",
      "value": "0x2000000000000000000000000000000000000000000000000000000000000000"
    },
    "22117": {
      "op": "DUP1"
    },
    "22118": {
      "op": "DUP3"
    },
    "22119": {
      "op": "MSTORE"
    },
    "22120": {
      "op": "DUP6"
    },
    "22121": {
      "op": "MLOAD"
    },
    "22122": {
      "op": "PUSH2",
      "value": "0x567A"
    },
    "22125": {
      "op": "DUP2"
    },
    "22126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22128": {
      "op": "DUP6"
    },
    "22129": {
      "op": "ADD"
    },
    "22130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22132": {
      "op": "DUP11"
    },
    "22133": {
      "op": "ADD"
    },
    "22134": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22137": {
      "jump": "i",
      "op": "JUMP"
    },
    "22138": {
      "op": "JUMPDEST"
    },
    "22139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22141": {
      "op": "SWAP3"
    },
    "22142": {
      "op": "ADD"
    },
    "22143": {
      "op": "SWAP2"
    },
    "22144": {
      "op": "DUP3"
    },
    "22145": {
      "op": "ADD"
    },
    "22146": {
      "op": "MSTORE"
    },
    "22147": {
      "op": "DUP4"
    },
    "22148": {
      "op": "MLOAD"
    },
    "22149": {
      "op": "PUSH2",
      "value": "0x5695"
    },
    "22152": {
      "op": "DUP2"
    },
    "22153": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "22155": {
      "op": "DUP5"
    },
    "22156": {
      "op": "ADD"
    },
    "22157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22159": {
      "op": "DUP9"
    },
    "22160": {
      "op": "ADD"
    },
    "22161": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22164": {
      "jump": "i",
      "op": "JUMP"
    },
    "22165": {
      "op": "JUMPDEST"
    },
    "22166": {
      "op": "ADD"
    },
    "22167": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "22169": {
      "op": "ADD"
    },
    "22170": {
      "op": "SWAP6"
    },
    "22171": {
      "op": "SWAP5"
    },
    "22172": {
      "op": "POP"
    },
    "22173": {
      "op": "POP"
    },
    "22174": {
      "op": "POP"
    },
    "22175": {
      "op": "POP"
    },
    "22176": {
      "op": "POP"
    },
    "22177": {
      "jump": "o",
      "op": "JUMP"
    },
    "22178": {
      "op": "JUMPDEST"
    },
    "22179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22181": {
      "op": "DUP4"
    },
    "22182": {
      "op": "MLOAD"
    },
    "22183": {
      "op": "PUSH2",
      "value": "0x56B4"
    },
    "22186": {
      "op": "DUP2"
    },
    "22187": {
      "op": "DUP5"
    },
    "22188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22190": {
      "op": "DUP9"
    },
    "22191": {
      "op": "ADD"
    },
    "22192": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22195": {
      "jump": "i",
      "op": "JUMP"
    },
    "22196": {
      "op": "JUMPDEST"
    },
    "22197": {
      "op": "DUP4"
    },
    "22198": {
      "op": "MLOAD"
    },
    "22199": {
      "op": "SWAP1"
    },
    "22200": {
      "op": "DUP4"
    },
    "22201": {
      "op": "ADD"
    },
    "22202": {
      "op": "SWAP1"
    },
    "22203": {
      "op": "PUSH2",
      "value": "0x5398"
    },
    "22206": {
      "op": "DUP2"
    },
    "22207": {
      "op": "DUP4"
    },
    "22208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22210": {
      "op": "DUP9"
    },
    "22211": {
      "op": "ADD"
    },
    "22212": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22215": {
      "jump": "i",
      "op": "JUMP"
    },
    "22216": {
      "op": "JUMPDEST"
    },
    "22217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22219": {
      "op": "DUP2"
    },
    "22220": {
      "op": "DUP2"
    },
    "22221": {
      "op": "JUMPDEST"
    },
    "22222": {
      "op": "DUP1"
    },
    "22223": {
      "op": "DUP6"
    },
    "22224": {
      "op": "GT"
    },
    "22225": {
      "op": "ISZERO"
    },
    "22226": {
      "op": "PUSH2",
      "value": "0x5703"
    },
    "22229": {
      "op": "JUMPI"
    },
    "22230": {
      "op": "DUP2"
    },
    "22231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22233": {
      "op": "NOT"
    },
    "22234": {
      "op": "DIV"
    },
    "22235": {
      "op": "DUP3"
    },
    "22236": {
      "op": "GT"
    },
    "22237": {
      "op": "ISZERO"
    },
    "22238": {
      "op": "PUSH2",
      "value": "0x56E9"
    },
    "22241": {
      "op": "JUMPI"
    },
    "22242": {
      "op": "PUSH2",
      "value": "0x56E9"
    },
    "22245": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "22248": {
      "jump": "i",
      "op": "JUMP"
    },
    "22249": {
      "op": "JUMPDEST"
    },
    "22250": {
      "op": "DUP1"
    },
    "22251": {
      "op": "DUP6"
    },
    "22252": {
      "op": "AND"
    },
    "22253": {
      "op": "ISZERO"
    },
    "22254": {
      "op": "PUSH2",
      "value": "0x56F6"
    },
    "22257": {
      "op": "JUMPI"
    },
    "22258": {
      "op": "SWAP2"
    },
    "22259": {
      "op": "DUP2"
    },
    "22260": {
      "op": "MUL"
    },
    "22261": {
      "op": "SWAP2"
    },
    "22262": {
      "op": "JUMPDEST"
    },
    "22263": {
      "op": "SWAP4"
    },
    "22264": {
      "op": "DUP5"
    },
    "22265": {
      "op": "SHR"
    },
    "22266": {
      "op": "SWAP4"
    },
    "22267": {
      "op": "SWAP1"
    },
    "22268": {
      "op": "DUP1"
    },
    "22269": {
      "op": "MUL"
    },
    "22270": {
      "op": "SWAP1"
    },
    "22271": {
      "op": "PUSH2",
      "value": "0x56CD"
    },
    "22274": {
      "op": "JUMP"
    },
    "22275": {
      "op": "JUMPDEST"
    },
    "22276": {
      "op": "POP"
    },
    "22277": {
      "op": "SWAP3"
    },
    "22278": {
      "op": "POP"
    },
    "22279": {
      "op": "SWAP3"
    },
    "22280": {
      "op": "SWAP1"
    },
    "22281": {
      "op": "POP"
    },
    "22282": {
      "jump": "o",
      "op": "JUMP"
    },
    "22283": {
      "op": "JUMPDEST"
    },
    "22284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22286": {
      "op": "DUP3"
    },
    "22287": {
      "op": "PUSH2",
      "value": "0x571A"
    },
    "22290": {
      "op": "JUMPI"
    },
    "22291": {
      "op": "POP"
    },
    "22292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22294": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "22297": {
      "op": "JUMP"
    },
    "22298": {
      "op": "JUMPDEST"
    },
    "22299": {
      "op": "DUP2"
    },
    "22300": {
      "op": "PUSH2",
      "value": "0x5727"
    },
    "22303": {
      "op": "JUMPI"
    },
    "22304": {
      "op": "POP"
    },
    "22305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22307": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "22310": {
      "op": "JUMP"
    },
    "22311": {
      "op": "JUMPDEST"
    },
    "22312": {
      "op": "DUP2"
    },
    "22313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22315": {
      "op": "DUP2"
    },
    "22316": {
      "op": "EQ"
    },
    "22317": {
      "op": "PUSH2",
      "value": "0x573D"
    },
    "22320": {
      "op": "JUMPI"
    },
    "22321": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "22323": {
      "op": "DUP2"
    },
    "22324": {
      "op": "EQ"
    },
    "22325": {
      "op": "PUSH2",
      "value": "0x5747"
    },
    "22328": {
      "op": "JUMPI"
    },
    "22329": {
      "op": "PUSH2",
      "value": "0x5763"
    },
    "22332": {
      "op": "JUMP"
    },
    "22333": {
      "op": "JUMPDEST"
    },
    "22334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22336": {
      "op": "SWAP2"
    },
    "22337": {
      "op": "POP"
    },
    "22338": {
      "op": "POP"
    },
    "22339": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "22342": {
      "op": "JUMP"
    },
    "22343": {
      "op": "JUMPDEST"
    },
    "22344": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "22346": {
      "op": "DUP5"
    },
    "22347": {
      "op": "GT"
    },
    "22348": {
      "op": "ISZERO"
    },
    "22349": {
      "op": "PUSH2",
      "value": "0x5758"
    },
    "22352": {
      "op": "JUMPI"
    },
    "22353": {
      "op": "PUSH2",
      "value": "0x5758"
    },
    "22356": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "22359": {
      "jump": "i",
      "op": "JUMP"
    },
    "22360": {
      "op": "JUMPDEST"
    },
    "22361": {
      "op": "POP"
    },
    "22362": {
      "op": "POP"
    },
    "22363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22365": {
      "op": "DUP3"
    },
    "22366": {
      "op": "SHL"
    },
    "22367": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "22370": {
      "op": "JUMP"
    },
    "22371": {
      "op": "JUMPDEST"
    },
    "22372": {
      "op": "POP"
    },
    "22373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22375": {
      "op": "DUP4"
    },
    "22376": {
      "op": "LT"
    },
    "22377": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "22380": {
      "op": "DUP4"
    },
    "22381": {
      "op": "LT"
    },
    "22382": {
      "op": "AND"
    },
    "22383": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "22385": {
      "op": "DUP5"
    },
    "22386": {
      "op": "LT"
    },
    "22387": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "22389": {
      "op": "DUP5"
    },
    "22390": {
      "op": "LT"
    },
    "22391": {
      "op": "AND"
    },
    "22392": {
      "op": "OR"
    },
    "22393": {
      "op": "ISZERO"
    },
    "22394": {
      "op": "PUSH2",
      "value": "0x5786"
    },
    "22397": {
      "op": "JUMPI"
    },
    "22398": {
      "op": "POP"
    },
    "22399": {
      "op": "DUP2"
    },
    "22400": {
      "op": "DUP2"
    },
    "22401": {
      "op": "EXP"
    },
    "22402": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "22405": {
      "op": "JUMP"
    },
    "22406": {
      "op": "JUMPDEST"
    },
    "22407": {
      "op": "PUSH2",
      "value": "0x5790"
    },
    "22410": {
      "op": "DUP4"
    },
    "22411": {
      "op": "DUP4"
    },
    "22412": {
      "op": "PUSH2",
      "value": "0x56C8"
    },
    "22415": {
      "jump": "i",
      "op": "JUMP"
    },
    "22416": {
      "op": "JUMPDEST"
    },
    "22417": {
      "op": "DUP1"
    },
    "22418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22420": {
      "op": "NOT"
    },
    "22421": {
      "op": "DIV"
    },
    "22422": {
      "op": "DUP3"
    },
    "22423": {
      "op": "GT"
    },
    "22424": {
      "op": "ISZERO"
    },
    "22425": {
      "op": "PUSH2",
      "value": "0x57A4"
    },
    "22428": {
      "op": "JUMPI"
    },
    "22429": {
      "op": "PUSH2",
      "value": "0x57A4"
    },
    "22432": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "22435": {
      "jump": "i",
      "op": "JUMP"
    },
    "22436": {
      "op": "JUMPDEST"
    },
    "22437": {
      "op": "MUL"
    },
    "22438": {
      "op": "SWAP4"
    },
    "22439": {
      "op": "SWAP3"
    },
    "22440": {
      "op": "POP"
    },
    "22441": {
      "op": "POP"
    },
    "22442": {
      "op": "POP"
    },
    "22443": {
      "jump": "o",
      "op": "JUMP"
    },
    "22444": {
      "op": "JUMPDEST"
    },
    "22445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22447": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "22450": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "22452": {
      "op": "DUP5"
    },
    "22453": {
      "op": "AND"
    },
    "22454": {
      "op": "DUP4"
    },
    "22455": {
      "op": "PUSH2",
      "value": "0x570B"
    },
    "22458": {
      "jump": "i",
      "op": "JUMP"
    },
    "22459": {
      "op": "JUMPDEST"
    },
    "22460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22462": {
      "op": "DUP2"
    },
    "22463": {
      "op": "PUSH2",
      "value": "0x57CA"
    },
    "22466": {
      "op": "JUMPI"
    },
    "22467": {
      "op": "PUSH2",
      "value": "0x57CA"
    },
    "22470": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "22473": {
      "jump": "i",
      "op": "JUMP"
    },
    "22474": {
      "op": "JUMPDEST"
    },
    "22475": {
      "op": "POP"
    },
    "22476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22478": {
      "op": "NOT"
    },
    "22479": {
      "op": "ADD"
    },
    "22480": {
      "op": "SWAP1"
    },
    "22481": {
      "jump": "o",
      "op": "JUMP"
    },
    "22482": {
      "op": "JUMPDEST"
    },
    "22483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22485": {
      "op": "DUP3"
    },
    "22486": {
      "op": "PUSH2",
      "value": "0x5808"
    },
    "22489": {
      "op": "JUMPI"
    },
    "22490": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "22523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22525": {
      "op": "MSTORE"
    },
    "22526": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "22528": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22530": {
      "op": "MSTORE"
    },
    "22531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22535": {
      "op": "REVERT"
    },
    "22536": {
      "op": "JUMPDEST"
    },
    "22537": {
      "op": "POP"
    },
    "22538": {
      "op": "DIV"
    },
    "22539": {
      "op": "SWAP1"
    },
    "22540": {
      "jump": "o",
      "op": "JUMP"
    },
    "22541": {
      "op": "JUMPDEST"
    },
    "22542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22544": {
      "op": "DUP2"
    },
    "22545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22547": {
      "op": "NOT"
    },
    "22548": {
      "op": "DIV"
    },
    "22549": {
      "op": "DUP4"
    },
    "22550": {
      "op": "GT"
    },
    "22551": {
      "op": "DUP3"
    },
    "22552": {
      "op": "ISZERO"
    },
    "22553": {
      "op": "ISZERO"
    },
    "22554": {
      "op": "AND"
    },
    "22555": {
      "op": "ISZERO"
    },
    "22556": {
      "op": "PUSH2",
      "value": "0x5827"
    },
    "22559": {
      "op": "JUMPI"
    },
    "22560": {
      "op": "PUSH2",
      "value": "0x5827"
    },
    "22563": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "22566": {
      "jump": "i",
      "op": "JUMP"
    },
    "22567": {
      "op": "JUMPDEST"
    },
    "22568": {
      "op": "POP"
    },
    "22569": {
      "op": "MUL"
    },
    "22570": {
      "op": "SWAP1"
    },
    "22571": {
      "jump": "o",
      "op": "JUMP"
    },
    "22572": {
      "op": "JUMPDEST"
    },
    "22573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22575": {
      "op": "DUP3"
    },
    "22576": {
      "op": "MLOAD"
    },
    "22577": {
      "op": "PUSH2",
      "value": "0x583E"
    },
    "22580": {
      "op": "DUP2"
    },
    "22581": {
      "op": "DUP5"
    },
    "22582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22584": {
      "op": "DUP8"
    },
    "22585": {
      "op": "ADD"
    },
    "22586": {
      "op": "PUSH2",
      "value": "0x4FE4"
    },
    "22589": {
      "jump": "i",
      "op": "JUMP"
    },
    "22590": {
      "op": "JUMPDEST"
    },
    "22591": {
      "op": "SWAP2"
    },
    "22592": {
      "op": "SWAP1"
    },
    "22593": {
      "op": "SWAP2"
    },
    "22594": {
      "op": "ADD"
    },
    "22595": {
      "op": "SWAP3"
    },
    "22596": {
      "op": "SWAP2"
    },
    "22597": {
      "op": "POP"
    },
    "22598": {
      "op": "POP"
    },
    "22599": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7c51b8dfd9f6c08bd2b0478df8249e301f38e98c",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.10;\n\nimport {OwnableUpgradeable as Ownable} from \"@oz-upgradeable/contracts/access/OwnableUpgradeable.sol\";\nimport {PausableUpgradeable as Pausable} from \"@oz-upgradeable/contracts/security/PausableUpgradeable.sol\";\nimport {ERC20Upgradeable as ERC20} from \"@oz-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport {SafeERC20Upgradeable as SafeERC20} from \"@oz-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport {IVault} from \"../interfaces/IVault.sol\";\nimport {IStrategy} from \"../interfaces/IStrategy.sol\";\nimport {IVaultAuth} from \"../interfaces/IVaultAuth.sol\";\n\nimport {SafeCastLib as SafeCast} from \"./libraries/SafeCastLib.sol\";\nimport {FixedPointMathLib as FixedPointMath} from \"./libraries/FixedPointMathLib.sol\";\n\n/// @title Vault\n/// @author dantop114\n/// @notice A vault seeking for yield.\ncontract Vault is ERC20, Pausable {\n    using SafeERC20 for ERC20;\n    using SafeCast for uint256;\n    using FixedPointMath for uint256;\n\n    /*///////////////////////////////////////////////////////////////\n                              IMMUTABLES\n    ///////////////////////////////////////////////////////////////*/\n\n    /// @notice The Vault's token symbol prefix.\n    bytes internal constant sPrefix = bytes(\"auxo\");\n\n    /// @notice The Vault's token name prefix.\n    bytes internal constant nPrefix = bytes(\"Auxo \");\n\n    /// @notice The Vault's token name suffix.\n    bytes internal constant nSuffix = bytes(\" Vault\");\n\n    /// @notice Max number of strategies the Vault can handle.\n    uint256 internal constant MAX_STRATEGIES = 20;\n\n    /// @notice Vault's API version.\n    string public constant version = \"0.1\";\n\n    /*///////////////////////////////////////////////////////////////\n                        STRUCTS DECLARATIONS\n    ///////////////////////////////////////////////////////////////*/\n\n    /// @dev Packed struct of strategy data.\n    /// @param trusted Whether the strategy is trusted.\n    /// @param mintable Whether the strategy can be withdrawn automagically\n    /// @param balance The amount of underlying tokens held in the strategy.\n    struct StrategyData {\n        // Used to determine if the Vault will operate on a strategy.\n        bool trusted;\n        // Used to determine profit and loss during harvests of the strategy.\n        uint248 balance;\n    }\n\n    /// @dev Struct for batched burning events.\n    /// @param totalShares Shares to burn during the event.\n    /// @param amountPerShare Underlying amount per share (this differs from exchangeRate at the moment of batched burning).\n    struct BatchBurn {\n        uint256 totalShares;\n        uint256 amountPerShare;\n    }\n\n    /// @dev Struct for users' batched burning requests.\n    /// @param round Batched burning event index.\n    /// @param shares Shares to burn for the user.\n    struct BatchBurnReceipt {\n        uint256 round;\n        uint256 shares;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                                STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Blocks mined in a year.\n    uint256 public BLOCKS_PER_YEAR;\n\n    /// @notice Vault Auth module.\n    IVaultAuth public auth;\n\n    /// @notice The underlying token the vault accepts.\n    ERC20 public underlying;\n\n    /// @notice The underlying token decimals.\n    uint8 public underlyingDecimals;\n\n    /// @notice The base unit of the underlying token and hence the Vault share token.\n    /// @dev Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic.\n    uint256 public BASE_UNIT;\n\n    /// @notice The percentage of profit recognized each harvest to reserve as fees.\n    /// @dev A fixed point number where 1e18 represents 100% and 0 represents 0%.\n    uint256 public harvestFeePercent;\n\n    /// @notice The address receiving harvest fees (denominated in Vault's shares).\n    address public harvestFeeReceiver;\n\n    /// @notice The percentage of shares recognized each burning to reserve as fees.\n    /// @dev A fixed point number where 1e18 represents 100% and 0 represents 0%.\n    uint256 public burningFeePercent;\n\n    /// @notice The address receiving burning fees (denominated in Vault's shares).\n    address public burningFeeReceiver;\n\n    /// @notice The period in seconds during which multiple harvests can occur\n    /// regardless if they are taking place before the harvest delay has elapsed.\n    /// @dev Long harvest delays open up the Vault to profit distribution DOS attacks.\n    uint128 public harvestWindow;\n\n    /// @notice The period in seconds over which locked profit is unlocked.\n    /// @dev Cannot be 0 as it opens harvests up to sandwich attacks.\n    uint64 public harvestDelay;\n\n    /// @notice The value that will replace harvestDelay next harvest.\n    /// @dev In the case that the next delay is 0, no update will be applied.\n    uint64 public nextHarvestDelay;\n\n    /// @notice The total amount of underlying tokens held in strategies at the time of the last harvest.\n    /// @dev Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings.\n    uint256 public totalStrategyHoldings;\n\n    /// @notice Maps strategies to data the Vault holds on them.\n    mapping(IStrategy => StrategyData) public getStrategyData;\n\n    /// @notice Exchange rate at the beginning of latest harvest window\n    uint256 public lastHarvestExchangeRate;\n\n    /// @notice Latest harvest interval in blocks\n    uint256 public lastHarvestIntervalInBlocks;\n\n    /// @notice The block number when the first harvest in the most recent harvest window occurred.\n    uint256 public lastHarvestWindowStartBlock;\n\n    /// @notice A timestamp representing when the first harvest in the most recent harvest window occurred.\n    /// @dev May be equal to lastHarvest if there was/has only been one harvest in the most last/current window.\n    uint64 public lastHarvestWindowStart;\n\n    /// @notice A timestamp representing when the most recent harvest occurred.\n    uint64 public lastHarvest;\n\n    /// @notice The amount of locked profit at the end of the last harvest.\n    uint128 public maxLockedProfit;\n\n    /// @notice An ordered array of strategies representing the withdrawal queue.\n    /// @dev The queue is processed in descending order, meaning the last index will be withdrawn from first.\n    /// @dev Strategies that are untrusted, duplicated, or have no balance are filtered out when encountered at\n    /// withdrawal time, not validated upfront, meaning the queue may not reflect the \"true\" set used for withdrawals.\n    IStrategy[] public withdrawalQueue;\n\n    /// @notice Current batched burning round.\n    uint256 public batchBurnRound;\n\n    /// @notice Balance reserved to batched burning withdrawals.\n    uint256 public batchBurnBalance;\n\n    /// @notice Maps user's address to withdrawal request.\n    mapping(address => BatchBurnReceipt) public userBatchBurnReceipts;\n\n    /// @notice Maps social burning events rounds to batched burn details.\n    mapping(uint256 => BatchBurn) public batchBurns;\n\n    /// @notice Amount of shares a single address can hold.\n    uint256 public userDepositLimit;\n\n    /// @notice Amount of underlying cap for this vault.\n    uint256 public vaultDepositLimit;\n\n    /// @notice Estimated return recorded during last harvest.\n    uint256 public estimatedReturn;\n\n\n    /*///////////////////////////////////////////////////////////////\n                                EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Emitted when the IVaultAuth module is updated.\n    /// @param newAuth The new IVaultAuth module.\n    event AuthUpdated(IVaultAuth newAuth);\n\n    /// @notice Emitted when the fee percentage is updated.\n    /// @param newFeePercent The new fee percentage.\n    event HarvestFeePercentUpdated(uint256 newFeePercent);\n\n    /// @notice Emitted when the batched burning fee percentage is updated.\n    /// @param newFeePercent The new fee percentage.\n    event BurningFeePercentUpdated(uint256 newFeePercent);\n\n    /// @notice Emitted when harvest fees receiver is updated.\n    /// @param receiver The new receiver\n    event HarvestFeeReceiverUpdated(address indexed receiver);\n\n    /// @notice Emitted when burning fees receiver is updated.\n    /// @param receiver The new receiver\n    event BurningFeeReceiverUpdated(address indexed receiver);\n\n    //// @notice Emitted when the harvest window is updated.\n    //// @param newHarvestWindow The new harvest window.\n    event HarvestWindowUpdated(uint128 newHarvestWindow);\n\n    /// @notice Emitted when the harvest delay is updated.\n    /// @param account The address changing the harvest delay\n    /// @param newHarvestDelay The new harvest delay.\n    event HarvestDelayUpdated(address indexed account, uint64 newHarvestDelay);\n\n    /// @notice Emitted when the harvest delay is scheduled to be updated next harvest.\n    /// @param newHarvestDelay The scheduled updated harvest delay.\n    event HarvestDelayUpdateScheduled(uint64 newHarvestDelay);\n\n    /// @notice Emitted when the withdrawal queue is updated.\n    /// @param replacedWithdrawalQueue The new withdrawal queue.\n    event WithdrawalQueueSet(IStrategy[] replacedWithdrawalQueue);\n\n    /// @notice Emitted when a strategy is set to trusted.\n    /// @param strategy The strategy that became trusted.\n    event StrategyTrusted(IStrategy indexed strategy);\n\n    /// @notice Emitted when a strategy is set to untrusted.\n    /// @param strategy The strategy that became untrusted.\n    event StrategyDistrusted(IStrategy indexed strategy);\n\n    /// @notice Emitted when underlying tokens are deposited into the vault.\n    /// @param from The user depositing into the vault.\n    /// @param to The user receiving Vault's shares.\n    /// @param value The shares `to` is receiving.\n    event Deposit(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Emitted after a user enters a batched burn round.\n    /// @param round Batched burn round.\n    /// @param account User's address.\n    /// @param amount Amount of shares to be burned.\n    event EnterBatchBurn(uint256 indexed round, address indexed account, uint256 amount);\n\n    /// @notice Emitted after a user exits a batched burn round.\n    /// @param round Batched burn round.\n    /// @param account User's address.\n    /// @param amount Amount of underlying redeemed.\n    event ExitBatchBurn(uint256 indexed round, address indexed account, uint256 amount);\n\n    /// @notice Emitted after a batched burn event happens.\n    /// @param round Batched burn round.\n    /// @param executor User that executes the batch burn.\n    /// @param shares Total amount of burned shares.\n    /// @param amount Total amount of underlying redeemed.\n    event ExecuteBatchBurn(uint256 indexed round, address indexed executor, uint256 shares, uint256 amount);\n\n    /// @notice Emitted after a successful harvest.\n    /// @param account The harvester address.\n    /// @param strategies The set of strategies.\n    event Harvest(address indexed account, IStrategy[] strategies);\n\n    /// @notice Emitted after the Vault deposits into a strategy contract.\n    /// @param account The address depositing funds into the strategy.\n    /// @param strategy The strategy that was deposited into.\n    /// @param underlyingAmount The amount of underlying tokens that were deposited.\n    event StrategyDeposit(address indexed account, IStrategy indexed strategy, uint256 underlyingAmount);\n\n    /// @notice Emitted after the Vault withdraws funds from a strategy contract.\n    /// @param account The user pulling funds from the strategy\n    /// @param strategy The strategy that was withdrawn from.\n    /// @param underlyingAmount The amount of underlying tokens that were withdrawn.\n    event StrategyWithdrawal(address indexed account, IStrategy indexed strategy, uint256 underlyingAmount);\n\n    /// @notice Event emitted when the deposit limits are updated.\n    /// @param perUser New underlying limit per address.\n    /// @param perVault New underlying limit per vault.\n    event DepositLimitsUpdated(uint256 perUser, uint256 perVault);\n\n    /*///////////////////////////////////////////////////////////////\n                            MODIFIERS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Checks that `caller` is authorized as a depositor.\n    /// @param caller The caller to check.\n    modifier onlyDepositor(address caller) {\n        require(auth.isDepositor(IVault(address(this)), caller), \"error::NOT_DEPOSITOR\");\n\n        _;\n    }\n\n    /// @notice Checks that `caller` is authorized as a admin.\n    /// @param caller The caller to check.\n    modifier onlyAdmin(address caller) {\n        require(auth.isAdmin(IVault(address(this)), caller), \"error::NOT_ADMIN\");\n\n        _;\n    }\n\n    /// @notice Checks that `caller` is authorized as a harvester.\n    /// @param caller The caller to check.\n    modifier onlyHarvester(address caller) {\n        require(auth.isHarvester(IVault(address(this)), caller), \"error::NOT_HARVESTER\");\n\n        _;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    INITIALIZER AND PAUSE TRIGGER\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Triggers the Vault's pause\n    /// @dev Only owner can call this method.\n    function triggerPause() external onlyAdmin(msg.sender) {\n        paused() ? _unpause() : _pause();\n    }\n\n    /// @notice The initialize method\n    /// @param underlying_ The underlying token the vault accepts\n    function initialize(\n        ERC20 underlying_,\n        IVaultAuth auth_,\n        address harvestFeeReceiver_,\n        address burnFeeReceiver_\n    ) external initializer {\n        // init ERC20\n        string memory name_ = string(bytes.concat(nPrefix, \" \", bytes(underlying_.name()), \" \", nSuffix));\n        string memory symbol_ = string(bytes.concat(sPrefix, bytes(underlying_.symbol())));\n\n        // super.initialize\n        __ERC20_init(name_, symbol_);\n        __Pausable_init();\n\n        // pause on initialize\n        _pause();\n\n        // init storage\n        underlying = underlying_;\n        BASE_UNIT = 10**underlying_.decimals();\n        underlyingDecimals = underlying_.decimals();\n\n        auth = auth_;\n        burningFeeReceiver = burnFeeReceiver_;\n        harvestFeeReceiver = harvestFeeReceiver_;\n\n        // sets batchBurnRound to 1\n        // needed to have 0 as an uninitialized withdraw request\n        batchBurnRound = 1;\n\n        // sets initial BLOCKS_PER_YEAR value\n        // BLOCKS_PER_YEAR is set to Ethereum mainnet estimated blocks (~13.5s per block)\n        BLOCKS_PER_YEAR = 2465437;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        DECIMAL OVERRIDING\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Overrides `decimals` method.\n    /// @dev Needed because Openzeppelin's logic for decimals.\n    /// @return Vault's shares token decimals (underlying token decimals).\n    function decimals() public view override returns (uint8) {\n        return underlyingDecimals;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    UNDERLYING CAP CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set new deposit limits for this vault.\n    /// @param user New user deposit limit.\n    /// @param vault New vault deposit limit.\n    function setDepositLimits(uint256 user, uint256 vault) external onlyAdmin(msg.sender) {\n        userDepositLimit = user;\n        vaultDepositLimit = vault;\n\n        emit DepositLimitsUpdated(user, vault);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        AUTH CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new IVaultAuth module.\n    /// @param newAuth The new IVaultAuth module.\n    function setAuth(IVaultAuth newAuth) external onlyAdmin(msg.sender) {\n        auth = newAuth;\n        emit AuthUpdated(newAuth);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                     BLOCKS PER YEAR CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Sets blocks per year.\n    /// @param blocks Blocks in a given year.\n    function setBlocksPerYear(uint256 blocks) external onlyAdmin(msg.sender) {\n        BLOCKS_PER_YEAR = blocks;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                           FEE CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new fee percentage.\n    /// @param newFeePercent The new fee percentage.\n    function setHarvestFeePercent(uint256 newFeePercent) external onlyAdmin(msg.sender) {\n        // A fee percentage over 100% doesn't make sense.\n        require(newFeePercent <= 1e18, \"setFeePercent::FEE_TOO_HIGH\");\n\n        // Update the fee percentage.\n        harvestFeePercent = newFeePercent;\n\n        emit HarvestFeePercentUpdated(newFeePercent);\n    }\n\n    /// @notice Set a new burning fee percentage.\n    /// @param newFeePercent The new fee percentage.\n    function setBatchedBurningFeePercent(uint256 newFeePercent) external onlyAdmin(msg.sender) {\n        // A fee percentage over 100% doesn't make sense.\n        require(newFeePercent <= 1e18, \"setBatchedBurningFeePercent::FEE_TOO_HIGH\");\n\n        // Update the fee percentage.\n        burningFeePercent = newFeePercent;\n\n        emit BurningFeePercentUpdated(newFeePercent);\n    }\n\n    /// @notice Set a new harvest fees receiver.\n    /// @param harvestFeeReceiver_ The new harvest fees receiver.\n    function setHarvestFeeReceiver(address harvestFeeReceiver_) external onlyAdmin(msg.sender) {\n        // Update the fee percentage.\n        harvestFeeReceiver = harvestFeeReceiver_;\n\n        emit HarvestFeeReceiverUpdated(harvestFeeReceiver_);\n    }\n\n    /// @notice Set a new burning fees receiver.\n    /// @param burningFeeReceiver_ The new burning fees receiver.\n    function setBurningFeeReceiver(address burningFeeReceiver_) external onlyAdmin(msg.sender) {\n        // Update the fee percentage.\n        burningFeeReceiver = burningFeeReceiver_;\n\n        emit BurningFeeReceiverUpdated(burningFeeReceiver_);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        HARVEST CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new harvest window.\n    /// @param newHarvestWindow The new harvest window.\n    /// @dev The Vault's harvestDelay must already be set before calling.\n    function setHarvestWindow(uint128 newHarvestWindow) external onlyAdmin(msg.sender) {\n        // A harvest window longer than the harvest delay doesn't make sense.\n        require(newHarvestWindow <= harvestDelay, \"setHarvestWindow::WINDOW_TOO_LONG\");\n\n        // Update the harvest window.\n        harvestWindow = newHarvestWindow;\n\n        emit HarvestWindowUpdated(newHarvestWindow);\n    }\n\n    /// @notice Set a new harvest delay delay.\n    /// @param newHarvestDelay The new harvest delay to set.\n    /// @dev If the current harvest delay is 0, meaning it has not\n    /// been set before, it will be updated immediately; otherwise\n    /// it will be scheduled to take effect after the next harvest.\n    function setHarvestDelay(uint64 newHarvestDelay) external onlyAdmin(msg.sender) {\n        // A harvest delay of 0 makes harvests vulnerable to sandwich attacks.\n        require(newHarvestDelay != 0, \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\");\n\n        // A target harvest delay over 1 year doesn't make sense.\n        require(newHarvestDelay <= 365 days, \"setHarvestDelay::DELAY_TOO_LONG\");\n\n        // If the harvest delay is 0, meaning it has not been set before:\n        if (harvestDelay == 0) {\n            // We'll apply the update immediately.\n            harvestDelay = newHarvestDelay;\n\n            emit HarvestDelayUpdated(msg.sender, newHarvestDelay);\n        } else {\n            // We'll apply the update next harvest.\n            nextHarvestDelay = newHarvestDelay;\n\n            emit HarvestDelayUpdateScheduled(newHarvestDelay);\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        WITHDRAWAL QUEUE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Gets the full withdrawal queue.\n    /// @return An ordered array of strategies representing the withdrawal queue.\n    /// @dev This is provided because Solidity converts public arrays into index getters,\n    /// but we need a way to allow external contracts and users to access the whole array.\n    function getWithdrawalQueue() external view returns (IStrategy[] memory) {\n        return withdrawalQueue;\n    }\n\n    /// @notice Set the withdrawal queue.\n    /// @param newQueue The new withdrawal queue.\n    /// @dev Strategies that are untrusted, duplicated, or have no balance are\n    /// filtered out when encountered at withdrawal time, not validated upfront.\n    function setWithdrawalQueue(IStrategy[] calldata newQueue) external onlyAdmin(msg.sender) {\n        // Check for duplicated in queue\n        require(newQueue.length <= MAX_STRATEGIES, \"setWithdrawalQueue::QUEUE_TOO_BIG\");\n\n        // Replace the withdrawal queue.\n        withdrawalQueue = newQueue;\n\n        emit WithdrawalQueueSet(newQueue);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                      STRATEGY TRUST/DISTRUST LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Store a strategy as trusted, enabling it to be harvested.\n    /// @param strategy The strategy to make trusted.\n    function trustStrategy(IStrategy strategy) external onlyAdmin(msg.sender) {\n        // Ensure the strategy accepts the correct underlying token.\n        // If the strategy accepts ETH the Vault should accept WETH, it'll handle wrapping when necessary.\n        require(strategy.underlying() == underlying, \"trustStrategy::WRONG_UNDERLYING\");\n\n        // Store the strategy as trusted.\n        getStrategyData[strategy].trusted = true;\n\n        emit StrategyTrusted(strategy);\n    }\n\n    /// @notice Store a strategy as untrusted, disabling it from being harvested.\n    /// @param strategy The strategy to make untrusted.\n    function distrustStrategy(IStrategy strategy) external onlyAdmin(msg.sender) {\n        // Store the strategy as untrusted.\n        getStrategyData[strategy].trusted = false;\n\n        emit StrategyDistrusted(strategy);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                            DEPOSIT/BURN\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Deposit a specific amount of underlying tokens.\n    /// @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n    /// @param to The address to receive shares corresponding to the deposit.\n    /// @param underlyingAmount The amount of the underlying token to deposit.\n    /// @return shares The amount of shares minted using `underlyingAmount`.\n    function deposit(address to, uint256 underlyingAmount) external returns (uint256 shares) {\n        _deposit(to, (shares = calculateShares(underlyingAmount)), underlyingAmount);\n    }\n\n    /// @notice Deposit a specific amount of underlying tokens.\n    /// @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n    /// @param to The address to receive shares corresponding to the deposit.\n    /// @param shares The amount of Vault's shares to mint.\n    /// @return underlyingAmount The amount needed to mint `shares` amount of shares.\n    function mint(address to, uint256 shares) external returns (uint256 underlyingAmount) {\n        _deposit(to, shares, (underlyingAmount = calculateUnderlying(shares)));\n    }\n\n    /// @notice Enter a batched burn event.\n    /// @dev Each user can take part to one batched burn event a time.\n    /// @dev User's shares amount will be staked until the burn happens.\n    /// @param shares Shares to withdraw during the next batched burn event.\n    function enterBatchBurn(uint256 shares) external {\n        uint256 batchBurnRound_ = batchBurnRound;\n        uint256 userRound = userBatchBurnReceipts[msg.sender].round;\n\n        if (userRound == 0) {\n            // user is depositing for the first time in this round\n            // so we set his round to current round\n\n            userBatchBurnReceipts[msg.sender].round = batchBurnRound_;\n            userBatchBurnReceipts[msg.sender].shares = shares;\n        } else {\n            // user is not depositing for the first time or took part in a previous round:\n            //      - first case: we stack the deposits.\n            //      - second case: revert, user needs to withdraw before requesting\n            //                     to take part in another round.\n\n            require(userRound == batchBurnRound_, \"enterBatchBurn::DIFFERENT_ROUNDS\");\n            userBatchBurnReceipts[msg.sender].shares += shares;\n        }\n\n        batchBurns[batchBurnRound_].totalShares += shares;\n\n        require(transfer(address(this), shares));\n\n        emit EnterBatchBurn(batchBurnRound_, msg.sender, shares);\n    }\n\n    /// @notice Withdraw underlying redeemed in batched burning events.\n    function exitBatchBurn() external {\n        uint256 batchBurnRound_ = batchBurnRound;\n        BatchBurnReceipt memory receipt = userBatchBurnReceipts[msg.sender];\n\n        require(receipt.round != 0, \"exitBatchBurn::NO_DEPOSITS\");\n        require(receipt.round < batchBurnRound_, \"exitBatchBurn::ROUND_NOT_EXECUTED\");\n\n        userBatchBurnReceipts[msg.sender].round = 0;\n        userBatchBurnReceipts[msg.sender].shares = 0;\n\n        uint256 underlyingAmount = receipt.shares.fmul(batchBurns[receipt.round].amountPerShare, BASE_UNIT);\n        // can't underflow since underlyingAmount can't be greater than batchBurnBalance\n        unchecked {\n            batchBurnBalance -= underlyingAmount;\n        }\n        underlying.safeTransfer(msg.sender, underlyingAmount);\n\n        emit ExitBatchBurn(batchBurnRound_, msg.sender, underlyingAmount);\n    }\n\n    /// @notice Execute batched burns\n    function execBatchBurn() external onlyAdmin(msg.sender) {\n        // let's wait for lockedProfit to go to 0\n        require(block.timestamp >= (lastHarvest + harvestDelay), \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\");\n\n        uint256 batchBurnRound_ = batchBurnRound;\n        batchBurnRound += 1;\n\n        BatchBurn memory batchBurn = batchBurns[batchBurnRound_];\n        uint256 totalShares = batchBurn.totalShares;\n\n        // burning 0 shares is not convenient\n        require(totalShares != 0, \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\");\n\n        // Determine the equivalent amount of underlying tokens and withdraw from strategies if needed.\n        uint256 underlyingAmount = totalShares.fmul(exchangeRate(), BASE_UNIT);\n        uint256 float = totalFloat();\n\n        // If the amount is greater than the float, withdraw from strategies.\n        if (underlyingAmount > float) {\n            // Compute the bare minimum amount we need for this withdrawal.\n            uint256 floatMissingForWithdrawal = underlyingAmount - float;\n\n            // Pull enough to cover the withdrawal.\n            pullFromWithdrawalQueue(floatMissingForWithdrawal);\n        }\n\n        _burn(address(this), totalShares);\n\n        // Compute fees and transfer underlying amount if any\n        if (burningFeePercent != 0) {\n            uint256 accruedFees = underlyingAmount.fmul(burningFeePercent, 10**18);\n            underlyingAmount -= accruedFees;\n\n            underlying.safeTransfer(burningFeeReceiver, accruedFees);\n        }\n        batchBurns[batchBurnRound_].amountPerShare = underlyingAmount.fdiv(totalShares, BASE_UNIT);\n        batchBurnBalance += underlyingAmount;\n\n        emit ExecuteBatchBurn(batchBurnRound_, msg.sender, totalShares, underlyingAmount);\n    }\n\n    /// @dev Internal function to deposit into the Vault.\n    /// @param to The address to receive shares corresponding to the deposit.\n    /// @param shares The amount of Vault's shares to mint.\n    /// @param underlyingAmount The amount of the underlying token to deposit.\n    function _deposit(\n        address to,\n        uint256 shares,\n        uint256 underlyingAmount\n    ) internal virtual onlyDepositor(to) whenNotPaused {\n        uint256 userUnderlying = calculateUnderlying(balanceOf(to)) + underlyingAmount;\n        uint256 vaultUnderlying = totalUnderlying() + underlyingAmount;\n\n        require(userUnderlying <= userDepositLimit, \"_deposit::USER_DEPOSIT_LIMITS_REACHED\");\n        require(vaultUnderlying <= vaultDepositLimit, \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\");\n\n        // Determine te equivalent amount of shares and mint them\n        _mint(to, shares);\n\n        emit Deposit(msg.sender, to, underlyingAmount);\n\n        // Transfer in underlying tokens from the user.\n        // This will revert if the user does not have the amount specified.\n        underlying.safeTransferFrom(msg.sender, address(this), underlyingAmount);\n    }\n\n    /// @notice Calculates the amount of Vault's shares for a given amount of underlying tokens.\n    /// @param underlyingAmount The underlying token's amount.\n    /// @return The amount of shares given `underlyingAmount`.\n    function calculateShares(uint256 underlyingAmount) public view returns (uint256) {\n        return underlyingAmount.fdiv(exchangeRate(), BASE_UNIT);\n    }\n\n    /// @notice Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.\n    /// @param sharesAmount The shares amount.\n    /// @return The amount of underlying given `sharesAmount`.\n    function calculateUnderlying(uint256 sharesAmount) public view returns (uint256) {\n        return sharesAmount.fmul(exchangeRate(), BASE_UNIT);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                             HARVEST LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Harvest a set of trusted strategies.\n    /// @param strategies The trusted strategies to harvest.\n    /// @dev Will always revert if called outside of an active\n    /// harvest window or before the harvest delay has passed.\n    function harvest(IStrategy[] calldata strategies) external onlyHarvester(msg.sender) {\n        // If this is the first harvest after the last window:\n        if (block.timestamp >= lastHarvest + harvestDelay) {\n            // Accounts for:\n            //    - harvest interval (from latest harvest)\n            //    - harvest exchange rate\n            //    - harvest window starting block\n            lastHarvestExchangeRate = exchangeRate();\n            lastHarvestIntervalInBlocks = block.number - lastHarvestWindowStartBlock;\n            lastHarvestWindowStartBlock = block.number;\n\n            // Set the harvest window's start timestamp.\n            // Cannot overflow 64 bits on human timescales.\n            lastHarvestWindowStart = uint64(block.timestamp);\n        } else {\n            // We know this harvest is not the first in the window so we need to ensure it's within it.\n            require(block.timestamp <= lastHarvestWindowStart + harvestWindow, \"harvest::BAD_HARVEST_TIME\");\n        }\n\n        // Get the Vault's current total strategy holdings.\n        uint256 oldTotalStrategyHoldings = totalStrategyHoldings;\n\n        // Used to store the total profit accrued by the strategies.\n        uint256 totalProfitAccrued;\n\n        // Used to store the new total strategy holdings after harvesting.\n        uint256 newTotalStrategyHoldings = oldTotalStrategyHoldings;\n\n        // Will revert if any of the specified strategies are untrusted.\n        for (uint256 i = 0; i < strategies.length; i++) {\n            // Get the strategy at the current index.\n            IStrategy strategy = strategies[i];\n\n            // If an untrusted strategy could be harvested a malicious user could use\n            // a fake strategy that over-reports holdings to manipulate the exchange rate.\n            require(getStrategyData[strategy].trusted, \"harvest::UNTRUSTED_STRATEGY\");\n\n            // Get the strategy's previous and current balance.\n            uint256 balanceLastHarvest = getStrategyData[strategy].balance;\n            uint256 balanceThisHarvest = strategy.estimatedUnderlying();\n\n            // Update the strategy's stored balance. Cast overflow is unrealistic.\n            getStrategyData[strategy].balance = balanceThisHarvest.safeCastTo248();\n\n            // Increase/decrease newTotalStrategyHoldings based on the profit/loss registered.\n            // We cannot wrap the subtraction in parenthesis as it would underflow if the strategy had a loss.\n            newTotalStrategyHoldings = newTotalStrategyHoldings + balanceThisHarvest - balanceLastHarvest;\n\n            unchecked {\n                // Update the total profit accrued while counting losses as zero profit.\n                // Cannot overflow as we already increased total holdings without reverting.\n                totalProfitAccrued += balanceThisHarvest > balanceLastHarvest\n                    ? balanceThisHarvest - balanceLastHarvest // Profits since last harvest.\n                    : 0; // If the strategy registered a net loss we don't have any new profit.\n            }\n        }\n\n        // Compute fees as the fee percent multiplied by the profit.\n        uint256 feesAccrued = totalProfitAccrued.fmul(harvestFeePercent, 1e18);\n\n        // If we accrued any fees, mint an equivalent amount of Vault's shares.\n        if (feesAccrued != 0 && harvestFeeReceiver != address(0)) {\n            _mint(harvestFeeReceiver, feesAccrued.fdiv(exchangeRate(), BASE_UNIT));\n        }\n\n        // Update max unlocked profit based on any remaining locked profit plus new profit.\n        uint128 maxLockedProfit_ = (lockedProfit() + totalProfitAccrued - feesAccrued).safeCastTo128();\n        maxLockedProfit = maxLockedProfit_;\n\n        // Compute estimated returns\n        uint256 strategyHoldings = newTotalStrategyHoldings - uint256(maxLockedProfit_);\n        estimatedReturn = computeEstimatedReturns(strategyHoldings, uint256(maxLockedProfit_), lastHarvestIntervalInBlocks);\n\n        // Set strategy holdings to our new total.\n        totalStrategyHoldings = newTotalStrategyHoldings;\n\n        // Update the last harvest timestamp.\n        // Cannot overflow on human timescales.\n        lastHarvest = uint64(block.timestamp);\n\n        emit Harvest(msg.sender, strategies);\n\n        // Get the next harvest delay.\n        uint64 newHarvestDelay = nextHarvestDelay;\n\n        // If the next harvest delay is not 0:\n        if (newHarvestDelay != 0) {\n            // Update the harvest delay.\n            harvestDelay = newHarvestDelay;\n\n            // Reset the next harvest delay.\n            nextHarvestDelay = 0;\n\n            emit HarvestDelayUpdated(msg.sender, newHarvestDelay);\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    STRATEGY DEPOSIT/WITHDRAWAL LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Deposit a specific amount of float into a trusted strategy.\n    /// @param strategy The trusted strategy to deposit into.\n    /// @param underlyingAmount The amount of underlying tokens in float to deposit.\n    function depositIntoStrategy(IStrategy strategy, uint256 underlyingAmount) external onlyAdmin(msg.sender) {\n        // A strategy must be trusted before it can be deposited into.\n        require(getStrategyData[strategy].trusted, \"depositIntoStrategy::UNTRUSTED_STRATEGY\");\n\n        // We don't allow depositing 0 to prevent emitting a useless event.\n        require(underlyingAmount != 0, \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\");\n\n        // Increase totalStrategyHoldings to account for the deposit.\n        totalStrategyHoldings += underlyingAmount;\n\n        unchecked {\n            // Without this the next harvest would count the deposit as profit.\n            // Cannot overflow as the balance of one strategy can't exceed the sum of all.\n            getStrategyData[strategy].balance += underlyingAmount.safeCastTo248();\n        }\n\n        emit StrategyDeposit(msg.sender, strategy, underlyingAmount);\n\n        // Approve underlyingAmount to the strategy so we can deposit.\n        underlying.safeApprove(address(strategy), underlyingAmount);\n\n        // Deposit into the strategy and revert if it returns an error code.\n        require(strategy.deposit(underlyingAmount) == 0, \"depositIntoStrategy::MINT_FAILED\");\n    }\n\n    /// @notice Withdraw a specific amount of underlying tokens from a strategy.\n    /// @param strategy The strategy to withdraw from.\n    /// @param underlyingAmount  The amount of underlying tokens to withdraw.\n    /// @dev Withdrawing from a strategy will not remove it from the withdrawal queue.\n    function withdrawFromStrategy(IStrategy strategy, uint256 underlyingAmount) external onlyAdmin(msg.sender) {\n        // A strategy must be trusted before it can be withdrawn from.\n        require(getStrategyData[strategy].trusted, \"withdrawFromStrategy::UNTRUSTED_STRATEGY\");\n\n        // We don't allow withdrawing 0 to prevent emitting a useless event.\n        require(underlyingAmount != 0, \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\");\n\n        // Without this the next harvest would count the withdrawal as a loss.\n        getStrategyData[strategy].balance -= underlyingAmount.safeCastTo248();\n\n        unchecked {\n            // Decrease totalStrategyHoldings to account for the withdrawal.\n            // Cannot underflow as the balance of one strategy will never exceed the sum of all.\n            totalStrategyHoldings -= underlyingAmount;\n        }\n\n        emit StrategyWithdrawal(msg.sender, strategy, underlyingAmount);\n\n        // Withdraw from the strategy and revert if returns an error code.\n        require(strategy.withdraw(underlyingAmount) == 0, \"withdrawFromStrategy::REDEEM_FAILED\");\n    }\n\n    /// @dev Withdraw a specific amount of underlying tokens from strategies in the withdrawal queue.\n    /// @param underlyingAmount The amount of underlying tokens to pull into float.\n    /// @dev Automatically removes depleted strategies from the withdrawal queue.\n    function pullFromWithdrawalQueue(uint256 underlyingAmount) internal {\n        // We will update this variable as we pull from strategies.\n        uint256 amountLeftToPull = underlyingAmount;\n\n        // We'll start at the tip of the queue and traverse backwards.\n        uint256 currentIndex = withdrawalQueue.length - 1;\n\n        // Iterate in reverse so we pull from the queue in a \"last in, first out\" manner.\n        // Will revert due to underflow if we empty the queue before pulling the desired amount.\n        for (; ; currentIndex--) {\n            // Get the strategy at the current queue index.\n            IStrategy strategy = withdrawalQueue[currentIndex];\n\n            // Get the balance of the strategy before we withdraw from it.\n            uint256 strategyBalance = getStrategyData[strategy].balance;\n\n            // If the strategy is currently untrusted or was already depleted, move to the next strategy\n            if (!getStrategyData[strategy].trusted || strategyBalance == 0) continue;\n\n            // We want to pull as much as we can from the strategy, but no more than we need.\n            uint256 amountToPull = (amountLeftToPull <= strategyBalance) ? amountLeftToPull : strategyBalance;\n\n            unchecked {\n                // Compute the balance of the strategy that will remain after we withdraw.\n                // Cannot underflow as we cap the amount to pull at the strategy's balance.\n                uint256 strategyBalanceAfterWithdrawal = strategyBalance - amountToPull;\n\n                // Without this the next harvest would count the withdrawal as a loss.\n                getStrategyData[strategy].balance = strategyBalanceAfterWithdrawal.safeCastTo248();\n\n                // Adjust our goal based on how much we can pull from the strategy.\n                // Cannot underflow as we cap the amount to pull at the amount left to pull.\n                amountLeftToPull -= amountToPull;\n\n                emit StrategyWithdrawal(msg.sender, strategy, amountToPull);\n\n                // Withdraw from the strategy and revert if returns an error code.\n                require(strategy.withdraw(amountToPull) == 0, \"pullFromWithdrawalQueue::REDEEM_FAILED\");\n            }\n\n            // If we've pulled all we need, exit the loop.\n            if (amountLeftToPull == 0) break;\n        }\n\n        unchecked {\n            // Account for the withdrawals done in the loop above.\n            // Cannot underflow as the balances of some strategies cannot exceed the sum of all.\n            totalStrategyHoldings -= underlyingAmount;\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                                ACCOUNTING\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Returns the amount of underlying tokens a share can be redeemed for.\n    /// @return The amount of underlying tokens a share can be redeemed for.\n    function exchangeRate() public view returns (uint256) {\n        // Get the total supply of shares.\n        uint256 shareSupply = totalSupply();\n\n        // If there are no shares in circulation, return an exchange rate of 1:1.\n        if (shareSupply == 0) return BASE_UNIT;\n\n        return totalUnderlying().fdiv(shareSupply, BASE_UNIT);\n    }\n\n    /// @notice Returns a user's Vault balance in underlying tokens.\n    /// @param user THe user to get the underlying balance of.\n    /// @return The user's Vault balance in underlying tokens.\n    function balanceOfUnderlying(address user) external view returns (uint256) {\n        return calculateUnderlying(balanceOf(user));\n    }\n\n    /// @notice Returns the amount of underlying tokens that idly sit in the Vault.\n    /// @return The amount of underlying tokens that sit idly in the Vault.\n    function totalFloat() public view returns (uint256) {\n        // can't underlflow since batchBurnBalance will never be greater than\n        // the float itself\n        unchecked {\n            return underlying.balanceOf(address(this)) - batchBurnBalance;\n        }\n    }\n\n    /// @notice Calculate the current amount of locked profit.\n    /// @return The current amount of locked profit.\n    function lockedProfit() public view returns (uint256) {\n        // Get the last harvest and harvest delay.\n        uint256 previousHarvest = lastHarvest;\n        uint256 harvestInterval = harvestDelay;\n\n        unchecked {\n            // If the harvest delay has passed, there is no locked profit.\n            // Cannot overflow on human timescales since harvestInterval is capped.\n            if (block.timestamp >= previousHarvest + harvestInterval) return 0;\n\n            // Get the maximum amount we could return.\n            uint256 maximumLockedProfit = maxLockedProfit;\n\n            // Compute how much profit remains locked based on the last harvest and harvest delay.\n            // It's impossible for the previous harvest to be in the future, so this will never underflow.\n            return maximumLockedProfit - (maximumLockedProfit * (block.timestamp - previousHarvest)) / harvestInterval;\n        }\n    }\n\n    /// @notice Calculates the total amount of underlying tokens the Vault holds.\n    /// @return totalUnderlyingHeld The total amount of underlying tokens the Vault holds.\n    function totalUnderlying() public view virtual returns (uint256 totalUnderlyingHeld) {\n        unchecked {\n            // Cannot underflow as locked profit can't exceed total strategy holdings.\n            totalUnderlyingHeld = totalStrategyHoldings - lockedProfit();\n        }\n\n        // Include floating underlying balance in the total.\n        totalUnderlyingHeld += totalFloat();\n    }\n\n    /// @notice Compute an estimated return given the auxoToken supply, initial exchange rate and locked profits.\n    /// @param invested The underlying deposited in strategies.\n    /// @param profit The profit derived from harvest.\n    /// @param interval The period during which `profit` was generated.\n    function computeEstimatedReturns(uint256 invested, uint256 profit, uint256 interval) internal view returns(uint256) {\n        return (invested == 0 || profit == 0) ? 0 : profit.fdiv(invested, BASE_UNIT) * (BLOCKS_PER_YEAR / interval) * 100;\n    }\n}\n",
  "sourceMap": "899:43883:18:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vault.sol",
  "type": "contract"
}