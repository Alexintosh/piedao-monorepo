{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Authority",
          "name": "newAuth",
          "type": "address"
        }
      ],
      "name": "AuthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "BurningFeePercentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "BurningFeeReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "perUser",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "perVault",
          "type": "uint256"
        }
      ],
      "name": "DepositLimitsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EnterBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExecuteBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExitBatchBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "HarvestDelayUpdateScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "HarvestDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "HarvestFeePercentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "HarvestFeeReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newHarvestWindow",
          "type": "uint128"
        }
      ],
      "name": "HarvestWindowUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "StrategyDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyDistrusted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyTrusted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "StrategyWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy[]",
          "name": "replacedWithdrawalQueue",
          "type": "address[]"
        }
      ],
      "name": "WithdrawalQueueSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auth",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchBurnBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batchBurnRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchBurns",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burningFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burningFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sharesAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "depositIntoStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "distrustStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "enterBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimatedReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exitBatchBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getStrategyData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        },
        {
          "internalType": "uint248",
          "name": "balance",
          "type": "uint248"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawalQueue",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestDelay",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestWindow",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Upgradeable",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "auth_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "harvestFeeReceiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "burnFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvest",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestIntervalInBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestWindowStart",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestWindowStartBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLockedProfit",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextHarvestDelay",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuth",
          "type": "address"
        }
      ],
      "name": "setAuth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "setBlocksPerYear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "setBurningFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "burningFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "setBurningFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "user",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vault",
          "type": "uint256"
        }
      ],
      "name": "setDepositLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newHarvestDelay",
          "type": "uint64"
        }
      ],
      "name": "setHarvestDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "setHarvestFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "harvestFeeReceiver_",
          "type": "address"
        }
      ],
      "name": "setHarvestFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newHarvestWindow",
          "type": "uint128"
        }
      ],
      "name": "setHarvestWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "newQueue",
          "type": "address[]"
        }
      ],
      "name": "setWithdrawalQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFloat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStrategyHoldings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "triggerPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "trustStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBatchBurnReceipts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userDepositLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultDepositLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdrawalQueue",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/utils/AddressUpgradeable.sol",
    "11": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/utils/ContextUpgradeable.sol",
    "27": "contracts/Vault.sol",
    "28": "contracts/auth/Auth.sol",
    "3": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/proxy/utils/Initializable.sol",
    "32": "contracts/libraries/FixedPointMathLib.sol",
    "33": "contracts/libraries/SafeCastLib.sol",
    "36": "interfaces/IStrategy.sol",
    "37": "interfaces/IVault.sol",
    "4": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/security/PausableUpgradeable.sol",
    "6": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/ERC20Upgradeable.sol",
    "7": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/IERC20Upgradeable.sol",
    "8": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "9": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault.sol",
    "exportedSymbols": {
      "Authority": [
        2267
      ],
      "ERC20": [
        4346
      ],
      "FixedPointMath": [
        2883
      ],
      "IStrategy": [
        5219
      ],
      "IVault": [
        5050
      ],
      "Pausable": [
        5163
      ],
      "SafeCast": [
        3012
      ],
      "SafeERC20": [
        4648
      ],
      "Vault": [
        2095
      ]
    },
    "id": 2096,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 374,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "384:23:27"
      },
      {
        "absolutePath": "contracts/auth/Auth.sol",
        "file": "./auth/Auth.sol",
        "id": 376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 2268,
        "src": "409:42:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 375,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2267,
              "src": "417:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Authority_$2267_$",
                "typeString": "type(contract Authority)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 5051,
        "src": "452:48:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 377,
              "name": "IVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5050,
              "src": "460:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IVault_$5050_$",
                "typeString": "type(contract IVault)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 380,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 5220,
        "src": "501:54:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 379,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5219,
              "src": "509:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IStrategy_$5219_$",
                "typeString": "type(contract IStrategy)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/SafeCastLib.sol",
        "file": "./libraries/SafeCastLib.sol",
        "id": 382,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 3013,
        "src": "556:68:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 381,
              "name": "SafeCastLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3012,
              "src": "564:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_SafeCastLib_$3012_$",
                "typeString": "type(library SafeCastLib)"
              }
            },
            "local": "SafeCast",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 2884,
        "src": "625:86:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 383,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2883,
              "src": "633:17:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$2883_$",
                "typeString": "type(library FixedPointMathLib)"
              }
            },
            "local": "FixedPointMath",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 4347,
        "src": "712:111:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 385,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4346,
              "src": "720:16:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$4346_$",
                "typeString": "type(contract ERC20Upgradeable)"
              }
            },
            "local": "ERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 5164,
        "src": "824:117:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 387,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5163,
              "src": "832:19:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PausableUpgradeable_$5163_$",
                "typeString": "type(contract PausableUpgradeable)"
              }
            },
            "local": "Pausable",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/addamsson/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 390,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2096,
        "sourceUnit": 4649,
        "src": "942:129:27",
        "symbolAliases": [
          {
            "foreign": {
              "id": 389,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4648,
              "src": "950:20:27",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_SafeERC20Upgradeable_$4648_$",
                "typeString": "type(library SafeERC20Upgradeable)"
              }
            },
            "local": "SafeERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 392,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4346,
              "src": "1169:5:27"
            },
            "id": 393,
            "nodeType": "InheritanceSpecifier",
            "src": "1169:5:27"
          },
          {
            "baseName": {
              "id": 394,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5163,
              "src": "1176:8:27"
            },
            "id": 395,
            "nodeType": "InheritanceSpecifier",
            "src": "1176:8:27"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 391,
          "nodeType": "StructuredDocumentation",
          "src": "1073:78:27",
          "text": "@title Vault\n @author dantop114\n @notice A vault seeking for yield."
        },
        "fullyImplemented": true,
        "id": 2095,
        "linearizedBaseContracts": [
          2095,
          5163,
          4346,
          5981,
          4424,
          5707,
          3715
        ],
        "name": "Vault",
        "nameLocation": "1160:5:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 399,
            "libraryName": {
              "id": 396,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4648,
              "src": "1197:9:27"
            },
            "nodeType": "UsingForDirective",
            "src": "1191:26:27",
            "typeName": {
              "id": 398,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 397,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4346,
                "src": "1211:5:27"
              },
              "referencedDeclaration": 4346,
              "src": "1211:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                "typeString": "contract ERC20Upgradeable"
              }
            }
          },
          {
            "id": 402,
            "libraryName": {
              "id": 400,
              "name": "SafeCast",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3012,
              "src": "1228:8:27"
            },
            "nodeType": "UsingForDirective",
            "src": "1222:27:27",
            "typeName": {
              "id": 401,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1241:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 405,
            "libraryName": {
              "id": 403,
              "name": "FixedPointMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2883,
              "src": "1260:14:27"
            },
            "nodeType": "UsingForDirective",
            "src": "1254:33:27",
            "typeName": {
              "id": 404,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1279:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "documentation": {
              "id": 406,
              "nodeType": "StructuredDocumentation",
              "src": "1475:44:27",
              "text": "@notice The Vault's token symbol prefix."
            },
            "id": 412,
            "mutability": "constant",
            "name": "S_PREFIX",
            "nameLocation": "1548:8:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "1524:48:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 407,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1524:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6175786f",
                  "id": 410,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1565:6:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_042d1c6da08dfdaa63f9beb9ae15a7a636f364192b6f357ff6eb885f85184f48",
                    "typeString": "literal_string \"auxo\""
                  },
                  "value": "auxo"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_042d1c6da08dfdaa63f9beb9ae15a7a636f364192b6f357ff6eb885f85184f48",
                    "typeString": "literal_string \"auxo\""
                  }
                ],
                "id": 409,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1559:5:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 408,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1559:5:27",
                  "typeDescriptions": {}
                }
              },
              "id": 411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1559:13:27",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 413,
              "nodeType": "StructuredDocumentation",
              "src": "1579:42:27",
              "text": "@notice The Vault's token name prefix."
            },
            "id": 419,
            "mutability": "constant",
            "name": "N_PREFIX",
            "nameLocation": "1650:8:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "1626:49:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 414,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1626:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4175786f20",
                  "id": 417,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1667:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c030a70afd7d7970c42ea384c7075c5b6baf8b8c968d66ee743e760bdd312c2",
                    "typeString": "literal_string \"Auxo \""
                  },
                  "value": "Auxo "
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c030a70afd7d7970c42ea384c7075c5b6baf8b8c968d66ee743e760bdd312c2",
                    "typeString": "literal_string \"Auxo \""
                  }
                ],
                "id": 416,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1661:5:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 415,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1661:5:27",
                  "typeDescriptions": {}
                }
              },
              "id": 418,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1661:14:27",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 420,
              "nodeType": "StructuredDocumentation",
              "src": "1682:42:27",
              "text": "@notice The Vault's token name suffix."
            },
            "id": 426,
            "mutability": "constant",
            "name": "N_SUFFIX",
            "nameLocation": "1753:8:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "1729:50:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 421,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1729:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "205661756c74",
                  "id": 424,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1770:8:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1d3720cd650b77f8806500cd090e1046d7df82398e5db85091303523806ceb88",
                    "typeString": "literal_string \" Vault\""
                  },
                  "value": " Vault"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_1d3720cd650b77f8806500cd090e1046d7df82398e5db85091303523806ceb88",
                    "typeString": "literal_string \" Vault\""
                  }
                ],
                "id": 423,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1764:5:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                  "typeString": "type(bytes storage pointer)"
                },
                "typeName": {
                  "id": 422,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1764:5:27",
                  "typeDescriptions": {}
                }
              },
              "id": 425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1764:15:27",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1786:58:27",
              "text": "@notice Max number of strategies the Vault can handle."
            },
            "id": 430,
            "mutability": "constant",
            "name": "MAX_STRATEGIES",
            "nameLocation": "1875:14:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "1849:45:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 428,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1849:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1892:2:27",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "1901:32:27",
              "text": "@notice Vault's API version."
            },
            "functionSelector": "ffa1ad74",
            "id": 434,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1961:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "1938:38:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 432,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1938:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "302e32",
              "id": 433,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1971:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c1907d585d0b0e66920f6383717e2e9e7c44e42ba86ef49b0e19983ffd702288",
                "typeString": "literal_string \"0.2\""
              },
              "value": "0.2"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.StrategyData",
            "id": 439,
            "members": [
              {
                "constant": false,
                "id": 436,
                "mutability": "mutable",
                "name": "trusted",
                "nameLocation": "2452:7:27",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "2447:12:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 435,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2447:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 438,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "2555:7:27",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "2547:15:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint248",
                  "typeString": "uint248"
                },
                "typeName": {
                  "id": 437,
                  "name": "uint248",
                  "nodeType": "ElementaryTypeName",
                  "src": "2547:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint248",
                    "typeString": "uint248"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyData",
            "nameLocation": "2354:12:27",
            "nodeType": "StructDefinition",
            "scope": 2095,
            "src": "2347:222:27",
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.BatchBurn",
            "id": 444,
            "members": [
              {
                "constant": false,
                "id": 441,
                "mutability": "mutable",
                "name": "totalShares",
                "nameLocation": "2843:11:27",
                "nodeType": "VariableDeclaration",
                "scope": 444,
                "src": "2835:19:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 440,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2835:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 443,
                "mutability": "mutable",
                "name": "amountPerShare",
                "nameLocation": "2872:14:27",
                "nodeType": "VariableDeclaration",
                "scope": 444,
                "src": "2864:22:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 442,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2864:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BatchBurn",
            "nameLocation": "2815:9:27",
            "nodeType": "StructDefinition",
            "scope": 2095,
            "src": "2808:85:27",
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.BatchBurnReceipt",
            "id": 449,
            "members": [
              {
                "constant": false,
                "id": 446,
                "mutability": "mutable",
                "name": "round",
                "nameLocation": "3099:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "3091:13:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 445,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3091:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 448,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "3122:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "3114:14:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 447,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3114:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BatchBurnReceipt",
            "nameLocation": "3064:16:27",
            "nodeType": "StructDefinition",
            "scope": 2095,
            "src": "3057:78:27",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 450,
              "nodeType": "StructuredDocumentation",
              "src": "3321:35:27",
              "text": "@notice Blocks mined in a year."
            },
            "functionSelector": "a385fb96",
            "id": 452,
            "mutability": "mutable",
            "name": "blocksPerYear",
            "nameLocation": "3376:13:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3361:28:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 451,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3361:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 453,
              "nodeType": "StructuredDocumentation",
              "src": "3396:30:27",
              "text": "@notice Vault Auth module."
            },
            "functionSelector": "de9375f2",
            "id": 456,
            "mutability": "mutable",
            "name": "auth",
            "nameLocation": "3448:4:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3431:21:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Authority_$2267",
              "typeString": "contract Authority"
            },
            "typeName": {
              "id": 455,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 454,
                "name": "Authority",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2267,
                "src": "3431:9:27"
              },
              "referencedDeclaration": 2267,
              "src": "3431:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Authority_$2267",
                "typeString": "contract Authority"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "3459:51:27",
              "text": "@notice The underlying token the vault accepts."
            },
            "functionSelector": "6f307dc3",
            "id": 460,
            "mutability": "mutable",
            "name": "underlying",
            "nameLocation": "3528:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3515:23:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
              "typeString": "contract ERC20Upgradeable"
            },
            "typeName": {
              "id": 459,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 458,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4346,
                "src": "3515:5:27"
              },
              "referencedDeclaration": 4346,
              "src": "3515:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                "typeString": "contract ERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 461,
              "nodeType": "StructuredDocumentation",
              "src": "3545:42:27",
              "text": "@notice The underlying token decimals."
            },
            "functionSelector": "25a760c2",
            "id": 463,
            "mutability": "mutable",
            "name": "underlyingDecimals",
            "nameLocation": "3605:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3592:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 462,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3592:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 464,
              "nodeType": "StructuredDocumentation",
              "src": "3630:163:27",
              "text": "@notice The base unit of the underlying token and hence the Vault share token.\n @dev Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic."
            },
            "functionSelector": "c2930f91",
            "id": 466,
            "mutability": "mutable",
            "name": "baseUnit",
            "nameLocation": "3813:8:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3798:23:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 465,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3798:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 467,
              "nodeType": "StructuredDocumentation",
              "src": "3828:162:27",
              "text": "@notice The percentage of profit recognized each harvest to reserve as fees.\n @dev A fixed point number where 1e18 represents 100% and 0 represents 0%."
            },
            "functionSelector": "e33cc0a8",
            "id": 469,
            "mutability": "mutable",
            "name": "harvestFeePercent",
            "nameLocation": "4010:17:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "3995:32:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3995:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 470,
              "nodeType": "StructuredDocumentation",
              "src": "4034:79:27",
              "text": "@notice The address receiving harvest fees (denominated in Vault's shares)."
            },
            "functionSelector": "ecc404b5",
            "id": 472,
            "mutability": "mutable",
            "name": "harvestFeeReceiver",
            "nameLocation": "4133:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "4118:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 471,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4118:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 473,
              "nodeType": "StructuredDocumentation",
              "src": "4158:162:27",
              "text": "@notice The percentage of shares recognized each burning to reserve as fees.\n @dev A fixed point number where 1e18 represents 100% and 0 represents 0%."
            },
            "functionSelector": "31024f3b",
            "id": 475,
            "mutability": "mutable",
            "name": "burningFeePercent",
            "nameLocation": "4340:17:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "4325:32:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 474,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4325:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "4364:79:27",
              "text": "@notice The address receiving burning fees (denominated in Vault's shares)."
            },
            "functionSelector": "dd11dd45",
            "id": 478,
            "mutability": "mutable",
            "name": "burningFeeReceiver",
            "nameLocation": "4463:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "4448:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 477,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4448:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 479,
              "nodeType": "StructuredDocumentation",
              "src": "4488:243:27",
              "text": "@notice The period in seconds during which multiple harvests can occur\n regardless if they are taking place before the harvest delay has elapsed.\n @dev Long harvest delays open up the Vault to profit distribution DOS attacks."
            },
            "functionSelector": "f97d2ed7",
            "id": 481,
            "mutability": "mutable",
            "name": "harvestWindow",
            "nameLocation": "4751:13:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "4736:28:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 480,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "4736:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 482,
              "nodeType": "StructuredDocumentation",
              "src": "4771:141:27",
              "text": "@notice The period in seconds over which locked profit is unlocked.\n @dev Cannot be 0 as it opens harvests up to sandwich attacks."
            },
            "functionSelector": "448f56b9",
            "id": 484,
            "mutability": "mutable",
            "name": "harvestDelay",
            "nameLocation": "4931:12:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "4917:26:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 483,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4917:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 485,
              "nodeType": "StructuredDocumentation",
              "src": "4950:144:27",
              "text": "@notice The value that will replace harvestDelay next harvest.\n @dev In the case that the next delay is 0, no update will be applied."
            },
            "functionSelector": "797ba463",
            "id": 487,
            "mutability": "mutable",
            "name": "nextHarvestDelay",
            "nameLocation": "5113:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5099:30:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 486,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "5099:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 488,
              "nodeType": "StructuredDocumentation",
              "src": "5136:205:27",
              "text": "@notice The total amount of underlying tokens held in strategies at the time of the last harvest.\n @dev Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings."
            },
            "functionSelector": "ecad9565",
            "id": 490,
            "mutability": "mutable",
            "name": "totalStrategyHoldings",
            "nameLocation": "5361:21:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5346:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 489,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5346:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "5389:60:27",
              "text": "@notice Maps strategies to data the Vault holds on them."
            },
            "functionSelector": "2968676e",
            "id": 497,
            "mutability": "mutable",
            "name": "getStrategyData",
            "nameLocation": "5496:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5454:57:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData)"
            },
            "typeName": {
              "id": 496,
              "keyType": {
                "id": 493,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 492,
                  "name": "IStrategy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5219,
                  "src": "5462:9:27"
                },
                "referencedDeclaration": 5219,
                "src": "5462:9:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$5219",
                  "typeString": "contract IStrategy"
                }
              },
              "nodeType": "Mapping",
              "src": "5454:34:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData)"
              },
              "valueType": {
                "id": 495,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 494,
                  "name": "StrategyData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 439,
                  "src": "5475:12:27"
                },
                "referencedDeclaration": 439,
                "src": "5475:12:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StrategyData_$439_storage_ptr",
                  "typeString": "struct Vault.StrategyData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 498,
              "nodeType": "StructuredDocumentation",
              "src": "5518:67:27",
              "text": "@notice Exchange rate at the beginning of latest harvest window"
            },
            "functionSelector": "5e4f9451",
            "id": 500,
            "mutability": "mutable",
            "name": "lastHarvestExchangeRate",
            "nameLocation": "5605:23:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5590:38:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5590:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "5635:45:27",
              "text": "@notice Latest harvest interval in blocks"
            },
            "functionSelector": "836ca0f6",
            "id": 503,
            "mutability": "mutable",
            "name": "lastHarvestIntervalInBlocks",
            "nameLocation": "5700:27:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5685:42:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 502,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5685:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 504,
              "nodeType": "StructuredDocumentation",
              "src": "5734:95:27",
              "text": "@notice The block number when the first harvest in the most recent harvest window occurred."
            },
            "functionSelector": "9291df6b",
            "id": 506,
            "mutability": "mutable",
            "name": "lastHarvestWindowStartBlock",
            "nameLocation": "5849:27:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "5834:42:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 505,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5834:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 507,
              "nodeType": "StructuredDocumentation",
              "src": "5883:216:27",
              "text": "@notice A timestamp representing when the first harvest in the most recent harvest window occurred.\n @dev May be equal to lastHarvest if there was/has only been one harvest in the most last/current window."
            },
            "functionSelector": "eed74e67",
            "id": 509,
            "mutability": "mutable",
            "name": "lastHarvestWindowStart",
            "nameLocation": "6118:22:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6104:36:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 508,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "6104:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 510,
              "nodeType": "StructuredDocumentation",
              "src": "6147:75:27",
              "text": "@notice A timestamp representing when the most recent harvest occurred."
            },
            "functionSelector": "f1a392da",
            "id": 512,
            "mutability": "mutable",
            "name": "lastHarvest",
            "nameLocation": "6241:11:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6227:25:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 511,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "6227:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 513,
              "nodeType": "StructuredDocumentation",
              "src": "6259:71:27",
              "text": "@notice The amount of locked profit at the end of the last harvest."
            },
            "functionSelector": "d00364be",
            "id": 515,
            "mutability": "mutable",
            "name": "maxLockedProfit",
            "nameLocation": "6350:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6335:30:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 514,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "6335:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 516,
              "nodeType": "StructuredDocumentation",
              "src": "6372:294:27",
              "text": "@notice An ordered array of strategies representing the withdrawal queue.\n @dev The queue is processed in descending order, meaning the last index will be withdrawn from first.\n @dev There are not sanity checks on the withdrawal queue, so any control should be done off-chain."
            },
            "functionSelector": "c822adda",
            "id": 520,
            "mutability": "mutable",
            "name": "withdrawalQueue",
            "nameLocation": "6690:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6671:34:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage",
              "typeString": "contract IStrategy[]"
            },
            "typeName": {
              "baseType": {
                "id": 518,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 517,
                  "name": "IStrategy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5219,
                  "src": "6671:9:27"
                },
                "referencedDeclaration": 5219,
                "src": "6671:9:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$5219",
                  "typeString": "contract IStrategy"
                }
              },
              "id": 519,
              "nodeType": "ArrayTypeName",
              "src": "6671:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                "typeString": "contract IStrategy[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 521,
              "nodeType": "StructuredDocumentation",
              "src": "6712:42:27",
              "text": "@notice Current batched burning round."
            },
            "functionSelector": "6bd95612",
            "id": 523,
            "mutability": "mutable",
            "name": "batchBurnRound",
            "nameLocation": "6774:14:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6759:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 522,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6759:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "6795:60:27",
              "text": "@notice Balance reserved to batched burning withdrawals."
            },
            "functionSelector": "86dc4800",
            "id": 526,
            "mutability": "mutable",
            "name": "batchBurnBalance",
            "nameLocation": "6875:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6860:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6860:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "6898:54:27",
              "text": "@notice Maps user's address to withdrawal request."
            },
            "functionSelector": "912f74cd",
            "id": 532,
            "mutability": "mutable",
            "name": "userBatchBurnReceipts",
            "nameLocation": "7001:21:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "6957:65:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
              "typeString": "mapping(address => struct Vault.BatchBurnReceipt)"
            },
            "typeName": {
              "id": 531,
              "keyType": {
                "id": 528,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6965:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6957:36:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                "typeString": "mapping(address => struct Vault.BatchBurnReceipt)"
              },
              "valueType": {
                "id": 530,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 529,
                  "name": "BatchBurnReceipt",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 449,
                  "src": "6976:16:27"
                },
                "referencedDeclaration": 449,
                "src": "6976:16:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage_ptr",
                  "typeString": "struct Vault.BatchBurnReceipt"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 533,
              "nodeType": "StructuredDocumentation",
              "src": "7029:70:27",
              "text": "@notice Maps social burning events rounds to batched burn details."
            },
            "functionSelector": "14fbae04",
            "id": 538,
            "mutability": "mutable",
            "name": "batchBurns",
            "nameLocation": "7141:10:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "7104:47:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
              "typeString": "mapping(uint256 => struct Vault.BatchBurn)"
            },
            "typeName": {
              "id": 537,
              "keyType": {
                "id": 534,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7112:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7104:29:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
                "typeString": "mapping(uint256 => struct Vault.BatchBurn)"
              },
              "valueType": {
                "id": 536,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 535,
                  "name": "BatchBurn",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 444,
                  "src": "7123:9:27"
                },
                "referencedDeclaration": 444,
                "src": "7123:9:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BatchBurn_$444_storage_ptr",
                  "typeString": "struct Vault.BatchBurn"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 539,
              "nodeType": "StructuredDocumentation",
              "src": "7158:55:27",
              "text": "@notice Amount of shares a single address can hold."
            },
            "functionSelector": "1ec36bfa",
            "id": 541,
            "mutability": "mutable",
            "name": "userDepositLimit",
            "nameLocation": "7233:16:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "7218:31:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 540,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7218:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 542,
              "nodeType": "StructuredDocumentation",
              "src": "7256:52:27",
              "text": "@notice Amount of underlying cap for this vault."
            },
            "functionSelector": "63874446",
            "id": 544,
            "mutability": "mutable",
            "name": "vaultDepositLimit",
            "nameLocation": "7328:17:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "7313:32:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 543,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7313:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 545,
              "nodeType": "StructuredDocumentation",
              "src": "7352:58:27",
              "text": "@notice Estimated return recorded during last harvest."
            },
            "functionSelector": "9ee02c7f",
            "id": 547,
            "mutability": "mutable",
            "name": "estimatedReturn",
            "nameLocation": "7430:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 2095,
            "src": "7415:30:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 546,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7415:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 548,
              "nodeType": "StructuredDocumentation",
              "src": "7631:106:27",
              "text": "@notice Emitted when the Authority module is updated.\n @param newAuth The new Authority module."
            },
            "id": 553,
            "name": "AuthUpdated",
            "nameLocation": "7748:11:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAuth",
                  "nameLocation": "7770:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7760:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$2267",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 549,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "7760:9:27"
                    },
                    "referencedDeclaration": 2267,
                    "src": "7760:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7759:19:27"
            },
            "src": "7742:37:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 554,
              "nodeType": "StructuredDocumentation",
              "src": "7785:108:27",
              "text": "@notice Emitted when the fee percentage is updated.\n @param newFeePercent The new fee percentage."
            },
            "id": 558,
            "name": "HarvestFeePercentUpdated",
            "nameLocation": "7904:24:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "7937:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "7929:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7929:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7928:23:27"
            },
            "src": "7898:54:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "7958:124:27",
              "text": "@notice Emitted when the batched burning fee percentage is updated.\n @param newFeePercent The new fee percentage."
            },
            "id": 563,
            "name": "BurningFeePercentUpdated",
            "nameLocation": "8093:24:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "8126:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "8118:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8118:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8117:23:27"
            },
            "src": "8087:54:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "8147:99:27",
              "text": "@notice Emitted when harvest fees receiver is updated.\n @param receiver The new receiver"
            },
            "id": 568,
            "name": "HarvestFeeReceiverUpdated",
            "nameLocation": "8257:25:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8299:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "8283:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8283:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8282:26:27"
            },
            "src": "8251:58:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "8315:99:27",
              "text": "@notice Emitted when burning fees receiver is updated.\n @param receiver The new receiver"
            },
            "id": 573,
            "name": "BurningFeeReceiverUpdated",
            "nameLocation": "8425:25:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8467:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "8451:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8451:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8450:26:27"
            },
            "src": "8419:58:27"
          },
          {
            "anonymous": false,
            "id": 577,
            "name": "HarvestWindowUpdated",
            "nameLocation": "8607:20:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestWindow",
                  "nameLocation": "8636:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "8628:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8628:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8627:26:27"
            },
            "src": "8601:53:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "8660:170:27",
              "text": "@notice Emitted when the harvest delay is updated.\n @param account The address changing the harvest delay\n @param newHarvestDelay The new harvest delay."
            },
            "id": 584,
            "name": "HarvestDelayUpdated",
            "nameLocation": "8841:19:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8877:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "8861:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8861:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "8893:15:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "8886:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8886:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8860:49:27"
            },
            "src": "8835:75:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "8916:151:27",
              "text": "@notice Emitted when the harvest delay is scheduled to be updated next harvest.\n @param newHarvestDelay The scheduled updated harvest delay."
            },
            "id": 589,
            "name": "HarvestDelayUpdateScheduled",
            "nameLocation": "9078:27:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "9113:15:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "9106:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9105:24:27"
            },
            "src": "9072:58:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 590,
              "nodeType": "StructuredDocumentation",
              "src": "9136:122:27",
              "text": "@notice Emitted when the withdrawal queue is updated.\n @param replacedWithdrawalQueue The new withdrawal queue."
            },
            "id": 596,
            "name": "WithdrawalQueueSet",
            "nameLocation": "9269:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "replacedWithdrawalQueue",
                  "nameLocation": "9300:23:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "9288:35:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 592,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 591,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5219,
                        "src": "9288:9:27"
                      },
                      "referencedDeclaration": 5219,
                      "src": "9288:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5219",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 593,
                    "nodeType": "ArrayTypeName",
                    "src": "9288:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9287:37:27"
            },
            "src": "9263:62:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 597,
              "nodeType": "StructuredDocumentation",
              "src": "9331:112:27",
              "text": "@notice Emitted when a strategy is set to trusted.\n @param strategy The strategy that became trusted."
            },
            "id": 602,
            "name": "StrategyTrusted",
            "nameLocation": "9454:15:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "9488:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "9470:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 598,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "9470:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "9470:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9469:28:27"
            },
            "src": "9448:50:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 603,
              "nodeType": "StructuredDocumentation",
              "src": "9504:116:27",
              "text": "@notice Emitted when a strategy is set to untrusted.\n @param strategy The strategy that became untrusted."
            },
            "id": 608,
            "name": "StrategyDistrusted",
            "nameLocation": "9631:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "9668:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "9650:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 605,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 604,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "9650:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "9650:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9649:28:27"
            },
            "src": "9625:53:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 609,
              "nodeType": "StructuredDocumentation",
              "src": "9684:232:27",
              "text": "@notice Emitted when underlying tokens are deposited into the vault.\n @param from The user depositing into the vault.\n @param to The user receiving Vault's shares.\n @param value The shares `to` is receiving."
            },
            "id": 617,
            "name": "Deposit",
            "nameLocation": "9927:7:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9951:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "9935:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9935:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9973:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "9957:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9957:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9985:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "9977:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9977:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9934:57:27"
            },
            "src": "9921:71:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "9998:194:27",
              "text": "@notice Emitted after a user enters a batched burn round.\n @param round Batched burn round.\n @param account User's address.\n @param amount Amount of shares to be burned."
            },
            "id": 626,
            "name": "EnterBatchBurn",
            "nameLocation": "10203:14:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10234:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "10218:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10218:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10257:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "10241:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10241:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10274:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "10266:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10266:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10217:64:27"
            },
            "src": "10197:85:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 627,
              "nodeType": "StructuredDocumentation",
              "src": "10288:193:27",
              "text": "@notice Emitted after a user exits a batched burn round.\n @param round Batched burn round.\n @param account User's address.\n @param amount Amount of underlying redeemed."
            },
            "id": 635,
            "name": "ExitBatchBurn",
            "nameLocation": "10492:13:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10522:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "10506:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10506:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10545:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "10529:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10529:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10562:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "10554:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10554:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10505:64:27"
            },
            "src": "10486:84:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "10576:267:27",
              "text": "@notice Emitted after a batched burn event happens.\n @param round Batched burn round.\n @param executor User that executes the batch burn.\n @param shares Total amount of burned shares.\n @param amount Total amount of underlying redeemed."
            },
            "id": 646,
            "name": "ExecuteBatchBurn",
            "nameLocation": "10854:16:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nameLocation": "10887:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "10871:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10871:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 640,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "10910:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "10894:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10894:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "10928:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "10920:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10920:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10944:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "10936:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10936:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10870:81:27"
            },
            "src": "10848:104:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 647,
              "nodeType": "StructuredDocumentation",
              "src": "10958:142:27",
              "text": "@notice Emitted after a successful harvest.\n @param account The harvester address.\n @param strategies The set of strategies."
            },
            "id": 655,
            "name": "Harvest",
            "nameLocation": "11111:7:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11135:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "11119:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11119:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "11156:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "11144:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 651,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 650,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5219,
                        "src": "11144:9:27"
                      },
                      "referencedDeclaration": 5219,
                      "src": "11144:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5219",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 652,
                    "nodeType": "ArrayTypeName",
                    "src": "11144:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11118:49:27"
            },
            "src": "11105:63:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "11174:288:27",
              "text": "@notice Emitted after the Vault deposits into a strategy contract.\n @param account The address depositing funds into the strategy.\n @param strategy The strategy that was deposited into.\n @param underlyingAmount The amount of underlying tokens that were deposited."
            },
            "id": 665,
            "name": "StrategyDeposit",
            "nameLocation": "11473:15:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11505:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "11489:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11489:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "11532:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "11514:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 660,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 659,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "11514:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "11514:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "11550:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "11542:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11542:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11488:79:27"
            },
            "src": "11467:101:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 666,
              "nodeType": "StructuredDocumentation",
              "src": "11574:288:27",
              "text": "@notice Emitted after the Vault withdraws funds from a strategy contract.\n @param account The user pulling funds from the strategy\n @param strategy The strategy that was withdrawn from.\n @param underlyingAmount The amount of underlying tokens that were withdrawn."
            },
            "id": 675,
            "name": "StrategyWithdrawal",
            "nameLocation": "11873:18:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11908:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "11892:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11892:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "11935:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "11917:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 669,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "11917:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "11917:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "11953:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "11945:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11945:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11891:79:27"
            },
            "src": "11867:104:27"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 676,
              "nodeType": "StructuredDocumentation",
              "src": "11977:175:27",
              "text": "@notice Event emitted when the deposit limits are updated.\n @param perUser New underlying limit per address.\n @param perVault New underlying limit per vault."
            },
            "id": 682,
            "name": "DepositLimitsUpdated",
            "nameLocation": "12163:20:27",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "perUser",
                  "nameLocation": "12192:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "12184:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12184:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "perVault",
                  "nameLocation": "12209:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "12201:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12201:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12183:35:27"
            },
            "src": "12157:62:27"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "12439:96:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 689,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "12470:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 692,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12484:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$2095",
                                  "typeString": "contract Vault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vault_$2095",
                                  "typeString": "contract Vault"
                                }
                              ],
                              "id": 691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12476:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 690,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12476:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12476:13:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 694,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12491:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sig",
                            "nodeType": "MemberAccess",
                            "src": "12491:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 687,
                            "name": "auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "12457:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Authority_$2267",
                              "typeString": "contract Authority"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2266,
                          "src": "12457:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (address,address,bytes4) view external returns (bool)"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12457:42:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12501:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "id": 686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12449:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12449:67:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "12449:67:27"
                },
                {
                  "id": 700,
                  "nodeType": "PlaceholderStatement",
                  "src": "12527:1:27"
                }
              ]
            },
            "id": 702,
            "name": "requiresAuth",
            "nameLocation": "12412:12:27",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "12433:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "12425:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12425:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12424:14:27"
            },
            "src": "12403:132:27",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "12878:49:27",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 710,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5103,
                        "src": "12888:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12888:8:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 714,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5142,
                        "src": "12912:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12912:8:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12888:32:27",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 712,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5158,
                        "src": "12899:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12899:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "12888:32:27"
                }
              ]
            },
            "documentation": {
              "id": 703,
              "nodeType": "StructuredDocumentation",
              "src": "12731:84:27",
              "text": "@notice Triggers the Vault's pause\n @dev Only owner can call this method."
            },
            "functionSelector": "6833f60d",
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 706,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "12866:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "12866:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 705,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "12853:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "12853:24:27"
              }
            ],
            "name": "triggerPause",
            "nameLocation": "12829:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12841:2:27"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12878:0:27"
            },
            "scope": 2095,
            "src": "12820:107:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "13590:631:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 740,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "13648:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 741,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "13655:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 739,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "13635:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13635:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "13635:28:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 744,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5084,
                      "src": "13712:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13712:17:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "13712:17:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 747,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5142,
                      "src": "13778:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13778:8:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "13778:8:27"
                },
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 750,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "13832:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                        "typeString": "contract ERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 751,
                      "name": "underlying_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "13845:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                        "typeString": "contract ERC20Upgradeable"
                      }
                    },
                    "src": "13832:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                      "typeString": "contract ERC20Upgradeable"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "13832:24:27"
                },
                {
                  "expression": {
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 754,
                      "name": "baseUnit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "13866:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13877:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 756,
                            "name": "underlying_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "13881:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                              "typeString": "contract ERC20Upgradeable"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3871,
                          "src": "13881:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13881:22:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "13877:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13866:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "13866:37:27"
                },
                {
                  "expression": {
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "underlyingDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "13913:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 763,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "13934:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                            "typeString": "contract ERC20Upgradeable"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3871,
                        "src": "13934:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13934:22:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13913:43:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "13913:43:27"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 768,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "13967:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Authority_$2267",
                        "typeString": "contract Authority"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 769,
                      "name": "auth_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "13974:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Authority_$2267",
                        "typeString": "contract Authority"
                      }
                    },
                    "src": "13967:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "13967:12:27"
                },
                {
                  "expression": {
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 772,
                      "name": "burningFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "13989:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 773,
                      "name": "burnFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "14010:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13989:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "13989:37:27"
                },
                {
                  "expression": {
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 776,
                      "name": "harvestFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "14036:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 777,
                      "name": "harvestFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "14057:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14036:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "14036:40:27"
                },
                {
                  "expression": {
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 780,
                      "name": "batchBurnRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "14196:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14213:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14196:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "14196:18:27"
                }
              ]
            },
            "documentation": {
              "id": 720,
              "nodeType": "StructuredDocumentation",
              "src": "12933:420:27",
              "text": "@notice Internal initializer method.\n @param underlying_ The underlying token the vault accepts.\n @param auth_ The Auth mo    dule that will be used for this Vault.\n @param harvestFeeReceiver_ The harvesting fee receiver address.\n @param burnFeeReceiver_ The batched burns fee receiver address.\n @param name_ The Vault shares' name.\n @param symbol_ The Vault shares' symbol."
            },
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 737,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 736,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3714,
                  "src": "13578:11:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "13578:11:27"
              }
            ],
            "name": "__Vault_init",
            "nameLocation": "13367:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "13395:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13389:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                    "typeString": "contract ERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 722,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 721,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4346,
                      "src": "13389:5:27"
                    },
                    "referencedDeclaration": 4346,
                    "src": "13389:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                      "typeString": "contract ERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "auth_",
                  "nameLocation": "13426:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13416:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$2267",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 725,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 724,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "13416:9:27"
                    },
                    "referencedDeclaration": 2267,
                    "src": "13416:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "harvestFeeReceiver_",
                  "nameLocation": "13449:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13441:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13441:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "burnFeeReceiver_",
                  "nameLocation": "13486:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13478:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13478:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "13526:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13512:19:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13512:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "13555:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "13541:21:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13541:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13379:189:27"
            },
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13590:0:27"
            },
            "scope": 2095,
            "src": "13358:863:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "14717:333:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "14786:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      {
                        "id": 803,
                        "name": "auth_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "14811:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Authority_$2267",
                          "typeString": "contract Authority"
                        }
                      },
                      {
                        "id": 804,
                        "name": "harvestFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "14830:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 805,
                        "name": "burnFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "14863:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 811,
                                "name": "N_PREFIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "14913:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 814,
                                        "name": "underlying_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 789,
                                        "src": "14929:11:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                                          "typeString": "contract ERC20Upgradeable"
                                        }
                                      },
                                      "id": 815,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "name",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3851,
                                      "src": "14929:16:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view external returns (string memory)"
                                      }
                                    },
                                    "id": 816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14929:18:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14923:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 812,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14923:5:27",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14923:25:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 818,
                                "name": "N_SUFFIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 426,
                                "src": "14950:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14900:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 808,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14900:5:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "14900:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14900:59:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14893:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 806,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "14893:6:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14893:67:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 826,
                                "name": "S_PREFIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 412,
                                "src": "14994:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 829,
                                        "name": "underlying_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 789,
                                        "src": "15010:11:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                                          "typeString": "contract ERC20Upgradeable"
                                        }
                                      },
                                      "id": 830,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "symbol",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3861,
                                      "src": "15010:18:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view external returns (string memory)"
                                      }
                                    },
                                    "id": 831,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15010:20:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15004:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 827,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15004:5:27",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15004:27:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14981:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 823,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14981:5:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "14981:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14981:51:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14974:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 821,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "14974:6:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14974:59:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                          "typeString": "contract ERC20Upgradeable"
                        },
                        {
                          "typeIdentifier": "t_contract$_Authority_$2267",
                          "typeString": "contract Authority"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 801,
                      "name": "__Vault_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "14760:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Upgradeable_$4346_$_t_contract$_Authority_$2267_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20Upgradeable,contract Authority,address,address,string memory,string memory)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14760:283:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "14760:283:27"
                }
              ]
            },
            "documentation": {
              "id": 786,
              "nodeType": "StructuredDocumentation",
              "src": "14227:315:27",
              "text": "@notice The initialize method\n @param underlying_ The underlying token the vault accepts.\n @param auth_ The Auth module that will be used for this Vault.\n @param harvestFeeReceiver_ The harvesting fee receiver address.\n @param burnFeeReceiver_ The batched burns fee receiver address."
            },
            "functionSelector": "f8c8765e",
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 798,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3714,
                  "src": "14705:11:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "14705:11:27"
              }
            ],
            "name": "initialize",
            "nameLocation": "14556:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "14582:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "14576:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                    "typeString": "contract ERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 788,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 787,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4346,
                      "src": "14576:5:27"
                    },
                    "referencedDeclaration": 4346,
                    "src": "14576:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                      "typeString": "contract ERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "auth_",
                  "nameLocation": "14613:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "14603:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$2267",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 791,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 790,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "14603:9:27"
                    },
                    "referencedDeclaration": 2267,
                    "src": "14603:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "harvestFeeReceiver_",
                  "nameLocation": "14636:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "14628:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14628:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "burnFeeReceiver_",
                  "nameLocation": "14673:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "14665:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14665:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14566:129:27"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14717:0:27"
            },
            "scope": 2095,
            "src": "14547:503:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3871
            ],
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "15479:42:27",
              "statements": [
                {
                  "expression": {
                    "id": 845,
                    "name": "underlyingDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 463,
                    "src": "15496:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 844,
                  "id": 846,
                  "nodeType": "Return",
                  "src": "15489:25:27"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "15239:178:27",
              "text": "@notice Overrides `decimals` method.\n @dev Needed because Openzeppelin's logic for decimals.\n @return Vault's shares token decimals (underlying token decimals)."
            },
            "functionSelector": "313ce567",
            "id": 848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "15431:8:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15454:8:27"
            },
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15439:2:27"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "15472:5:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15472:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15471:7:27"
            },
            "scope": 2095,
            "src": "15422:99:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "15950:124:27",
              "statements": [
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 860,
                      "name": "userDepositLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "15960:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "15979:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15960:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "15960:23:27"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 864,
                      "name": "vaultDepositLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "15993:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 865,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "16013:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15993:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "15993:25:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "16055:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 870,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "16061:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 868,
                      "name": "DepositLimitsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "16034:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16034:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "EmitStatement",
                  "src": "16029:38:27"
                }
              ]
            },
            "documentation": {
              "id": 849,
              "nodeType": "StructuredDocumentation",
              "src": "15716:140:27",
              "text": "@notice Set new deposit limits for this vault.\n @param user New user deposit limit.\n @param vault New vault deposit limit."
            },
            "functionSelector": "4eddea06",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 856,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "15938:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "15938:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 855,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "15925:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "15925:24:27"
              }
            ],
            "name": "setDepositLimits",
            "nameLocation": "15870:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "15895:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "15887:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15887:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "15909:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "15901:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15901:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15886:29:27"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15950:0:27"
            },
            "scope": 2095,
            "src": "15861:213:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "16426:66:27",
              "statements": [
                {
                  "expression": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 885,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "16436:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Authority_$2267",
                        "typeString": "contract Authority"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 886,
                      "name": "newAuth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "16443:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Authority_$2267",
                        "typeString": "contract Authority"
                      }
                    },
                    "src": "16436:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "16436:14:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 890,
                        "name": "newAuth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "16477:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Authority_$2267",
                          "typeString": "contract Authority"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Authority_$2267",
                          "typeString": "contract Authority"
                        }
                      ],
                      "id": 889,
                      "name": "AuthUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "16465:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Authority_$2267_$returns$__$",
                        "typeString": "function (contract Authority)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16465:20:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 892,
                  "nodeType": "EmitStatement",
                  "src": "16460:25:27"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "16263:88:27",
              "text": "@notice Set a new Authority module.\n @param newAuth The new Authority module."
            },
            "functionSelector": "2b2e05c1",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 881,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "16414:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "16414:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 883,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 880,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "16401:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "16401:24:27"
              }
            ],
            "name": "setAuth",
            "nameLocation": "16365:7:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "newAuth",
                  "nameLocation": "16383:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "16373:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$2267",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 877,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 876,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2267,
                      "src": "16373:9:27"
                    },
                    "referencedDeclaration": 2267,
                    "src": "16373:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2267",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16372:19:27"
            },
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16426:0:27"
            },
            "scope": 2095,
            "src": "16356:136:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "16849:39:27",
              "statements": [
                {
                  "expression": {
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 904,
                      "name": "blocksPerYear",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "16859:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 905,
                      "name": "blocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "16875:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16859:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "16859:22:27"
                }
              ]
            },
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "16689:79:27",
              "text": "@notice Sets blocks per year.\n @param blocks Blocks in a given year."
            },
            "functionSelector": "e5fa2b70",
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 900,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "16837:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "16837:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 902,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 899,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "16824:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "16824:24:27"
              }
            ],
            "name": "setBlocksPerYear",
            "nameLocation": "16782:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "blocks",
                  "nameLocation": "16807:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "16799:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16799:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16798:16:27"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16849:0:27"
            },
            "scope": 2095,
            "src": "16773:115:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "17261:280:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 920,
                          "name": "newFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 912,
                          "src": "17337:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17354:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "17337:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737446656550657263656e743a3a4645455f544f4f5f48494748",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17360:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa293f5765570d6eddb8879dc0c06b8e391d9fa53de907d4afff9fd317d199d0",
                          "typeString": "literal_string \"setHarvestFeePercent::FEE_TOO_HIGH\""
                        },
                        "value": "setHarvestFeePercent::FEE_TOO_HIGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa293f5765570d6eddb8879dc0c06b8e391d9fa53de907d4afff9fd317d199d0",
                          "typeString": "literal_string \"setHarvestFeePercent::FEE_TOO_HIGH\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17329:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17329:68:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "17329:68:27"
                },
                {
                  "expression": {
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 926,
                      "name": "harvestFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "17446:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 927,
                      "name": "newFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 912,
                      "src": "17466:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17446:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "17446:33:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 931,
                        "name": "newFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "17520:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 930,
                      "name": "HarvestFeePercentUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "17495:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17495:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "EmitStatement",
                  "src": "17490:44:27"
                }
              ]
            },
            "documentation": {
              "id": 910,
              "nodeType": "StructuredDocumentation",
              "src": "17079:90:27",
              "text": "@notice Set a new fee percentage.\n @param newFeePercent The new fee percentage."
            },
            "functionSelector": "cbc43f89",
            "id": 935,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 915,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "17249:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "17249:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 917,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 914,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "17236:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "17236:24:27"
              }
            ],
            "name": "setHarvestFeePercent",
            "nameLocation": "17183:20:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "17212:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "17204:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17204:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17203:23:27"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17261:0:27"
            },
            "scope": 2095,
            "src": "17174:367:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "17737:287:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 946,
                          "name": "newFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "17813:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17830:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "17813:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574426174636865644275726e696e6746656550657263656e743a3a4645455f544f4f5f48494748",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17836:43:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b89119259fbffd38d98164f7a008f09f4c0b6988a0affe1b3a74b1a1faf7de32",
                          "typeString": "literal_string \"setBatchedBurningFeePercent::FEE_TOO_HIGH\""
                        },
                        "value": "setBatchedBurningFeePercent::FEE_TOO_HIGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b89119259fbffd38d98164f7a008f09f4c0b6988a0affe1b3a74b1a1faf7de32",
                          "typeString": "literal_string \"setBatchedBurningFeePercent::FEE_TOO_HIGH\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17805:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17805:75:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "17805:75:27"
                },
                {
                  "expression": {
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 952,
                      "name": "burningFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "17929:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 953,
                      "name": "newFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "17949:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17929:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "17929:33:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "newFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "18003:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 956,
                      "name": "BurningFeePercentUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "17978:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17978:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "EmitStatement",
                  "src": "17973:44:27"
                }
              ]
            },
            "documentation": {
              "id": 936,
              "nodeType": "StructuredDocumentation",
              "src": "17547:98:27",
              "text": "@notice Set a new burning fee percentage.\n @param newFeePercent The new fee percentage."
            },
            "functionSelector": "305d61ae",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 941,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "17725:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "17725:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 943,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 940,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "17712:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "17712:24:27"
              }
            ],
            "name": "setBurningFeePercent",
            "nameLocation": "17659:20:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "17688:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "17680:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17680:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17679:23:27"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17737:0:27"
            },
            "scope": 2095,
            "src": "17650:374:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 979,
              "nodeType": "Block",
              "src": "18239:157:27",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 971,
                      "name": "harvestFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "18287:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 972,
                      "name": "harvestFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "18308:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18287:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "18287:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 976,
                        "name": "harvestFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "18369:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 975,
                      "name": "HarvestFeeReceiverUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "18343:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18343:46:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "EmitStatement",
                  "src": "18338:51:27"
                }
              ]
            },
            "documentation": {
              "id": 962,
              "nodeType": "StructuredDocumentation",
              "src": "18030:110:27",
              "text": "@notice Set a new harvest fees receiver.\n @param harvestFeeReceiver_ The new harvest fees receiver."
            },
            "functionSelector": "ac86ac72",
            "id": 980,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 967,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18227:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "18227:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 969,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 966,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "18214:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "18214:24:27"
              }
            ],
            "name": "setHarvestFeeReceiver",
            "nameLocation": "18154:21:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "harvestFeeReceiver_",
                  "nameLocation": "18184:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "18176:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18176:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18175:29:27"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18239:0:27"
            },
            "scope": 2095,
            "src": "18145:251:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "18611:157:27",
              "statements": [
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 990,
                      "name": "burningFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "18659:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 991,
                      "name": "burningFeeReceiver_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "18680:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18659:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "18659:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 995,
                        "name": "burningFeeReceiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "18741:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 994,
                      "name": "BurningFeeReceiverUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "18715:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18715:46:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "EmitStatement",
                  "src": "18710:51:27"
                }
              ]
            },
            "documentation": {
              "id": 981,
              "nodeType": "StructuredDocumentation",
              "src": "18402:110:27",
              "text": "@notice Set a new burning fees receiver.\n @param burningFeeReceiver_ The new burning fees receiver."
            },
            "functionSelector": "13e86b28",
            "id": 999,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 986,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18599:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "18599:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 988,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 985,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "18586:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "18586:24:27"
              }
            ],
            "name": "setBurningFeeReceiver",
            "nameLocation": "18526:21:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "burningFeeReceiver_",
                  "nameLocation": "18556:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "18548:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18548:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18547:29:27"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18611:0:27"
            },
            "scope": 2095,
            "src": "18517:251:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "19218:308:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1010,
                          "name": "newHarvestWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "19314:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1011,
                          "name": "harvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "19334:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "19314:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737457696e646f773a3a57494e444f575f544f4f5f4c4f4e47",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19348:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e798ef3bfdadddbd9773be938dc89a6e46cf9d00ccab52fe60ca84b98334134c",
                          "typeString": "literal_string \"setHarvestWindow::WINDOW_TOO_LONG\""
                        },
                        "value": "setHarvestWindow::WINDOW_TOO_LONG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e798ef3bfdadddbd9773be938dc89a6e46cf9d00ccab52fe60ca84b98334134c",
                          "typeString": "literal_string \"setHarvestWindow::WINDOW_TOO_LONG\""
                        }
                      ],
                      "id": 1009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19306:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19306:78:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "19306:78:27"
                },
                {
                  "expression": {
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1016,
                      "name": "harvestWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "19433:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1017,
                      "name": "newHarvestWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "19449:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "19433:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "19433:32:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1021,
                        "name": "newHarvestWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "19502:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1020,
                      "name": "HarvestWindowUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "19481:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19481:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "EmitStatement",
                  "src": "19476:43:27"
                }
              ]
            },
            "documentation": {
              "id": 1000,
              "nodeType": "StructuredDocumentation",
              "src": "18960:167:27",
              "text": "@notice Set a new harvest window.\n @param newHarvestWindow The new harvest window.\n @dev The Vault's harvestDelay must already be set before calling."
            },
            "functionSelector": "07b35d1d",
            "id": 1025,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1005,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "19206:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "19206:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1004,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "19193:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "19193:24:27"
              }
            ],
            "name": "setHarvestWindow",
            "nameLocation": "19141:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "newHarvestWindow",
                  "nameLocation": "19166:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "19158:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "19158:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19157:26:27"
            },
            "returnParameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19218:0:27"
            },
            "scope": 2095,
            "src": "19132:394:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "19925:776:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "newHarvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "20022:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20041:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20022:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737444656c61793a3a44454c41595f43414e4e4f545f42455f5a45524f",
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20044:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_deb4e5b76488a66c78223ea49538ba52faef04c3e1c7169303fb685493330009",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\""
                        },
                        "value": "setHarvestDelay::DELAY_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_deb4e5b76488a66c78223ea49538ba52faef04c3e1c7169303fb685493330009",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20014:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20014:70:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1041,
                  "nodeType": "ExpressionStatement",
                  "src": "20014:70:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1043,
                          "name": "newHarvestDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "20169:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "333635",
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20188:8:27",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          },
                          "value": "365"
                        },
                        "src": "20169:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365744861727665737444656c61793a3a44454c41595f544f4f5f4c4f4e47",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20198:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6626db562e0c5359f403b0a0e7da8313f90dd8ba7a315394d1e7d31fea28361b",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_TOO_LONG\""
                        },
                        "value": "setHarvestDelay::DELAY_TOO_LONG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6626db562e0c5359f403b0a0e7da8313f90dd8ba7a315394d1e7d31fea28361b",
                          "typeString": "literal_string \"setHarvestDelay::DELAY_TOO_LONG\""
                        }
                      ],
                      "id": 1042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20161:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20161:71:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "20161:71:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1049,
                      "name": "harvestDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "20321:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20337:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "20321:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "20520:175:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1063,
                            "name": "nextHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "20586:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1064,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "20605:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "20586:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1066,
                        "nodeType": "ExpressionStatement",
                        "src": "20586:34:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1068,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "20668:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1067,
                            "name": "HarvestDelayUpdateScheduled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "20640:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20640:44:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1070,
                        "nodeType": "EmitStatement",
                        "src": "20635:49:27"
                      }
                    ]
                  },
                  "id": 1072,
                  "nodeType": "IfStatement",
                  "src": "20317:378:27",
                  "trueBody": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "20340:174:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1052,
                            "name": "harvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "20405:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1053,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "20420:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "20405:30:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1055,
                        "nodeType": "ExpressionStatement",
                        "src": "20405:30:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1057,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20475:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20475:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1059,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "20487:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1056,
                            "name": "HarvestDelayUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "20455:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64)"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20455:48:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1061,
                        "nodeType": "EmitStatement",
                        "src": "20450:53:27"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1026,
              "nodeType": "StructuredDocumentation",
              "src": "19532:305:27",
              "text": "@notice Set a new harvest delay delay.\n @param newHarvestDelay The new harvest delay to set.\n @dev If the current harvest delay is 0, meaning it has not\n been set before, it will be updated immediately; otherwise\n it will be scheduled to take effect after the next harvest."
            },
            "functionSelector": "7b72aeb9",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1031,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "19913:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "19913:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1033,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1030,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "19900:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "19900:24:27"
              }
            ],
            "name": "setHarvestDelay",
            "nameLocation": "19851:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "newHarvestDelay",
                  "nameLocation": "19874:15:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "19867:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "19867:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19866:24:27"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19925:0:27"
            },
            "scope": 2095,
            "src": "19842:859:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "21272:39:27",
              "statements": [
                {
                  "expression": {
                    "id": 1082,
                    "name": "withdrawalQueue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "21289:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage",
                      "typeString": "contract IStrategy[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1081,
                  "id": 1083,
                  "nodeType": "Return",
                  "src": "21282:22:27"
                }
              ]
            },
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "20888:306:27",
              "text": "@notice Gets the full withdrawal queue.\n @return An ordered array of strategies representing the withdrawal queue.\n @dev This is provided because Solidity converts public arrays into index getters,\n but we need a way to allow external contracts and users to access the whole array."
            },
            "functionSelector": "0e73ecef",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawalQueue",
            "nameLocation": "21208:18:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21226:2:27"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "21252:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1078,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1077,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5219,
                        "src": "21252:9:27"
                      },
                      "referencedDeclaration": 5219,
                      "src": "21252:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5219",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1079,
                    "nodeType": "ArrayTypeName",
                    "src": "21252:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21251:20:27"
            },
            "scope": 2095,
            "src": "21199:112:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "21603:259:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1098,
                            "name": "newQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "21662:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "21662:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1100,
                          "name": "MAX_STRATEGIES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "21681:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21662:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745769746864726177616c51756575653a3a51554555455f544f4f5f424947",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21697:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46e364327c935a630ddad89ea527f2cca604ad30058fe30d43a7da634f9fc7bf",
                          "typeString": "literal_string \"setWithdrawalQueue::QUEUE_TOO_BIG\""
                        },
                        "value": "setWithdrawalQueue::QUEUE_TOO_BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46e364327c935a630ddad89ea527f2cca604ad30058fe30d43a7da634f9fc7bf",
                          "typeString": "literal_string \"setWithdrawalQueue::QUEUE_TOO_BIG\""
                        }
                      ],
                      "id": 1097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21654:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21654:79:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "21654:79:27"
                },
                {
                  "expression": {
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1105,
                      "name": "withdrawalQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "21785:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1106,
                      "name": "newQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "21803:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "src": "21785:26:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage",
                      "typeString": "contract IStrategy[] storage ref"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "21785:26:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1110,
                        "name": "newQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "21846:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      ],
                      "id": 1109,
                      "name": "WithdrawalQueueSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "21827:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_contract$_IStrategy_$5219_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IStrategy[] memory)"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21827:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "EmitStatement",
                  "src": "21822:33:27"
                }
              ]
            },
            "documentation": {
              "id": 1086,
              "nodeType": "StructuredDocumentation",
              "src": "21317:188:27",
              "text": "@notice Set the withdrawal queue.\n @param newQueue The new withdrawal queue.\n @dev There are no sanity checks on the `newQueue` argument so they should be done off-chain."
            },
            "functionSelector": "ac579b77",
            "id": 1114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1093,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "21591:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "21591:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1092,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "21578:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "21578:24:27"
              }
            ],
            "name": "setWithdrawalQueue",
            "nameLocation": "21519:18:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "newQueue",
                  "nameLocation": "21559:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "21538:29:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1088,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1087,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5219,
                        "src": "21538:9:27"
                      },
                      "referencedDeclaration": 5219,
                      "src": "21538:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5219",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1089,
                    "nodeType": "ArrayTypeName",
                    "src": "21538:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21537:31:27"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21603:0:27"
            },
            "scope": 2095,
            "src": "21510:352:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "22265:406:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$4424",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1126,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "22459:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5206,
                            "src": "22459:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20Upgradeable_$4424_$",
                              "typeString": "function () view external returns (contract IERC20Upgradeable)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22459:21:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$4424",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1129,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "22484:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                            "typeString": "contract ERC20Upgradeable"
                          }
                        },
                        "src": "22459:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747275737453747261746567793a3a57524f4e475f554e4445524c59494e47",
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22496:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04660e272bfc049566637cd9a5bb77407a43b625240d121a46c19909f9de136b",
                          "typeString": "literal_string \"trustStrategy::WRONG_UNDERLYING\""
                        },
                        "value": "trustStrategy::WRONG_UNDERLYING"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04660e272bfc049566637cd9a5bb77407a43b625240d121a46c19909f9de136b",
                          "typeString": "literal_string \"trustStrategy::WRONG_UNDERLYING\""
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22451:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22451:79:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "22451:79:27"
                },
                {
                  "expression": {
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1134,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "22583:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1136,
                        "indexExpression": {
                          "id": 1135,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "22599:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5219",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22583:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "trusted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "22583:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22619:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "22583:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "22583:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1142,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "22655:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 1141,
                      "name": "StrategyTrusted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "22639:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$5219_$returns$__$",
                        "typeString": "function (contract IStrategy)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22639:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "EmitStatement",
                  "src": "22634:30:27"
                }
              ]
            },
            "documentation": {
              "id": 1115,
              "nodeType": "StructuredDocumentation",
              "src": "22060:123:27",
              "text": "@notice Store a strategy as trusted, enabling it to be harvested.\n @param strategy The strategy to make trusted."
            },
            "functionSelector": "ec523afd",
            "id": 1146,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1121,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "22253:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "22253:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1120,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "22240:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "22240:24:27"
              }
            ],
            "name": "trustStrategy",
            "nameLocation": "22197:13:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "22221:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "22211:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1116,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "22211:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "22211:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22210:20:27"
            },
            "returnParameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22265:0:27"
            },
            "scope": 2095,
            "src": "22188:483:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "22895:146:27",
              "statements": [
                {
                  "expression": {
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "22949:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1159,
                        "indexExpression": {
                          "id": 1158,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1150,
                          "src": "22965:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5219",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22949:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "trusted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "22949:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22985:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "22949:41:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "22949:41:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1165,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1150,
                        "src": "23025:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 1164,
                      "name": "StrategyDistrusted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "23006:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$5219_$returns$__$",
                        "typeString": "function (contract IStrategy)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23006:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "EmitStatement",
                  "src": "23001:33:27"
                }
              ]
            },
            "documentation": {
              "id": 1147,
              "nodeType": "StructuredDocumentation",
              "src": "22677:133:27",
              "text": "@notice Store a strategy as untrusted, disabling it from being harvested.\n @param strategy The strategy to make untrusted."
            },
            "functionSelector": "c866983b",
            "id": 1169,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1153,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "22883:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "22883:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1152,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "22870:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "22870:24:27"
              }
            ],
            "name": "distrustStrategy",
            "nameLocation": "22824:16:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "22851:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "22841:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1148,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "22841:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "22841:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22840:20:27"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22895:0:27"
            },
            "scope": 2095,
            "src": "22815:226:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "23717:93:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "23736:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1184,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "23741:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1186,
                                  "name": "underlyingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "23766:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1185,
                                "name": "calculateShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1557,
                                "src": "23750:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23750:33:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23741:42:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1189,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "23740:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1190,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "23786:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1182,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "23727:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23727:76:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "23727:76:27"
                }
              ]
            },
            "documentation": {
              "id": 1170,
              "nodeType": "StructuredDocumentation",
              "src": "23228:378:27",
              "text": "@notice Deposit a specific amount of underlying tokens.\n @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n @param to The address to receive shares corresponding to the deposit.\n @param underlyingAmount The amount of the underlying token to deposit.\n @return shares The amount of shares minted using `underlyingAmount`."
            },
            "functionSelector": "47e7ef24",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1177,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1172,
                    "src": "23688:2:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1178,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1176,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "23675:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "23675:16:27"
              }
            ],
            "name": "deposit",
            "nameLocation": "23620:7:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23636:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "23628:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23628:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "23648:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "23640:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23640:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23627:38:27"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "23709:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "23701:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23701:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23700:16:27"
            },
            "scope": 2095,
            "src": "23611:199:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "24130:1066:27",
              "statements": [
                {
                  "assignments": [
                    1201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "24148:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1273,
                      "src": "24140:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24140:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1203,
                  "initialValue": {
                    "id": 1202,
                    "name": "batchBurnRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 523,
                    "src": "24166:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24140:40:27"
                },
                {
                  "assignments": [
                    1205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "userRound",
                      "nameLocation": "24198:9:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1273,
                      "src": "24190:17:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24190:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1206,
                        "name": "userBatchBurnReceipts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "24210:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                          "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                        }
                      },
                      "id": 1209,
                      "indexExpression": {
                        "expression": {
                          "id": 1207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24232:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24232:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24210:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                        "typeString": "struct Vault.BatchBurnReceipt storage ref"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "round",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 446,
                    "src": "24210:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24190:59:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1212,
                      "name": "userRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "24264:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24277:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24264:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1247,
                    "nodeType": "Block",
                    "src": "24551:461:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1233,
                                "name": "userRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "24872:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1234,
                                "name": "batchBurnRound_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "24885:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24872:28:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "656e74657242617463684275726e3a3a444946464552454e545f524f554e4453",
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24902:34:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07f40d4b5b14a7ccaf784f8712598b511f92798e8c41fee6afc9c8b9c0ea1fd7",
                                "typeString": "literal_string \"enterBatchBurn::DIFFERENT_ROUNDS\""
                              },
                              "value": "enterBatchBurn::DIFFERENT_ROUNDS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07f40d4b5b14a7ccaf784f8712598b511f92798e8c41fee6afc9c8b9c0ea1fd7",
                                "typeString": "literal_string \"enterBatchBurn::DIFFERENT_ROUNDS\""
                              }
                            ],
                            "id": 1232,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "24864:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24864:73:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1238,
                        "nodeType": "ExpressionStatement",
                        "src": "24864:73:27"
                      },
                      {
                        "expression": {
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1239,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "24951:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1242,
                              "indexExpression": {
                                "expression": {
                                  "id": 1240,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24973:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "24973:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24951:33:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "24951:40:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1244,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "24995:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24951:50:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "24951:50:27"
                      }
                    ]
                  },
                  "id": 1248,
                  "nodeType": "IfStatement",
                  "src": "24260:752:27",
                  "trueBody": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "24280:265:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1215,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "24414:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1218,
                              "indexExpression": {
                                "expression": {
                                  "id": 1216,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24436:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "24436:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24414:33:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "round",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 446,
                            "src": "24414:39:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1220,
                            "name": "batchBurnRound_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "24456:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24414:57:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1222,
                        "nodeType": "ExpressionStatement",
                        "src": "24414:57:27"
                      },
                      {
                        "expression": {
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1223,
                                "name": "userBatchBurnReceipts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "24485:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                                  "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                                }
                              },
                              "id": 1226,
                              "indexExpression": {
                                "expression": {
                                  "id": 1224,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24507:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "24507:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24485:33:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                                "typeString": "struct Vault.BatchBurnReceipt storage ref"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "24485:40:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1228,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "24528:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24485:49:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1230,
                        "nodeType": "ExpressionStatement",
                        "src": "24485:49:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1249,
                          "name": "batchBurns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "25022:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
                            "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                          }
                        },
                        "id": 1251,
                        "indexExpression": {
                          "id": 1250,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "25033:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25022:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$444_storage",
                          "typeString": "struct Vault.BatchBurn storage ref"
                        }
                      },
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "25022:39:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1253,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "25065:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25022:49:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "25022:49:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1260,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "25107:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$2095",
                                  "typeString": "contract Vault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vault_$2095",
                                  "typeString": "contract Vault"
                                }
                              ],
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25099:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1258,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25099:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25099:13:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1262,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "25114:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1257,
                          "name": "transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3916,
                          "src": "25090:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25090:31:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25082:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25082:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "25082:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "25153:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25170:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25170:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1270,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "25182:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1266,
                      "name": "EnterBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "25138:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25138:51:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "EmitStatement",
                  "src": "25133:56:27"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "23816:260:27",
              "text": "@notice Enter a batched burn event.\n @dev Each user can take part to one batched burn event a time.\n @dev User's shares amount will be staked until the burn happens.\n @param shares Shares to withdraw during the next batched burn event."
            },
            "functionSelector": "3c66a8fa",
            "id": 1274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterBatchBurn",
            "nameLocation": "24090:14:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "24113:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "24105:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24105:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24104:16:27"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24130:0:27"
            },
            "scope": 2095,
            "src": "24081:1115:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1354,
              "nodeType": "Block",
              "src": "25308:692:27",
              "statements": [
                {
                  "assignments": [
                    1279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1279,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "25326:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1354,
                      "src": "25318:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25318:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1281,
                  "initialValue": {
                    "id": 1280,
                    "name": "batchBurnRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 523,
                    "src": "25344:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25318:40:27"
                },
                {
                  "assignments": [
                    1284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "receipt",
                      "nameLocation": "25392:7:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1354,
                      "src": "25368:31:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_memory_ptr",
                        "typeString": "struct Vault.BatchBurnReceipt"
                      },
                      "typeName": {
                        "id": 1283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1282,
                          "name": "BatchBurnReceipt",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "25368:16:27"
                        },
                        "referencedDeclaration": 449,
                        "src": "25368:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage_ptr",
                          "typeString": "struct Vault.BatchBurnReceipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1289,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1285,
                      "name": "userBatchBurnReceipts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "25402:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                        "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                      }
                    },
                    "id": 1288,
                    "indexExpression": {
                      "expression": {
                        "id": 1286,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "25424:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "25424:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25402:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                      "typeString": "struct Vault.BatchBurnReceipt storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25368:67:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1291,
                            "name": "receipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "25454:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_memory_ptr",
                              "typeString": "struct Vault.BatchBurnReceipt memory"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "round",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 446,
                          "src": "25454:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25471:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25454:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578697442617463684275726e3a3a4e4f5f4445504f53495453",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25474:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94f0eff9069e7de830b490c4649c211e5b2854ea80da508b72ad934b4ea8d0ec",
                          "typeString": "literal_string \"exitBatchBurn::NO_DEPOSITS\""
                        },
                        "value": "exitBatchBurn::NO_DEPOSITS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94f0eff9069e7de830b490c4649c211e5b2854ea80da508b72ad934b4ea8d0ec",
                          "typeString": "literal_string \"exitBatchBurn::NO_DEPOSITS\""
                        }
                      ],
                      "id": 1290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25446:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25446:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "25446:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1299,
                            "name": "receipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "25521:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_memory_ptr",
                              "typeString": "struct Vault.BatchBurnReceipt memory"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "round",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 446,
                          "src": "25521:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1301,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1279,
                          "src": "25537:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25521:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578697442617463684275726e3a3a524f554e445f4e4f545f4558454355544544",
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25554:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5015aace095b0d40586939eccbd3699a06eef1ea2c64bf51e4ac51b869676779",
                          "typeString": "literal_string \"exitBatchBurn::ROUND_NOT_EXECUTED\""
                        },
                        "value": "exitBatchBurn::ROUND_NOT_EXECUTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5015aace095b0d40586939eccbd3699a06eef1ea2c64bf51e4ac51b869676779",
                          "typeString": "literal_string \"exitBatchBurn::ROUND_NOT_EXECUTED\""
                        }
                      ],
                      "id": 1298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25513:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25513:77:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "25513:77:27"
                },
                {
                  "expression": {
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1306,
                          "name": "userBatchBurnReceipts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "25601:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                            "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                          }
                        },
                        "id": 1309,
                        "indexExpression": {
                          "expression": {
                            "id": 1307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25623:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25623:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25601:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                          "typeString": "struct Vault.BatchBurnReceipt storage ref"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "round",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 446,
                      "src": "25601:39:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25643:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25601:43:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1313,
                  "nodeType": "ExpressionStatement",
                  "src": "25601:43:27"
                },
                {
                  "expression": {
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1314,
                          "name": "userBatchBurnReceipts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "25654:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BatchBurnReceipt_$449_storage_$",
                            "typeString": "mapping(address => struct Vault.BatchBurnReceipt storage ref)"
                          }
                        },
                        "id": 1317,
                        "indexExpression": {
                          "expression": {
                            "id": 1315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25676:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25676:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25654:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_storage",
                          "typeString": "struct Vault.BatchBurnReceipt storage ref"
                        }
                      },
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 448,
                      "src": "25654:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25697:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25654:44:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1321,
                  "nodeType": "ExpressionStatement",
                  "src": "25654:44:27"
                },
                {
                  "assignments": [
                    1323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "underlyingAmount",
                      "nameLocation": "25717:16:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1354,
                      "src": "25709:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25709:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1334,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1327,
                            "name": "batchBurns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "25756:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
                              "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                            }
                          },
                          "id": 1330,
                          "indexExpression": {
                            "expression": {
                              "id": 1328,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "25767:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_memory_ptr",
                                "typeString": "struct Vault.BatchBurnReceipt memory"
                              }
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "round",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 446,
                            "src": "25767:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25756:25:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchBurn_$444_storage",
                            "typeString": "struct Vault.BatchBurn storage ref"
                          }
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountPerShare",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 443,
                        "src": "25756:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1332,
                        "name": "baseUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "25798:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1324,
                          "name": "receipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "25736:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchBurnReceipt_$449_memory_ptr",
                            "typeString": "struct Vault.BatchBurnReceipt memory"
                          }
                        },
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 448,
                        "src": "25736:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "25736:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25736:71:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25709:98:27"
                },
                {
                  "expression": {
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1335,
                      "name": "batchBurnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "25818:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1336,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "25838:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25818:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "25818:36:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25888:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25888:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1344,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "25900:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1339,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "25864:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4455,
                      "src": "25864:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4424_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4424_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25864:53:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "25864:53:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1348,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "25947:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25964:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25964:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1351,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "25976:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1347,
                      "name": "ExitBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "25933:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25933:60:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "EmitStatement",
                  "src": "25928:65:27"
                }
              ]
            },
            "documentation": {
              "id": 1275,
              "nodeType": "StructuredDocumentation",
              "src": "25202:67:27",
              "text": "@notice Withdraw underlying redeemed in batched burning events."
            },
            "functionSelector": "793101a5",
            "id": 1355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitBatchBurn",
            "nameLocation": "25283:13:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25296:2:27"
            },
            "returnParameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25308:0:27"
            },
            "scope": 2095,
            "src": "25274:726:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1472,
              "nodeType": "Block",
              "src": "26103:1221:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1364,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "26171:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "26171:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 1368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1366,
                                "name": "lastHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 512,
                                "src": "26191:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1367,
                                "name": "harvestDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 484,
                                "src": "26205:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "26191:26:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "id": 1369,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "26190:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "26171:47:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617463684275726e3a3a4c41544553545f484152564553545f4e4f545f45585049524544",
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26220:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99e562a1853179eb8515df7a8962580e8c44530138c056f602fe6ce504b0d51c",
                          "typeString": "literal_string \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\""
                        },
                        "value": "batchBurn::LATEST_HARVEST_NOT_EXPIRED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99e562a1853179eb8515df7a8962580e8c44530138c056f602fe6ce504b0d51c",
                          "typeString": "literal_string \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\""
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26163:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26163:97:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "26163:97:27"
                },
                {
                  "assignments": [
                    1375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1375,
                      "mutability": "mutable",
                      "name": "batchBurnRound_",
                      "nameLocation": "26279:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "26271:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26271:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1378,
                  "initialValue": {
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "26297:16:27",
                    "subExpression": {
                      "id": 1376,
                      "name": "batchBurnRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "26297:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26271:42:27"
                },
                {
                  "assignments": [
                    1381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1381,
                      "mutability": "mutable",
                      "name": "batchBurn",
                      "nameLocation": "26341:9:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "26324:26:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurn_$444_memory_ptr",
                        "typeString": "struct Vault.BatchBurn"
                      },
                      "typeName": {
                        "id": 1380,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1379,
                          "name": "BatchBurn",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 444,
                          "src": "26324:9:27"
                        },
                        "referencedDeclaration": 444,
                        "src": "26324:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$444_storage_ptr",
                          "typeString": "struct Vault.BatchBurn"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1385,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1382,
                      "name": "batchBurns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "26353:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
                        "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                      }
                    },
                    "id": 1384,
                    "indexExpression": {
                      "id": 1383,
                      "name": "batchBurnRound_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "26364:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26353:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchBurn_$444_storage",
                      "typeString": "struct Vault.BatchBurn storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26324:56:27"
                },
                {
                  "assignments": [
                    1387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1387,
                      "mutability": "mutable",
                      "name": "totalShares",
                      "nameLocation": "26398:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "26390:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26390:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1390,
                  "initialValue": {
                    "expression": {
                      "id": 1388,
                      "name": "batchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "26412:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchBurn_$444_memory_ptr",
                        "typeString": "struct Vault.BatchBurn memory"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalShares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 441,
                    "src": "26412:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26390:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1392,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1387,
                          "src": "26498:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26513:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26498:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617463684275726e3a3a544f54414c5f5348415245535f43414e4e4f545f42455f5a45524f",
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26516:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec2b52b05839ebee0ead5c183b31b09e81855d3c9a2a1088b45e2aa1a371ccce",
                          "typeString": "literal_string \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\""
                        },
                        "value": "batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec2b52b05839ebee0ead5c183b31b09e81855d3c9a2a1088b45e2aa1a371ccce",
                          "typeString": "literal_string \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26490:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26490:67:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "26490:67:27"
                },
                {
                  "assignments": [
                    1399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1399,
                      "mutability": "mutable",
                      "name": "underlyingAmount",
                      "nameLocation": "26576:16:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "26568:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1398,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26568:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1406,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1402,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1970,
                          "src": "26612:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26612:14:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1404,
                        "name": "baseUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "26628:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1400,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "26595:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "26595:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26595:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26568:69:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1408,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "26655:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1409,
                            "name": "totalFloat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2002,
                            "src": "26675:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26675:12:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26655:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617463684275726e3a3a4e4f545f454e4f5547485f554e4445524c59494e47",
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26689:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b635840ef103bab3c03f050d857c91d4505952a2e72cc78789e336bb1f7e754",
                          "typeString": "literal_string \"batchBurn::NOT_ENOUGH_UNDERLYING\""
                        },
                        "value": "batchBurn::NOT_ENOUGH_UNDERLYING"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b635840ef103bab3c03f050d857c91d4505952a2e72cc78789e336bb1f7e754",
                          "typeString": "literal_string \"batchBurn::NOT_ENOUGH_UNDERLYING\""
                        }
                      ],
                      "id": 1407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26647:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26647:77:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "26647:77:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1418,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "26749:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$2095",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$2095",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26741:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26741:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26741:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1420,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "26756:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1415,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4274,
                      "src": "26735:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26735:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "26735:33:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1423,
                      "name": "burningFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "26845:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26866:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26845:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1448,
                  "nodeType": "IfStatement",
                  "src": "26841:239:27",
                  "trueBody": {
                    "id": 1447,
                    "nodeType": "Block",
                    "src": "26869:211:27",
                    "statements": [
                      {
                        "assignments": [
                          1427
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1427,
                            "mutability": "mutable",
                            "name": "accruedFees",
                            "nameLocation": "26891:11:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 1447,
                            "src": "26883:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1426,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26883:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1435,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1430,
                              "name": "burningFeePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "26927:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26946:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26950:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "26946:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 1428,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "26905:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fmul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2847,
                            "src": "26905:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26905:48:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26883:70:27"
                      },
                      {
                        "expression": {
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1436,
                            "name": "underlyingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "26967:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1437,
                            "name": "accruedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "26987:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26967:31:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1439,
                        "nodeType": "ExpressionStatement",
                        "src": "26967:31:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1443,
                              "name": "burningFeeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "27037:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1444,
                              "name": "accruedFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "27057:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1440,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "27013:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                                "typeString": "contract ERC20Upgradeable"
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4455,
                            "src": "27013:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4424_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4424_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27013:56:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1446,
                        "nodeType": "ExpressionStatement",
                        "src": "27013:56:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1449,
                          "name": "batchBurns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "27090:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BatchBurn_$444_storage_$",
                            "typeString": "mapping(uint256 => struct Vault.BatchBurn storage ref)"
                          }
                        },
                        "id": 1451,
                        "indexExpression": {
                          "id": 1450,
                          "name": "batchBurnRound_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "27101:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27090:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchBurn_$444_storage",
                          "typeString": "struct Vault.BatchBurn storage ref"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 443,
                      "src": "27090:42:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1455,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1387,
                          "src": "27157:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1456,
                          "name": "baseUnit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "27170:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1453,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "27135:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fdiv",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2860,
                        "src": "27135:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27135:44:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27090:89:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "27090:89:27"
                },
                {
                  "expression": {
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1460,
                      "name": "batchBurnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "27189:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1461,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "27209:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27189:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "27189:36:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1465,
                        "name": "batchBurnRound_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "27258:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "27275:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27275:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1468,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "27287:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1469,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "27300:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1464,
                      "name": "ExecuteBatchBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "27241:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27241:76:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1471,
                  "nodeType": "EmitStatement",
                  "src": "27236:81:27"
                }
              ]
            },
            "documentation": {
              "id": 1356,
              "nodeType": "StructuredDocumentation",
              "src": "26006:33:27",
              "text": "@notice Execute batched burns"
            },
            "functionSelector": "1bba16db",
            "id": 1473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1359,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "26091:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "26091:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1358,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "26078:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "26078:24:27"
              }
            ],
            "name": "execBatchBurn",
            "nameLocation": "26053:13:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26066:2:27"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26103:0:27"
            },
            "scope": 2095,
            "src": "26044:1280:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1540,
              "nodeType": "Block",
              "src": "27738:725:27",
              "statements": [
                {
                  "assignments": [
                    1486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "userUnderlying",
                      "nameLocation": "27756:14:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1540,
                      "src": "27748:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27748:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1494,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1489,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1476,
                              "src": "27803:2:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1488,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3895,
                            "src": "27793:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27793:13:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1487,
                        "name": "calculateUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "27773:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27773:34:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1492,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "27810:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27773:53:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27748:78:27"
                },
                {
                  "assignments": [
                    1496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1496,
                      "mutability": "mutable",
                      "name": "vaultUnderlying",
                      "nameLocation": "27844:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1540,
                      "src": "27836:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27836:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1497,
                        "name": "totalUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "27862:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27862:17:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1499,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "27882:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27862:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27836:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1503,
                          "name": "userUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1486,
                          "src": "27917:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1504,
                          "name": "userDepositLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "27935:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "27917:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6465706f7369743a3a555345525f4445504f5349545f4c494d4954535f52454143484544",
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27953:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1efd94fdae1311a02dfe8b212b00e1acd08f52ca609df914417f1044ddfcc27",
                          "typeString": "literal_string \"_deposit::USER_DEPOSIT_LIMITS_REACHED\""
                        },
                        "value": "_deposit::USER_DEPOSIT_LIMITS_REACHED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1efd94fdae1311a02dfe8b212b00e1acd08f52ca609df914417f1044ddfcc27",
                          "typeString": "literal_string \"_deposit::USER_DEPOSIT_LIMITS_REACHED\""
                        }
                      ],
                      "id": 1502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27909:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27909:84:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "27909:84:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1510,
                          "name": "vaultUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "28011:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1511,
                          "name": "vaultDepositLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "28030:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28011:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6465706f7369743a3a5641554c545f4445504f5349545f4c494d4954535f52454143484544",
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28049:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2490e6a948d0506210a014f004973ece76fecfa5f0eb5e2161b67889736307d9",
                          "typeString": "literal_string \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\""
                        },
                        "value": "_deposit::VAULT_DEPOSIT_LIMITS_REACHED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2490e6a948d0506210a014f004973ece76fecfa5f0eb5e2161b67889736307d9",
                          "typeString": "literal_string \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\""
                        }
                      ],
                      "id": 1509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28003:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28003:87:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "28003:87:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1517,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1476,
                        "src": "28173:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1518,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "28177:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1516,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4202,
                      "src": "28167:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28167:17:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "28167:17:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28208:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "28208:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1524,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1476,
                        "src": "28220:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1525,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "28224:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1521,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "28200:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28200:41:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1527,
                  "nodeType": "EmitStatement",
                  "src": "28195:46:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28412:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "28412:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1535,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "28432:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$2095",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$2095",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28424:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1533,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28424:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28424:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1537,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "28439:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1528,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "28384:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "28384:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4424_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4424_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28384:72:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "28384:72:27"
                }
              ]
            },
            "documentation": {
              "id": 1474,
              "nodeType": "StructuredDocumentation",
              "src": "27330:270:27",
              "text": "@dev Internal function to deposit into the Vault.\n @param to The address to receive shares corresponding to the deposit.\n @param shares The amount of Vault's shares to mint.\n @param underlyingAmount The amount of the underlying token to deposit."
            },
            "id": 1541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1482,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5115,
                  "src": "27724:13:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "27724:13:27"
              }
            ],
            "name": "_deposit",
            "nameLocation": "27614:8:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "27640:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "27632:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27632:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "27660:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "27652:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27652:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "27684:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "27676:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27676:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27622:84:27"
            },
            "returnParameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27738:0:27"
            },
            "scope": 2095,
            "src": "27605:858:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1556,
              "nodeType": "Block",
              "src": "28773:71:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1551,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1970,
                          "src": "28812:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28812:14:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1553,
                        "name": "baseUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "28828:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1549,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "28790:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "28790:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28790:47:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1548,
                  "id": 1555,
                  "nodeType": "Return",
                  "src": "28783:54:27"
                }
              ]
            },
            "documentation": {
              "id": 1542,
              "nodeType": "StructuredDocumentation",
              "src": "28469:218:27",
              "text": "@notice Calculates the amount of Vault's shares for a given amount of underlying tokens.\n @param underlyingAmount The underlying token's amount.\n @return The amount of shares given `underlyingAmount`."
            },
            "functionSelector": "3ec16194",
            "id": 1557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateShares",
            "nameLocation": "28701:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "28725:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "28717:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28717:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28716:26:27"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "28764:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28764:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28763:9:27"
            },
            "scope": 2095,
            "src": "28692:152:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "29151:67:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1567,
                          "name": "exchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1970,
                          "src": "29186:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29186:14:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1569,
                        "name": "baseUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "29202:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1565,
                        "name": "sharesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
                        "src": "29168:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "29168:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29168:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1564,
                  "id": 1571,
                  "nodeType": "Return",
                  "src": "29161:50:27"
                }
              ]
            },
            "documentation": {
              "id": 1558,
              "nodeType": "StructuredDocumentation",
              "src": "28850:215:27",
              "text": "@notice Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.\n @param sharesAmount The shares amount.\n @return The amount of underlying given `sharesAmount`."
            },
            "functionSelector": "11e57a3e",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateUnderlying",
            "nameLocation": "29079:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "sharesAmount",
                  "nameLocation": "29107:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "29099:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29099:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29098:22:27"
            },
            "returnParameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "29142:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29142:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29141:9:27"
            },
            "scope": 2095,
            "src": "29070:148:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "29731:4315:27",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1585,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "29808:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "29808:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 1589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1587,
                        "name": "lastHarvest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "29827:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1588,
                        "name": "harvestDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "29841:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "29827:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "29808:45:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1627,
                    "nodeType": "Block",
                    "src": "30368:224:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1618,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "30494:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "30494:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1620,
                                  "name": "lastHarvestWindowStart",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 509,
                                  "src": "30513:22:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1621,
                                  "name": "harvestWindow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 481,
                                  "src": "30538:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "30513:38:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "30494:57:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "686172766573743a3a4241445f484152564553545f54494d45",
                              "id": 1624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30553:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a10ee49ab7c59665dc0cf51098b8a1fbe9b7b58179c151cb9c7d7067925004b2",
                                "typeString": "literal_string \"harvest::BAD_HARVEST_TIME\""
                              },
                              "value": "harvest::BAD_HARVEST_TIME"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a10ee49ab7c59665dc0cf51098b8a1fbe9b7b58179c151cb9c7d7067925004b2",
                                "typeString": "literal_string \"harvest::BAD_HARVEST_TIME\""
                              }
                            ],
                            "id": 1617,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "30486:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30486:95:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1626,
                        "nodeType": "ExpressionStatement",
                        "src": "30486:95:27"
                      }
                    ]
                  },
                  "id": 1628,
                  "nodeType": "IfStatement",
                  "src": "29804:788:27",
                  "trueBody": {
                    "id": 1616,
                    "nodeType": "Block",
                    "src": "29855:507:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1591,
                            "name": "lastHarvestExchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "30049:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1592,
                              "name": "exchangeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1970,
                              "src": "30075:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30075:14:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30049:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1595,
                        "nodeType": "ExpressionStatement",
                        "src": "30049:40:27"
                      },
                      {
                        "expression": {
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1596,
                            "name": "lastHarvestIntervalInBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 503,
                            "src": "30103:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1597,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "30133:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "30133:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1599,
                              "name": "lastHarvestWindowStartBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "30148:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30133:42:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30103:72:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1602,
                        "nodeType": "ExpressionStatement",
                        "src": "30103:72:27"
                      },
                      {
                        "expression": {
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1603,
                            "name": "lastHarvestWindowStartBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "30189:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1604,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "30219:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "30219:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30189:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "30189:42:27"
                      },
                      {
                        "expression": {
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1608,
                            "name": "lastHarvestWindowStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "30303:22:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1611,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "30335:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "30335:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "30328:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 1609,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "30328:6:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30328:23:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "30303:48:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1615,
                        "nodeType": "ExpressionStatement",
                        "src": "30303:48:27"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1630,
                      "mutability": "mutable",
                      "name": "oldTotalStrategyHoldings",
                      "nameLocation": "30670:24:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "30662:32:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1629,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30662:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1632,
                  "initialValue": {
                    "id": 1631,
                    "name": "totalStrategyHoldings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 490,
                    "src": "30697:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30662:56:27"
                },
                {
                  "assignments": [
                    1634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1634,
                      "mutability": "mutable",
                      "name": "totalProfitAccrued",
                      "nameLocation": "30806:18:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "30798:26:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30798:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1635,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30798:26:27"
                },
                {
                  "assignments": [
                    1637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1637,
                      "mutability": "mutable",
                      "name": "newTotalStrategyHoldings",
                      "nameLocation": "30918:24:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "30910:32:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30910:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1639,
                  "initialValue": {
                    "id": 1638,
                    "name": "oldTotalStrategyHoldings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1630,
                    "src": "30945:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30910:59:27"
                },
                {
                  "body": {
                    "id": 1707,
                    "nodeType": "Block",
                    "src": "31101:1385:27",
                    "statements": [
                      {
                        "assignments": [
                          1653
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1653,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "31179:8:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 1707,
                            "src": "31169:18:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5219",
                              "typeString": "contract IStrategy"
                            },
                            "typeName": {
                              "id": 1652,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1651,
                                "name": "IStrategy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5219,
                                "src": "31169:9:27"
                              },
                              "referencedDeclaration": 5219,
                              "src": "31169:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1657,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1654,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "31190:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 1656,
                          "indexExpression": {
                            "id": 1655,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "31201:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31190:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5219",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31169:34:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1659,
                                  "name": "getStrategyData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "31403:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                                    "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                  }
                                },
                                "id": 1661,
                                "indexExpression": {
                                  "id": 1660,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1653,
                                  "src": "31419:8:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31403:25:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                                  "typeString": "struct Vault.StrategyData storage ref"
                                }
                              },
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trusted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 436,
                              "src": "31403:33:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "686172766573743a3a554e545255535445445f5354524154454759",
                              "id": 1663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31438:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bc94c72bebfa2963ceec631c724b71be2c3ab1c319a0c9a41cd8cd7e021db37",
                                "typeString": "literal_string \"harvest::UNTRUSTED_STRATEGY\""
                              },
                              "value": "harvest::UNTRUSTED_STRATEGY"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bc94c72bebfa2963ceec631c724b71be2c3ab1c319a0c9a41cd8cd7e021db37",
                                "typeString": "literal_string \"harvest::UNTRUSTED_STRATEGY\""
                              }
                            ],
                            "id": 1658,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "31395:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31395:73:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1665,
                        "nodeType": "ExpressionStatement",
                        "src": "31395:73:27"
                      },
                      {
                        "assignments": [
                          1667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1667,
                            "mutability": "mutable",
                            "name": "balanceLastHarvest",
                            "nameLocation": "31555:18:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 1707,
                            "src": "31547:26:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1666,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "31547:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1672,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1668,
                              "name": "getStrategyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "31576:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                                "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                              }
                            },
                            "id": 1670,
                            "indexExpression": {
                              "id": 1669,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "31592:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "31576:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                              "typeString": "struct Vault.StrategyData storage ref"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 438,
                          "src": "31576:33:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31547:62:27"
                      },
                      {
                        "assignments": [
                          1674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1674,
                            "mutability": "mutable",
                            "name": "balanceThisHarvest",
                            "nameLocation": "31631:18:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 1707,
                            "src": "31623:26:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "31623:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1678,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1675,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "31652:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "estimatedUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5218,
                            "src": "31652:28:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31652:30:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31623:59:27"
                      },
                      {
                        "expression": {
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1679,
                                "name": "getStrategyData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 497,
                                "src": "31750:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                                  "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                                }
                              },
                              "id": 1681,
                              "indexExpression": {
                                "id": 1680,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1653,
                                "src": "31766:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$5219",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31750:25:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                                "typeString": "struct Vault.StrategyData storage ref"
                              }
                            },
                            "id": 1682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 438,
                            "src": "31750:33:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1683,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "31786:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeCastTo248",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2911,
                              "src": "31786:32:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint248)"
                              }
                            },
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31786:34:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "src": "31750:70:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          }
                        },
                        "id": 1687,
                        "nodeType": "ExpressionStatement",
                        "src": "31750:70:27"
                      },
                      {
                        "expression": {
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1688,
                            "name": "newTotalStrategyHoldings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "32041:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1689,
                                "name": "newTotalStrategyHoldings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1637,
                                "src": "32068:24:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1690,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "32095:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32068:45:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1692,
                              "name": "balanceLastHarvest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "32116:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "32068:66:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32041:93:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1695,
                        "nodeType": "ExpressionStatement",
                        "src": "32041:93:27"
                      },
                      {
                        "expression": {
                          "id": 1705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1696,
                            "name": "totalProfitAccrued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1634,
                            "src": "32234:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1697,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "32256:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1698,
                                "name": "balanceLastHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1667,
                                "src": "32277:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32256:39:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "hexValue": "30",
                              "id": 1703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32403:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "id": 1704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "32256:148:27",
                            "trueExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1700,
                                "name": "balanceThisHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "32314:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1701,
                                "name": "balanceLastHarvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1667,
                                "src": "32335:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32314:39:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32234:170:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1706,
                        "nodeType": "ExpressionStatement",
                        "src": "32234:170:27"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1644,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1641,
                      "src": "31073:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1645,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "31077:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "31077:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31073:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1708,
                  "initializationExpression": {
                    "assignments": [
                      1641
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1641,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "31066:1:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 1708,
                        "src": "31058:9:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31058:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1643,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31070:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "31058:13:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "31096:3:27",
                      "subExpression": {
                        "id": 1648,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "31096:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1650,
                    "nodeType": "ExpressionStatement",
                    "src": "31096:3:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "31053:1433:27"
                },
                {
                  "assignments": [
                    1710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1710,
                      "mutability": "mutable",
                      "name": "feesAccrued",
                      "nameLocation": "32573:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "32565:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "32565:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1716,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1713,
                        "name": "harvestFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "32611:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32630:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1711,
                        "name": "totalProfitAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "32587:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fmul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "32587:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32587:48:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32565:70:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1717,
                        "name": "feesAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "32730:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32745:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "32730:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1720,
                        "name": "harvestFeeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "32750:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32780:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32772:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32772:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32772:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "32750:32:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "32730:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1738,
                  "nodeType": "IfStatement",
                  "src": "32726:152:27",
                  "trueBody": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "32784:94:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1728,
                              "name": "harvestFeeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "32804:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1731,
                                    "name": "exchangeRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1970,
                                    "src": "32841:12:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "32841:14:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1733,
                                  "name": "baseUnit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "32857:8:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1729,
                                  "name": "feesAccrued",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1710,
                                  "src": "32824:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fdiv",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2860,
                                "src": "32824:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32824:42:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1727,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4202,
                            "src": "32798:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32798:69:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "32798:69:27"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1740,
                      "mutability": "mutable",
                      "name": "maxLockedProfit_",
                      "nameLocation": "32988:16:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "32980:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1739,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "32980:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1750,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1741,
                                  "name": "lockedProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2043,
                                  "src": "33008:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33008:14:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1743,
                                "name": "totalProfitAccrued",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1634,
                                "src": "33025:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "33008:35:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1745,
                              "name": "feesAccrued",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1710,
                              "src": "33046:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "33008:49:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1747,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "33007:51:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeCastTo128",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2936,
                      "src": "33007:65:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint128)"
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33007:67:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32980:94:27"
                },
                {
                  "expression": {
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1751,
                      "name": "maxLockedProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "33084:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1752,
                      "name": "maxLockedProfit_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "33102:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "33084:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "33084:34:27"
                },
                {
                  "assignments": [
                    1756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "mutability": "mutable",
                      "name": "strategyHoldings",
                      "nameLocation": "33174:16:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "33166:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33166:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1763,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1757,
                      "name": "newTotalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "33193:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1760,
                          "name": "maxLockedProfit_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1740,
                          "src": "33228:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "33220:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33220:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33220:25:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33193:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33166:79:27"
                },
                {
                  "expression": {
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1764,
                      "name": "estimatedReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "33255:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1766,
                          "name": "strategyHoldings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1756,
                          "src": "33297:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1769,
                              "name": "maxLockedProfit_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "33323:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "33315:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1767,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "33315:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33315:25:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1771,
                          "name": "lastHarvestIntervalInBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "33342:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1765,
                        "name": "computeEstimatedReturns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "33273:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33273:97:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33255:115:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "33255:115:27"
                },
                {
                  "expression": {
                    "id": 1777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1775,
                      "name": "totalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "33432:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1776,
                      "name": "newTotalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "33456:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33432:48:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1778,
                  "nodeType": "ExpressionStatement",
                  "src": "33432:48:27"
                },
                {
                  "expression": {
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1779,
                      "name": "lastHarvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "33537:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1782,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "33558:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "33558:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "33551:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "33551:6:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33551:23:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "33537:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1786,
                  "nodeType": "ExpressionStatement",
                  "src": "33537:37:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1788,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33598:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33598:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1790,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "33610:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      ],
                      "id": 1787,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "33590:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_contract$_IStrategy_$5219_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IStrategy[] memory)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33590:31:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1792,
                  "nodeType": "EmitStatement",
                  "src": "33585:36:27"
                },
                {
                  "assignments": [
                    1794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1794,
                      "mutability": "mutable",
                      "name": "newHarvestDelay",
                      "nameLocation": "33678:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "33671:22:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1793,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "33671:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1796,
                  "initialValue": {
                    "id": 1795,
                    "name": "nextHarvestDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 487,
                    "src": "33696:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33671:41:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1797,
                      "name": "newHarvestDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1794,
                      "src": "33774:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33793:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "33774:20:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1815,
                  "nodeType": "IfStatement",
                  "src": "33770:270:27",
                  "trueBody": {
                    "id": 1814,
                    "nodeType": "Block",
                    "src": "33796:244:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 1802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1800,
                            "name": "harvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "33851:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1801,
                            "name": "newHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "33866:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "33851:30:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1803,
                        "nodeType": "ExpressionStatement",
                        "src": "33851:30:27"
                      },
                      {
                        "expression": {
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1804,
                            "name": "nextHarvestDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "33941:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33960:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "33941:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1807,
                        "nodeType": "ExpressionStatement",
                        "src": "33941:20:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1809,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "34001:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "34001:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1811,
                              "name": "newHarvestDelay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1794,
                              "src": "34013:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1808,
                            "name": "HarvestDelayUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "33981:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64)"
                            }
                          },
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33981:48:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1813,
                        "nodeType": "EmitStatement",
                        "src": "33976:53:27"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1574,
              "nodeType": "StructuredDocumentation",
              "src": "29407:235:27",
              "text": "@notice Harvest a set of trusted strategies.\n @param strategies The trusted strategies to harvest.\n @dev Will always revert if called outside of an active\n harvest window or before the harvest delay has passed."
            },
            "functionSelector": "c89d3460",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1581,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "29719:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "29719:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1580,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "29706:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "29706:24:27"
              }
            ],
            "name": "harvest",
            "nameLocation": "29656:7:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "29685:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "29664:31:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1576,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1575,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5219,
                        "src": "29664:9:27"
                      },
                      "referencedDeclaration": 5219,
                      "src": "29664:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$5219",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 1577,
                    "nodeType": "ArrayTypeName",
                    "src": "29664:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$5219_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29663:33:27"
            },
            "returnParameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29731:0:27"
            },
            "scope": 2095,
            "src": "29647:4399:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1885,
              "nodeType": "Block",
              "src": "34578:998:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1831,
                            "name": "getStrategyData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "34667:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                            }
                          },
                          "id": 1833,
                          "indexExpression": {
                            "id": 1832,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "34683:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5219",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "34667:25:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                            "typeString": "struct Vault.StrategyData storage ref"
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trusted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 436,
                        "src": "34667:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a554e545255535445445f5354524154454759",
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34702:41:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10707b7ca6ef0fcda0fa97730ce0067d55b38843891da1a21f40a20c180ecda8",
                          "typeString": "literal_string \"depositIntoStrategy::UNTRUSTED_STRATEGY\""
                        },
                        "value": "depositIntoStrategy::UNTRUSTED_STRATEGY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10707b7ca6ef0fcda0fa97730ce0067d55b38843891da1a21f40a20c180ecda8",
                          "typeString": "literal_string \"depositIntoStrategy::UNTRUSTED_STRATEGY\""
                        }
                      ],
                      "id": 1830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34659:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34659:85:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "34659:85:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1839,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1823,
                          "src": "34839:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "34859:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "34839:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a414d4f554e545f43414e4e4f545f42455f5a45524f",
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34862:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ddb9d91c1dc24b2ef2232d655a0215c77f6df7f5c6bf8444aea53eb27a6ba5f",
                          "typeString": "literal_string \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        },
                        "value": "depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ddb9d91c1dc24b2ef2232d655a0215c77f6df7f5c6bf8444aea53eb27a6ba5f",
                          "typeString": "literal_string \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34831:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34831:76:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1844,
                  "nodeType": "ExpressionStatement",
                  "src": "34831:76:27"
                },
                {
                  "expression": {
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1845,
                      "name": "totalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "34988:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1846,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "35013:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34988:41:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1848,
                  "nodeType": "ExpressionStatement",
                  "src": "34988:41:27"
                },
                {
                  "expression": {
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1849,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "35116:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1851,
                        "indexExpression": {
                          "id": 1850,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1821,
                          "src": "35132:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5219",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35116:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "35116:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1853,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1823,
                          "src": "35153:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeCastTo248",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2911,
                        "src": "35153:30:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint248)"
                        }
                      },
                      "id": 1855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "35153:32:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "src": "35116:69:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint248",
                      "typeString": "uint248"
                    }
                  },
                  "id": 1857,
                  "nodeType": "ExpressionStatement",
                  "src": "35116:69:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "35217:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "35217:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1861,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1821,
                        "src": "35229:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 1862,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1823,
                        "src": "35239:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1858,
                      "name": "StrategyDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "35201:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IStrategy_$5219_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35201:55:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1864,
                  "nodeType": "EmitStatement",
                  "src": "35196:60:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1870,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "35369:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5219",
                              "typeString": "contract IStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$5219",
                              "typeString": "contract IStrategy"
                            }
                          ],
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "35361:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "35361:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35361:17:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1872,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1823,
                        "src": "35380:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1865,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "35338:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                          "typeString": "contract ERC20Upgradeable"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4525,
                      "src": "35338:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$4424_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$4424_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 1873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35338:59:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1874,
                  "nodeType": "ExpressionStatement",
                  "src": "35338:59:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1878,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1823,
                              "src": "35510:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1876,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1821,
                              "src": "35493:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5191,
                            "src": "35493:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) external returns (uint8)"
                            }
                          },
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35493:34:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "35531:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "35493:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e746f53747261746567793a3a4d494e545f4641494c4544",
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35534:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c93fba7435e595b271102463649323b5de5da201c3c737ac8d36b4e77941ef64",
                          "typeString": "literal_string \"depositIntoStrategy::MINT_FAILED\""
                        },
                        "value": "depositIntoStrategy::MINT_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c93fba7435e595b271102463649323b5de5da201c3c737ac8d36b4e77941ef64",
                          "typeString": "literal_string \"depositIntoStrategy::MINT_FAILED\""
                        }
                      ],
                      "id": 1875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35485:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35485:84:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1884,
                  "nodeType": "ExpressionStatement",
                  "src": "35485:84:27"
                }
              ]
            },
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "34246:218:27",
              "text": "@notice Deposit a specific amount of float into a trusted strategy.\n @param strategy The trusted strategy to deposit into.\n @param underlyingAmount The amount of underlying tokens in float to deposit."
            },
            "functionSelector": "bdf06c8e",
            "id": 1886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1826,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "34566:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "34566:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1828,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1825,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "34553:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "34553:24:27"
              }
            ],
            "name": "depositIntoStrategy",
            "nameLocation": "34478:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "34508:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "34498:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1819,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "34498:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "34498:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "34526:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "34518:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34518:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34497:46:27"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34578:0:27"
            },
            "scope": 2095,
            "src": "34469:1107:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1944,
              "nodeType": "Block",
              "src": "35993:871:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1900,
                            "name": "getStrategyData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "36082:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                              "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                            }
                          },
                          "id": 1902,
                          "indexExpression": {
                            "id": 1901,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "36098:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$5219",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36082:25:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                            "typeString": "struct Vault.StrategyData storage ref"
                          }
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trusted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 436,
                        "src": "36082:33:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a554e545255535445445f5354524154454759",
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36117:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bb8716d22dafd1322765ae85de8d180f22ffc7212243d60c3d6753b80abf719",
                          "typeString": "literal_string \"withdrawFromStrategy::UNTRUSTED_STRATEGY\""
                        },
                        "value": "withdrawFromStrategy::UNTRUSTED_STRATEGY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bb8716d22dafd1322765ae85de8d180f22ffc7212243d60c3d6753b80abf719",
                          "typeString": "literal_string \"withdrawFromStrategy::UNTRUSTED_STRATEGY\""
                        }
                      ],
                      "id": 1899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36074:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36074:86:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "36074:86:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1908,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "36256:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36276:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "36256:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a414d4f554e545f43414e4e4f545f42455f5a45524f",
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36279:45:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17cc4a43aa6038c90d49d337e8dd274ea1eab9862fcecca40ab6e99ac17de81a",
                          "typeString": "literal_string \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        },
                        "value": "withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17cc4a43aa6038c90d49d337e8dd274ea1eab9862fcecca40ab6e99ac17de81a",
                          "typeString": "literal_string \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\""
                        }
                      ],
                      "id": 1907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36248:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36248:77:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1913,
                  "nodeType": "ExpressionStatement",
                  "src": "36248:77:27"
                },
                {
                  "expression": {
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1914,
                          "name": "getStrategyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "36415:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$5219_$_t_struct$_StrategyData_$439_storage_$",
                            "typeString": "mapping(contract IStrategy => struct Vault.StrategyData storage ref)"
                          }
                        },
                        "id": 1916,
                        "indexExpression": {
                          "id": 1915,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1890,
                          "src": "36431:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$5219",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36415:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyData_$439_storage",
                          "typeString": "struct Vault.StrategyData storage ref"
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "36415:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1918,
                          "name": "underlyingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "36452:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeCastTo248",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2911,
                        "src": "36452:30:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint248_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint248)"
                        }
                      },
                      "id": 1920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "36452:32:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint248",
                        "typeString": "uint248"
                      }
                    },
                    "src": "36415:69:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint248",
                      "typeString": "uint248"
                    }
                  },
                  "id": 1922,
                  "nodeType": "ExpressionStatement",
                  "src": "36415:69:27"
                },
                {
                  "expression": {
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1923,
                      "name": "totalStrategyHoldings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "36568:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1924,
                      "name": "underlyingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1892,
                      "src": "36593:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "36568:41:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "36568:41:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1928,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "36644:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "36644:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1930,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "36656:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 1931,
                        "name": "underlyingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "36666:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$5219",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1927,
                      "name": "StrategyWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "36625:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IStrategy_$5219_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36625:58:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1933,
                  "nodeType": "EmitStatement",
                  "src": "36620:63:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1937,
                              "name": "underlyingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1892,
                              "src": "36795:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1935,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "36777:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$5219",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5199,
                            "src": "36777:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) external returns (uint8)"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36777:35:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36816:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "36777:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746726f6d53747261746567793a3a52454445454d5f4641494c4544",
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36819:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b1f2d572d5f95c7873d238b9236411ad3adc09007549a73732951dd7c9ecb",
                          "typeString": "literal_string \"withdrawFromStrategy::REDEEM_FAILED\""
                        },
                        "value": "withdrawFromStrategy::REDEEM_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b1f2d572d5f95c7873d238b9236411ad3adc09007549a73732951dd7c9ecb",
                          "typeString": "literal_string \"withdrawFromStrategy::REDEEM_FAILED\""
                        }
                      ],
                      "id": 1934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36769:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36769:88:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "36769:88:27"
                }
              ]
            },
            "documentation": {
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "35582:296:27",
              "text": "@notice Withdraw a specific amount of underlying tokens from a strategy.\n @param strategy The strategy to withdraw from.\n @param underlyingAmount  The amount of underlying tokens to withdraw.\n @dev Withdrawing from a strategy will not remove it from the withdrawal queue."
            },
            "functionSelector": "b53d0958",
            "id": 1945,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1895,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "35981:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "35981:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1897,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1894,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "35968:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "35968:24:27"
              }
            ],
            "name": "withdrawFromStrategy",
            "nameLocation": "35892:20:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "35923:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "35913:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$5219",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 1889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1888,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5219,
                      "src": "35913:9:27"
                    },
                    "referencedDeclaration": 5219,
                    "src": "35913:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$5219",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "underlyingAmount",
                  "nameLocation": "35941:16:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "35933:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35933:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35912:46:27"
            },
            "returnParameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35993:0:27"
            },
            "scope": 2095,
            "src": "35883:981:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1969,
              "nodeType": "Block",
              "src": "37269:288:27",
              "statements": [
                {
                  "assignments": [
                    1952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1952,
                      "mutability": "mutable",
                      "name": "shareSupply",
                      "nameLocation": "37330:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 1969,
                      "src": "37322:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "37322:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1955,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1953,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3881,
                      "src": "37344:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37344:13:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37322:35:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1956,
                      "name": "shareSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "37454:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "37469:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "37454:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1961,
                  "nodeType": "IfStatement",
                  "src": "37450:37:27",
                  "trueBody": {
                    "expression": {
                      "id": 1959,
                      "name": "baseUnit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "37479:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1950,
                    "id": 1960,
                    "nodeType": "Return",
                    "src": "37472:15:27"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1965,
                        "name": "shareSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "37528:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1966,
                        "name": "baseUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "37541:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1962,
                          "name": "totalUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "37505:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37505:17:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "37505:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37505:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1950,
                  "id": 1968,
                  "nodeType": "Return",
                  "src": "37498:52:27"
                }
              ]
            },
            "documentation": {
              "id": 1946,
              "nodeType": "StructuredDocumentation",
              "src": "37053:157:27",
              "text": "@notice Returns the amount of underlying tokens a share can be redeemed for.\n @return The amount of underlying tokens a share can be redeemed for."
            },
            "functionSelector": "3ba0b9a9",
            "id": 1970,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeRate",
            "nameLocation": "37224:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37236:2:27"
            },
            "returnParameters": {
              "id": 1950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1970,
                  "src": "37260:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37260:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37259:9:27"
            },
            "scope": 2095,
            "src": "37215:342:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "37833:60:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1980,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1973,
                            "src": "37880:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1979,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "37870:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37870:15:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1978,
                      "name": "calculateUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1573,
                      "src": "37850:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37850:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1977,
                  "id": 1983,
                  "nodeType": "Return",
                  "src": "37843:43:27"
                }
              ]
            },
            "documentation": {
              "id": 1971,
              "nodeType": "StructuredDocumentation",
              "src": "37563:190:27",
              "text": "@notice Returns a user's Vault balance in underlying tokens.\n @param user THe user to get the underlying balance of.\n @return The user's Vault balance in underlying tokens."
            },
            "functionSelector": "3af9e669",
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfUnderlying",
            "nameLocation": "37767:19:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "37795:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "37787:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37787:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37786:14:27"
            },
            "returnParameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "37824:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37824:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37823:9:27"
            },
            "scope": 2095,
            "src": "37758:135:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "38111:78:27",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1995,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "38157:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$2095",
                                "typeString": "contract Vault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Vault_$2095",
                                "typeString": "contract Vault"
                              }
                            ],
                            "id": 1994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "38149:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "38149:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38149:13:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1991,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "38128:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Upgradeable_$4346",
                            "typeString": "contract ERC20Upgradeable"
                          }
                        },
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3895,
                        "src": "38128:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "38128:35:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1998,
                      "name": "batchBurnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "38166:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "38128:54:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1990,
                  "id": 2000,
                  "nodeType": "Return",
                  "src": "38121:61:27"
                }
              ]
            },
            "documentation": {
              "id": 1986,
              "nodeType": "StructuredDocumentation",
              "src": "37899:155:27",
              "text": "@notice Returns the amount of underlying tokens that idly sit in the Vault.\n @return The amount of underlying tokens that sit idly in the Vault."
            },
            "functionSelector": "841219e5",
            "id": 2002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFloat",
            "nameLocation": "38068:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38078:2:27"
            },
            "returnParameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "38102:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38102:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38101:9:27"
            },
            "scope": 2095,
            "src": "38059:130:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "38365:620:27",
              "statements": [
                {
                  "assignments": [
                    2009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2009,
                      "mutability": "mutable",
                      "name": "previousHarvest",
                      "nameLocation": "38434:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 2042,
                      "src": "38426:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2008,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38426:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2011,
                  "initialValue": {
                    "id": 2010,
                    "name": "lastHarvest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 512,
                    "src": "38452:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38426:37:27"
                },
                {
                  "assignments": [
                    2013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2013,
                      "mutability": "mutable",
                      "name": "harvestInterval",
                      "nameLocation": "38481:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 2042,
                      "src": "38473:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38473:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2015,
                  "initialValue": {
                    "id": 2014,
                    "name": "harvestDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 484,
                    "src": "38499:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38473:38:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2016,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "38597:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "38597:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2018,
                        "name": "previousHarvest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "38616:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2019,
                        "name": "harvestInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "38634:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "38616:33:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "38597:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2024,
                  "nodeType": "IfStatement",
                  "src": "38593:66:27",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "38658:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 2007,
                    "id": 2023,
                    "nodeType": "Return",
                    "src": "38651:8:27"
                  }
                },
                {
                  "assignments": [
                    2026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "mutability": "mutable",
                      "name": "maximumLockedProfit",
                      "nameLocation": "38729:19:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 2042,
                      "src": "38721:27:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2025,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38721:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2028,
                  "initialValue": {
                    "id": 2027,
                    "name": "maxLockedProfit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 515,
                    "src": "38751:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38721:45:27"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2029,
                      "name": "maximumLockedProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "38879:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2030,
                              "name": "maximumLockedProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "38902:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2031,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "38925:5:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "38925:15:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2033,
                                    "name": "previousHarvest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "38943:15:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "38925:33:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2035,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "38924:35:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "38902:57:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2037,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "38901:59:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 2038,
                        "name": "harvestInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "38963:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "38901:77:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "38879:99:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2007,
                  "id": 2041,
                  "nodeType": "Return",
                  "src": "38872:106:27"
                }
              ]
            },
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "38195:111:27",
              "text": "@notice Calculate the current amount of locked profit.\n @return The current amount of locked profit."
            },
            "functionSelector": "44b81396",
            "id": 2043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockedProfit",
            "nameLocation": "38320:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38332:2:27"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "38356:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38356:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38355:9:27"
            },
            "scope": 2095,
            "src": "38311:674:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2057,
              "nodeType": "Block",
              "src": "39229:77:27",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2049,
                        "name": "totalStrategyHoldings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "39246:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2050,
                          "name": "lockedProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "39270:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39270:14:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "39246:38:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2053,
                        "name": "totalFloat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "39287:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39287:12:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "39246:53:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2048,
                  "id": 2056,
                  "nodeType": "Return",
                  "src": "39239:60:27"
                }
              ]
            },
            "documentation": {
              "id": 2044,
              "nodeType": "StructuredDocumentation",
              "src": "38991:168:27",
              "text": "@notice Calculates the total amount of underlying tokens the Vault holds.\n @return totalUnderlyingHeld The total amount of underlying tokens the Vault holds."
            },
            "functionSelector": "c70920bc",
            "id": 2058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalUnderlying",
            "nameLocation": "39173:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39188:2:27"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "39220:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39220:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39219:9:27"
            },
            "scope": 2095,
            "src": "39164:142:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2093,
              "nodeType": "Block",
              "src": "39764:127:27",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2070,
                              "name": "invested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "39782:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39794:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "39782:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2073,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2063,
                              "src": "39799:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39809:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "39799:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "39782:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2077,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "39781:30:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2081,
                              "name": "invested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "39830:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2082,
                              "name": "baseUnit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 466,
                              "src": "39840:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2079,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2063,
                              "src": "39818:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fdiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2860,
                            "src": "39818:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39818:31:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2084,
                                "name": "blocksPerYear",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 452,
                                "src": "39853:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 2085,
                                "name": "interval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2065,
                                "src": "39869:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "39853:24:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2087,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "39852:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "39818:60:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39881:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "39818:66:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "39781:103:27",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "39814:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2069,
                  "id": 2092,
                  "nodeType": "Return",
                  "src": "39774:110:27"
                }
              ]
            },
            "documentation": {
              "id": 2059,
              "nodeType": "StructuredDocumentation",
              "src": "39312:300:27",
              "text": "@notice Compute an estimated return given the auxoToken supply, initial exchange rate and locked profits.\n @param invested The underlying deposited in strategies.\n @param profit The profit derived from harvest.\n @param interval The period during which `profit` was generated."
            },
            "id": 2094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeEstimatedReturns",
            "nameLocation": "39626:23:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2061,
                  "mutability": "mutable",
                  "name": "invested",
                  "nameLocation": "39667:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "39659:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39659:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "39693:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "39685:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39685:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "39717:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "39709:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39709:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39649:82:27"
            },
            "returnParameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "39755:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39755:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39754:9:27"
            },
            "scope": 2095,
            "src": "39617:274:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2096,
        "src": "1151:38742:27",
        "usedErrors": []
      }
    ],
    "src": "384:39510:27"
  },
  "bytecode": "608060405234801561001057600080fd5b50614a93806100206000396000f3fe608060405234801561001057600080fd5b50600436106104125760003560e01c80637b72aeb911610220578063c822adda11610130578063e5fa2b70116100b8578063eed74e6711610087578063eed74e6714610951578063f1a392da14610964578063f8c8765e1461097e578063f97d2ed714610991578063ffa1ad74146109a457600080fd5b8063e5fa2b701461090f578063ec523afd14610922578063ecad956514610935578063ecc404b51461093e57600080fd5b8063d00364be116100ff578063d00364be14610875578063dd11dd45146108a7578063dd62ed3e146108ba578063de9375f2146108f3578063e33cc0a81461090657600080fd5b8063c822adda14610829578063c866983b1461083c578063c89d34601461084f578063cbc43f891461086257600080fd5b8063a385fb96116101b3578063ac86ac7211610182578063ac86ac72146107df578063b53d0958146107f2578063bdf06c8e14610805578063c2930f9114610818578063c70920bc1461082157600080fd5b8063a385fb961461079d578063a457c2d7146107a6578063a9059cbb146107b9578063ac579b77146107cc57600080fd5b8063912f74cd116101ef578063912f74cd1461075c5780639291df6b1461078357806395d89b411461078c5780639ee02c7f1461079457600080fd5b80637b72aeb91461072f578063836ca0f614610742578063841219e51461074b57806386dc48001461075357600080fd5b806339509351116103265780635c975abb116102ae5780636bd956121161027d5780636bd95612146106b05780636f307dc3146106b957806370a08231146106e4578063793101a51461070d578063797ba4631461071557600080fd5b80635c975abb1461068b5780635e4f945114610696578063638744461461069f5780636833f60d146106a857600080fd5b80633ec16194116102f55780633ec1619414610618578063448f56b91461062b57806344b813961461065d57806347e7ef24146106655780634eddea061461067857600080fd5b806339509351146105d75780633af9e669146105ea5780633ba0b9a9146105fd5780633c66a8fa1461060557600080fd5b80631bba16db116103a95780632968676e116103785780632968676e146105445780632b2e05c114610596578063305d61ae146105a957806331024f3b146105bc578063313ce567146105c557600080fd5b80631bba16db146104fa5780631ec36bfa1461050257806323b872dd1461050b57806325a760c21461051e57600080fd5b806311e57a3e116103e557806311e57a3e1461048257806313e86b28146104a357806314fbae04146104b657806318160ddd146104f257600080fd5b806306fdde031461041757806307b35d1d14610435578063095ea7b31461044a5780630e73ecef1461046d575b600080fd5b61041f6109c6565b60405161042c9190614286565b60405180910390f35b6104486104433660046142b9565b610a58565b005b61045d6104583660046142f7565b610bd2565b604051901515815260200161042c565b610475610be9565b60405161042c9190614323565b610495610490366004614370565b610c4a565b60405190815260200161042c565b6104486104b1366004614389565b610c62565b6104dd6104c4366004614370565b60aa602052600090815260409020805460019091015482565b6040805192835260208301919091520161042c565b603554610495565b610448610d4a565b61049560ab5481565b61045d6105193660046143a6565b611058565b60995461053290600160a01b900460ff1681565b60405160ff909116815260200161042c565b610577610552366004614389565b60a16020526000908152604090205460ff81169061010090046001600160f81b031682565b6040805192151583526001600160f81b0390911660208301520161042c565b6104486105a4366004614389565b611104565b6104486105b7366004614370565b6111ef565b610495609d5481565b609954600160a01b900460ff16610532565b61045d6105e53660046142f7565b61132b565b6104956105f8366004614389565b611367565b610495611389565b610448610613366004614370565b6113c0565b610495610626366004614370565b6114e0565b609f5461064590600160801b90046001600160401b031681565b6040516001600160401b03909116815260200161042c565b6104956114f8565b6104956106733660046142f7565b611579565b6104486106863660046143e7565b611637565b60655460ff1661045d565b61049560a25481565b61049560ac5481565b61044861171d565b61049560a75481565b6099546106cc906001600160a01b031681565b6040516001600160a01b03909116815260200161042c565b6104956106f2366004614389565b6001600160a01b031660009081526033602052604090205490565b6104486117d7565b609f5461064590600160c01b90046001600160401b031681565b61044861073d366004614409565b61194e565b61049560a35481565b610495611b7d565b61049560a85481565b6104dd61076a366004614389565b60a9602052600090815260409020805460019091015482565b61049560a45481565b61041f611bfd565b61049560ad5481565b61049560975481565b61045d6107b43660046142f7565b611c0c565b61045d6107c73660046142f7565b611ca5565b6104486107da366004614432565b611cb2565b6104486107ed366004614389565b611de8565b6104486108003660046142f7565b611ed0565b6104486108133660046142f7565b6121cd565b610495609a5481565b6104956124dc565b6106cc610837366004614370565b612505565b61044861084a366004614389565b61252f565b61044861085d366004614432565b612616565b610448610870366004614370565b612b2d565b60a55461088f90600160801b90046001600160801b031681565b6040516001600160801b03909116815260200161042c565b609e546106cc906001600160a01b031681565b6104956108c83660046144a6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6098546106cc906001600160a01b031681565b610495609b5481565b61044861091d366004614370565b612c62565b610448610930366004614389565b612d05565b61049560a05481565b609c546106cc906001600160a01b031681565b60a554610645906001600160401b031681565b60a55461064590600160401b90046001600160401b031681565b61044861098c3660046144df565b612eb5565b609f5461088f906001600160801b031681565b61041f6040518060400160405280600381526020016218171960e91b81525081565b6060603680546109d59061453b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a019061453b565b8015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b5050505050905090565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390610a9890849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad991906145a3565b610afe5760405162461bcd60e51b8152600401610af5906145c5565b60405180910390fd5b609f54600160801b90046001600160401b03166001600160801b0383161115610b735760405162461bcd60e51b815260206004820152602160248201527f7365744861727665737457696e646f773a3a57494e444f575f544f4f5f4c4f4e6044820152604760f81b6064820152608401610af5565b609f80546fffffffffffffffffffffffffffffffff19166001600160801b0384169081179091556040519081527fe5aac860870a2b99320df1d1b908931b370150f1c11074466fb332528e5b910b906020015b60405180910390a15050565b6000610bdf338484613098565b5060015b92915050565b606060a6805480602002602001604051908101604052809291908181526020018280548015610a4e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c23575050505050905090565b6000610be3610c57611389565b609a548491906131b4565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390610ca290849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce391906145a3565b610cff5760405162461bcd60e51b8152600401610af5906145c5565b609e80546001600160a01b0319166001600160a01b0384169081179091556040517fb5d8934a1f336d4cf641ae9f680c3e196f624f0bd9271749be60d98b70f7006090600090a25050565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390610d8a90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb91906145a3565b610de75760405162461bcd60e51b8152600401610af5906145c5565b609f5460a554610e11916001600160401b03600160801b909104811691600160401b900416614601565b6001600160401b0316421015610e775760405162461bcd60e51b815260206004820152602560248201527f62617463684275726e3a3a4c41544553545f484152564553545f4e4f545f4558604482015264141254915160da1b6064820152608401610af5565b60a7805460009182610e888361462c565b90915550600081815260aa602090815260409182902082518084019093528054808452600190910154918301919091529192509080610f185760405162461bcd60e51b815260206004820152602660248201527f62617463684275726e3a3a544f54414c5f5348415245535f43414e4e4f545f42604482015265455f5a45524f60d01b6064820152608401610af5565b6000610f25610c57611389565b9050610f2f611b7d565b811115610f7e5760405162461bcd60e51b815260206004820181905260248201527f62617463684275726e3a3a4e4f545f454e4f5547485f554e4445524c59494e476044820152606401610af5565b610f8830836131cf565b609d5415610fd857609d54600090610faa908390670de0b6b3a76400006131b4565b9050610fb68183614647565b609e54609954919350610fd6916001600160a01b0390811691168361331d565b505b609a54610fe89082908490613380565b600085815260aa602052604081206001019190915560a8805483929061100f90849061465e565b90915550506040805183815260208101839052339186917f464420ee56151ee74d491d95cfa6b42d6c6504b38debc567f5532168243f1d8d910160405180910390a35050505050565b60006110658484846133a2565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156110ea5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610af5565b6110f78533858403613098565b60019150505b9392505050565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061114490849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118591906145a3565b6111a15760405162461bcd60e51b8152600401610af5906145c5565b609880546001600160a01b0319166001600160a01b0384169081179091556040519081527fdcb0bc5ecfadc1f3129303f7c1f12b82107806277374a010dffe2c367708ef4190602001610bc6565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061122f90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127091906145a3565b61128c5760405162461bcd60e51b8152600401610af5906145c5565b670de0b6b3a76400008211156112f65760405162461bcd60e51b815260206004820152602960248201527f736574426174636865644275726e696e6746656550657263656e743a3a4645456044820152680bea89e9ebe90928e960bb1b6064820152608401610af5565b609d8290556040518281527fea0b688aabe63e0b1f8d23fbfaaf5978c8d6b74c5b21bdc9787b4651482b8f4b90602001610bc6565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091610bdf91859061136290869061465e565b613098565b6001600160a01b038116600090815260336020526040812054610be390610c4a565b60008061139560355490565b9050806113a4575050609a5490565b6113ba81609a546113b36124dc565b9190613380565b91505090565b60a75433600090815260a96020526040902054806113f55733600090815260a96020526040902082815560010183905561146c565b8181146114445760405162461bcd60e51b815260206004820181905260248201527f656e74657242617463684275726e3a3a444946464552454e545f524f554e44536044820152606401610af5565b33600090815260a960205260408120600101805485929061146690849061465e565b90915550505b600082815260aa60205260408120805485929061148a90849061465e565b9091555061149a90503084611ca5565b6114a357600080fd5b604051838152339083907fa34c4835838212c803863f6698244f8a1e56f479d6dba7d4f33b34a2cdecf1ce906020015b60405180910390a3505050565b6000610be36114ed611389565b609a54849190613380565b60a554609f546000916001600160401b03600160401b909104811691600160801b900416611526818361465e565b42106115355760009250505090565b60a554600160801b90046001600160801b0316816115538442614647565b61155d9083614676565b6115679190614695565b6115719082614647565b935050505090565b60985460405163b700961360e01b815260009184916001600160a01b039091169063b7009613906115bd90849030906001600160e01b031988351690600401614576565b602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe91906145a3565b61161a5760405162461bcd60e51b8152600401610af5906145c5565b61163084611627856114e0565b93508385613572565b5092915050565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061167790849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b891906145a3565b6116d45760405162461bcd60e51b8152600401610af5906145c5565b60ab83905560ac82905560408051848152602081018490527fb2ad710f2954a5376267a683f9ece9ec46ee7dfb47075163379904ee941df8da91015b60405180910390a1505050565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061175d90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e91906145a3565b6117ba5760405162461bcd60e51b8152600401610af5906145c5565b60655460ff166117cf576117cc613723565b50565b6117cc6137bb565b60a75433600090815260a9602090815260409182902082518084019093528054808452600190910154918301919091526118535760405162461bcd60e51b815260206004820152601a60248201527f6578697442617463684275726e3a3a4e4f5f4445504f534954530000000000006044820152606401610af5565b805182116118ad5760405162461bcd60e51b815260206004820152602160248201527f6578697442617463684275726e3a3a524f554e445f4e4f545f455845435554456044820152601160fa1b6064820152608401610af5565b33600090815260a96020908152604080832083815560019081018490558451845260aa83529083200154609a54918401516118ea929091906131b4565b90508060a860008282546118fe9190614647565b909155505060995461191a906001600160a01b0316338361331d565b604051818152339084907f2027c7e85003814492322d04d360d8df81aebeb8a40a069fffccc25cdf9e359b906020016114d3565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061198e90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa1580156119ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cf91906145a3565b6119eb5760405162461bcd60e51b8152600401610af5906145c5565b6001600160401b038216611a4f5760405162461bcd60e51b815260206004820152602560248201527f7365744861727665737444656c61793a3a44454c41595f43414e4e4f545f42456044820152645f5a45524f60d81b6064820152608401610af5565b6301e13380826001600160401b03161115611aac5760405162461bcd60e51b815260206004820152601f60248201527f7365744861727665737444656c61793a3a44454c41595f544f4f5f4c4f4e47006044820152606401610af5565b609f54600160801b90046001600160401b0316611b2757609f805467ffffffffffffffff60801b1916600160801b6001600160401b0385169081029190911790915560405190815233907fe893fa207c5a5094cad036347b877c23ebecd9df94ae0426f287040c13220b3f9060200160405180910390a25050565b609f80546001600160c01b0316600160c01b6001600160401b038516908102919091179091556040519081527f12ce22e477e3fc08e5fda24cdec059a7c62a276344417f2c365d7476401bca6f90602001610bc6565b60a8546099546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015611bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bee91906146b7565b611bf89190614647565b905090565b6060603780546109d59061453b565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015611c8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610af5565b611c9b3385858403613098565b5060019392505050565b6000610bdf3384846133a2565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390611cf290849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015611d0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3391906145a3565b611d4f5760405162461bcd60e51b8152600401610af5906145c5565b6014821115611daa5760405162461bcd60e51b815260206004820152602160248201527f7365745769746864726177616c51756575653a3a51554555455f544f4f5f42496044820152604760f81b6064820152608401610af5565b611db660a68484614172565b507f7f5ecd11abc947c192f7d36828c4a649ddecd0867f27df66489e78d3ec80b6fe83836040516117109291906146d0565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390611e2890849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015611e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6991906145a3565b611e855760405162461bcd60e51b8152600401610af5906145c5565b609c80546001600160a01b0319166001600160a01b0384169081179091556040517fba702855580cda8666c4fe8e4ae71d8f5dd19db067455eeb54e2bac95c46af1390600090a25050565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390611f1090849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015611f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5191906145a3565b611f6d5760405162461bcd60e51b8152600401610af5906145c5565b6001600160a01b038316600090815260a1602052604090205460ff16611fe65760405162461bcd60e51b815260206004820152602860248201527f776974686472617746726f6d53747261746567793a3a554e545255535445445f604482015267535452415445475960c01b6064820152608401610af5565b816120475760405162461bcd60e51b815260206004820152602b60248201527f776974686472617746726f6d53747261746567793a3a414d4f554e545f43414e60448201526a4e4f545f42455f5a45524f60a81b6064820152608401610af5565b61205082613835565b6001600160a01b038416600090815260a160205260409020805460019061208690849061010090046001600160f81b031661471e565b92506101000a8154816001600160f81b0302191690836001600160f81b031602179055508160a060008282546120bc9190614647565b90915550506040518281526001600160a01b0384169033907f8d851b682e239b1de720e92e5c5cffdb72d353104cc63dc6ed144d7080217fbe9060200160405180910390a3604051632e1a7d4d60e01b8152600481018390526001600160a01b03841690632e1a7d4d906024016020604051808303816000875af1158015612148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216c9190614746565b60ff16156121c85760405162461bcd60e51b815260206004820152602360248201527f776974686472617746726f6d53747261746567793a3a52454445454d5f46414960448201526213115160ea1b6064820152608401610af5565b505050565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061220d90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa15801561222a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224e91906145a3565b61226a5760405162461bcd60e51b8152600401610af5906145c5565b6001600160a01b038316600090815260a1602052604090205460ff166122e25760405162461bcd60e51b815260206004820152602760248201527f6465706f736974496e746f53747261746567793a3a554e545255535445445f536044820152665452415445475960c81b6064820152608401610af5565b816123425760405162461bcd60e51b815260206004820152602a60248201527f6465706f736974496e746f53747261746567793a3a414d4f554e545f43414e4e6044820152694f545f42455f5a45524f60b01b6064820152608401610af5565b8160a06000828254612354919061465e565b90915550612363905082613835565b6001600160a01b038416600090815260a160205260409020805460019061239990849061010090046001600160f81b0316614769565b92506101000a8154816001600160f81b0302191690836001600160f81b03160217905550826001600160a01b0316336001600160a01b03167f49e9138fe0dacf001ea634236e38aa8bd229efd55ec4d7975228d679db6ce8f98460405161240291815260200190565b60405180910390a3609954612421906001600160a01b0316848461384f565b60405163b6b55f2560e01b8152600481018390526001600160a01b0384169063b6b55f25906024016020604051808303816000875af1158015612468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248c9190614746565b60ff16156121c85760405162461bcd60e51b815260206004820181905260248201527f6465706f736974496e746f53747261746567793a3a4d494e545f4641494c45446044820152606401610af5565b60006124e6611b7d565b6124ee6114f8565b60a0546124fb9190614647565b611bf8919061465e565b60a6818154811061251557600080fd5b6000918252602090912001546001600160a01b0316905081565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061256f90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa15801561258c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b091906145a3565b6125cc5760405162461bcd60e51b8152600401610af5906145c5565b6001600160a01b038216600081815260a16020526040808220805460ff19169055517fe14d923ec37225f1aab033b03f5c98cf911d68bba31f6908192db6c24b0511c99190a25050565b60985460405163b700961360e01b815233916001600160a01b03169063b70096139061265690849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015612673573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269791906145a3565b6126b35760405162461bcd60e51b8152600401610af5906145c5565b609f5460a5546126dd916001600160401b03600160801b909104811691600160401b900416614601565b6001600160401b0316421061272c576126f4611389565b60a25560a4546127049043614647565b60a3554360a45560a5805467ffffffffffffffff1916426001600160401b03161790556127a6565b609f5460a55461274e916001600160801b0316906001600160401b031661478b565b6001600160801b03164211156127a65760405162461bcd60e51b815260206004820152601960248201527f686172766573743a3a4241445f484152564553545f54494d45000000000000006044820152606401610af5565b60a054600081815b858110156129615760008787838181106127ca576127ca6147ad565b90506020020160208101906127df9190614389565b6001600160a01b038116600090815260a1602052604090205490915060ff1661284a5760405162461bcd60e51b815260206004820152601b60248201527f686172766573743a3a554e545255535445445f535452415445475900000000006044820152606401610af5565b6001600160a01b038116600081815260a1602090815260408083205481516327e5cbaf60e01b815291516101009091046001600160f81b031694926327e5cbaf9260048082019391829003018187875af11580156128ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d091906146b7565b90506128db81613835565b6001600160a01b038416600090815260a16020526040902080546001600160f81b03929092166101000260ff9092169190911790558161291b828761465e565b6129259190614647565b945081811161293557600061293f565b61293f8282614647565b612949908761465e565b955050505080806129599061462c565b9150506127ae565b50609b5460009061297c908490670de0b6b3a76400006131b4565b905080158015906129975750609c546001600160a01b031615155b156129c757609c546129c7906001600160a01b03166129c26129b7611389565b609a54859190613380565b613964565b60006129ef82856129d66114f8565b6129e0919061465e565b6129ea9190614647565b613a43565b60a580546001600160801b03808416600160801b81029190921617909155909150600090612a1d9085614647565b9050612a3581836001600160801b031660a354613a59565b60ad5560a084905560a580546fffffffffffffffff00000000000000001916600160401b426001600160401b03160217905560405133907f69e9c71f6799744a94d9897e77c3ed426cc2f92ba0ef3300785368209b6f4b2d90612a9b908c908c906146d0565b60405180910390a2609f54600160c01b90046001600160401b03168015612b2157609f80546001600160801b0316600160801b6001600160401b0384169081026001600160c01b03169190911790915560405190815233907fe893fa207c5a5094cad036347b877c23ebecd9df94ae0426f287040c13220b3f9060200160405180910390a25b50505050505050505050565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390612b6d90849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015612b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bae91906145a3565b612bca5760405162461bcd60e51b8152600401610af5906145c5565b670de0b6b3a7640000821115612c2d5760405162461bcd60e51b815260206004820152602260248201527f7365744861727665737446656550657263656e743a3a4645455f544f4f5f484960448201526108e960f31b6064820152608401610af5565b609b8290556040518281527fc2930745c0414dcbc7ebf3fea0d713c9b1f0d69dd75345906fcf43ae322ad57890602001610bc6565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390612ca290849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015612cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ce391906145a3565b612cff5760405162461bcd60e51b8152600401610af5906145c5565b50609755565b60985460405163b700961360e01b815233916001600160a01b03169063b700961390612d4590849030906001600160e01b03196000351690600401614576565b602060405180830381865afa158015612d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8691906145a3565b612da25760405162461bcd60e51b8152600401610af5906145c5565b60995460408051636f307dc360e01b815290516001600160a01b0392831692851691636f307dc39160048083019260209291908290030181865afa158015612dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1291906147c3565b6001600160a01b031614612e685760405162461bcd60e51b815260206004820152601f60248201527f747275737453747261746567793a3a57524f4e475f554e4445524c59494e47006044820152606401610af5565b6001600160a01b038216600081815260a16020526040808220805460ff19166001179055517f1eecb33217fce2d414c96c97c7e082f4557817585c876a72eca5305afb15f1f19190a25050565b600054610100900460ff1680612ece575060005460ff16155b612eea5760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015612f0c576000805461ffff19166101011790555b61307f8585858560405180604001604052806005815260200164020babc37960dd1b8152508a6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612f6f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f979190810190614844565b604051806040016040528060068152602001650815985d5b1d60d21b815250604051602001612fc8939291906148e5565b604051602081830303815290604052604051806040016040528060048152602001636175786f60e01b8152508b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015613032573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261305a9190810190614844565b60405160200161306b929190614928565b604051602081830303815290604052613aad565b8015613091576000805461ff00191690555b5050505050565b6001600160a01b0383166130fa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610af5565b6001600160a01b03821661315b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610af5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016114d3565b82820283158482048414176131c857600080fd5b0492915050565b6001600160a01b03821661322f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610af5565b6001600160a01b038216600090815260336020526040902054818110156132a35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610af5565b6001600160a01b03831660009081526033602052604081208383039055603580548492906132d2908490614647565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526121c890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c8a565b82810282151584158583048414171661339857600080fd5b9190910492915050565b6001600160a01b0383166134065760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610af5565b6001600160a01b0382166134685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610af5565b6001600160a01b038316600090815260336020526040902054818110156134e05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610af5565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061351790849061465e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161356391815260200190565b60405180910390a35b50505050565b60655460ff16156135b85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610af5565b6000816135dd610490866001600160a01b031660009081526033602052604090205490565b6135e7919061465e565b90506000826135f46124dc565b6135fe919061465e565b905060ab548211156136605760405162461bcd60e51b815260206004820152602560248201527f5f6465706f7369743a3a555345525f4445504f5349545f4c494d4954535f52456044820152641050d2115160da1b6064820152608401610af5565b60ac548111156136c15760405162461bcd60e51b815260206004820152602660248201527f5f6465706f7369743a3a5641554c545f4445504f5349545f4c494d4954535f52604482015265115050d2115160d21b6064820152608401610af5565b6136cb8585613964565b6040518381526001600160a01b0386169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3609954613091906001600160a01b0316333086613d5c565b60655460ff16156137695760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610af5565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861379e3390565b6040516001600160a01b03909116815260200160405180910390a1565b60655460ff166138045760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610af5565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3361379e565b60006001600160f81b0382111561384b57600080fd5b5090565b8015806138c95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156138a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c791906146b7565b155b6139345760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610af5565b6040516001600160a01b0383166024820152604481018290526121c890849063095ea7b360e01b90606401613349565b6001600160a01b0382166139ba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610af5565b80603560008282546139cc919061465e565b90915550506001600160a01b038216600090815260336020526040812080548392906139f990849061465e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006001600160801b0382111561384b57600080fd5b6000831580613a66575082155b613aa25781609754613a789190614695565b609a54613a889085908790613380565b613a929190614676565b613a9d906064614676565b613aa5565b60005b949350505050565b600054610100900460ff1680613ac6575060005460ff16155b613ae25760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613b04576000805461ffff19166101011790555b613b0e8383613d94565b613b16613e13565b613b1e613723565b609980546001600160a01b0319166001600160a01b0389169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015613b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b9b9190614746565b613ba690600a614a32565b609a81905550866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c0e9190614746565b6099805460ff92909216600160a01b0260ff60a01b19909216919091179055609880546001600160a01b038089166001600160a01b031992831617909255609e8054878416908316179055609c805492881692909116919091179055600160a7558015613c81576000805461ff00191690555b50505050505050565b6000613cdf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613e8e9092919063ffffffff16565b8051909150156121c85780806020019051810190613cfd91906145a3565b6121c85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af5565b6040516001600160a01b038085166024830152831660448201526064810182905261356c9085906323b872dd60e01b90608401613349565b600054610100900460ff1680613dad575060005460ff16155b613dc95760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613deb576000805461ffff19166101011790555b613df3613e9d565b613dfd8383613f07565b80156121c8576000805461ff0019169055505050565b600054610100900460ff1680613e2c575060005460ff16155b613e485760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613e6a576000805461ffff19166101011790555b613e72613e9d565b613e7a613f9c565b80156117cc576000805461ff001916905550565b6060613aa58484600085614011565b600054610100900460ff1680613eb6575060005460ff16155b613ed25760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613e7a576000805461ffff191661010117905580156117cc576000805461ff001916905550565b600054610100900460ff1680613f20575060005460ff16155b613f3c5760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613f5e576000805461ffff19166101011790555b8251613f719060369060208601906141d1565b508151613f859060379060208501906141d1565b5080156121c8576000805461ff0019169055505050565b600054610100900460ff1680613fb5575060005460ff16155b613fd15760405162461bcd60e51b8152600401610af5906147e0565b600054610100900460ff16158015613ff3576000805461ffff19166101011790555b6065805460ff1916905580156117cc576000805461ff001916905550565b6060824710156140725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610af5565b843b6140c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af5565b600080866001600160a01b031685876040516140dc9190614a41565b60006040518083038185875af1925050503d8060008114614119576040519150601f19603f3d011682016040523d82523d6000602084013e61411e565b606091505b509150915061412e828286614139565b979650505050505050565b606083156141485750816110fd565b8251156141585782518084602001fd5b8160405162461bcd60e51b8152600401610af59190614286565b8280548282559060005260206000209081019282156141c5579160200282015b828111156141c55781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190614192565b5061384b929150614245565b8280546141dd9061453b565b90600052602060002090601f0160209004810192826141ff57600085556141c5565b82601f1061421857805160ff19168380011785556141c5565b828001600101855582156141c5579182015b828111156141c557825182559160200191906001019061422a565b5b8082111561384b5760008155600101614246565b60005b8381101561427557818101518382015260200161425d565b8381111561356c5750506000910152565b60208152600082518060208401526142a581604085016020870161425a565b601f01601f19169190910160400192915050565b6000602082840312156142cb57600080fd5b81356001600160801b03811681146110fd57600080fd5b6001600160a01b03811681146117cc57600080fd5b6000806040838503121561430a57600080fd5b8235614315816142e2565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156143645783516001600160a01b03168352928401929184019160010161433f565b50909695505050505050565b60006020828403121561438257600080fd5b5035919050565b60006020828403121561439b57600080fd5b81356110fd816142e2565b6000806000606084860312156143bb57600080fd5b83356143c6816142e2565b925060208401356143d6816142e2565b929592945050506040919091013590565b600080604083850312156143fa57600080fd5b50508035926020909101359150565b60006020828403121561441b57600080fd5b81356001600160401b03811681146110fd57600080fd5b6000806020838503121561444557600080fd5b82356001600160401b038082111561445c57600080fd5b818501915085601f83011261447057600080fd5b81358181111561447f57600080fd5b8660208260051b850101111561449457600080fd5b60209290920196919550909350505050565b600080604083850312156144b957600080fd5b82356144c4816142e2565b915060208301356144d4816142e2565b809150509250929050565b600080600080608085870312156144f557600080fd5b8435614500816142e2565b93506020850135614510816142e2565b92506040850135614520816142e2565b91506060850135614530816142e2565b939692955090935050565b600181811c9082168061454f57607f821691505b6020821081141561457057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156145b557600080fd5b815180151581146110fd57600080fd5b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03808316818516808303821115614623576146236145eb565b01949350505050565b6000600019821415614640576146406145eb565b5060010190565b600082821015614659576146596145eb565b500390565b60008219821115614671576146716145eb565b500190565b6000816000190483118215151615614690576146906145eb565b500290565b6000826146b257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156146c957600080fd5b5051919050565b60208082528181018390526000908460408401835b868110156147135782356146f8816142e2565b6001600160a01b0316825291830191908301906001016146e5565b509695505050505050565b60006001600160f81b038381169083168181101561473e5761473e6145eb565b039392505050565b60006020828403121561475857600080fd5b815160ff811681146110fd57600080fd5b60006001600160f81b03828116848216808303821115614623576146236145eb565b60006001600160801b03808316818516808303821115614623576146236145eb565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156147d557600080fd5b81516110fd816142e2565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561485657600080fd5b81516001600160401b038082111561486d57600080fd5b818401915084601f83011261488157600080fd5b8151818111156148935761489361482e565b604051601f8201601f19908116603f011681019083821181831017156148bb576148bb61482e565b816040528281528760208487010111156148d457600080fd5b61412e83602083016020880161425a565b600084516148f781846020890161425a565b84519083019061490b81836020890161425a565b845191019061491e81836020880161425a565b0195945050505050565b6000835161493a81846020880161425a565b83519083019061462381836020880161425a565b600181815b8085111561498957816000190482111561496f5761496f6145eb565b8085161561497c57918102915b93841c9390800290614953565b509250929050565b6000826149a057506001610be3565b816149ad57506000610be3565b81600181146149c357600281146149cd576149e9565b6001915050610be3565b60ff8411156149de576149de6145eb565b50506001821b610be3565b5060208310610133831016604e8410600b8410161715614a0c575081810a610be3565b614a16838361494e565b8060001904821115614a2a57614a2a6145eb565b029392505050565b60006110fd60ff841683614991565b60008251614a5381846020870161425a565b919091019291505056fea264697066735822122007fd2d39a62a6bb145c637d024126579a58a6b3036afacc9a3fe4c3ed258c94b64736f6c634300080c0033",
  "bytecodeSha1": "9a0d49267fa2f022b8d3e878a4cc4f2f5828bc9f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "10": {
        "AddressUpgradeable.functionCallWithValue": {
          "216": [
            4756,
            4786,
            true
          ]
        },
        "AddressUpgradeable.verifyCallResult": {
          "217": [
            6396,
            6403,
            false
          ],
          "218": [
            6537,
            6558,
            false
          ]
        }
      },
      "11": {},
      "27": {
        "Vault._deposit": {
          "212": [
            27917,
            27951,
            true
          ],
          "213": [
            28011,
            28047,
            true
          ]
        },
        "Vault.computeEstimatedReturns": {
          "214": [
            39782,
            39795,
            true
          ],
          "215": [
            39799,
            39810,
            true
          ]
        },
        "Vault.depositIntoStrategy": {
          "199": [
            34667,
            34700,
            true
          ],
          "200": [
            34839,
            34860,
            true
          ],
          "201": [
            35493,
            35532,
            true
          ]
        },
        "Vault.enterBatchBurn": {
          "188": [
            24264,
            24278,
            false
          ],
          "189": [
            24872,
            24900,
            true
          ],
          "190": [
            25090,
            25121,
            true
          ]
        },
        "Vault.exchangeRate": {
          "187": [
            37454,
            37470,
            false
          ]
        },
        "Vault.execBatchBurn": {
          "182": [
            26171,
            26218,
            true
          ],
          "183": [
            26498,
            26514,
            true
          ],
          "184": [
            26655,
            26687,
            true
          ],
          "185": [
            26845,
            26867,
            false
          ]
        },
        "Vault.exitBatchBurn": {
          "192": [
            25521,
            25552,
            true
          ]
        },
        "Vault.harvest": {
          "202": [
            29808,
            29853,
            false
          ],
          "203": [
            30494,
            30551,
            true
          ],
          "204": [
            31403,
            31436,
            true
          ],
          "205": [
            32256,
            32295,
            true
          ],
          "206": [
            32730,
            32746,
            false
          ],
          "207": [
            32750,
            32782,
            false
          ],
          "208": [
            33774,
            33794,
            false
          ]
        },
        "Vault.lockedProfit": {
          "191": [
            38597,
            38649,
            false
          ]
        },
        "Vault.setBurningFeePercent": {
          "186": [
            17813,
            17834,
            true
          ]
        },
        "Vault.setHarvestDelay": {
          "193": [
            20022,
            20042,
            true
          ],
          "194": [
            20169,
            20196,
            true
          ]
        },
        "Vault.setHarvestFeePercent": {
          "209": [
            17337,
            17358,
            true
          ]
        },
        "Vault.setHarvestWindow": {
          "181": [
            19314,
            19346,
            true
          ]
        },
        "Vault.setWithdrawalQueue": {
          "195": [
            21662,
            21695,
            true
          ]
        },
        "Vault.trustStrategy": {
          "210": [
            12457,
            12499,
            true
          ],
          "211": [
            22459,
            22494,
            true
          ]
        },
        "Vault.withdrawFromStrategy": {
          "196": [
            36082,
            36115,
            true
          ],
          "197": [
            36256,
            36277,
            true
          ],
          "198": [
            36777,
            36817,
            true
          ]
        }
      },
      "28": {},
      "3": {
        "PausableUpgradeable.__Pausable_init_unchained": {
          "229": [
            1409,
            1422,
            true
          ],
          "230": [
            1427,
            1439,
            true
          ]
        }
      },
      "32": {},
      "33": {
        "SafeCastLib.safeCastTo128": {
          "232": [
            643,
            665,
            true
          ]
        },
        "SafeCastLib.safeCastTo248": {
          "231": [
            496,
            518,
            true
          ]
        }
      },
      "36": {},
      "37": {},
      "4": {},
      "6": {
        "ERC20Upgradeable._approve": {
          "221": [
            10456,
            10475,
            true
          ],
          "222": [
            10534,
            10555,
            true
          ]
        },
        "ERC20Upgradeable._burn": {
          "223": [
            9409,
            9430,
            true
          ],
          "224": [
            9600,
            9624,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "228": [
            8700,
            8721,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "225": [
            7763,
            7783,
            true
          ],
          "226": [
            7843,
            7866,
            true
          ],
          "227": [
            8034,
            8057,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "220": [
            6937,
            6972,
            true
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "219": [
            5454,
            5480,
            true
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "233": [
            3778,
            3799,
            false
          ],
          "234": [
            3862,
            3892,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "AddressUpgradeable.functionCall": {
          "172": [
            3629,
            3688
          ]
        },
        "AddressUpgradeable.functionCallWithValue": {
          "176": [
            4748,
            4829
          ],
          "177": [
            4839,
            4899
          ],
          "178": [
            4993,
            5051
          ]
        },
        "AddressUpgradeable.verifyCallResult": {
          "179": [
            6419,
            6436
          ],
          "180": [
            6863,
            6883
          ]
        }
      },
      "11": {
        "ContextUpgradeable._msgSender": {
          "10": [
            895,
            912
          ]
        }
      },
      "27": {
        "Vault.__Vault_init": {
          "156": [
            13635,
            13663
          ],
          "157": [
            13712,
            13729
          ],
          "158": [
            13778,
            13786
          ],
          "159": [
            13832,
            13856
          ],
          "160": [
            13866,
            13903
          ],
          "161": [
            13913,
            13956
          ],
          "162": [
            13967,
            13979
          ],
          "163": [
            13989,
            14026
          ],
          "164": [
            14036,
            14076
          ],
          "165": [
            14196,
            14214
          ]
        },
        "Vault._deposit": {
          "137": [
            27909,
            27993
          ],
          "138": [
            28003,
            28090
          ],
          "139": [
            28167,
            28184
          ],
          "140": [
            28195,
            28241
          ],
          "141": [
            28384,
            28456
          ]
        },
        "Vault.balanceOfUnderlying": {
          "35": [
            37843,
            37886
          ]
        },
        "Vault.calculateShares": {
          "45": [
            28783,
            28837
          ]
        },
        "Vault.calculateUnderlying": {
          "13": [
            29161,
            29211
          ]
        },
        "Vault.computeEstimatedReturns": {
          "155": [
            39774,
            39884
          ]
        },
        "Vault.decimals": {
          "1": [
            15489,
            15514
          ]
        },
        "Vault.deposit": {
          "48": [
            23727,
            23803
          ]
        },
        "Vault.depositIntoStrategy": {
          "83": [
            34659,
            34744
          ],
          "84": [
            34831,
            34907
          ],
          "85": [
            34988,
            35029
          ],
          "86": [
            35116,
            35185
          ],
          "87": [
            35196,
            35256
          ],
          "88": [
            35338,
            35397
          ],
          "89": [
            35485,
            35569
          ]
        },
        "Vault.distrustStrategy": {
          "91": [
            22949,
            22990
          ],
          "92": [
            23001,
            23034
          ]
        },
        "Vault.enterBatchBurn": {
          "38": [
            24414,
            24471
          ],
          "39": [
            24485,
            24534
          ],
          "40": [
            24864,
            24937
          ],
          "41": [
            24951,
            25001
          ],
          "42": [
            25022,
            25071
          ],
          "43": [
            25082,
            25122
          ],
          "44": [
            25133,
            25189
          ]
        },
        "Vault.exchangeRate": {
          "36": [
            37472,
            37487
          ],
          "37": [
            37498,
            37550
          ]
        },
        "Vault.execBatchBurn": {
          "16": [
            26163,
            26260
          ],
          "17": [
            26490,
            26557
          ],
          "18": [
            26647,
            26724
          ],
          "19": [
            26735,
            26768
          ],
          "20": [
            26967,
            26998
          ],
          "21": [
            27013,
            27069
          ],
          "22": [
            27090,
            27179
          ],
          "23": [
            27189,
            27225
          ],
          "24": [
            27236,
            27317
          ]
        },
        "Vault.exitBatchBurn": {
          "53": [
            25446,
            25503
          ],
          "54": [
            25513,
            25590
          ],
          "55": [
            25601,
            25644
          ],
          "56": [
            25654,
            25698
          ],
          "57": [
            25818,
            25854
          ],
          "58": [
            25864,
            25917
          ],
          "59": [
            25928,
            25993
          ]
        },
        "Vault.getWithdrawalQueue": {
          "12": [
            21282,
            21304
          ]
        },
        "Vault.harvest": {
          "93": [
            30049,
            30089
          ],
          "94": [
            30103,
            30175
          ],
          "95": [
            30189,
            30231
          ],
          "96": [
            30303,
            30351
          ],
          "97": [
            30486,
            30581
          ],
          "98": [
            31395,
            31468
          ],
          "99": [
            31750,
            31820
          ],
          "100": [
            32041,
            32134
          ],
          "101": [
            32234,
            32404
          ],
          "102": [
            31096,
            31099
          ],
          "103": [
            32798,
            32867
          ],
          "104": [
            33084,
            33118
          ],
          "105": [
            33255,
            33370
          ],
          "106": [
            33432,
            33480
          ],
          "107": [
            33537,
            33574
          ],
          "108": [
            33585,
            33621
          ],
          "109": [
            33851,
            33881
          ],
          "110": [
            33941,
            33961
          ],
          "111": [
            33976,
            34029
          ]
        },
        "Vault.initialize": {
          "119": [
            14760,
            15043
          ]
        },
        "Vault.lockedProfit": {
          "46": [
            38651,
            38659
          ],
          "47": [
            38872,
            38978
          ]
        },
        "Vault.setAuth": {
          "29": [
            16436,
            16450
          ],
          "30": [
            16460,
            16485
          ]
        },
        "Vault.setBlocksPerYear": {
          "115": [
            16859,
            16881
          ]
        },
        "Vault.setBurningFeePercent": {
          "31": [
            17805,
            17880
          ],
          "32": [
            17929,
            17962
          ],
          "33": [
            17973,
            18017
          ]
        },
        "Vault.setBurningFeeReceiver": {
          "14": [
            18659,
            18699
          ],
          "15": [
            18710,
            18761
          ]
        },
        "Vault.setDepositLimits": {
          "49": [
            15960,
            15983
          ],
          "50": [
            15993,
            16018
          ],
          "51": [
            16029,
            16067
          ]
        },
        "Vault.setHarvestDelay": {
          "60": [
            20014,
            20084
          ],
          "61": [
            20161,
            20232
          ],
          "62": [
            20405,
            20435
          ],
          "63": [
            20450,
            20503
          ],
          "64": [
            20586,
            20620
          ],
          "65": [
            20635,
            20684
          ]
        },
        "Vault.setHarvestFeePercent": {
          "112": [
            17329,
            17397
          ],
          "113": [
            17446,
            17479
          ],
          "114": [
            17490,
            17534
          ]
        },
        "Vault.setHarvestFeeReceiver": {
          "75": [
            18287,
            18327
          ],
          "76": [
            18338,
            18389
          ]
        },
        "Vault.setHarvestWindow": {
          "6": [
            19306,
            19384
          ],
          "7": [
            19433,
            19465
          ],
          "8": [
            19476,
            19519
          ]
        },
        "Vault.setWithdrawalQueue": {
          "72": [
            21654,
            21733
          ],
          "73": [
            21785,
            21811
          ],
          "74": [
            21822,
            21855
          ]
        },
        "Vault.totalFloat": {
          "66": [
            38121,
            38182
          ]
        },
        "Vault.totalUnderlying": {
          "90": [
            39239,
            39299
          ]
        },
        "Vault.triggerPause": {
          "52": [
            12888,
            12920
          ]
        },
        "Vault.trustStrategy": {
          "116": [
            22451,
            22530
          ],
          "117": [
            22583,
            22623
          ],
          "118": [
            22634,
            22664
          ]
        },
        "Vault.withdrawFromStrategy": {
          "77": [
            36074,
            36160
          ],
          "78": [
            36248,
            36325
          ],
          "79": [
            36415,
            36484
          ],
          "80": [
            36568,
            36609
          ],
          "81": [
            36620,
            36683
          ],
          "82": [
            36769,
            36857
          ]
        }
      },
      "28": {},
      "3": {},
      "32": {},
      "33": {
        "SafeCastLib.safeCastTo128": {
          "154": [
            635,
            666
          ]
        },
        "SafeCastLib.safeCastTo248": {
          "146": [
            488,
            519
          ],
          "147": [
            530,
            544
          ]
        }
      },
      "36": {},
      "37": {},
      "4": {
        "PausableUpgradeable.__Pausable_init": {
          "170": [
            1049,
            1075
          ],
          "171": [
            1085,
            1112
          ]
        },
        "PausableUpgradeable.__Pausable_init_unchained": {
          "175": [
            1193,
            1208
          ]
        },
        "PausableUpgradeable._pause": {
          "142": [
            2134,
            2148
          ],
          "143": [
            2158,
            2183
          ]
        },
        "PausableUpgradeable._unpause": {
          "144": [
            2380,
            2395
          ],
          "145": [
            2405,
            2432
          ]
        },
        "PausableUpgradeable.paused": {
          "2": [
            1373,
            1387
          ]
        }
      },
      "6": {
        "ERC20Upgradeable.__ERC20_init": {
          "168": [
            2141,
            2167
          ],
          "169": [
            2177,
            2215
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "173": [
            2335,
            2348
          ],
          "174": [
            2358,
            2375
          ]
        },
        "ERC20Upgradeable._approve": {
          "120": [
            10448,
            10516
          ],
          "121": [
            10526,
            10594
          ],
          "122": [
            10605,
            10641
          ],
          "123": [
            10651,
            10688
          ]
        },
        "ERC20Upgradeable._burn": {
          "124": [
            9401,
            9468
          ],
          "125": [
            9592,
            9663
          ],
          "126": [
            9697,
            9741
          ],
          "127": [
            9761,
            9783
          ],
          "128": [
            9794,
            9836
          ]
        },
        "ERC20Upgradeable._mint": {
          "150": [
            8692,
            8757
          ],
          "151": [
            8828,
            8850
          ],
          "152": [
            8860,
            8888
          ],
          "153": [
            8898,
            8940
          ]
        },
        "ERC20Upgradeable._transfer": {
          "130": [
            7755,
            7825
          ],
          "131": [
            7835,
            7906
          ],
          "132": [
            8026,
            8100
          ],
          "133": [
            8134,
            8176
          ],
          "134": [
            8196,
            8226
          ],
          "135": [
            8237,
            8277
          ],
          "136": [
            8288,
            8334
          ]
        },
        "ERC20Upgradeable.allowance": {
          "4": [
            4365,
            4399
          ]
        },
        "ERC20Upgradeable.approve": {
          "9": [
            4643,
            4682
          ],
          "11": [
            4692,
            4703
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3792,
            3817
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "68": [
            6929,
            7014
          ],
          "69": [
            7048,
            7115
          ],
          "70": [
            7136,
            7147
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "34": [
            6154,
            6234
          ]
        },
        "ERC20Upgradeable.name": {
          "5": [
            2526,
            2538
          ]
        },
        "ERC20Upgradeable.symbol": {
          "67": [
            2739,
            2753
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3615,
            3634
          ]
        },
        "ERC20Upgradeable.transfer": {
          "71": [
            4129,
            4171
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "25": [
            5329,
            5365
          ],
          "26": [
            5446,
            5525
          ],
          "27": [
            5559,
            5616
          ],
          "28": [
            5637,
            5648
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "166": [
            3854,
            3939
          ]
        },
        "SafeERC20Upgradeable.safeApprove": {
          "148": [
            1756,
            1919
          ],
          "149": [
            1929,
            2019
          ]
        },
        "SafeERC20Upgradeable.safeTransfer": {
          "129": [
            801,
            887
          ]
        },
        "SafeERC20Upgradeable.safeTransferFrom": {
          "167": [
            1049,
            1145
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/AddressUpgradeable",
    "Authority",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/ERC20Upgradeable",
    "FixedPointMathLib",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/IERC20Upgradeable",
    "IStrategy",
    "IVault",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/PausableUpgradeable",
    "SafeCastLib",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.3.2/SafeERC20Upgradeable"
  ],
  "deployedBytecode": "",
  "deployedSourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;19132:394:27;;;;;;:::i;:::-;;:::i;:::-;;4544:166:6;;;;;;:::i;:::-;;:::i;:::-;;;1592:14:38;;1585:22;1567:41;;1555:2;1540:18;4544:166:6;1427:187:38;21199:112:27;;;:::i;:::-;;;;;;;:::i;29070:148::-;;;;;;:::i;:::-;;:::i;:::-;;;2631:25:38;;;2619:2;2604:18;29070:148:27;2485:177:38;18517:251:27;;;;;;:::i;:::-;;:::i;7104:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3093:25:38;;;3149:2;3134:18;;3127:34;;;;3066:18;7104:47:27;2919:248:38;3535:106:6;3622:12;;3535:106;;26044:1280:27;;;:::i;7218:31::-;;;;;;5177:478:6;;;;;;:::i;:::-;;:::i;3592:31:27:-;;;;;-1:-1:-1;;;3592:31:27;;;;;;;;;3805:4:38;3793:17;;;3775:36;;3763:2;3748:18;3592:31:27;3633:184:38;5454:57:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5454:57:27;;;;;;;4285:14:38;;4278:22;4260:41;;-1:-1:-1;;;;;4337:32:38;;;4332:2;4317:18;;4310:60;4233:18;5454:57:27;4092:284:38;16356:136:27;;;;;;:::i;:::-;;:::i;17650:374::-;;;;;;:::i;:::-;;:::i;4325:32::-;;;;;;15422:99;15496:18;;-1:-1:-1;;;15496:18:27;;;;15422:99;;6050:212:6;;;;;;:::i;:::-;;:::i;37758:135:27:-;;;;;;:::i;:::-;;:::i;37215:342::-;;;:::i;24081:1115::-;;;;;;:::i;:::-;;:::i;28692:152::-;;;;;;:::i;:::-;;:::i;4917:26::-;;;;;-1:-1:-1;;;4917:26:27;;-1:-1:-1;;;;;4917:26:27;;;;;;-1:-1:-1;;;;;4813:31:38;;;4795:50;;4783:2;4768:18;4917:26:27;4651:200:38;38311:674:27;;;:::i;23611:199::-;;;;;;:::i;:::-;;:::i;15861:213::-;;;;;;:::i;:::-;;:::i;1310:84:4:-;1380:7;;;;1310:84;;5590:38:27;;;;;;7313:32;;;;;;12820:107;;;:::i;6759:29::-;;;;;;3515:23;;;;;-1:-1:-1;;;;;3515:23:27;;;;;;-1:-1:-1;;;;;5298:32:38;;;5280:51;;5268:2;5253:18;3515:23:27;5109:228:38;3699:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3799:18:6;3773:7;3799:18;;;:9;:18;;;;;;;3699:125;25274:726:27;;;:::i;5099:30::-;;;;;-1:-1:-1;;;5099:30:27;;-1:-1:-1;;;;;5099:30:27;;;19842:859;;;;;;:::i;:::-;;:::i;5685:42::-;;;;;;38059:130;;;:::i;6860:31::-;;;;;;6957:65;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5834:42;;;;;;2658:102:6;;;:::i;7415:30:27:-;;;;;;3361:28;;;;;;6749:405:6;;;;;;:::i;:::-;;:::i;4027:172::-;;;;;;:::i;:::-;;:::i;21510:352:27:-;;;;;;:::i;:::-;;:::i;18145:251::-;;;;;;:::i;:::-;;:::i;35883:981::-;;;;;;:::i;:::-;;:::i;34469:1107::-;;;;;;:::i;:::-;;:::i;3798:23::-;;;;;;39164:142;;;:::i;6671:34::-;;;;;;:::i;:::-;;:::i;22815:226::-;;;;;;:::i;:::-;;:::i;29647:4399::-;;;;;;:::i;:::-;;:::i;17174:367::-;;;;;;:::i;:::-;;:::i;6335:30::-;;;;;-1:-1:-1;;;6335:30:27;;-1:-1:-1;;;;;6335:30:27;;;;;;-1:-1:-1;;;;;6997:47:38;;;6979:66;;6967:2;6952:18;6335:30:27;6833:218:38;4448:33:27;;;;;-1:-1:-1;;;;;4448:33:27;;;4257:149:6;;;;;;:::i;:::-;-1:-1:-1;;;;;4372:18:6;;;4346:7;4372:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4257:149;3431:21:27;;;;;-1:-1:-1;;;;;3431:21:27;;;3995:32;;;;;;16773:115;;;;;;:::i;:::-;;:::i;22188:483::-;;;;;;:::i;:::-;;:::i;5346:36::-;;;;;;4118:33;;;;;-1:-1:-1;;;;;4118:33:27;;;6104:36;;;;;-1:-1:-1;;;;;6104:36:27;;;6227:25;;;;;-1:-1:-1;;;6227:25:27;;-1:-1:-1;;;;;6227:25:27;;;14547:503;;;;;;:::i;:::-;;:::i;4736:28::-;;;;;-1:-1:-1;;;;;4736:28:27;;;1938:38;;;;;;;;;;;;;;;-1:-1:-1;;;1938:38:27;;;;;2447:98:6;2501:13;2533:5;2526:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:98;:::o;19132:394:27:-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;19206:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;19206:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;;;;;;;;;19334:12:::1;::::0;-1:-1:-1;;;19334:12:27;::::1;-1:-1:-1::0;;;;;19334:12:27::1;-1:-1:-1::0;;;;;19314:32:27;::::1;;;19306:78;;;::::0;-1:-1:-1;;;19306:78:27;;10217:2:38;19306:78:27::1;::::0;::::1;10199:21:38::0;10256:2;10236:18;;;10229:30;10295:34;10275:18;;;10268:62;-1:-1:-1;;;10346:18:38;;;10339:31;10387:19;;19306:78:27::1;10015:397:38::0;19306:78:27::1;19433:13;:32:::0;;-1:-1:-1;;19433:32:27::1;-1:-1:-1::0;;;;;19433:32:27;::::1;::::0;;::::1;::::0;;;19481:38:::1;::::0;6979:66:38;;;19481:38:27::1;::::0;6967:2:38;6952:18;19481:38:27::1;;;;;;;;19132:394:::0;;:::o;4544:166:6:-;4627:4;4643:39;902:10:11;4666:7:6;4675:6;4643:8;:39::i;:::-;-1:-1:-1;4699:4:6;4544:166;;;;;:::o;21199:112:27:-;21252:18;21289:15;21282:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21282:22:27;;;;;;;;;;;;;;;;;;;;;;21199:112;:::o;29070:148::-;29142:7;29168:43;29186:14;:12;:14::i;:::-;29202:8;;29168:12;;:43;:17;:43::i;18517:251::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;18599:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;18599:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;18659:18:::1;:40:::0;;-1:-1:-1;;;;;;18659:40:27::1;-1:-1:-1::0;;;;;18659:40:27;::::1;::::0;;::::1;::::0;;;18715:46:::1;::::0;::::1;::::0;-1:-1:-1;;18715:46:27::1;18517:251:::0;;:::o;26044:1280::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;26091:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;26091:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;26205:12:::1;::::0;26191:11:::1;::::0;:26:::1;::::0;-1:-1:-1;;;;;;;;26205:12:27;;::::1;::::0;::::1;::::0;-1:-1:-1;;;26191:11:27;::::1;;:26;:::i;:::-;-1:-1:-1::0;;;;;26171:47:27::1;:15;:47;;26163:97;;;::::0;-1:-1:-1;;;26163:97:27;;10992:2:38;26163:97:27::1;::::0;::::1;10974:21:38::0;11031:2;11011:18;;;11004:30;11070:34;11050:18;;;11043:62;-1:-1:-1;;;11121:18:38;;;11114:35;11166:19;;26163:97:27::1;10790:401:38::0;26163:97:27::1;26297:14;:16:::0;;26271:23:::1;::::0;;26297:16:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;26324:26:27::1;26353:27:::0;;;:10:::1;:27;::::0;;;;;;;;26324:56;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;26271:42;;-1:-1:-1;26324:56:27;26498:16;26490:67:::1;;;::::0;-1:-1:-1;;;26490:67:27;;11538:2:38;26490:67:27::1;::::0;::::1;11520:21:38::0;11577:2;11557:18;;;11550:30;11616:34;11596:18;;;11589:62;-1:-1:-1;;;11667:18:38;;;11660:36;11713:19;;26490:67:27::1;11336:402:38::0;26490:67:27::1;26568:24;26595:42;26612:14;:12;:14::i;26595:42::-;26568:69;;26675:12;:10;:12::i;:::-;26655:16;:32;;26647:77;;;::::0;-1:-1:-1;;;26647:77:27;;11945:2:38;26647:77:27::1;::::0;::::1;11927:21:38::0;;;11964:18;;;11957:30;12023:34;12003:18;;;11996:62;12075:18;;26647:77:27::1;11743:356:38::0;26647:77:27::1;26735:33;26749:4;26756:11;26735:5;:33::i;:::-;26845:17;::::0;:22;26841:239:::1;;26927:17;::::0;26883:19:::1;::::0;26905:48:::1;::::0;:16;;26946:6:::1;26905:21;:48::i;:::-;26883:70:::0;-1:-1:-1;26967:31:27::1;26883:70:::0;26967:31;::::1;:::i;:::-;27037:18;::::0;27013:10:::1;::::0;26967:31;;-1:-1:-1;27013:56:27::1;::::0;-1:-1:-1;;;;;27013:10:27;;::::1;::::0;27037:18:::1;27057:11:::0;27013:23:::1;:56::i;:::-;26869:211;26841:239;27170:8;::::0;27135:44:::1;::::0;:16;;27157:11;;27135:21:::1;:44::i;:::-;27090:27;::::0;;;:10:::1;:27;::::0;;;;:42:::1;;:89:::0;;;;27189:16:::1;:36:::0;;27209:16;;27090:27;27189:36:::1;::::0;27209:16;;27189:36:::1;:::i;:::-;::::0;;;-1:-1:-1;;27241:76:27::1;::::0;;3093:25:38;;;3149:2;3134:18;;3127:34;;;27275:10:27::1;::::0;27258:15;;27241:76:::1;::::0;3066:18:38;27241:76:27::1;;;;;;;26103:1221;;;;26044:1280:::0;:::o;5177:478:6:-;5313:4;5329:36;5339:6;5347:9;5358:6;5329:9;:36::i;:::-;-1:-1:-1;;;;;5403:19:6;;5376:24;5403:19;;;:11;:19;;;;;;;;902:10:11;5403:33:6;;;;;;;;5454:26;;;;5446:79;;;;-1:-1:-1;;;5446:79:6;;12569:2:38;5446:79:6;;;12551:21:38;12608:2;12588:18;;;12581:30;12647:34;12627:18;;;12620:62;-1:-1:-1;;;12698:18:38;;;12691:38;12746:19;;5446:79:6;12367:404:38;5446:79:6;5559:57;5568:6;902:10:11;5609:6:6;5590:16;:25;5559:8;:57::i;:::-;5644:4;5637:11;;;5177:478;;;;;;:::o;16356:136:27:-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;16414:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;16414:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;16436:4:::1;:14:::0;;-1:-1:-1;;;;;;16436:14:27::1;-1:-1:-1::0;;;;;16436:14:27;::::1;::::0;;::::1;::::0;;;16465:20:::1;::::0;5280:51:38;;;16465:20:27::1;::::0;5268:2:38;5253:18;16465:20:27::1;5109:228:38::0;17650:374:27;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;17725:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;17725:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;17830:4:::1;17813:13;:21;;17805:75;;;::::0;-1:-1:-1;;;17805:75:27;;12978:2:38;17805:75:27::1;::::0;::::1;12960:21:38::0;13017:2;12997:18;;;12990:30;13056:34;13036:18;;;13029:62;-1:-1:-1;;;13107:18:38;;;13100:39;13156:19;;17805:75:27::1;12776:405:38::0;17805:75:27::1;17929:17;:33:::0;;;17978:39:::1;::::0;2631:25:38;;;17978:39:27::1;::::0;2619:2:38;2604:18;17978:39:27::1;2485:177:38::0;6050:212:6;902:10:11;6138:4:6;6186:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6186:34:6;;;;;;;;;;6138:4;;6154:80;;6177:7;;6186:47;;6223:10;;6186:47;:::i;:::-;6154:8;:80::i;37758:135:27:-;-1:-1:-1;;;;;3799:18:6;;37824:7:27;3799:18:6;;;:9;:18;;;;;;37850:36:27;;29070:148;:::i;37215:342::-;37260:7;37322:19;37344:13;3622:12:6;;;3535:106;37344:13:27;37322:35;-1:-1:-1;37454:16:27;37450:37;;-1:-1:-1;;37479:8:27;;;37215:342::o;37450:37::-;37505:45;37528:11;37541:8;;37505:17;:15;:17::i;:::-;:22;:45;:22;:45::i;:::-;37498:52;;;37215:342;:::o;24081:1115::-;24166:14;;24232:10;24140:23;24210:33;;;:21;:33;;;;;:39;24264:14;24260:752;;24436:10;24414:33;;;;:21;:33;;;;;:57;;;24485:40;;:49;;;24260:752;;;24885:15;24872:9;:28;24864:73;;;;-1:-1:-1;;;24864:73:27;;13388:2:38;24864:73:27;;;13370:21:38;;;13407:18;;;13400:30;13466:34;13446:18;;;13439:62;13518:18;;24864:73:27;13186:356:38;24864:73:27;24973:10;24951:33;;;;:21;:33;;;;;:40;;:50;;24995:6;;24951:33;:50;;24995:6;;24951:50;:::i;:::-;;;;-1:-1:-1;;24260:752:27;25022:27;;;;:10;:27;;;;;:49;;25065:6;;25022:27;:49;;25065:6;;25022:49;:::i;:::-;;;;-1:-1:-1;25090:31:27;;-1:-1:-1;25107:4:27;25114:6;25090:8;:31::i;:::-;25082:40;;;;;;25138:51;;2631:25:38;;;25170:10:27;;25153:15;;25138:51;;2619:2:38;2604:18;25138:51:27;;;;;;;;24130:1066;;24081:1115;:::o;28692:152::-;28764:7;28790:47;28812:14;:12;:14::i;:::-;28828:8;;28790:16;;:47;:21;:47::i;38311:674::-;38452:11;;38499:12;;38356:7;;-1:-1:-1;;;;;;;;38452:11:27;;;;;;-1:-1:-1;;;38499:12:27;;;38616:33;38499:12;38452:11;38616:33;:::i;:::-;38597:15;:52;38593:66;;38658:1;38651:8;;;;38311:674;:::o;38593:66::-;38751:15;;-1:-1:-1;;;38751:15:27;;-1:-1:-1;;;;;38751:15:27;38963;38925:33;38943:15;38925;:33;:::i;:::-;38902:57;;:19;:57;:::i;:::-;38901:77;;;;:::i;:::-;38879:99;;:19;:99;:::i;:::-;38872:106;;;;;38311:674;:::o;23611:199::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;23701:14;;23688:2;;-1:-1:-1;;;;;12457:4:27;;;;:12;;:42;;23688:2;;12484:4;;-1:-1:-1;;;;;;12491:7:27;;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;23727:76:::1;23736:2;23750:33;23766:16;23750:15;:33::i;:::-;23741:42;;;23786:16;23727:8;:76::i;:::-;23611:199:::0;;;;;:::o;15861:213::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;15938:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;15938:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;15960:16:::1;:23:::0;;;15993:17:::1;:25:::0;;;16034:33:::1;::::0;;3093:25:38;;;3149:2;3134:18;;3127:34;;;16034:33:27::1;::::0;3066:18:38;16034:33:27::1;;;;;;;;15861:213:::0;;;:::o;12820:107::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;12866:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;12866:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;1380:7:4;;;;12888:32:27::1;;12912:8;:6;:8::i;:::-;12820:107:::0;:::o;12888:32::-:1;12899:10;:8;:10::i;25274:726::-:0;25344:14;;25424:10;25318:23;25402:33;;;:21;:33;;;;;;;;;25368:67;;;;;;;;;;;;;;;;;;;;;;;;;25446:57;;;;-1:-1:-1;;;25446:57:27;;14144:2:38;25446:57:27;;;14126:21:38;14183:2;14163:18;;;14156:30;14222:28;14202:18;;;14195:56;14268:18;;25446:57:27;13942:350:38;25446:57:27;25521:13;;:31;-1:-1:-1;25513:77:27;;;;-1:-1:-1;;;25513:77:27;;14499:2:38;25513:77:27;;;14481:21:38;14538:2;14518:18;;;14511:30;14577:34;14557:18;;;14550:62;-1:-1:-1;;;14628:18:38;;;14621:31;14669:19;;25513:77:27;14297:397:38;25513:77:27;25623:10;25643:1;25601:33;;;:21;:33;;;;;;;;:43;;;25654:40;;;;:44;;;25767:13;;25756:25;;:10;:25;;;;;:40;;25798:8;;25736:14;;;;:71;;:14;;25756:40;25736:19;:71::i;:::-;25709:98;;25838:16;25818;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;25864:10:27;;:53;;-1:-1:-1;;;;;25864:10:27;25888;25900:16;25864:23;:53::i;:::-;25933:60;;2631:25:38;;;25964:10:27;;25947:15;;25933:60;;2619:2:38;2604:18;25933:60:27;2485:177:38;19842:859:27;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;19913:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;19913:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;20022:20:27;::::1;20014:70;;;::::0;-1:-1:-1;;;20014:70:27;;14901:2:38;20014:70:27::1;::::0;::::1;14883:21:38::0;14940:2;14920:18;;;14913:30;14979:34;14959:18;;;14952:62;-1:-1:-1;;;15030:18:38;;;15023:35;15075:19;;20014:70:27::1;14699:401:38::0;20014:70:27::1;20188:8;20169:15;-1:-1:-1::0;;;;;20169:27:27::1;;;20161:71;;;::::0;-1:-1:-1;;;20161:71:27;;15307:2:38;20161:71:27::1;::::0;::::1;15289:21:38::0;15346:2;15326:18;;;15319:30;15385:33;15365:18;;;15358:61;15436:18;;20161:71:27::1;15105:355:38::0;20161:71:27::1;20321:12;::::0;-1:-1:-1;;;20321:12:27;::::1;-1:-1:-1::0;;;;;20321:12:27::1;20317:378;;20405:12;:30:::0;;-1:-1:-1;;;;20405:30:27::1;-1:-1:-1::0;;;;;;;;20405:30:27;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;20455:48:::1;::::0;4795:50:38;;;20475:10:27::1;::::0;20455:48:::1;::::0;4783:2:38;4768:18;20455:48:27::1;;;;;;;19842:859:::0;;:::o;20317:378::-:1;20586:16;:34:::0;;-1:-1:-1;;;;;20586:34:27::1;-1:-1:-1::0;;;;;;;;20586:34:27;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;20640:44:::1;::::0;4795:50:38;;;20640:44:27::1;::::0;4783:2:38;4768:18;20640:44:27::1;4651:200:38::0;38059:130:27;38166:16;;38128:10;;:35;;-1:-1:-1;;;38128:35:27;;38157:4;38128:35;;;5280:51:38;38102:7:27;;38166:16;-1:-1:-1;;;;;38128:10:27;;:20;;5253:18:38;;38128:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;;;:::i;:::-;38121:61;;38059:130;:::o;2658:102:6:-;2714:13;2746:7;2739:14;;;;;:::i;6749:405::-;902:10:11;6842:4:6;6885:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6885:34:6;;;;;;;;;;6937:35;;;;6929:85;;;;-1:-1:-1;;;6929:85:6;;15856:2:38;6929:85:6;;;15838:21:38;15895:2;15875:18;;;15868:30;15934:34;15914:18;;;15907:62;-1:-1:-1;;;15985:18:38;;;15978:35;16030:19;;6929:85:6;15654:401:38;6929:85:6;7048:67;902:10:11;7071:7:6;7099:15;7080:16;:34;7048:8;:67::i;:::-;-1:-1:-1;7143:4:6;;6749:405;-1:-1:-1;;;6749:405:6:o;4027:172::-;4113:4;4129:42;902:10:11;4153:9:6;4164:6;4129:9;:42::i;21510:352:27:-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;21591:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;21591:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;1892:2:::1;21662:33:::0;::::1;;21654:79;;;::::0;-1:-1:-1;;;21654:79:27;;16262:2:38;21654:79:27::1;::::0;::::1;16244:21:38::0;16301:2;16281:18;;;16274:30;16340:34;16320:18;;;16313:62;-1:-1:-1;;;16391:18:38;;;16384:31;16432:19;;21654:79:27::1;16060:397:38::0;21654:79:27::1;21785:26;:15;21803:8:::0;;21785:26:::1;:::i;:::-;;21827:28;21846:8;;21827:28;;;;;;;:::i;18145:251::-:0;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;18227:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;18227:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;18287:18:::1;:40:::0;;-1:-1:-1;;;;;;18287:40:27::1;-1:-1:-1::0;;;;;18287:40:27;::::1;::::0;;::::1;::::0;;;18343:46:::1;::::0;::::1;::::0;-1:-1:-1;;18343:46:27::1;18145:251:::0;;:::o;35883:981::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;35981:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;35981:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;36082:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;::::1;;36074:86;;;::::0;-1:-1:-1;;;36074:86:27;;17392:2:38;36074:86:27::1;::::0;::::1;17374:21:38::0;17431:2;17411:18;;;17404:30;17470:34;17450:18;;;17443:62;-1:-1:-1;;;17521:18:38;;;17514:38;17569:19;;36074:86:27::1;17190:404:38::0;36074:86:27::1;36256:21:::0;36248:77:::1;;;::::0;-1:-1:-1;;;36248:77:27;;17801:2:38;36248:77:27::1;::::0;::::1;17783:21:38::0;17840:2;17820:18;;;17813:30;17879:34;17859:18;;;17852:62;-1:-1:-1;;;17930:18:38;;;17923:41;17981:19;;36248:77:27::1;17599:407:38::0;36248:77:27::1;36452:32;:16;:30;:32::i;:::-;-1:-1:-1::0;;;;;36415:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:69;;:33:::1;::::0;:69:::1;::::0;;;::::1;::::0;::::1;-1:-1:-1::0;;;;;36415:69:27::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;36415:69:27::1;;;;;-1:-1:-1::0;;;;;36415:69:27::1;;;;;;36593:16;36568:21;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;36625:58:27::1;::::0;2631:25:38;;;-1:-1:-1;;;;;36625:58:27;::::1;::::0;36644:10:::1;::::0;36625:58:::1;::::0;2619:2:38;2604:18;36625:58:27::1;;;;;;;36777:35;::::0;-1:-1:-1;;;36777:35:27;;::::1;::::0;::::1;2631:25:38::0;;;-1:-1:-1;;;;;36777:17:27;::::1;::::0;::::1;::::0;2604:18:38;;36777:35:27::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;::::0;36769:88:::1;;;::::0;-1:-1:-1;;;36769:88:27;;18727:2:38;36769:88:27::1;::::0;::::1;18709:21:38::0;18766:2;18746:18;;;18739:30;18805:34;18785:18;;;18778:62;-1:-1:-1;;;18856:18:38;;;18849:33;18899:19;;36769:88:27::1;18525:399:38::0;36769:88:27::1;35883:981:::0;;;:::o;34469:1107::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;34566:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;34566:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;34667:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;::::1;;34659:85;;;::::0;-1:-1:-1;;;34659:85:27;;19131:2:38;34659:85:27::1;::::0;::::1;19113:21:38::0;19170:2;19150:18;;;19143:30;19209:34;19189:18;;;19182:62;-1:-1:-1;;;19260:18:38;;;19253:37;19307:19;;34659:85:27::1;18929:403:38::0;34659:85:27::1;34839:21:::0;34831:76:::1;;;::::0;-1:-1:-1;;;34831:76:27;;19539:2:38;34831:76:27::1;::::0;::::1;19521:21:38::0;19578:2;19558:18;;;19551:30;19617:34;19597:18;;;19590:62;-1:-1:-1;;;19668:18:38;;;19661:40;19718:19;;34831:76:27::1;19337:406:38::0;34831:76:27::1;35013:16;34988:21;;:41;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;35153:32:27::1;::::0;-1:-1:-1;35153:16:27;:30:::1;:32::i;:::-;-1:-1:-1::0;;;;;35116:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:69;;:33:::1;::::0;:69:::1;::::0;;;::::1;::::0;::::1;-1:-1:-1::0;;;;;35116:69:27::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;35116:69:27::1;;;;;-1:-1:-1::0;;;;;35116:69:27::1;;;;;;35229:8;-1:-1:-1::0;;;;;35201:55:27::1;35217:10;-1:-1:-1::0;;;;;35201:55:27::1;;35239:16;35201:55;;;;2631:25:38::0;;2619:2;2604:18;;2485:177;35201:55:27::1;;;;;;;;35338:10;::::0;:59:::1;::::0;-1:-1:-1;;;;;35338:10:27::1;35369:8:::0;35380:16;35338:22:::1;:59::i;:::-;35493:34;::::0;-1:-1:-1;;;35493:34:27;;::::1;::::0;::::1;2631:25:38::0;;;-1:-1:-1;;;;;35493:16:27;::::1;::::0;::::1;::::0;2604:18:38;;35493:34:27::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;::::0;35485:84:::1;;;::::0;-1:-1:-1;;;35485:84:27;;20193:2:38;35485:84:27::1;::::0;::::1;20175:21:38::0;;;20212:18;;;20205:30;20271:34;20251:18;;;20244:62;20323:18;;35485:84:27::1;19991:356:38::0;39164:142:27;39220:7;39287:12;:10;:12::i;:::-;39270:14;:12;:14::i;:::-;39246:21;;:38;;;;:::i;:::-;:53;;;;:::i;6671:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6671:34:27;;-1:-1:-1;6671:34:27;:::o;22815:226::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;22883:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;22883:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;22949:25:27;::::1;22985:5;22949:25:::0;;;:15:::1;:25;::::0;;;;;:41;;-1:-1:-1;;22949:41:27::1;::::0;;23006:28;::::1;::::0;22985:5;23006:28:::1;22815:226:::0;;:::o;29647:4399::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;29719:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;29719:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;29841:12:::1;::::0;29827:11:::1;::::0;:26:::1;::::0;-1:-1:-1;;;;;;;;29841:12:27;;::::1;::::0;::::1;::::0;-1:-1:-1;;;29827:11:27;::::1;;:26;:::i;:::-;-1:-1:-1::0;;;;;29808:45:27::1;:15;:45;29804:788;;30075:14;:12;:14::i;:::-;30049:23;:40:::0;30148:27:::1;::::0;30133:42:::1;::::0;:12:::1;:42;:::i;:::-;30103:27;:72:::0;30219:12:::1;30189:27;:42:::0;30303:22:::1;:48:::0;;-1:-1:-1;;30303:48:27::1;30335:15;-1:-1:-1::0;;;;;30303:48:27::1;;::::0;;29804:788:::1;;;30538:13;::::0;30513:22:::1;::::0;:38:::1;::::0;-1:-1:-1;;;;;30538:13:27::1;::::0;-1:-1:-1;;;;;30513:22:27::1;:38;:::i;:::-;-1:-1:-1::0;;;;;30494:57:27::1;:15;:57;;30486:95;;;::::0;-1:-1:-1;;;30486:95:27;;20812:2:38;30486:95:27::1;::::0;::::1;20794:21:38::0;20851:2;20831:18;;;20824:30;20890:27;20870:18;;;20863:55;20935:18;;30486:95:27::1;20610:349:38::0;30486:95:27::1;30697:21;::::0;30662:32:::1;30697:21:::0;30662:32;31053:1433:::1;31073:21:::0;;::::1;31053:1433;;;31169:18;31190:10;;31201:1;31190:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;31403:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:33;31169:34;;-1:-1:-1;31403:33:27::1;;31395:73;;;::::0;-1:-1:-1;;;31395:73:27;;21298:2:38;31395:73:27::1;::::0;::::1;21280:21:38::0;21337:2;21317:18;;;21310:30;21376:29;21356:18;;;21349:57;21423:18;;31395:73:27::1;21096:351:38::0;31395:73:27::1;-1:-1:-1::0;;;;;31576:25:27;::::1;31547:26;31576:25:::0;;;:15:::1;:25;::::0;;;;;;;:33;31652:30;;-1:-1:-1;;;31652:30:27;;;;31576:33:::1;::::0;;::::1;-1:-1:-1::0;;;;;31576:33:27::1;::::0;:25;31652:28:::1;::::0;:30:::1;::::0;;::::1;::::0;;;;;;;31547:26;31576:25;31652:30:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31623:59;;31786:34;:18;:32;:34::i;:::-;-1:-1:-1::0;;;;;31750:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;:70;;-1:-1:-1;;;;;31750:70:27;;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;32116:18;32068:45:::1;32095:18:::0;32068:24;:45:::1;:::i;:::-;:66;;;;:::i;:::-;32041:93;;32277:18;32256;:39;:148;;32403:1;32256:148;;;32314:39;32335:18:::0;32314;:39:::1;:::i;:::-;32234:170;::::0;;::::1;:::i;:::-;;;31101:1385;;;31096:3;;;;;:::i;:::-;;;;31053:1433;;;-1:-1:-1::0;32611:17:27::1;::::0;32565:19:::1;::::0;32587:48:::1;::::0;:18;;32630:4:::1;32587:23;:48::i;:::-;32565:70:::0;-1:-1:-1;32730:16:27;;;::::1;::::0;:52:::1;;-1:-1:-1::0;32750:18:27::1;::::0;-1:-1:-1;;;;;32750:18:27::1;:32:::0;::::1;32730:52;32726:152;;;32804:18;::::0;32798:69:::1;::::0;-1:-1:-1;;;;;32804:18:27::1;32824:42;32841:14;:12;:14::i;:::-;32857:8;::::0;32824:11;;:42;:16:::1;:42::i;:::-;32798:5;:69::i;:::-;32980:24;33007:67;33046:11;33025:18;33008:14;:12;:14::i;:::-;:35;;;;:::i;:::-;:49;;;;:::i;:::-;33007:65;:67::i;:::-;33084:15;:34:::0;;-1:-1:-1;;;;;33084:34:27;;::::1;-1:-1:-1::0;;;33084:34:27;::::1;::::0;;;::::1;;::::0;;;32980:94;;-1:-1:-1;;;33193:52:27::1;::::0;:24;:52:::1;:::i;:::-;33166:79;;33273:97;33297:16;33323;-1:-1:-1::0;;;;;33315:25:27::1;33342:27;;33273:23;:97::i;:::-;33255:15;:115:::0;33432:21:::1;:48:::0;;;33537:11:::1;:37:::0;;-1:-1:-1;;33537:37:27::1;-1:-1:-1::0;;;33558:15:27::1;-1:-1:-1::0;;;;;33537:37:27::1;;;::::0;;33590:31:::1;::::0;33598:10:::1;::::0;33590:31:::1;::::0;::::1;::::0;33610:10;;;;33590:31:::1;:::i;:::-;;;;;;;;33696:16;::::0;-1:-1:-1;;;33696:16:27;::::1;-1:-1:-1::0;;;;;33696:16:27::1;33774:20:::0;;33770:270:::1;;33851:12;:30:::0;;-1:-1:-1;;;;;33941:20:27;-1:-1:-1;;;;;;;;33851:30:27;::::1;::::0;;::::1;-1:-1:-1::0;;;;;33941:20:27;;;;;;;;33981:48:::1;::::0;4795:50:38;;;34001:10:27::1;::::0;33981:48:::1;::::0;4783:2:38;4768:18;33981:48:27::1;;;;;;;33770:270;29731:4315;;;;;;;29647:4399:::0;;;:::o;17174:367::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;17249:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;17249:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;17354:4:::1;17337:13;:21;;17329:68;;;::::0;-1:-1:-1;;;17329:68:27;;21654:2:38;17329:68:27::1;::::0;::::1;21636:21:38::0;21693:2;21673:18;;;21666:30;21732:34;21712:18;;;21705:62;-1:-1:-1;;;21783:18:38;;;21776:32;21825:19;;17329:68:27::1;21452:398:38::0;17329:68:27::1;17446:17;:33:::0;;;17495:39:::1;::::0;2631:25:38;;;17495:39:27::1;::::0;2619:2:38;2604:18;17495:39:27::1;2485:177:38::0;16773:115:27;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;16837:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;16837:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;-1:-1:-1;16859:13:27::1;:22:::0;16773:115::o;22188:483::-;12457:4;;:42;;-1:-1:-1;;;12457:42:27;;22253:10;;-1:-1:-1;;;;;12457:4:27;;:12;;:42;;22253:10;;12484:4;;-1:-1:-1;;;;;;12457:4:27;12491:7;;;12457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12449:67;;;;-1:-1:-1;;;12449:67:27;;;;;;;:::i;:::-;22484:10:::1;::::0;22459:21:::1;::::0;;-1:-1:-1;;;22459:21:27;;;;-1:-1:-1;;;;;22484:10:27;;::::1;::::0;22459:19;::::1;::::0;::::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:19;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22459:35:27::1;;22451:79;;;::::0;-1:-1:-1;;;22451:79:27;;22339:2:38;22451:79:27::1;::::0;::::1;22321:21:38::0;22378:2;22358:18;;;22351:30;22417:33;22397:18;;;22390:61;22468:18;;22451:79:27::1;22137:355:38::0;22451:79:27::1;-1:-1:-1::0;;;;;22583:25:27;::::1;;::::0;;;:15:::1;:25;::::0;;;;;:40;;-1:-1:-1;;22583:40:27::1;22619:4;22583:40;::::0;;22639:25;::::1;::::0;22583;22639::::1;22188:483:::0;;:::o;14547:503::-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;14760:283:27::1;14786:11;14811:5;14830:19;14863:16;1661:14;;;;;;;;;;;;;-1:-1:-1::0;;;1661:14:27::1;;::::0;14929:11:::1;-1:-1:-1::0;;;;;14929:16:27::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;14929:18:27::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1764:15;;;;;;;;;;;;;-1:-1:-1::0;;;1764:15:27::1;;::::0;14900:59:::1;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1559:13;;;;;;;;;;;;;-1:-1:-1::0;;;1559:13:27::1;;::::0;15010:11:::1;-1:-1:-1::0;;;;;15010:18:27::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;15010:20:27::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;14981:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14760:12;:283::i;:::-;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1667:66;1391:348;14547:503:27;;;;:::o;10325:370:6:-;-1:-1:-1;;;;;10456:19:6;;10448:68;;;;-1:-1:-1;;;10448:68:6;;25269:2:38;10448:68:6;;;25251:21:38;25308:2;25288:18;;;25281:30;25347:34;25327:18;;;25320:62;-1:-1:-1;;;25398:18:38;;;25391:34;25442:19;;10448:68:6;25067:400:38;10448:68:6;-1:-1:-1;;;;;10534:21:6;;10526:68;;;;-1:-1:-1;;;10526:68:6;;25674:2:38;10526:68:6;;;25656:21:38;25713:2;25693:18;;;25686:30;25752:34;25732:18;;;25725:62;-1:-1:-1;;;25803:18:38;;;25796:32;25845:19;;10526:68:6;25472:398:38;10526:68:6;-1:-1:-1;;;;;10605:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10656:32;;2631:25:38;;;10656:32:6;;2604:18:38;10656:32:6;2485:177:38;818:502:32;1015:9;;;1116;;1130;;;1127:16;;1113:31;1103:87;;1174:1;1171;1164:12;1103:87;1288:16;;818:502;-1:-1:-1;;818:502:32:o;9326:576:6:-;-1:-1:-1;;;;;9409:21:6;;9401:67;;;;-1:-1:-1;;;9401:67:6;;26077:2:38;9401:67:6;;;26059:21:38;26116:2;26096:18;;;26089:30;26155:34;26135:18;;;26128:62;-1:-1:-1;;;26206:18:38;;;26199:31;26247:19;;9401:67:6;25875:397:38;9401:67:6;-1:-1:-1;;;;;9564:18:6;;9539:22;9564:18;;;:9;:18;;;;;;9600:24;;;;9592:71;;;;-1:-1:-1;;;9592:71:6;;26479:2:38;9592:71:6;;;26461:21:38;26518:2;26498:18;;;26491:30;26557:34;26537:18;;;26530:62;-1:-1:-1;;;26608:18:38;;;26601:32;26650:19;;9592:71:6;26277:398:38;9592:71:6;-1:-1:-1;;;;;9697:18:6;;;;;;:9;:18;;;;;9718:23;;;9697:44;;9761:12;:22;;9735:6;;9697:18;9761:22;;9735:6;;9761:22;:::i;:::-;;;;-1:-1:-1;;9799:37:6;;2631:25:38;;;9825:1:6;;-1:-1:-1;;;;;9799:37:6;;;;;2619:2:38;2604:18;9799:37:6;;;;;;;35883:981:27;;;:::o;678:216:9:-;828:58;;-1:-1:-1;;;;;26872:32:38;;828:58:9;;;26854:51:38;26921:18;;;26914:34;;;801:86:9;;821:5;;-1:-1:-1;;;851:23:9;26827:18:38;;828:58:9;;;;-1:-1:-1;;828:58:9;;;;;;;;;;;;;;-1:-1:-1;;;;;828:58:9;-1:-1:-1;;;;;;828:58:9;;;;;;;;;;801:19;:86::i;1326:574:32:-;1530:16;;;1672:9;;1665:17;1687:9;;1701;;;1698:23;;1684:38;1661:62;1651:118;;1753:1;1750;1743:12;1651:118;1875:9;;;;;1326:574;-1:-1:-1;;1326:574:32:o;7628:713:6:-;-1:-1:-1;;;;;7763:20:6;;7755:70;;;;-1:-1:-1;;;7755:70:6;;27161:2:38;7755:70:6;;;27143:21:38;27200:2;27180:18;;;27173:30;27239:34;27219:18;;;27212:62;-1:-1:-1;;;27290:18:38;;;27283:35;27335:19;;7755:70:6;26959:401:38;7755:70:6;-1:-1:-1;;;;;7843:23:6;;7835:71;;;;-1:-1:-1;;;7835:71:6;;27567:2:38;7835:71:6;;;27549:21:38;27606:2;27586:18;;;27579:30;27645:34;27625:18;;;27618:62;-1:-1:-1;;;27696:18:38;;;27689:33;27739:19;;7835:71:6;27365:399:38;7835:71:6;-1:-1:-1;;;;;7999:17:6;;7975:21;7999:17;;;:9;:17;;;;;;8034:23;;;;8026:74;;;;-1:-1:-1;;;8026:74:6;;27971:2:38;8026:74:6;;;27953:21:38;28010:2;27990:18;;;27983:30;28049:34;28029:18;;;28022:62;-1:-1:-1;;;28100:18:38;;;28093:36;28146:19;;8026:74:6;27769:402:38;8026:74:6;-1:-1:-1;;;;;8134:17:6;;;;;;;:9;:17;;;;;;8154:22;;;8134:42;;8196:20;;;;;;;;:30;;8170:6;;8134:17;8196:30;;8170:6;;8196:30;:::i;:::-;;;;;;;;8259:9;-1:-1:-1;;;;;8242:35:6;8251:6;-1:-1:-1;;;;;8242:35:6;;8270:6;8242:35;;;;2631:25:38;;2619:2;2604:18;;2485:177;8242:35:6;;;;;;;;8288:46;7745:596;7628:713;;;:::o;27605:858:27:-;1380:7:4;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:4;;28378:2:38;1615:38:4;;;28360:21:38;28417:2;28397:18;;;28390:30;-1:-1:-1;;;28436:18:38;;;28429:46;28492:18;;1615:38:4;28176:340:38;1615:38:4;27748:22:27::1;27810:16;27773:34;27793:13;27803:2;-1:-1:-1::0;;;;;3799:18:6;3773:7;3799:18;;;:9;:18;;;;;;;3699:125;27773:34:27::1;:53;;;;:::i;:::-;27748:78;;27836:23;27882:16;27862:17;:15;:17::i;:::-;:36;;;;:::i;:::-;27836:62;;27935:16;;27917:14;:34;;27909:84;;;::::0;-1:-1:-1;;;27909:84:27;;28723:2:38;27909:84:27::1;::::0;::::1;28705:21:38::0;28762:2;28742:18;;;28735:30;28801:34;28781:18;;;28774:62;-1:-1:-1;;;28852:18:38;;;28845:35;28897:19;;27909:84:27::1;28521:401:38::0;27909:84:27::1;28030:17;;28011:15;:36;;28003:87;;;::::0;-1:-1:-1;;;28003:87:27;;29129:2:38;28003:87:27::1;::::0;::::1;29111:21:38::0;29168:2;29148:18;;;29141:30;29207:34;29187:18;;;29180:62;-1:-1:-1;;;29258:18:38;;;29251:36;29304:19;;28003:87:27::1;28927:402:38::0;28003:87:27::1;28167:17;28173:2;28177:6;28167:5;:17::i;:::-;28200:41;::::0;2631:25:38;;;-1:-1:-1;;;;;28200:41:27;::::1;::::0;28208:10:::1;::::0;28200:41:::1;::::0;2619:2:38;2604:18;28200:41:27::1;;;;;;;28384:10;::::0;:72:::1;::::0;-1:-1:-1;;;;;28384:10:27::1;28412;28432:4;28439:16:::0;28384:27:::1;:72::i;2075:115:4:-:0;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:4;;28378:2:38;1615:38:4;;;28360:21:38;28417:2;28397:18;;;28390:30;-1:-1:-1;;;28436:18:38;;;28429:46;28492:18;;1615:38:4;28176:340:38;1615:38:4;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:4::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;2170:12:4::1;2163:20;::::0;-1:-1:-1;;;;;5298:32:38;;;5280:51;;5268:2;5253:18;2163:20:4::1;;;;;;;2075:115::o:0;2322:117::-;1380:7;;;;1881:41;;;;-1:-1:-1;;;1881:41:4;;29536:2:38;1881:41:4;;;29518:21:38;29575:2;29555:18;;;29548:30;-1:-1:-1;;;29594:18:38;;;29587:50;29654:18;;1881:41:4;29334:344:38;1881:41:4;2380:7:::1;:15:::0;;-1:-1:-1;;2380:15:4::1;::::0;;2410:22:::1;902:10:11::0;2419:12:4::1;823:96:11::0;410:141:33;467:9;-1:-1:-1;;;;;496:22:33;;;488:31;;;;;;-1:-1:-1;542:1:33;410:141::o;1412:614:9:-;1778:10;;;1777:62;;-1:-1:-1;1794:39:9;;-1:-1:-1;;;1794:39:9;;1818:4;1794:39;;;29895:34:38;-1:-1:-1;;;;;29965:15:38;;;29945:18;;;29938:43;1794:15:9;;;;;29830:18:38;;1794:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1777:62;1756:163;;;;-1:-1:-1;;;1756:163:9;;30194:2:38;1756:163:9;;;30176:21:38;30233:2;30213:18;;;30206:30;30272:34;30252:18;;;30245:62;-1:-1:-1;;;30323:18:38;;;30316:52;30385:19;;1756:163:9;29992:418:38;1756:163:9;1956:62;;-1:-1:-1;;;;;26872:32:38;;1956:62:9;;;26854:51:38;26921:18;;;26914:34;;;1929:90:9;;1949:5;;-1:-1:-1;;;1979:22:9;26827:18:38;;1956:62:9;26680:274:38;8617:389:6;-1:-1:-1;;;;;8700:21:6;;8692:65;;;;-1:-1:-1;;;8692:65:6;;30617:2:38;8692:65:6;;;30599:21:38;30656:2;30636:18;;;30629:30;30695:33;30675:18;;;30668:61;30746:18;;8692:65:6;30415:355:38;8692:65:6;8844:6;8828:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8860:18:6;;;;;;:9;:18;;;;;:28;;8882:6;;8860:18;:28;;8882:6;;8860:28;:::i;:::-;;;;-1:-1:-1;;8903:37:6;;2631:25:38;;;-1:-1:-1;;;;;8903:37:6;;;8920:1;;8903:37;;2619:2:38;2604:18;8903:37:6;;;;;;;19842:859:27;;:::o;557:141:33:-;614:9;-1:-1:-1;;;;;643:22:33;;;635:31;;;;;39617:274:27;39755:7;39782:13;;;:28;;-1:-1:-1;39799:11:27;;39782:28;39781:103;;39869:8;39853:13;;:24;;;;:::i;:::-;39840:8;;39818:31;;:6;;39830:8;;39818:11;:31::i;:::-;:60;;;;:::i;:::-;:66;;39881:3;39818:66;:::i;:::-;39781:103;;;39814:1;39781:103;39774:110;39617:274;-1:-1:-1;;;;39617:274:27:o;13358:863::-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;13635:28:27::1;13648:5;13655:7;13635:12;:28::i;:::-;13712:17;:15;:17::i;:::-;13778:8;:6;:8::i;:::-;13832:10;:24:::0;;-1:-1:-1;;;;;;13832:24:27::1;-1:-1:-1::0;;;;;13832:24:27;::::1;::::0;;::::1;::::0;;;13881:22:::1;::::0;;-1:-1:-1;;;13881:22:27;;;;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;13832:24;13881:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13877:26;::::0;:2:::1;:26;:::i;:::-;13866:8;:37;;;;13934:11;-1:-1:-1::0;;;;;13934:20:27::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13913:18;:43:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;13913:43:27::1;-1:-1:-1::0;;;;13913:43:27;;::::1;::::0;;;::::1;::::0;;13967:4:::1;:12:::0;;-1:-1:-1;;;;;13967:12:27;;::::1;-1:-1:-1::0;;;;;;13967:12:27;;::::1;;::::0;;;13989:18:::1;:37:::0;;;;::::1;::::0;;::::1;;::::0;;14036:18:::1;:40:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;14196:14:27::1;:18:::0;1667:66:3;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1667:66;1391:348;13358:863:27;;;;;;:::o;3239:717:9:-;3669:23;3695:69;3723:4;3695:69;;;;;;;;;;;;;;;;;3703:5;-1:-1:-1;;;;;3695:27:9;;;:69;;;;;:::i;:::-;3778:17;;3669:95;;-1:-1:-1;3778:21:9;3774:176;;3873:10;3862:30;;;;;;;;;;;;:::i;:::-;3854:85;;;;-1:-1:-1;;;3854:85:9;;32360:2:38;3854:85:9;;;32342:21:38;32399:2;32379:18;;;32372:30;32438:34;32418:18;;;32411:62;-1:-1:-1;;;32489:18:38;;;32482:40;32539:19;;3854:85:9;32158:406:38;900:252:9;1076:68;;-1:-1:-1;;;;;32827:15:38;;;1076:68:9;;;32809:34:38;32879:15;;32859:18;;;32852:43;32911:18;;;32904:34;;;1049:96:9;;1069:5;;-1:-1:-1;;;1099:27:9;32744:18:38;;1076:68:9;32569:375:38;2044:178:6;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;2141:26:6::1;:24;:26::i;:::-;2177:38;2200:5;2207:7;2177:22;:38::i;:::-;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;2044:178:6;;:::o;991:128:4:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1049:26:4::1;:24;:26::i;:::-;1085:27;:25;:27::i;:::-;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;991:128:4:o;3472:223:10:-;3605:12;3636:52;3658:6;3666:4;3672:1;3675:12;3636:21;:52::i;754:64:11:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1667:66;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;754:64:11:o;2228:154:6:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;2335:13:6;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2358:17:6;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1671:14:3::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;2228:154:6;;:::o;1125:90:4:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1193:7:4::1;:15:::0;;-1:-1:-1;;1193:15:4::1;::::0;;1667:66:3;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:3;;;1391:348;1125:90:4:o;4559:499:10:-;4724:12;4781:5;4756:21;:30;;4748:81;;;;-1:-1:-1;;;4748:81:10;;33151:2:38;4748:81:10;;;33133:21:38;33190:2;33170:18;;;33163:30;33229:34;33209:18;;;33202:62;-1:-1:-1;;;33280:18:38;;;33273:36;33326:19;;4748:81:10;32949:402:38;4748:81:10;1045:20;;4839:60;;;;-1:-1:-1;;;4839:60:10;;33558:2:38;4839:60:10;;;33540:21:38;33597:2;33577:18;;;33570:30;33636:31;33616:18;;;33609:59;33685:18;;4839:60:10;33356:353:38;4839:60:10;4911:12;4925:23;4952:6;-1:-1:-1;;;;;4952:11:10;4971:5;4978:4;4952:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4910:73;;;;5000:51;5017:7;5026:10;5038:12;5000:16;:51::i;:::-;4993:58;4559:499;-1:-1:-1;;;;;;;4559:499:10:o;6222:692::-;6368:12;6396:7;6392:516;;;-1:-1:-1;6426:10:10;6419:17;;6392:516;6537:17;;:21;6533:365;;6731:10;6725:17;6791:15;6778:10;6774:2;6770:19;6763:44;6533:365;6870:12;6863:20;;-1:-1:-1;;;6863:20:10;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:258:38;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:38;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:38;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:38:o;665:301::-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;832:9;819:23;-1:-1:-1;;;;;875:5:38;871:46;864:5;861:57;851:85;;932:1;929;922:12;971:131;-1:-1:-1;;;;;1046:31:38;;1036:42;;1026:70;;1092:1;1089;1082:12;1107:315;1175:6;1183;1236:2;1224:9;1215:7;1211:23;1207:32;1204:52;;;1252:1;1249;1242:12;1204:52;1291:9;1278:23;1310:31;1335:5;1310:31;:::i;:::-;1360:5;1412:2;1397:18;;;;1384:32;;-1:-1:-1;;;1107:315:38:o;1619:676::-;1808:2;1860:21;;;1930:13;;1833:18;;;1952:22;;;1779:4;;1808:2;2031:15;;;;2005:2;1990:18;;;1779:4;2074:195;2088:6;2085:1;2082:13;2074:195;;;2153:13;;-1:-1:-1;;;;;2149:39:38;2137:52;;2244:15;;;;2209:12;;;;2185:1;2103:9;2074:195;;;-1:-1:-1;2286:3:38;;1619:676;-1:-1:-1;;;;;;1619:676:38:o;2300:180::-;2359:6;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;-1:-1:-1;2451:23:38;;2300:180;-1:-1:-1;2300:180:38:o;2667:247::-;2726:6;2779:2;2767:9;2758:7;2754:23;2750:32;2747:52;;;2795:1;2792;2785:12;2747:52;2834:9;2821:23;2853:31;2878:5;2853:31;:::i;3172:456::-;3249:6;3257;3265;3318:2;3306:9;3297:7;3293:23;3289:32;3286:52;;;3334:1;3331;3324:12;3286:52;3373:9;3360:23;3392:31;3417:5;3392:31;:::i;:::-;3442:5;-1:-1:-1;3499:2:38;3484:18;;3471:32;3512:33;3471:32;3512:33;:::i;:::-;3172:456;;3564:7;;-1:-1:-1;;;3618:2:38;3603:18;;;;3590:32;;3172:456::o;4856:248::-;4924:6;4932;4985:2;4973:9;4964:7;4960:23;4956:32;4953:52;;;5001:1;4998;4991:12;4953:52;-1:-1:-1;;5024:23:38;;;5094:2;5079:18;;;5066:32;;-1:-1:-1;4856:248:38:o;5342:284::-;5400:6;5453:2;5441:9;5432:7;5428:23;5424:32;5421:52;;;5469:1;5466;5459:12;5421:52;5508:9;5495:23;-1:-1:-1;;;;;5551:5:38;5547:30;5540:5;5537:41;5527:69;;5592:1;5589;5582:12;5631:633;5735:6;5743;5796:2;5784:9;5775:7;5771:23;5767:32;5764:52;;;5812:1;5809;5802:12;5764:52;5852:9;5839:23;-1:-1:-1;;;;;5922:2:38;5914:6;5911:14;5908:34;;;5938:1;5935;5928:12;5908:34;5976:6;5965:9;5961:22;5951:32;;6021:7;6014:4;6010:2;6006:13;6002:27;5992:55;;6043:1;6040;6033:12;5992:55;6083:2;6070:16;6109:2;6101:6;6098:14;6095:34;;;6125:1;6122;6115:12;6095:34;6178:7;6173:2;6163:6;6160:1;6156:14;6152:2;6148:23;6144:32;6141:45;6138:65;;;6199:1;6196;6189:12;6138:65;6230:2;6222:11;;;;;6252:6;;-1:-1:-1;5631:633:38;;-1:-1:-1;;;;5631:633:38:o;7264:388::-;7332:6;7340;7393:2;7381:9;7372:7;7368:23;7364:32;7361:52;;;7409:1;7406;7399:12;7361:52;7448:9;7435:23;7467:31;7492:5;7467:31;:::i;:::-;7517:5;-1:-1:-1;7574:2:38;7559:18;;7546:32;7587:33;7546:32;7587:33;:::i;:::-;7639:7;7629:17;;;7264:388;;;;;:::o;7883:714::-;8012:6;8020;8028;8036;8089:3;8077:9;8068:7;8064:23;8060:33;8057:53;;;8106:1;8103;8096:12;8057:53;8145:9;8132:23;8164:31;8189:5;8164:31;:::i;:::-;8214:5;-1:-1:-1;8271:2:38;8256:18;;8243:32;8284:33;8243:32;8284:33;:::i;:::-;8336:7;-1:-1:-1;8395:2:38;8380:18;;8367:32;8408:33;8367:32;8408:33;:::i;:::-;8460:7;-1:-1:-1;8519:2:38;8504:18;;8491:32;8532:33;8491:32;8532:33;:::i;:::-;7883:714;;;;-1:-1:-1;7883:714:38;;-1:-1:-1;;7883:714:38:o;8602:380::-;8681:1;8677:12;;;;8724;;;8745:61;;8799:4;8791:6;8787:17;8777:27;;8745:61;8852:2;8844:6;8841:14;8821:18;8818:38;8815:161;;;8898:10;8893:3;8889:20;8886:1;8879:31;8933:4;8930:1;8923:15;8961:4;8958:1;8951:15;8815:161;;8602:380;;;:::o;8987:400::-;-1:-1:-1;;;;;9243:15:38;;;9225:34;;9295:15;;;;9290:2;9275:18;;9268:43;-1:-1:-1;;;;;;9347:33:38;;;9342:2;9327:18;;9320:61;9175:2;9160:18;;8987:400::o;9392:277::-;9459:6;9512:2;9500:9;9491:7;9487:23;9483:32;9480:52;;;9528:1;9525;9518:12;9480:52;9560:9;9554:16;9613:5;9606:13;9599:21;9592:5;9589:32;9579:60;;9635:1;9632;9625:12;9674:336;9876:2;9858:21;;;9915:2;9895:18;;;9888:30;-1:-1:-1;;;9949:2:38;9934:18;;9927:42;10001:2;9986:18;;9674:336::o;10417:127::-;10478:10;10473:3;10469:20;10466:1;10459:31;10509:4;10506:1;10499:15;10533:4;10530:1;10523:15;10549:236;10588:3;-1:-1:-1;;;;;10661:2:38;10658:1;10654:10;10691:2;10688:1;10684:10;10722:3;10718:2;10714:12;10709:3;10706:21;10703:47;;;10730:18;;:::i;:::-;10766:13;;10549:236;-1:-1:-1;;;;10549:236:38:o;11196:135::-;11235:3;-1:-1:-1;;11256:17:38;;11253:43;;;11276:18;;:::i;:::-;-1:-1:-1;11323:1:38;11312:13;;11196:135::o;12104:125::-;12144:4;12172:1;12169;12166:8;12163:34;;;12177:18;;:::i;:::-;-1:-1:-1;12214:9:38;;12104:125::o;12234:128::-;12274:3;12305:1;12301:6;12298:1;12295:13;12292:39;;;12311:18;;:::i;:::-;-1:-1:-1;12347:9:38;;12234:128::o;13547:168::-;13587:7;13653:1;13649;13645:6;13641:14;13638:1;13635:21;13630:1;13623:9;13616:17;13612:45;13609:71;;;13660:18;;:::i;:::-;-1:-1:-1;13700:9:38;;13547:168::o;13720:217::-;13760:1;13786;13776:132;;13830:10;13825:3;13821:20;13818:1;13811:31;13865:4;13862:1;13855:15;13893:4;13890:1;13883:15;13776:132;-1:-1:-1;13922:9:38;;13720:217::o;15465:184::-;15535:6;15588:2;15576:9;15567:7;15563:23;15559:32;15556:52;;;15604:1;15601;15594:12;15556:52;-1:-1:-1;15627:16:38;;15465:184;-1:-1:-1;15465:184:38:o;16462:723::-;16661:2;16713:21;;;16686:18;;;16769:22;;;16632:4;;16848:6;16822:2;16807:18;;16632:4;16882:277;16896:6;16893:1;16890:13;16882:277;;;16971:6;16958:20;16991:31;17016:5;16991:31;:::i;:::-;-1:-1:-1;;;;;17047:31:38;17035:44;;17134:15;;;;17099:12;;;;17075:1;16911:9;16882:277;;;-1:-1:-1;17176:3:38;16462:723;-1:-1:-1;;;;;;16462:723:38:o;18011:231::-;18051:4;-1:-1:-1;;;;;18149:10:38;;;;18119;;18171:12;;;18168:38;;;18186:18;;:::i;:::-;18223:13;;18011:231;-1:-1:-1;;;18011:231:38:o;18247:273::-;18315:6;18368:2;18356:9;18347:7;18343:23;18339:32;18336:52;;;18384:1;18381;18374:12;18336:52;18416:9;18410:16;18466:4;18459:5;18455:16;18448:5;18445:27;18435:55;;18486:1;18483;18476:12;19748:238;19788:3;-1:-1:-1;;;;;19855:10:38;;;19885;;;19915:12;;;19907:21;;19904:47;;;19931:18;;:::i;20352:253::-;20392:3;-1:-1:-1;;;;;20481:2:38;20478:1;20474:10;20511:2;20508:1;20504:10;20542:3;20538:2;20534:12;20529:3;20526:21;20523:47;;;20550:18;;:::i;20964:127::-;21025:10;21020:3;21016:20;21013:1;21006:31;21056:4;21053:1;21046:15;21080:4;21077:1;21070:15;21855:277;21951:6;22004:2;21992:9;21983:7;21979:23;21975:32;21972:52;;;22020:1;22017;22010:12;21972:52;22052:9;22046:16;22071:31;22096:5;22071:31;:::i;22497:410::-;22699:2;22681:21;;;22738:2;22718:18;;;22711:30;22777:34;22772:2;22757:18;;22750:62;-1:-1:-1;;;22843:2:38;22828:18;;22821:44;22897:3;22882:19;;22497:410::o;22912:127::-;22973:10;22968:3;22964:20;22961:1;22954:31;23004:4;23001:1;22994:15;23028:4;23025:1;23018:15;23044:884;23124:6;23177:2;23165:9;23156:7;23152:23;23148:32;23145:52;;;23193:1;23190;23183:12;23145:52;23226:9;23220:16;-1:-1:-1;;;;;23296:2:38;23288:6;23285:14;23282:34;;;23312:1;23309;23302:12;23282:34;23350:6;23339:9;23335:22;23325:32;;23395:7;23388:4;23384:2;23380:13;23376:27;23366:55;;23417:1;23414;23407:12;23366:55;23446:2;23440:9;23468:2;23464;23461:10;23458:36;;;23474:18;;:::i;:::-;23549:2;23543:9;23517:2;23603:13;;-1:-1:-1;;23599:22:38;;;23623:2;23595:31;23591:40;23579:53;;;23647:18;;;23667:22;;;23644:46;23641:72;;;23693:18;;:::i;:::-;23733:10;23729:2;23722:22;23768:2;23760:6;23753:18;23808:7;23803:2;23798;23794;23790:11;23786:20;23783:33;23780:53;;;23829:1;23826;23819:12;23780:53;23842:55;23894:2;23889;23881:6;23877:15;23872:2;23868;23864:11;23842:55;:::i;23933:658::-;24154:3;24192:6;24186:13;24208:53;24254:6;24249:3;24242:4;24234:6;24230:17;24208:53;:::i;:::-;24324:13;;24283:16;;;;24346:57;24324:13;24283:16;24380:4;24368:17;;24346:57;:::i;:::-;24470:13;;24425:20;;;24492:57;24470:13;24425:20;24526:4;24514:17;;24492:57;:::i;:::-;24565:20;;23933:658;-1:-1:-1;;;;;23933:658:38:o;24596:466::-;24771:3;24809:6;24803:13;24825:53;24871:6;24866:3;24859:4;24851:6;24847:17;24825:53;:::i;:::-;24941:13;;24900:16;;;;24963:57;24941:13;24900:16;24997:4;24985:17;;24963:57;:::i;30775:422::-;30864:1;30907:5;30864:1;30921:270;30942:7;30932:8;30929:21;30921:270;;;31001:4;30997:1;30993:6;30989:17;30983:4;30980:27;30977:53;;;31010:18;;:::i;:::-;31060:7;31050:8;31046:22;31043:55;;;31080:16;;;;31043:55;31159:22;;;;31119:15;;;;30921:270;;;30925:3;30775:422;;;;;:::o;31202:806::-;31251:5;31281:8;31271:80;;-1:-1:-1;31322:1:38;31336:5;;31271:80;31370:4;31360:76;;-1:-1:-1;31407:1:38;31421:5;;31360:76;31452:4;31470:1;31465:59;;;;31538:1;31533:130;;;;31445:218;;31465:59;31495:1;31486:10;;31509:5;;;31533:130;31570:3;31560:8;31557:17;31554:43;;;31577:18;;:::i;:::-;-1:-1:-1;;31633:1:38;31619:16;;31648:5;;31445:218;;31747:2;31737:8;31734:16;31728:3;31722:4;31719:13;31715:36;31709:2;31699:8;31696:16;31691:2;31685:4;31682:12;31678:35;31675:77;31672:159;;;-1:-1:-1;31784:19:38;;;31816:5;;31672:159;31863:34;31888:8;31882:4;31863:34;:::i;:::-;31933:6;31929:1;31925:6;31921:19;31912:7;31909:32;31906:58;;;31944:18;;:::i;:::-;31982:20;;31202:806;-1:-1:-1;;;31202:806:38:o;32013:140::-;32071:5;32100:47;32141:4;32131:8;32127:19;32121:4;32100:47;:::i;33714:274::-;33843:3;33881:6;33875:13;33897:53;33943:6;33938:3;33931:4;33923:6;33919:17;33897:53;:::i;:::-;33966:16;;;;;33714:274;-1:-1:-1;;33714:274:38:o",
  "language": "Solidity",
  "natspec": {
    "author": "dantop114",
    "events": {
      "AuthUpdated(address)": {
        "params": {
          "newAuth": "The new Authority module."
        }
      },
      "BurningFeePercentUpdated(uint256)": {
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "BurningFeeReceiverUpdated(address)": {
        "params": {
          "receiver": "The new receiver"
        }
      },
      "Deposit(address,address,uint256)": {
        "params": {
          "from": "The user depositing into the vault.",
          "to": "The user receiving Vault's shares.",
          "value": "The shares `to` is receiving."
        }
      },
      "DepositLimitsUpdated(uint256,uint256)": {
        "params": {
          "perUser": "New underlying limit per address.",
          "perVault": "New underlying limit per vault."
        }
      },
      "EnterBatchBurn(uint256,address,uint256)": {
        "params": {
          "account": "User's address.",
          "amount": "Amount of shares to be burned.",
          "round": "Batched burn round."
        }
      },
      "ExecuteBatchBurn(uint256,address,uint256,uint256)": {
        "params": {
          "amount": "Total amount of underlying redeemed.",
          "executor": "User that executes the batch burn.",
          "round": "Batched burn round.",
          "shares": "Total amount of burned shares."
        }
      },
      "ExitBatchBurn(uint256,address,uint256)": {
        "params": {
          "account": "User's address.",
          "amount": "Amount of underlying redeemed.",
          "round": "Batched burn round."
        }
      },
      "Harvest(address,address[])": {
        "params": {
          "account": "The harvester address.",
          "strategies": "The set of strategies."
        }
      },
      "HarvestDelayUpdateScheduled(uint64)": {
        "params": {
          "newHarvestDelay": "The scheduled updated harvest delay."
        }
      },
      "HarvestDelayUpdated(address,uint64)": {
        "params": {
          "account": "The address changing the harvest delay",
          "newHarvestDelay": "The new harvest delay."
        }
      },
      "HarvestFeePercentUpdated(uint256)": {
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "HarvestFeeReceiverUpdated(address)": {
        "params": {
          "receiver": "The new receiver"
        }
      },
      "StrategyDeposit(address,address,uint256)": {
        "params": {
          "account": "The address depositing funds into the strategy.",
          "strategy": "The strategy that was deposited into.",
          "underlyingAmount": "The amount of underlying tokens that were deposited."
        }
      },
      "StrategyDistrusted(address)": {
        "params": {
          "strategy": "The strategy that became untrusted."
        }
      },
      "StrategyTrusted(address)": {
        "params": {
          "strategy": "The strategy that became trusted."
        }
      },
      "StrategyWithdrawal(address,address,uint256)": {
        "params": {
          "account": "The user pulling funds from the strategy",
          "strategy": "The strategy that was withdrawn from.",
          "underlyingAmount": "The amount of underlying tokens that were withdrawn."
        }
      },
      "WithdrawalQueueSet(address[])": {
        "params": {
          "replacedWithdrawalQueue": "The new withdrawal queue."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "VERSION()": {
        "notice": "Vault's API version."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "auth()": {
        "notice": "Vault Auth module."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "balanceOfUnderlying(address)": {
        "notice": "Returns a user's Vault balance in underlying tokens.",
        "params": {
          "user": "THe user to get the underlying balance of."
        },
        "returns": {
          "_0": "The user's Vault balance in underlying tokens."
        }
      },
      "baseUnit()": {
        "notice": "The base unit of the underlying token and hence the Vault share token."
      },
      "batchBurnBalance()": {
        "notice": "Balance reserved to batched burning withdrawals."
      },
      "batchBurnRound()": {
        "notice": "Current batched burning round."
      },
      "batchBurns(uint256)": {
        "notice": "Maps social burning events rounds to batched burn details."
      },
      "blocksPerYear()": {
        "notice": "Blocks mined in a year."
      },
      "burningFeePercent()": {
        "notice": "The percentage of shares recognized each burning to reserve as fees."
      },
      "burningFeeReceiver()": {
        "notice": "The address receiving burning fees (denominated in Vault's shares)."
      },
      "calculateShares(uint256)": {
        "notice": "Calculates the amount of Vault's shares for a given amount of underlying tokens.",
        "params": {
          "underlyingAmount": "The underlying token's amount."
        },
        "returns": {
          "_0": "The amount of shares given `underlyingAmount`."
        }
      },
      "calculateUnderlying(uint256)": {
        "notice": "Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.",
        "params": {
          "sharesAmount": "The shares amount."
        },
        "returns": {
          "_0": "The amount of underlying given `sharesAmount`."
        }
      },
      "decimals()": {
        "details": "Needed because Openzeppelin's logic for decimals.",
        "notice": "Overrides `decimals` method.",
        "returns": {
          "_0": "Vault's shares token decimals (underlying token decimals)."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "details": "User needs to approve `underlyingAmount` of underlying tokens to spend.",
        "notice": "Deposit a specific amount of underlying tokens.",
        "params": {
          "to": "The address to receive shares corresponding to the deposit.",
          "underlyingAmount": "The amount of the underlying token to deposit."
        },
        "returns": {
          "shares": "The amount of shares minted using `underlyingAmount`."
        }
      },
      "depositIntoStrategy(address,uint256)": {
        "notice": "Deposit a specific amount of float into a trusted strategy.",
        "params": {
          "strategy": "The trusted strategy to deposit into.",
          "underlyingAmount": "The amount of underlying tokens in float to deposit."
        }
      },
      "distrustStrategy(address)": {
        "notice": "Store a strategy as untrusted, disabling it from being harvested.",
        "params": {
          "strategy": "The strategy to make untrusted."
        }
      },
      "enterBatchBurn(uint256)": {
        "details": "Each user can take part to one batched burn event a time.User's shares amount will be staked until the burn happens.",
        "notice": "Enter a batched burn event.",
        "params": {
          "shares": "Shares to withdraw during the next batched burn event."
        }
      },
      "estimatedReturn()": {
        "notice": "Estimated return recorded during last harvest."
      },
      "exchangeRate()": {
        "notice": "Returns the amount of underlying tokens a share can be redeemed for.",
        "returns": {
          "_0": "The amount of underlying tokens a share can be redeemed for."
        }
      },
      "execBatchBurn()": {
        "notice": "Execute batched burns"
      },
      "exitBatchBurn()": {
        "notice": "Withdraw underlying redeemed in batched burning events."
      },
      "getStrategyData(address)": {
        "notice": "Maps strategies to data the Vault holds on them."
      },
      "getWithdrawalQueue()": {
        "details": "This is provided because Solidity converts public arrays into index getters, but we need a way to allow external contracts and users to access the whole array.",
        "notice": "Gets the full withdrawal queue.",
        "returns": {
          "_0": "An ordered array of strategies representing the withdrawal queue."
        }
      },
      "harvest(address[])": {
        "details": "Will always revert if called outside of an active harvest window or before the harvest delay has passed.",
        "notice": "Harvest a set of trusted strategies.",
        "params": {
          "strategies": "The trusted strategies to harvest."
        }
      },
      "harvestDelay()": {
        "notice": "The period in seconds over which locked profit is unlocked."
      },
      "harvestFeePercent()": {
        "notice": "The percentage of profit recognized each harvest to reserve as fees."
      },
      "harvestFeeReceiver()": {
        "notice": "The address receiving harvest fees (denominated in Vault's shares)."
      },
      "harvestWindow()": {
        "notice": "The period in seconds during which multiple harvests can occur regardless if they are taking place before the harvest delay has elapsed."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(address,address,address,address)": {
        "notice": "The initialize method",
        "params": {
          "auth_": "The Auth module that will be used for this Vault.",
          "burnFeeReceiver_": "The batched burns fee receiver address.",
          "harvestFeeReceiver_": "The harvesting fee receiver address.",
          "underlying_": "The underlying token the vault accepts."
        }
      },
      "lastHarvest()": {
        "notice": "A timestamp representing when the most recent harvest occurred."
      },
      "lastHarvestExchangeRate()": {
        "notice": "Exchange rate at the beginning of latest harvest window"
      },
      "lastHarvestIntervalInBlocks()": {
        "notice": "Latest harvest interval in blocks"
      },
      "lastHarvestWindowStart()": {
        "notice": "A timestamp representing when the first harvest in the most recent harvest window occurred."
      },
      "lastHarvestWindowStartBlock()": {
        "notice": "The block number when the first harvest in the most recent harvest window occurred."
      },
      "lockedProfit()": {
        "notice": "Calculate the current amount of locked profit.",
        "returns": {
          "_0": "The current amount of locked profit."
        }
      },
      "maxLockedProfit()": {
        "notice": "The amount of locked profit at the end of the last harvest."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nextHarvestDelay()": {
        "notice": "The value that will replace harvestDelay next harvest."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "setAuth(address)": {
        "notice": "Set a new Authority module.",
        "params": {
          "newAuth": "The new Authority module."
        }
      },
      "setBlocksPerYear(uint256)": {
        "notice": "Sets blocks per year.",
        "params": {
          "blocks": "Blocks in a given year."
        }
      },
      "setBurningFeePercent(uint256)": {
        "notice": "Set a new burning fee percentage.",
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "setBurningFeeReceiver(address)": {
        "notice": "Set a new burning fees receiver.",
        "params": {
          "burningFeeReceiver_": "The new burning fees receiver."
        }
      },
      "setDepositLimits(uint256,uint256)": {
        "notice": "Set new deposit limits for this vault.",
        "params": {
          "user": "New user deposit limit.",
          "vault": "New vault deposit limit."
        }
      },
      "setHarvestDelay(uint64)": {
        "details": "If the current harvest delay is 0, meaning it has not been set before, it will be updated immediately; otherwise it will be scheduled to take effect after the next harvest.",
        "notice": "Set a new harvest delay delay.",
        "params": {
          "newHarvestDelay": "The new harvest delay to set."
        }
      },
      "setHarvestFeePercent(uint256)": {
        "notice": "Set a new fee percentage.",
        "params": {
          "newFeePercent": "The new fee percentage."
        }
      },
      "setHarvestFeeReceiver(address)": {
        "notice": "Set a new harvest fees receiver.",
        "params": {
          "harvestFeeReceiver_": "The new harvest fees receiver."
        }
      },
      "setHarvestWindow(uint128)": {
        "details": "The Vault's harvestDelay must already be set before calling.",
        "notice": "Set a new harvest window.",
        "params": {
          "newHarvestWindow": "The new harvest window."
        }
      },
      "setWithdrawalQueue(address[])": {
        "details": "There are no sanity checks on the `newQueue` argument so they should be done off-chain.",
        "notice": "Set the withdrawal queue.",
        "params": {
          "newQueue": "The new withdrawal queue."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalFloat()": {
        "notice": "Returns the amount of underlying tokens that idly sit in the Vault.",
        "returns": {
          "_0": "The amount of underlying tokens that sit idly in the Vault."
        }
      },
      "totalStrategyHoldings()": {
        "notice": "The total amount of underlying tokens held in strategies at the time of the last harvest."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalUnderlying()": {
        "notice": "Calculates the total amount of underlying tokens the Vault holds.",
        "returns": {
          "_0": "totalUnderlyingHeld The total amount of underlying tokens the Vault holds."
        }
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "triggerPause()": {
        "details": "Only owner can call this method.",
        "notice": "Triggers the Vault's pause"
      },
      "trustStrategy(address)": {
        "notice": "Store a strategy as trusted, enabling it to be harvested.",
        "params": {
          "strategy": "The strategy to make trusted."
        }
      },
      "underlying()": {
        "notice": "The underlying token the vault accepts."
      },
      "underlyingDecimals()": {
        "notice": "The underlying token decimals."
      },
      "userBatchBurnReceipts(address)": {
        "notice": "Maps user's address to withdrawal request."
      },
      "userDepositLimit()": {
        "notice": "Amount of shares a single address can hold."
      },
      "vaultDepositLimit()": {
        "notice": "Amount of underlying cap for this vault."
      },
      "withdrawFromStrategy(address,uint256)": {
        "details": "Withdrawing from a strategy will not remove it from the withdrawal queue.",
        "notice": "Withdraw a specific amount of underlying tokens from a strategy.",
        "params": {
          "strategy": "The strategy to withdraw from.",
          "underlyingAmount": "The amount of underlying tokens to withdraw."
        }
      },
      "withdrawalQueue(uint256)": {
        "notice": "An ordered array of strategies representing the withdrawal queue."
      }
    },
    "notice": "A vault seeking for yield.",
    "stateVariables": {
      "baseUnit": {
        "details": "Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic."
      },
      "burningFeePercent": {
        "details": "A fixed point number where 1e18 represents 100% and 0 represents 0%."
      },
      "harvestDelay": {
        "details": "Cannot be 0 as it opens harvests up to sandwich attacks."
      },
      "harvestFeePercent": {
        "details": "A fixed point number where 1e18 represents 100% and 0 represents 0%."
      },
      "harvestWindow": {
        "details": "Long harvest delays open up the Vault to profit distribution DOS attacks."
      },
      "lastHarvestWindowStart": {
        "details": "May be equal to lastHarvest if there was/has only been one harvest in the most last/current window."
      },
      "nextHarvestDelay": {
        "details": "In the case that the next delay is 0, no update will be applied."
      },
      "totalStrategyHoldings": {
        "details": "Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings."
      },
      "withdrawalQueue": {
        "details": "The queue is processed in descending order, meaning the last index will be withdrawn from first.There are not sanity checks on the withdrawal queue, so any control should be done off-chain."
      }
    },
    "title": "Vault",
    "version": 1
  },
  "offset": [
    1151,
    39893
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x412 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B72AEB9 GT PUSH2 0x220 JUMPI DUP1 PUSH4 0xC822ADDA GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xE5FA2B70 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEED74E67 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEED74E67 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xF1A392DA EQ PUSH2 0x964 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x97E JUMPI DUP1 PUSH4 0xF97D2ED7 EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE5FA2B70 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0xEC523AFD EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xECAD9565 EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0xECC404B5 EQ PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD00364BE GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xD00364BE EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0xDD11DD45 EQ PUSH2 0x8A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xDE9375F2 EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xE33CC0A8 EQ PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC822ADDA EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0xC866983B EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0xC89D3460 EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0xCBC43F89 EQ PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA385FB96 GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xAC86AC72 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0xAC86AC72 EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xB53D0958 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xBDF06C8E EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0xC2930F91 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xC70920BC EQ PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA385FB96 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0xAC579B77 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x912F74CD GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x912F74CD EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x9291DF6B EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0x9EE02C7F EQ PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B72AEB9 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0x836CA0F6 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x841219E5 EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0x86DC4800 EQ PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x326 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x2AE JUMPI DUP1 PUSH4 0x6BD95612 GT PUSH2 0x27D JUMPI DUP1 PUSH4 0x6BD95612 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0x793101A5 EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0x797BA463 EQ PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0x5E4F9451 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x63874446 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0x6833F60D EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3EC16194 GT PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x3EC16194 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x448F56B9 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0x44B81396 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x4EDDEA06 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x3C66A8FA EQ PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BBA16DB GT PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x2968676E GT PUSH2 0x378 JUMPI DUP1 PUSH4 0x2968676E EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x2B2E05C1 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x305D61AE EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x31024F3B EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BBA16DB EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x1EC36BFA EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x25A760C2 EQ PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11E57A3E GT PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x11E57A3E EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x13E86B28 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x14FBAE04 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x7B35D1D EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xE73ECEF EQ PUSH2 0x46D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41F PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x4286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B9 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x475 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x4323 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x448 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x495 JUMP JUMPDEST PUSH2 0x448 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x495 PUSH1 0xAB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x43A6 JUMP JUMPDEST PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x532 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x577 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x448 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x495 PUSH1 0x9D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x532 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x132B JUMP JUMPDEST PUSH2 0x495 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x645 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x495 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x673 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x686 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E7 JUMP JUMPDEST PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x45D JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH1 0xAC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x171D JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x495 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x645 SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x73D CALLDATASIZE PUSH1 0x4 PUSH2 0x4409 JUMP JUMPDEST PUSH2 0x194E JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x76A CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x41F PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x495 PUSH1 0xAD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x7B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x45D PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x4432 JUMP JUMPDEST PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x7ED CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x1ED0 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x813 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH2 0x495 PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x2505 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x252F JUMP JUMPDEST PUSH2 0x448 PUSH2 0x85D CALLDATASIZE PUSH1 0x4 PUSH2 0x4432 JUMP JUMPDEST PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x870 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x88F SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x8C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x44A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x495 PUSH1 0x9B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x91D CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x2C62 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x930 CALLDATASIZE PUSH1 0x4 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x2D05 JUMP JUMPDEST PUSH2 0x495 PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x645 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH2 0x645 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x98C CALLDATASIZE PUSH1 0x4 PUSH2 0x44DF JUMP JUMPDEST PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x88F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x41F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x181719 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x9D5 SWAP1 PUSH2 0x453B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA01 SWAP1 PUSH2 0x453B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA4E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA23 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA31 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0xA98 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND GT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737457696E646F773A3A57494E444F575F544F4F5F4C4F4E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x9F DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5AAC860870A2B99320DF1D1B908931B370150F1C11074466FB332528E5B910B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDF CALLER DUP5 DUP5 PUSH2 0x3098 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC23 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 PUSH2 0xC57 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0xCA2 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x9E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB5D8934A1F336D4CF641AE9F680C3E196F624F0BD9271749BE60D98B70F70060 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0xD8A SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0xDE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0xE11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x4601 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62617463684275726E3A3A4C41544553545F484152564553545F4E4F545F4558 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1412549151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0xA7 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0xE88 DUP4 PUSH2 0x462C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62617463684275726E3A3A544F54414C5F5348415245535F43414E4E4F545F42 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x455F5A45524F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF25 PUSH2 0xC57 PUSH2 0x1389 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2F PUSH2 0x1B7D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62617463684275726E3A3A4E4F545F454E4F5547485F554E4445524C59494E47 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xF88 ADDRESS DUP4 PUSH2 0x31CF JUMP JUMPDEST PUSH1 0x9D SLOAD ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x9D SLOAD PUSH1 0x0 SWAP1 PUSH2 0xFAA SWAP1 DUP4 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x31B4 JUMP JUMPDEST SWAP1 POP PUSH2 0xFB6 DUP2 DUP4 PUSH2 0x4647 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH1 0x99 SLOAD SWAP2 SWAP4 POP PUSH2 0xFD6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x331D JUMP JUMPDEST POP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0xFE8 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x100F SWAP1 DUP5 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 DUP7 SWAP2 PUSH32 0x464420EE56151EE74D491D95CFA6B42D6C6504B38DEBC567F5532168243F1D8D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1065 DUP5 DUP5 DUP5 PUSH2 0x33A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x10F7 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x1144 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDCB0BC5ECFADC1F3129303F7C1F12B82107806277374A010DFFE2C367708EF41 SWAP1 PUSH1 0x20 ADD PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x122F SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574426174636865644275726E696E6746656550657263656E743A3A464545 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xBEA89E9EBE90928E9 PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x9D DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xEA0B688AABE63E0B1F8D23FBFAAF5978C8D6B74C5B21BDC9787B4651482B8F4B SWAP1 PUSH1 0x20 ADD PUSH2 0xBC6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBDF SWAP2 DUP6 SWAP1 PUSH2 0x1362 SWAP1 DUP7 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xBE3 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1395 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x13A4 JUMPI POP POP PUSH1 0x9A SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH1 0x9A SLOAD PUSH2 0x13B3 PUSH2 0x24DC JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x13F5 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 ADD DUP4 SWAP1 SSTORE PUSH2 0x146C JUMP JUMPDEST DUP2 DUP2 EQ PUSH2 0x1444 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656E74657242617463684275726E3A3A444946464552454E545F524F554E4453 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1466 SWAP1 DUP5 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x148A SWAP1 DUP5 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x149A SWAP1 POP ADDRESS DUP5 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x14A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0xA34C4835838212C803863F6698244F8A1E56F479D6DBA7D4F33B34A2CDECF1CE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 PUSH2 0x14ED PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP5 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH1 0x9F SLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND PUSH2 0x1526 DUP2 DUP4 PUSH2 0x465E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1535 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA5 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH2 0x1553 DUP5 TIMESTAMP PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x155D SWAP1 DUP4 PUSH2 0x4676 JUMP JUMPDEST PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x4695 JUMP JUMPDEST PUSH2 0x1571 SWAP1 DUP3 PUSH2 0x4647 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x15BD SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x161A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH2 0x1630 DUP5 PUSH2 0x1627 DUP6 PUSH2 0x14E0 JUMP JUMPDEST SWAP4 POP DUP4 DUP6 PUSH2 0x3572 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x1677 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1694 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B8 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x16D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0xAB DUP4 SWAP1 SSTORE PUSH1 0xAC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB2AD710F2954A5376267A683F9ECE9EC46EE7DFB47075163379904EE941DF8DA SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x175D SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x177A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179E SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x17CF JUMPI PUSH2 0x17CC PUSH2 0x3723 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17CC PUSH2 0x37BB JUMP JUMPDEST PUSH1 0xA7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578697442617463684275726E3A3A4E4F5F4445504F53495453000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP1 MLOAD DUP3 GT PUSH2 0x18AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578697442617463684275726E3A3A524F554E445F4E4F545F45584543555445 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP5 MSTORE PUSH1 0xAA DUP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD PUSH1 0x9A SLOAD SWAP2 DUP5 ADD MLOAD PUSH2 0x18EA SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x31B4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18FE SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x99 SLOAD PUSH2 0x191A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x331D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x2027C7E85003814492322D04D360D8DF81AEBEB8A40A069FFFCCC25CDF9E359B SWAP1 PUSH1 0x20 ADD PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x198E SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19CF SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x19EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH2 0x1A4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737444656C61793A3A44454C41595F43414E4E4F545F4245 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x5F5A45524F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH4 0x1E13380 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH2 0x1AAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737444656C61793A3A44454C41595F544F4F5F4C4F4E4700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1B27 JUMPI PUSH1 0x9F DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x9F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x12CE22E477E3FC08E5FDA24CDEC059A7C62A276344417F2C365D7476401BCA6F SWAP1 PUSH1 0x20 ADD PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0xA8 SLOAD PUSH1 0x99 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEE SWAP2 SWAP1 PUSH2 0x46B7 JUMP JUMPDEST PUSH2 0x1BF8 SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x9D5 SWAP1 PUSH2 0x453B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x1C9B CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x3098 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDF CALLER DUP5 DUP5 PUSH2 0x33A2 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x1CF2 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x1D4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x14 DUP3 GT ISZERO PUSH2 0x1DAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365745769746864726177616C51756575653A3A51554555455F544F4F5F4249 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x1DB6 PUSH1 0xA6 DUP5 DUP5 PUSH2 0x4172 JUMP JUMPDEST POP PUSH32 0x7F5ECD11ABC947C192F7D36828C4A649DDECD0867F27DF66489E78D3EC80B6FE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1710 SWAP3 SWAP2 SWAP1 PUSH2 0x46D0 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x1E28 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E69 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x1E85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBA702855580CDA8666C4FE8E4AE71D8F5DD19DB067455EEB54E2BAC95C46AF13 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x1F10 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F51 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x1F6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A554E545255535445445F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x5354524154454759 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP2 PUSH2 0x2047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A414D4F554E545F43414E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x4E4F545F42455F5A45524F PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x2050 DUP3 PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x2086 SWAP1 DUP5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH2 0x471E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA0 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20BC SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216C SWAP2 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH1 0xFF AND ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617746726F6D53747261746567793A3A52454445454D5F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x220D SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x222A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x22E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A554E545255535445445F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x54524154454759 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP2 PUSH2 0x2342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A414D4F554E545F43414E4E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x4F545F42455F5A45524F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP2 PUSH1 0xA0 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2354 SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2363 SWAP1 POP DUP3 PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x2399 SWAP1 DUP5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH2 0x4769 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x49E9138FE0DACF001EA634236E38AA8BD229EFD55EC4D7975228D679DB6CE8F9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2402 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x99 SLOAD PUSH2 0x2421 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x384F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x248C SWAP2 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH1 0xFF AND ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974496E746F53747261746567793A3A4D494E545F4641494C4544 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E6 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x24EE PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xA0 SLOAD PUSH2 0x24FB SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1BF8 SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH1 0xA6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x256F SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x258C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B0 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x25CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xE14D923EC37225F1AAB033B03F5C98CF911D68BBA31F6908192DB6C24B0511C9 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x2656 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2697 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x26B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0x26DD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV AND PUSH2 0x4601 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT PUSH2 0x272C JUMPI PUSH2 0x26F4 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0xA2 SSTORE PUSH1 0xA4 SLOAD PUSH2 0x2704 SWAP1 NUMBER PUSH2 0x4647 JUMP JUMPDEST PUSH1 0xA3 SSTORE NUMBER PUSH1 0xA4 SSTORE PUSH1 0xA5 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0xA5 SLOAD PUSH2 0x274E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x478B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND TIMESTAMP GT ISZERO PUSH2 0x27A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686172766573743A3A4241445F484152564553545F54494D4500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0xA0 SLOAD PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2961 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x27CA JUMPI PUSH2 0x27CA PUSH2 0x47AD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x27DF SWAP2 SWAP1 PUSH2 0x4389 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x284A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686172766573743A3A554E545255535445445F53545241544547590000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x27E5CBAF PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND SWAP5 SWAP3 PUSH4 0x27E5CBAF SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28D0 SWAP2 SWAP1 PUSH2 0x46B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x28DB DUP2 PUSH2 0x3835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 PUSH2 0x291B DUP3 DUP8 PUSH2 0x465E JUMP JUMPDEST PUSH2 0x2925 SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST SWAP5 POP DUP2 DUP2 GT PUSH2 0x2935 JUMPI PUSH1 0x0 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x293F DUP3 DUP3 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x2949 SWAP1 DUP8 PUSH2 0x465E JUMP JUMPDEST SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0x2959 SWAP1 PUSH2 0x462C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27AE JUMP JUMPDEST POP PUSH1 0x9B SLOAD PUSH1 0x0 SWAP1 PUSH2 0x297C SWAP1 DUP5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x31B4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2997 JUMPI POP PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x29C7 JUMPI PUSH1 0x9C SLOAD PUSH2 0x29C7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C2 PUSH2 0x29B7 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP6 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EF DUP3 DUP6 PUSH2 0x29D6 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x29E0 SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH2 0x29EA SWAP2 SWAP1 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x3A43 JUMP JUMPDEST PUSH1 0xA5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x80 SHL DUP2 MUL SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A1D SWAP1 DUP6 PUSH2 0x4647 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A35 DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA3 SLOAD PUSH2 0x3A59 JUMP JUMPDEST PUSH1 0xAD SSTORE PUSH1 0xA0 DUP5 SWAP1 SSTORE PUSH1 0xA5 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 NOT AND PUSH1 0x1 PUSH1 0x40 SHL TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x69E9C71F6799744A94D9897E77C3ED426CC2F92BA0EF3300785368209B6F4B2D SWAP1 PUSH2 0x2A9B SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x46D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 ISZERO PUSH2 0x2B21 JUMPI PUSH1 0x9F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND SWAP1 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x2B6D SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BAE SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744861727665737446656550657263656E743A3A4645455F544F4F5F4849 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x8E9 PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x9B DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2930745C0414DCBC7EBF3FEA0D713C9B1F0D69DD75345906FCF43AE322AD578 SWAP1 PUSH1 0x20 ADD PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x2CA2 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE3 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x2CFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST POP PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH2 0x2D45 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4576 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D86 SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x2DA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x45C5 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6F307DC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0x6F307DC3 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E12 SWAP2 SWAP1 PUSH2 0x47C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2E68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737453747261746567793A3A57524F4E475F554E4445524C59494E4700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x1EECB33217FCE2D414C96C97C7E082F4557817585C876A72ECA5305AFB15F1F1 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2ECE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2EEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2F0C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x307F DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x20BABC379 PUSH1 0xDD SHL DUP2 MSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2F97 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x815985D5B1D PUSH1 0xD2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x6175786F PUSH1 0xE0 SHL DUP2 MSTORE POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x305A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x306B SWAP3 SWAP2 SWAP1 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x3AAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3091 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x30FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x315B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x14D3 JUMP JUMPDEST DUP3 DUP3 MUL DUP4 ISZERO DUP5 DUP3 DIV DUP5 EQ OR PUSH2 0x31C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x322F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x32A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x32D2 SWAP1 DUP5 SWAP1 PUSH2 0x4647 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x21C8 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3C8A JUMP JUMPDEST DUP3 DUP2 MUL DUP3 ISZERO ISZERO DUP5 ISZERO DUP6 DUP4 DIV DUP5 EQ OR AND PUSH2 0x3398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x34E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3517 SWAP1 DUP5 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3563 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x35B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x35DD PUSH2 0x490 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x35E7 SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x35F4 PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x35FE SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 POP PUSH1 0xAB SLOAD DUP3 GT ISZERO PUSH2 0x3660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6465706F7369743A3A555345525F4445504F5349545F4C494D4954535F5245 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1050D21151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0xAC SLOAD DUP2 GT ISZERO PUSH2 0x36C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6465706F7369743A3A5641554C545F4445504F5349545F4C494D4954535F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x115050D21151 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x36CB DUP6 DUP6 PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x99 SLOAD PUSH2 0x3091 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x379E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x3804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x379E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB DUP3 GT ISZERO PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x38C9 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C7 SWAP2 SWAP1 PUSH2 0x46B7 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x3934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x21C8 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x39BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39CC SWAP2 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x39F9 SWAP1 DUP5 SWAP1 PUSH2 0x465E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x3A66 JUMPI POP DUP3 ISZERO JUMPDEST PUSH2 0x3AA2 JUMPI DUP2 PUSH1 0x97 SLOAD PUSH2 0x3A78 SWAP2 SWAP1 PUSH2 0x4695 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x3A88 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0x3A92 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST PUSH2 0x3A9D SWAP1 PUSH1 0x64 PUSH2 0x4676 JUMP JUMPDEST PUSH2 0x3AA5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3AC6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3B04 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x3B0E DUP4 DUP4 PUSH2 0x3D94 JUMP JUMPDEST PUSH2 0x3B16 PUSH2 0x3E13 JUMP JUMPDEST PUSH2 0x3B1E PUSH2 0x3723 JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9B SWAP2 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x3BA6 SWAP1 PUSH1 0xA PUSH2 0x4A32 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C0E SWAP2 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x9E DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x9C DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA7 SSTORE DUP1 ISZERO PUSH2 0x3C81 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E8E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x21C8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3CFD SWAP2 SWAP1 PUSH2 0x45A3 JUMP JUMPDEST PUSH2 0x21C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x356C SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3DAD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3DC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3DEB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x3DF3 PUSH2 0x3E9D JUMP JUMPDEST PUSH2 0x3DFD DUP4 DUP4 PUSH2 0x3F07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3E2C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3E48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3E6A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x3E72 PUSH2 0x3E9D JUMP JUMPDEST PUSH2 0x3E7A PUSH2 0x3F9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AA5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4011 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3EB6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3ED2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3E7A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3F20 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3F3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3F5E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP3 MLOAD PUSH2 0x3F71 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x41D1 JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x3F85 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x41D1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3FB5 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3FD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x47E0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3FF3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4072 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAF5 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x40C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x40DC SWAP2 SWAP1 PUSH2 0x4A41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4119 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x411E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x412E DUP3 DUP3 DUP7 PUSH2 0x4139 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4148 JUMPI POP DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4158 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x4286 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x41C5 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41C5 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4192 JUMP JUMPDEST POP PUSH2 0x384B SWAP3 SWAP2 POP PUSH2 0x4245 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x41DD SWAP1 PUSH2 0x453B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x41FF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x41C5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4218 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x41C5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x41C5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41C5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x422A JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x384B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4246 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4275 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x425D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x356C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x42A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x425A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x430A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4315 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4364 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x433F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x439B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10FD DUP2 PUSH2 0x42E2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x43BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x43C6 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x43D6 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x441B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x445C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x447F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x44C4 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x44D4 DUP2 PUSH2 0x42E2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4500 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x4510 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x4520 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x4530 DUP2 PUSH2 0x42E2 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x454F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4570 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4623 JUMPI PUSH2 0x4623 PUSH2 0x45EB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4640 JUMPI PUSH2 0x4640 PUSH2 0x45EB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4659 JUMPI PUSH2 0x4659 PUSH2 0x45EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4671 JUMPI PUSH2 0x4671 PUSH2 0x45EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4690 JUMPI PUSH2 0x4690 PUSH2 0x45EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x46B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x4713 JUMPI DUP3 CALLDATALOAD PUSH2 0x46F8 DUP2 PUSH2 0x42E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46E5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x473E JUMPI PUSH2 0x473E PUSH2 0x45EB JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4623 JUMPI PUSH2 0x4623 PUSH2 0x45EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4623 JUMPI PUSH2 0x4623 PUSH2 0x45EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10FD DUP2 PUSH2 0x42E2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x486D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x4893 JUMPI PUSH2 0x4893 PUSH2 0x482E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x48BB JUMPI PUSH2 0x48BB PUSH2 0x482E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x48D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x412E DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x425A JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x48F7 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x425A JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x490B DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x425A JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x491E DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x425A JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x493A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x425A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x4623 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x425A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4989 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x496F JUMPI PUSH2 0x496F PUSH2 0x45EB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x497C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4953 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x49A0 JUMPI POP PUSH1 0x1 PUSH2 0xBE3 JUMP JUMPDEST DUP2 PUSH2 0x49AD JUMPI POP PUSH1 0x0 PUSH2 0xBE3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x49C3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x49CD JUMPI PUSH2 0x49E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x49DE JUMPI PUSH2 0x49DE PUSH2 0x45EB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xBE3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4A0C JUMPI POP DUP2 DUP2 EXP PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x4A16 DUP4 DUP4 PUSH2 0x494E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4A2A JUMPI PUSH2 0x4A2A PUSH2 0x45EB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4A53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x425A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD REVERT 0x2D CODECOPY 0xA6 0x2A PUSH12 0xB145C637D024126579A58A6B ADDRESS CALLDATASIZE 0xAF 0xAC 0xC9 LOG3 INVALID 0x4C RETURNDATACOPY 0xD2 PC 0xC9 0x4B PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "6": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "12": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "16": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "17": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "POP",
      "path": "27"
    },
    "18": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "21": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "LT",
      "path": "27"
    },
    "22": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x412"
    },
    "25": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "26": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "29": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "SHR",
      "path": "27"
    },
    "32": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "33": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x7B72AEB9"
    },
    "38": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "39": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x220"
    },
    "42": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "43": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "44": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC822ADDA"
    },
    "49": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "50": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x130"
    },
    "53": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "54": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "55": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE5FA2B70"
    },
    "60": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "61": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB8"
    },
    "64": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "65": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "66": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xEED74E67"
    },
    "71": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "72": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x87"
    },
    "75": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "76": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "77": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xEED74E67"
    },
    "82": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "83": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x951"
    },
    "86": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "87": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "88": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF1A392DA"
    },
    "93": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "94": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x964"
    },
    "97": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "98": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "99": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF8C8765E"
    },
    "104": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "105": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x97E"
    },
    "108": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "109": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "110": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF97D2ED7"
    },
    "115": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "116": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x991"
    },
    "119": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "120": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "121": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFA1AD74"
    },
    "126": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "127": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x9A4"
    },
    "130": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "131": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "134": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "135": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "136": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "137": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE5FA2B70"
    },
    "142": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "143": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x90F"
    },
    "146": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "147": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "148": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xEC523AFD"
    },
    "153": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "154": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x922"
    },
    "157": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "158": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "159": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xECAD9565"
    },
    "164": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "165": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x935"
    },
    "168": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "169": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "170": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xECC404B5"
    },
    "175": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "176": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x93E"
    },
    "179": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "180": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "183": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "184": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "185": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "186": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD00364BE"
    },
    "191": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "192": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "196": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "197": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD00364BE"
    },
    "202": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "203": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x875"
    },
    "206": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "207": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "208": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xDD11DD45"
    },
    "213": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "214": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8A7"
    },
    "217": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "218": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "219": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xDD62ED3E"
    },
    "224": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "225": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8BA"
    },
    "228": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "229": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "230": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xDE9375F2"
    },
    "235": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "236": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8F3"
    },
    "239": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "240": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "241": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE33CC0A8"
    },
    "246": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "247": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x906"
    },
    "250": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "251": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "254": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "255": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "256": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "257": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC822ADDA"
    },
    "262": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "263": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x829"
    },
    "266": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "267": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "268": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC866983B"
    },
    "273": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "274": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x83C"
    },
    "277": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "278": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "279": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC89D3460"
    },
    "284": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "285": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x84F"
    },
    "288": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "289": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "290": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xCBC43F89"
    },
    "295": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "296": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x862"
    },
    "299": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "300": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "303": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "304": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "305": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "306": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA385FB96"
    },
    "311": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "312": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B3"
    },
    "315": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "316": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "317": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xAC86AC72"
    },
    "322": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "323": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "327": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "328": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xAC86AC72"
    },
    "333": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "334": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7DF"
    },
    "337": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "338": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "339": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB53D0958"
    },
    "344": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "345": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7F2"
    },
    "348": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "349": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "350": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xBDF06C8E"
    },
    "355": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "356": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x805"
    },
    "359": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "360": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "361": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC2930F91"
    },
    "366": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "367": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x818"
    },
    "370": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "371": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "372": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC70920BC"
    },
    "377": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "378": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x821"
    },
    "381": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "382": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "385": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "386": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "387": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "388": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA385FB96"
    },
    "393": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "394": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x79D"
    },
    "397": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "398": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "399": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA457C2D7"
    },
    "404": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "405": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7A6"
    },
    "408": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "409": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "410": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA9059CBB"
    },
    "415": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "416": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7B9"
    },
    "419": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "420": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "421": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xAC579B77"
    },
    "426": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "427": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7CC"
    },
    "430": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "431": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "433": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "434": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "435": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "436": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "437": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x912F74CD"
    },
    "442": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "443": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EF"
    },
    "446": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "447": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "448": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x912F74CD"
    },
    "453": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "454": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x75C"
    },
    "457": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "458": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "459": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x9291DF6B"
    },
    "464": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "465": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x783"
    },
    "468": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "469": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "470": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95D89B41"
    },
    "475": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "476": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x78C"
    },
    "479": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "480": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "481": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x9EE02C7F"
    },
    "486": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "487": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x794"
    },
    "490": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "491": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "494": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "495": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "496": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "497": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x7B72AEB9"
    },
    "502": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "503": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x72F"
    },
    "506": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "507": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "508": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x836CA0F6"
    },
    "513": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "514": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x742"
    },
    "517": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "518": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "519": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x841219E5"
    },
    "524": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "525": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x74B"
    },
    "528": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "529": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "530": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x86DC4800"
    },
    "535": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "536": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x753"
    },
    "539": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "540": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "542": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "543": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "544": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "545": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "546": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x39509351"
    },
    "551": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "552": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x326"
    },
    "555": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "556": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "557": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5C975ABB"
    },
    "562": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "563": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2AE"
    },
    "566": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "567": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "568": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6BD95612"
    },
    "573": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "574": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27D"
    },
    "577": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "578": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "579": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6BD95612"
    },
    "584": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "585": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6B0"
    },
    "588": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "589": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "590": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6F307DC3"
    },
    "595": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "596": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6B9"
    },
    "599": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "600": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "601": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x70A08231"
    },
    "606": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "607": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6E4"
    },
    "610": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "611": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "612": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x793101A5"
    },
    "617": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "618": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x70D"
    },
    "621": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "622": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "623": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x797BA463"
    },
    "628": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "629": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x715"
    },
    "632": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "633": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "635": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "636": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "637": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "638": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "639": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5C975ABB"
    },
    "644": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "645": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x68B"
    },
    "648": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "649": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "650": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x5E4F9451"
    },
    "655": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "656": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x696"
    },
    "659": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "660": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "661": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x63874446"
    },
    "666": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "667": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x69F"
    },
    "670": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "671": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "672": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6833F60D"
    },
    "677": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "678": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6A8"
    },
    "681": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "682": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "684": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "685": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "686": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "687": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "688": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3EC16194"
    },
    "693": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "694": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2F5"
    },
    "697": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "698": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "699": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3EC16194"
    },
    "704": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "705": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x618"
    },
    "708": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "709": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "710": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x448F56B9"
    },
    "715": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "716": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x62B"
    },
    "719": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "720": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "721": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x44B81396"
    },
    "726": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "727": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x65D"
    },
    "730": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "731": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "732": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x47E7EF24"
    },
    "737": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "738": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x665"
    },
    "741": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "742": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "743": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4EDDEA06"
    },
    "748": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "749": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x678"
    },
    "752": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "753": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "755": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "756": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "757": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "758": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "759": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x39509351"
    },
    "764": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "765": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5D7"
    },
    "768": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "769": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "770": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3AF9E669"
    },
    "775": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "776": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5EA"
    },
    "779": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "780": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "781": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3BA0B9A9"
    },
    "786": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "787": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5FD"
    },
    "790": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "791": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "792": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3C66A8FA"
    },
    "797": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "798": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x605"
    },
    "801": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "802": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "804": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "805": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "806": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "807": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "808": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1BBA16DB"
    },
    "813": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "814": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A9"
    },
    "817": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "818": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "819": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x2968676E"
    },
    "824": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "825": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x378"
    },
    "828": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "829": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "830": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x2968676E"
    },
    "835": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "836": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x544"
    },
    "839": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "840": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "841": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x2B2E05C1"
    },
    "846": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "847": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x596"
    },
    "850": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "851": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "852": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x305D61AE"
    },
    "857": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "858": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5A9"
    },
    "861": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "862": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "863": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x31024F3B"
    },
    "868": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "869": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5BC"
    },
    "872": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "873": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "874": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x313CE567"
    },
    "879": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "880": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5C5"
    },
    "883": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "884": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "886": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "887": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "888": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "889": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "890": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1BBA16DB"
    },
    "895": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "896": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4FA"
    },
    "899": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "900": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "901": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1EC36BFA"
    },
    "906": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "907": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x502"
    },
    "910": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "911": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "912": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x23B872DD"
    },
    "917": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "918": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x50B"
    },
    "921": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "922": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "923": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x25A760C2"
    },
    "928": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "929": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x51E"
    },
    "932": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "933": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "935": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "936": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "937": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "938": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "939": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x11E57A3E"
    },
    "944": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "GT",
      "path": "27"
    },
    "945": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E5"
    },
    "948": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "949": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "950": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x11E57A3E"
    },
    "955": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "956": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x482"
    },
    "959": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "960": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "961": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x13E86B28"
    },
    "966": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "967": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4A3"
    },
    "970": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "971": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "972": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x14FBAE04"
    },
    "977": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "978": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4B6"
    },
    "981": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "982": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "983": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x18160DDD"
    },
    "988": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "989": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4F2"
    },
    "992": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "993": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "995": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "996": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "997": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "998": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "999": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6FDDE03"
    },
    "1004": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "1005": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x417"
    },
    "1008": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1009": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1010": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x7B35D1D"
    },
    "1015": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "1016": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x435"
    },
    "1019": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1020": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1021": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95EA7B3"
    },
    "1026": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "1027": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x44A"
    },
    "1030": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1031": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1032": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE73ECEF"
    },
    "1037": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "EQ",
      "path": "27"
    },
    "1038": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46D"
    },
    "1041": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1042": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1043": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1045": {
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1046": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1151,
        39893
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1047": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1048": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41F"
    },
    "1051": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C6"
    },
    "1054": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1055": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1056": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1058": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1059": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42C"
    },
    "1062": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1063": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1064": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4286"
    },
    "1067": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1068": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1069": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1071": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1072": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1073": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1074": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SUB",
      "path": "6"
    },
    "1075": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1076": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "RETURN",
      "path": "6"
    },
    "1077": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1078": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1081": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x443"
    },
    "1084": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1085": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1087": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42B9"
    },
    "1090": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1091": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1092": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA58"
    },
    "1095": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1096": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1097": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "STOP",
      "path": "27"
    },
    "1098": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1099": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1102": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x458"
    },
    "1105": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1106": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1108": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42F7"
    },
    "1111": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1112": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1113": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD2"
    },
    "1116": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1117": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1118": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1120": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "ISZERO"
    },
    "1123": {
      "op": "ISZERO"
    },
    "1124": {
      "op": "DUP2"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42C"
    },
    "1132": {
      "op": "JUMP"
    },
    "1133": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1134": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x475"
    },
    "1137": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBE9"
    },
    "1140": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "i",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1141": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1142": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1144": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1145": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1148": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1149": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1150": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4323"
    },
    "1153": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "i",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1154": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1155": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1158": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x490"
    },
    "1161": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1162": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1164": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "1167": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1168": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1169": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4A"
    },
    "1172": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1173": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1174": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1176": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1177": {
      "op": "SWAP1"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1186": {
      "op": "JUMP"
    },
    "1187": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1188": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1191": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4B1"
    },
    "1194": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1195": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1197": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "1200": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1201": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1202": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC62"
    },
    "1205": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1206": {
      "offset": [
        7104,
        7151
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1207": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4DD"
    },
    "1210": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4C4"
    },
    "1213": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1214": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1216": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "1219": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        7104,
        7151
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1220": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1221": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAA"
    },
    "1223": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1225": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1226": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1228": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1229": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1230": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1231": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1233": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1234": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1235": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1236": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1237": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1239": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1240": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1241": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "ADD",
      "path": "27"
    },
    "1242": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1243": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1244": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1245": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1246": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1248": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1249": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        7104,
        7151
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1250": {
      "op": "SWAP3"
    },
    "1251": {
      "op": "DUP4"
    },
    "1252": {
      "op": "MSTORE"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1255": {
      "op": "DUP4"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "SWAP2"
    },
    "1258": {
      "op": "SWAP1"
    },
    "1259": {
      "op": "SWAP2"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "offset": [
        7104,
        7151
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1265": {
      "op": "JUMP"
    },
    "1266": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1267": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x35"
    },
    "1269": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1270": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x495"
    },
    "1273": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1274": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26044,
        27324
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1275": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26044,
        27324
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1278": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26044,
        27324
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD4A"
    },
    "1281": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26044,
        27324
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1282": {
      "offset": [
        7218,
        7249
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1283": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7218,
        7249
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1286": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7218,
        7249
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAB"
    },
    "1288": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7218,
        7249
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1289": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7218,
        7249
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1290": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        7218,
        7249
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1291": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1292": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1295": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x519"
    },
    "1298": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1299": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1301": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x43A6"
    },
    "1304": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1305": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1306": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1058"
    },
    "1309": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1310": {
      "offset": [
        3592,
        3623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1311": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x99"
    },
    "1313": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1314": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x532"
    },
    "1317": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "offset": [
        3592,
        3623
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1324": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "DIV",
      "path": "27"
    },
    "1325": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "1327": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "AND",
      "path": "27"
    },
    "1328": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1329": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1330": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1331": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1333": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3592,
        3623
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1336": {
      "op": "SWAP1"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "AND"
    },
    "1339": {
      "op": "DUP2"
    },
    "1340": {
      "op": "MSTORE"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "op": "ADD"
    },
    "1344": {
      "offset": [
        3592,
        3623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1347": {
      "op": "JUMP"
    },
    "1348": {
      "offset": [
        5454,
        5511
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1349": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x577"
    },
    "1352": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x552"
    },
    "1355": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1356": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1358": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "1361": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5454,
        5511
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1362": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1363": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "1365": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1367": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1368": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1370": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1371": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1372": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1373": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1375": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1376": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1377": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1378": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "1380": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1381": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "AND",
      "path": "27"
    },
    "1382": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1383": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "1386": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1387": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "DIV",
      "path": "27"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "offset": [
        5454,
        5511
      ],
      "op": "AND",
      "path": "27"
    },
    "1397": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1398": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1399": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1400": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1402": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1403": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5511
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1404": {
      "op": "SWAP3"
    },
    "1405": {
      "op": "ISZERO"
    },
    "1406": {
      "op": "ISZERO"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "op": "SWAP1"
    },
    "1418": {
      "op": "SWAP2"
    },
    "1419": {
      "op": "AND"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "DUP4"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "MSTORE"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "offset": [
        5454,
        5511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1429": {
      "op": "JUMP"
    },
    "1430": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1431": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1434": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5A4"
    },
    "1437": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1438": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1440": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "1443": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        16356,
        16492
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1444": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1445": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1104"
    },
    "1448": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        16356,
        16492
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1449": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1450": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1453": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5B7"
    },
    "1456": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1457": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1459": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "1462": {
      "fn": "Vault.setBurningFeePercent",
      "jump": "i",
      "offset": [
        17650,
        18024
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1463": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1464": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11EF"
    },
    "1467": {
      "fn": "Vault.setBurningFeePercent",
      "jump": "i",
      "offset": [
        17650,
        18024
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1468": {
      "offset": [
        4325,
        4357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1469": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        4325,
        4357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1472": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        4325,
        4357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9D"
    },
    "1474": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        4325,
        4357
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1475": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        4325,
        4357
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1476": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        4325,
        4357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1477": {
      "fn": "Vault.decimals",
      "offset": [
        15422,
        15521
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1478": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 1,
      "value": "0x99"
    },
    "1480": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1485": {
      "op": "SHL"
    },
    "1486": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1487": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "DIV",
      "path": "27"
    },
    "1488": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "1490": {
      "fn": "Vault.decimals",
      "offset": [
        15496,
        15514
      ],
      "op": "AND",
      "path": "27"
    },
    "1491": {
      "fn": "Vault.decimals",
      "offset": [
        15422,
        15521
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x532"
    },
    "1494": {
      "fn": "Vault.decimals",
      "offset": [
        15422,
        15521
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1495": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1496": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1499": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E5"
    },
    "1502": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1503": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1505": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42F7"
    },
    "1508": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1509": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1510": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x132B"
    },
    "1513": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1514": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1515": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1518": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5F8"
    },
    "1521": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1522": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1524": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "1527": {
      "fn": "Vault.balanceOfUnderlying",
      "jump": "i",
      "offset": [
        37758,
        37893
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1528": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1529": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1367"
    },
    "1532": {
      "fn": "Vault.balanceOfUnderlying",
      "jump": "i",
      "offset": [
        37758,
        37893
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1533": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37215,
        37557
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1534": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37215,
        37557
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1537": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37215,
        37557
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "1540": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        37215,
        37557
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1541": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1542": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1545": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x613"
    },
    "1548": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1549": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1551": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "1554": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1555": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1556": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13C0"
    },
    "1559": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1560": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1561": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1564": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x626"
    },
    "1567": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1568": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1570": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "1573": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        28692,
        28844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1574": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1575": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14E0"
    },
    "1578": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        28692,
        28844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1579": {
      "offset": [
        4917,
        4943
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1580": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "1582": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1583": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x645"
    },
    "1586": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "offset": [
        4917,
        4943
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1593": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "DIV",
      "path": "27"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "offset": [
        4917,
        4943
      ],
      "op": "AND",
      "path": "27"
    },
    "1603": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1604": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1605": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1606": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1608": {
      "fn": "Vault.calculateShares",
      "offset": [
        4917,
        4943
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "op": "SWAP1"
    },
    "1618": {
      "op": "SWAP2"
    },
    "1619": {
      "op": "AND"
    },
    "1620": {
      "op": "DUP2"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "offset": [
        4917,
        4943
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1628": {
      "op": "JUMP"
    },
    "1629": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1630": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1633": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14F8"
    },
    "1636": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38311,
        38985
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1637": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1638": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1641": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x673"
    },
    "1644": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1645": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1647": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42F7"
    },
    "1650": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1651": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1652": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1579"
    },
    "1655": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1656": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1657": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1660": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x686"
    },
    "1663": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1664": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1666": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x43E7"
    },
    "1669": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1670": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1671": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1637"
    },
    "1674": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1675": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1676": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x65"
    },
    "1678": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1679": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1681": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "1682": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45D"
    },
    "1685": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1310,
        1394
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1686": {
      "offset": [
        5590,
        5628
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1687": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5590,
        5628
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1690": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5590,
        5628
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA2"
    },
    "1692": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5590,
        5628
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1693": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5590,
        5628
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1694": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        5590,
        5628
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1695": {
      "offset": [
        7313,
        7345
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1696": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7313,
        7345
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1699": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7313,
        7345
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAC"
    },
    "1701": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7313,
        7345
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1702": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7313,
        7345
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1703": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        7313,
        7345
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1704": {
      "fn": "Vault.triggerPause",
      "offset": [
        12820,
        12927
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1705": {
      "fn": "Vault.triggerPause",
      "offset": [
        12820,
        12927
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1708": {
      "fn": "Vault.triggerPause",
      "offset": [
        12820,
        12927
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x171D"
    },
    "1711": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12820,
        12927
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1712": {
      "offset": [
        6759,
        6788
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1713": {
      "fn": "Vault.triggerPause",
      "offset": [
        6759,
        6788
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1716": {
      "fn": "Vault.triggerPause",
      "offset": [
        6759,
        6788
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA7"
    },
    "1718": {
      "fn": "Vault.triggerPause",
      "offset": [
        6759,
        6788
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1719": {
      "fn": "Vault.triggerPause",
      "offset": [
        6759,
        6788
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1720": {
      "fn": "Vault.triggerPause",
      "offset": [
        6759,
        6788
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1721": {
      "offset": [
        3515,
        3538
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1722": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x99"
    },
    "1724": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1725": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6CC"
    },
    "1728": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "offset": [
        3515,
        3538
      ],
      "op": "AND",
      "path": "27"
    },
    "1738": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1739": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1740": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1741": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1743": {
      "fn": "Vault.triggerPause",
      "offset": [
        3515,
        3538
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "op": "SWAP1"
    },
    "1753": {
      "op": "SWAP2"
    },
    "1754": {
      "op": "AND"
    },
    "1755": {
      "op": "DUP2"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1759": {
      "op": "ADD"
    },
    "1760": {
      "offset": [
        3515,
        3538
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "1763": {
      "op": "JUMP"
    },
    "1764": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1765": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x495"
    },
    "1768": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F2"
    },
    "1771": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1772": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1774": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4389"
    },
    "1777": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1778": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "op": "SUB"
    },
    "1787": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6",
      "statement": 3
    },
    "1788": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3773,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1790": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1791": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1792": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1793": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "1795": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1797": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1798": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1800": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1801": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1802": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1803": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1804": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1805": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25274,
        26000
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1806": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25274,
        26000
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1809": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25274,
        26000
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17D7"
    },
    "1812": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25274,
        26000
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1813": {
      "offset": [
        5099,
        5129
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1814": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "1816": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1817": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x645"
    },
    "1820": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "offset": [
        5099,
        5129
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1827": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "DIV",
      "path": "27"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "SUB"
    },
    "1836": {
      "offset": [
        5099,
        5129
      ],
      "op": "AND",
      "path": "27"
    },
    "1837": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1838": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        5099,
        5129
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1839": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1840": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "1843": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x73D"
    },
    "1846": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1847": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1849": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4409"
    },
    "1852": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1853": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1854": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x194E"
    },
    "1857": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1858": {
      "offset": [
        5685,
        5727
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1859": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        5685,
        5727
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1862": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        5685,
        5727
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA3"
    },
    "1864": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        5685,
        5727
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1865": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        5685,
        5727
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1866": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        5685,
        5727
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1867": {
      "fn": "Vault.totalFloat",
      "offset": [
        38059,
        38189
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1868": {
      "fn": "Vault.totalFloat",
      "offset": [
        38059,
        38189
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1871": {
      "fn": "Vault.totalFloat",
      "offset": [
        38059,
        38189
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B7D"
    },
    "1874": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        38059,
        38189
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1875": {
      "offset": [
        6860,
        6891
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1876": {
      "fn": "Vault.totalFloat",
      "offset": [
        6860,
        6891
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1879": {
      "fn": "Vault.totalFloat",
      "offset": [
        6860,
        6891
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA8"
    },
    "1881": {
      "fn": "Vault.totalFloat",
      "offset": [
        6860,
        6891
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1882": {
      "fn": "Vault.totalFloat",
      "offset": [
        6860,
        6891
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1883": {
      "fn": "Vault.totalFloat",
      "offset": [
        6860,
        6891
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1884": {
      "offset": [
        6957,
        7022
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1885": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4DD"
    },
    "1888": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x76A"
    },
    "1891": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1892": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1894": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "1897": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        6957,
        7022
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1898": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1899": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "1901": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1903": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1904": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1906": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1907": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1908": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1909": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1911": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1912": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1913": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1914": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1915": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1917": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1918": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1919": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "ADD",
      "path": "27"
    },
    "1920": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1921": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1922": {
      "fn": "Vault.totalFloat",
      "offset": [
        6957,
        7022
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1923": {
      "offset": [
        5834,
        5876
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1924": {
      "fn": "Vault.totalFloat",
      "offset": [
        5834,
        5876
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1927": {
      "fn": "Vault.totalFloat",
      "offset": [
        5834,
        5876
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA4"
    },
    "1929": {
      "fn": "Vault.totalFloat",
      "offset": [
        5834,
        5876
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1930": {
      "fn": "Vault.totalFloat",
      "offset": [
        5834,
        5876
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1931": {
      "fn": "Vault.totalFloat",
      "offset": [
        5834,
        5876
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1932": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1933": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41F"
    },
    "1936": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BFD"
    },
    "1939": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1940": {
      "offset": [
        7415,
        7445
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1941": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7415,
        7445
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1944": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7415,
        7445
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAD"
    },
    "1946": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7415,
        7445
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1947": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7415,
        7445
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1948": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        7415,
        7445
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1949": {
      "offset": [
        3361,
        3389
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1950": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        3361,
        3389
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "1953": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        3361,
        3389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x97"
    },
    "1955": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        3361,
        3389
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1956": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        3361,
        3389
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1957": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        3361,
        3389
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1958": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1959": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1962": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B4"
    },
    "1965": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1966": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1968": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42F7"
    },
    "1971": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1973": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C0C"
    },
    "1976": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1977": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1978": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1981": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C7"
    },
    "1984": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1985": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1987": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42F7"
    },
    "1990": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1991": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1992": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA5"
    },
    "1995": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1996": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1997": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2000": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7DA"
    },
    "2003": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2004": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2006": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4432"
    },
    "2009": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21510,
        21862
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2010": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2011": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CB2"
    },
    "2014": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21510,
        21862
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2015": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2016": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2019": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7ED"
    },
    "2022": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2023": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2025": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "2028": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2029": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2030": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DE8"
    },
    "2033": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2034": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2035": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2038": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x800"
    },
    "2041": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2042": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2044": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42F7"
    },
    "2047": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2048": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2049": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1ED0"
    },
    "2052": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2053": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2054": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2057": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x813"
    },
    "2060": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2061": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2063": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42F7"
    },
    "2066": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        34469,
        35576
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2067": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2068": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21CD"
    },
    "2071": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        34469,
        35576
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2072": {
      "offset": [
        3798,
        3821
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2073": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "2076": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "2078": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        3798,
        3821
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2079": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2080": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        3798,
        3821
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2081": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39164,
        39306
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2082": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39164,
        39306
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "2085": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39164,
        39306
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24DC"
    },
    "2088": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        39164,
        39306
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2089": {
      "offset": [
        6671,
        6705
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2090": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6CC"
    },
    "2093": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x837"
    },
    "2096": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2097": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2099": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "2102": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2103": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2104": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2505"
    },
    "2107": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2108": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2109": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2112": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x84A"
    },
    "2115": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2116": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2118": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "2121": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2122": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2123": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x252F"
    },
    "2126": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2127": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2128": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2131": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x85D"
    },
    "2134": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2135": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2137": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4432"
    },
    "2140": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2141": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2142": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2616"
    },
    "2145": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2146": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2147": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2150": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x870"
    },
    "2153": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2154": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2156": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "2159": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        17174,
        17541
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2160": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2161": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2B2D"
    },
    "2164": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        17174,
        17541
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2165": {
      "offset": [
        6335,
        6365
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2166": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "2168": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2169": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x88F"
    },
    "2172": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2177": {
      "op": "SHL"
    },
    "2178": {
      "offset": [
        6335,
        6365
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2179": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "DIV",
      "path": "27"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "offset": [
        6335,
        6365
      ],
      "op": "AND",
      "path": "27"
    },
    "2189": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2190": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2191": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2192": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2194": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        6335,
        6365
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "op": "SWAP1"
    },
    "2204": {
      "op": "SWAP2"
    },
    "2205": {
      "op": "AND"
    },
    "2206": {
      "op": "DUP2"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "offset": [
        6335,
        6365
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42C"
    },
    "2214": {
      "op": "JUMP"
    },
    "2215": {
      "offset": [
        4448,
        4481
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2216": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9E"
    },
    "2218": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2219": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6CC"
    },
    "2222": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "offset": [
        4448,
        4481
      ],
      "op": "AND",
      "path": "27"
    },
    "2232": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2233": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        4448,
        4481
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2234": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2235": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x495"
    },
    "2238": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2242": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2244": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44A6"
    },
    "2247": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2248": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 4
    },
    "2258": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2259": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "AND",
      "path": "6"
    },
    "2260": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4346,
        4353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2262": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2263": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2264": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2265": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4383
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "2267": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2269": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2270": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2271": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2272": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2274": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2275": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2276": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4390
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2277": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2278": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2279": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2280": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "AND",
      "path": "6"
    },
    "2281": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2282": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2283": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2284": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2285": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2286": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2287": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2288": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2289": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4372,
        4399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2290": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4257,
        4406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2291": {
      "offset": [
        3431,
        3452
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2292": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "2294": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2295": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6CC"
    },
    "2298": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "offset": [
        3431,
        3452
      ],
      "op": "AND",
      "path": "27"
    },
    "2308": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2309": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3431,
        3452
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2310": {
      "offset": [
        3995,
        4027
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2311": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3995,
        4027
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "2314": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3995,
        4027
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9B"
    },
    "2316": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3995,
        4027
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2317": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3995,
        4027
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2318": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        3995,
        4027
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2319": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2320": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2323": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x91D"
    },
    "2326": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2327": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2329": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4370"
    },
    "2332": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2333": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2334": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C62"
    },
    "2337": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2338": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2339": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2342": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x930"
    },
    "2345": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2346": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2348": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "2351": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2352": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2353": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D05"
    },
    "2356": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2357": {
      "offset": [
        5346,
        5382
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2358": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5346,
        5382
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x495"
    },
    "2361": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5346,
        5382
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA0"
    },
    "2363": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5346,
        5382
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2364": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5346,
        5382
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2365": {
      "fn": "Vault.trustStrategy",
      "offset": [
        5346,
        5382
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2366": {
      "offset": [
        4118,
        4151
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2367": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9C"
    },
    "2369": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2370": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6CC"
    },
    "2373": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "offset": [
        4118,
        4151
      ],
      "op": "AND",
      "path": "27"
    },
    "2383": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2384": {
      "fn": "Vault.trustStrategy",
      "offset": [
        4118,
        4151
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2385": {
      "offset": [
        6104,
        6140
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2386": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "2388": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2389": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x645"
    },
    "2392": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "offset": [
        6104,
        6140
      ],
      "op": "AND",
      "path": "27"
    },
    "2402": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2403": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6104,
        6140
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2404": {
      "offset": [
        6227,
        6252
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2405": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "2407": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2408": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x645"
    },
    "2411": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "offset": [
        6227,
        6252
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2418": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "DIV",
      "path": "27"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "offset": [
        6227,
        6252
      ],
      "op": "AND",
      "path": "27"
    },
    "2428": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2429": {
      "fn": "Vault.trustStrategy",
      "offset": [
        6227,
        6252
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2430": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2431": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x448"
    },
    "2434": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x98C"
    },
    "2437": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "2438": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2440": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x44DF"
    },
    "2443": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2444": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2445": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2EB5"
    },
    "2448": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2449": {
      "offset": [
        4736,
        4764
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2450": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "2452": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2453": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x88F"
    },
    "2456": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "offset": [
        4736,
        4764
      ],
      "op": "AND",
      "path": "27"
    },
    "2466": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2467": {
      "fn": "Vault.initialize",
      "offset": [
        4736,
        4764
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2468": {
      "offset": [
        1938,
        1976
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2469": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x41F"
    },
    "2472": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2474": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2475": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2476": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2478": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "ADD",
      "path": "27"
    },
    "2479": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2481": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2482": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2483": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2485": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2486": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2487": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2489": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "ADD",
      "path": "27"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x181719"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "offset": [
        1938,
        1976
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2498": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2499": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "POP",
      "path": "27"
    },
    "2500": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2501": {
      "fn": "Vault.initialize",
      "offset": [
        1938,
        1976
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2502": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2503": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2501,
        2514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2505": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2533,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x36"
    },
    "2507": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2508": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2509": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D5"
    },
    "2512": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2513": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x453B"
    },
    "2516": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2517": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2518": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2519": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2521": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2522": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2524": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2525": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2526": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DIV",
      "path": "6"
    },
    "2527": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MUL",
      "path": "6"
    },
    "2528": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2530": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2531": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2533": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2534": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2535": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2536": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2537": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2539": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2540": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2541": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2542": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2543": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2544": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2545": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2546": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2547": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2549": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2550": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2551": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2552": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2553": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA01"
    },
    "2556": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x453B"
    },
    "2560": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2561": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2562": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2563": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2564": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4E"
    },
    "2567": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2568": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2569": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2571": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "LT",
      "path": "6"
    },
    "2572": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA23"
    },
    "2575": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2576": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2579": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2580": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2581": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2582": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DIV",
      "path": "6"
    },
    "2583": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MUL",
      "path": "6"
    },
    "2584": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2585": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2586": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2587": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2589": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2590": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2591": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4E"
    },
    "2594": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2595": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2596": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2597": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2599": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2602": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2603": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2607": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2610": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2613": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2614": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2618": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2619": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2621": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2624": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "GT",
      "path": "6"
    },
    "2625": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA31"
    },
    "2628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2629": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2630": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SUB",
      "path": "6"
    },
    "2632": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2634": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "AND",
      "path": "6"
    },
    "2635": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2636": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2640": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2641": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2642": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2643": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2644": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2645": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2526,
        2538
      ],
      "op": "POP",
      "path": "6"
    },
    "2646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2447,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2647": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2447,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2648": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2649": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "2651": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2652": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2654": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2655": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2662": {
      "op": "SHL"
    },
    "2663": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2664": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2665": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19206,
        19216
      ],
      "op": "CALLER",
      "path": "27"
    },
    "2666": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19206,
        19216
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "op": "SUB"
    },
    "2675": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "2676": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2677": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "2682": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2683": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA98"
    },
    "2686": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2687": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19206,
        19216
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2688": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19206,
        19216
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2689": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "2690": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "SUB"
    },
    "2699": {
      "op": "NOT"
    },
    "2700": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2702": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "2703": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "2704": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2705": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2707": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "2708": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "2711": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2712": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2713": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2715": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2717": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2718": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2719": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2720": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "2721": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2722": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "2723": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "2724": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "2725": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2726": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2727": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2728": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAB5"
    },
    "2731": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2732": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2733": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2735": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2736": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "2737": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2738": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2740": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "27"
    },
    "2741": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2742": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "2743": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "2744": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "2745": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "2746": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2748": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2749": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "2750": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2752": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "2753": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2755": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2756": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "2757": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "2758": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2759": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "2760": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2761": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2763": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2764": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "2765": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2766": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "2767": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2768": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD9"
    },
    "2771": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2772": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2773": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "2776": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2777": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2778": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAFE"
    },
    "2781": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2782": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2784": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2793": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2794": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2796": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "2797": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "2800": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2801": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "2804": {
      "fn": "Vault.setHarvestWindow",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2805": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2806": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2808": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2809": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2810": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2811": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "SUB",
      "path": "27"
    },
    "2812": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2813": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "REVERT",
      "path": "27"
    },
    "2814": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2815": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19334,
        19346
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 6,
      "value": "0x9F"
    },
    "2817": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19334,
        19346
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2822": {
      "op": "SHL"
    },
    "2823": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19334,
        19346
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2824": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19334,
        19346
      ],
      "op": "DIV",
      "path": "27"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "op": "SUB"
    },
    "2833": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19334,
        19346
      ],
      "op": "AND",
      "path": "27"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2840": {
      "op": "SHL"
    },
    "2841": {
      "op": "SUB"
    },
    "2842": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19314,
        19346
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2843": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19314,
        19346
      ],
      "op": "AND",
      "path": "27"
    },
    "2844": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19314,
        19346
      ],
      "op": "GT",
      "path": "27"
    },
    "2845": {
      "branch": 181,
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19314,
        19346
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2846": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xB73"
    },
    "2849": {
      "branch": 181,
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2850": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2852": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2861": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2866": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2867": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "ADD",
      "path": "27"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH32",
      "value": "0x7365744861727665737457696E646F773A3A57494E444F575F544F4F5F4C4F4E"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x47"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2921": {
      "op": "DUP3"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "op": "MSTORE"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "2930": {
      "op": "JUMP"
    },
    "2931": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19306,
        19384
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2932": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19446
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 7,
      "value": "0x9F"
    },
    "2934": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2935": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2936": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2953": {
      "op": "NOT"
    },
    "2954": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "AND",
      "path": "27"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2961": {
      "op": "SHL"
    },
    "2962": {
      "op": "SUB"
    },
    "2963": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2964": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "AND",
      "path": "27"
    },
    "2965": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2966": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2967": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "OR",
      "path": "27"
    },
    "2968": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2969": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2970": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19433,
        19465
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2971": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 8,
      "value": "0x40"
    },
    "2973": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2974": {
      "op": "SWAP1"
    },
    "2975": {
      "op": "DUP2"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xE5AAC860870A2B99320DF1D1B908931B370150F1C11074466FB332528E5B910B"
    },
    "3010": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3015": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3017": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3018": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3019": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3020": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "SUB",
      "path": "27"
    },
    "3021": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3022": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19481,
        19519
      ],
      "op": "LOG1",
      "path": "27"
    },
    "3023": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "POP",
      "path": "27"
    },
    "3024": {
      "fn": "Vault.setHarvestWindow",
      "offset": [
        19132,
        19526
      ],
      "op": "POP",
      "path": "27"
    },
    "3025": {
      "fn": "Vault.setHarvestWindow",
      "jump": "o",
      "offset": [
        19132,
        19526
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3026": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3027": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4627,
        4631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3029": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4682
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0xBDF"
    },
    "3032": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 10
    },
    "3033": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4666,
        4673
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3034": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4675,
        4681
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3035": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3098"
    },
    "3038": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4643,
        4682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3039": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4643,
        4682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3040": {
      "op": "POP"
    },
    "3041": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4699,
        4703
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x1"
    },
    "3043": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3044": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3045": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3046": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "POP",
      "path": "6"
    },
    "3047": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4544,
        4710
      ],
      "op": "POP",
      "path": "6"
    },
    "3048": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4544,
        4710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3049": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3050": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21252,
        21270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "3052": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21289,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 12,
      "value": "0xA6"
    },
    "3054": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3055": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3056": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3057": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3059": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MUL",
      "path": "27"
    },
    "3060": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3062": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3063": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3065": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3066": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3067": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3068": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3069": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3071": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3072": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3073": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3074": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3075": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3076": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3077": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3078": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3079": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3081": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3082": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3083": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3084": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3085": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3086": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3087": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA4E"
    },
    "3090": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3091": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3093": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MUL",
      "path": "27"
    },
    "3094": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3095": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3096": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3097": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3098": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3100": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3101": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3103": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3105": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3106": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3107": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3108": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3109": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "AND",
      "path": "27"
    },
    "3119": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3120": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3121": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3123": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3124": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3125": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3126": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3127": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3129": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "ADD",
      "path": "27"
    },
    "3130": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3131": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3132": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "GT",
      "path": "27"
    },
    "3133": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC23"
    },
    "3136": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3137": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3138": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3139": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3140": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3141": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3142": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3143": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21282,
        21304
      ],
      "op": "POP",
      "path": "27"
    },
    "3144": {
      "fn": "Vault.getWithdrawalQueue",
      "offset": [
        21199,
        21311
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3145": {
      "fn": "Vault.getWithdrawalQueue",
      "jump": "o",
      "offset": [
        21199,
        21311
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3146": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3147": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29142,
        29149
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3149": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29168,
        29211
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 13,
      "value": "0xBE3"
    },
    "3152": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29186,
        29200
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC57"
    },
    "3155": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29186,
        29198
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "3158": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29186,
        29200
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3159": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29186,
        29200
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3160": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29202,
        29210
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "3162": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29202,
        29210
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3163": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29168,
        29180
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3164": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29168,
        29180
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3165": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29168,
        29211
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3166": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29168,
        29185
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x31B4"
    },
    "3169": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29168,
        29211
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3170": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3171": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "3173": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3174": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3176": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3177": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3186": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3187": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18599,
        18609
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3188": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18599,
        18609
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "3198": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3199": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "3204": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3205": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCA2"
    },
    "3208": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3209": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18599,
        18609
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3210": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18599,
        18609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3211": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "3212": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3219": {
      "op": "SHL"
    },
    "3220": {
      "op": "SUB"
    },
    "3221": {
      "op": "NOT"
    },
    "3222": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3224": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "3225": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "3226": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3227": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3229": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3230": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "3233": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3234": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3235": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3237": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3239": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3240": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3241": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3242": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "3243": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3244": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "3245": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "3246": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "3247": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3248": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3249": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3250": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCBF"
    },
    "3253": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3254": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3255": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3257": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3258": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3259": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3260": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3262": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3263": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3264": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3265": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3266": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3267": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3268": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3270": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3271": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3272": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3274": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "3275": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3277": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3278": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3279": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "3280": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3281": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3282": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3283": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3285": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3286": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3287": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3288": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3289": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3290": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCE3"
    },
    "3293": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3294": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3295": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "3298": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3299": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3300": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCFF"
    },
    "3303": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3304": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3306": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3315": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3316": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3318": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "3319": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "3322": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3323": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "3326": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3327": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3328": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18677
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 14,
      "value": "0x9E"
    },
    "3330": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3331": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "SUB"
    },
    "3340": {
      "op": "NOT"
    },
    "3341": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "AND",
      "path": "27"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "op": "SUB"
    },
    "3350": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3351": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "AND",
      "path": "27"
    },
    "3352": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3353": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3354": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "OR",
      "path": "27"
    },
    "3355": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3356": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3357": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18659,
        18699
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3358": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18715,
        18761
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 15,
      "value": "0x40"
    },
    "3360": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18715,
        18761
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3361": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18715,
        18761
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xB5D8934A1F336D4CF641AE9F680C3E196F624F0BD9271749BE60D98B70F70060"
    },
    "3394": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18715,
        18761
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3397": {
      "op": "SWAP1"
    },
    "3398": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18715,
        18761
      ],
      "op": "LOG2",
      "path": "27"
    },
    "3399": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "POP",
      "path": "27"
    },
    "3400": {
      "fn": "Vault.setBurningFeeReceiver",
      "offset": [
        18517,
        18768
      ],
      "op": "POP",
      "path": "27"
    },
    "3401": {
      "fn": "Vault.setBurningFeeReceiver",
      "jump": "o",
      "offset": [
        18517,
        18768
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3402": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26044,
        27324
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3403": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "3405": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3406": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3408": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3409": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3416": {
      "op": "SHL"
    },
    "3417": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3418": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3419": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26091,
        26101
      ],
      "op": "CALLER",
      "path": "27"
    },
    "3420": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26091,
        26101
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "3430": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3431": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "3436": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3437": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD8A"
    },
    "3440": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3441": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26091,
        26101
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3442": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26091,
        26101
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3443": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "3444": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "op": "SUB"
    },
    "3453": {
      "op": "NOT"
    },
    "3454": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3456": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "3457": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "3458": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3459": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3461": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3462": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "3465": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3466": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3467": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3469": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3471": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3472": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3473": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3474": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "3475": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3476": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "3477": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "3478": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "3479": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3480": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3481": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3482": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDA7"
    },
    "3485": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3486": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3487": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3489": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3490": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3491": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3492": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3494": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3495": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3496": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3497": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3498": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3499": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3500": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3502": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3503": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3504": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3506": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "3507": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3509": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3510": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3511": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "3512": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3513": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3514": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3515": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3517": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3518": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "3519": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3520": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "3521": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3522": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDCB"
    },
    "3525": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3526": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3527": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "3530": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3531": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3532": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDE7"
    },
    "3535": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3536": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3538": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3547": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3548": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3550": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "3551": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "3554": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3555": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "3558": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3559": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3560": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 16,
      "value": "0x9F"
    },
    "3562": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3563": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26202
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "3565": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26202
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3566": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26217
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE11"
    },
    "3569": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26217
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "SUB"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3582": {
      "op": "SHL"
    },
    "3583": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3584": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3585": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "DIV",
      "path": "27"
    },
    "3586": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3587": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "AND",
      "path": "27"
    },
    "3588": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26205,
        26217
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3593": {
      "op": "SHL"
    },
    "3594": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26202
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3595": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26202
      ],
      "op": "DIV",
      "path": "27"
    },
    "3596": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26202
      ],
      "op": "AND",
      "path": "27"
    },
    "3597": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26217
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4601"
    },
    "3600": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26191,
        26217
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3601": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26191,
        26217
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3608": {
      "op": "SHL"
    },
    "3609": {
      "op": "SUB"
    },
    "3610": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26171,
        26218
      ],
      "op": "AND",
      "path": "27"
    },
    "3611": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26171,
        26186
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "3612": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26171,
        26218
      ],
      "op": "LT",
      "path": "27"
    },
    "3613": {
      "branch": 182,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26171,
        26218
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3614": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE77"
    },
    "3617": {
      "branch": 182,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3618": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3620": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3629": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3632": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3634": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3635": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "ADD",
      "path": "27"
    },
    "3636": {
      "op": "MSTORE"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3641": {
      "op": "DUP3"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "MSTORE"
    },
    "3644": {
      "op": "PUSH32",
      "value": "0x62617463684275726E3A3A4C41544553545F484152564553545F4E4F545F4558"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH5",
      "value": "0x1412549151"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "3690": {
      "op": "SHL"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3693": {
      "op": "DUP3"
    },
    "3694": {
      "op": "ADD"
    },
    "3695": {
      "op": "MSTORE"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "3702": {
      "op": "JUMP"
    },
    "3703": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26163,
        26260
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3704": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26311
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA7"
    },
    "3706": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3707": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3708": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26271,
        26294
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3710": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26271,
        26294
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3711": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26271,
        26294
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3712": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE88"
    },
    "3715": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3716": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x462C"
    },
    "3719": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26297,
        26313
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3720": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3721": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3722": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3723": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26297,
        26313
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26350
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3727": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3728": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3729": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3730": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26363
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAA"
    },
    "3732": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3734": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3735": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3736": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3737": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3739": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3740": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3741": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3742": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26353,
        26380
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3743": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3744": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3745": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3746": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3747": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "ADD",
      "path": "27"
    },
    "3748": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3749": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3750": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3751": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3752": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3753": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3754": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3755": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3756": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3758": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3759": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3760": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "ADD",
      "path": "27"
    },
    "3761": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3762": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3763": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3764": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "ADD",
      "path": "27"
    },
    "3765": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3766": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3767": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3768": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3769": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26271,
        26313
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3770": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26271,
        26313
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26324,
        26380
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3773": {
      "branch": 183,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26498,
        26514
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 17
    },
    "3774": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF18"
    },
    "3777": {
      "branch": 183,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3778": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3780": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3789": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3792": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3794": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3795": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "ADD",
      "path": "27"
    },
    "3796": {
      "op": "MSTORE"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH32",
      "value": "0x62617463684275726E3A3A544F54414C5F5348415245535F43414E4E4F545F42"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3839": {
      "op": "DUP3"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH6",
      "value": "0x455F5A45524F"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3851": {
      "op": "SHL"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "3863": {
      "op": "JUMP"
    },
    "3864": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26490,
        26557
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3865": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26568,
        26592
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3867": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26595,
        26637
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF25"
    },
    "3870": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26612,
        26626
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC57"
    },
    "3873": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26612,
        26624
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "3876": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26612,
        26626
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3877": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26595,
        26637
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3878": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26568,
        26637
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3879": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26568,
        26637
      ],
      "op": "POP",
      "path": "27"
    },
    "3880": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26675,
        26687
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 18,
      "value": "0xF2F"
    },
    "3883": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26675,
        26685
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B7D"
    },
    "3886": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26675,
        26687
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3887": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26675,
        26687
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3888": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26655,
        26671
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3889": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26655,
        26687
      ],
      "op": "GT",
      "path": "27"
    },
    "3890": {
      "branch": 184,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26655,
        26687
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3891": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF7E"
    },
    "3894": {
      "branch": 184,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3895": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3897": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3904": {
      "op": "SHL"
    },
    "3905": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3906": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3909": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3911": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3912": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "ADD",
      "path": "27"
    },
    "3913": {
      "op": "DUP2"
    },
    "3914": {
      "op": "SWAP1"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "MSTORE"
    },
    "3921": {
      "op": "PUSH32",
      "value": "0x62617463684275726E3A3A4E4F545F454E4F5547485F554E4445524C59494E47"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "MSTORE"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "3965": {
      "op": "JUMP"
    },
    "3966": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26647,
        26724
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3967": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26735,
        26768
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 19,
      "value": "0xF88"
    },
    "3970": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26749,
        26753
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "3971": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26756,
        26767
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3972": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26735,
        26740
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x31CF"
    },
    "3975": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26735,
        26768
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3976": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26735,
        26768
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3977": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26845,
        26862
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9D"
    },
    "3979": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26845,
        26862
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3980": {
      "branch": 185,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26845,
        26867
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3981": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26841,
        27080
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFD8"
    },
    "3984": {
      "branch": 185,
      "fn": "Vault.execBatchBurn",
      "offset": [
        26841,
        27080
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3985": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26927,
        26944
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9D"
    },
    "3987": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26927,
        26944
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3988": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26883,
        26902
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3990": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26883,
        26902
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3991": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26953
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFAA"
    },
    "3994": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26953
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3995": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26921
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3996": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26921
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3997": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26946,
        26952
      ],
      "op": "PUSH8",
      "path": "27",
      "value": "0xDE0B6B3A7640000"
    },
    "4006": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26926
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x31B4"
    },
    "4009": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26905,
        26953
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4010": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26905,
        26953
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4011": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26883,
        26953
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 20,
      "value": "0xFB6"
    },
    "4016": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26883,
        26953
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4017": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4018": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "4021": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        26967,
        26998
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4022": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4023": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27037,
        27055
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 21,
      "value": "0x9E"
    },
    "4025": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27037,
        27055
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4026": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x99"
    },
    "4028": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4029": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4030": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26967,
        26998
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27069
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFD6"
    },
    "4035": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27069
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4045": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4046": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "AND",
      "path": "27"
    },
    "4047": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27023
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4048": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27037,
        27055
      ],
      "op": "AND",
      "path": "27"
    },
    "4049": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27057,
        27068
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4050": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27036
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x331D"
    },
    "4053": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27013,
        27069
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4054": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27013,
        27069
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4055": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26869,
        27080
      ],
      "op": "POP",
      "path": "27"
    },
    "4056": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26841,
        27080
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4057": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27170,
        27178
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 22,
      "value": "0x9A"
    },
    "4059": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27170,
        27178
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4060": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27179
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFE8"
    },
    "4063": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27179
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4064": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27151
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4065": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27151
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4066": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27157,
        27168
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4067": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27157,
        27168
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4068": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27156
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3380"
    },
    "4071": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27135,
        27179
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4072": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27135,
        27179
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4073": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4075": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4076": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4077": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4078": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27100
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAA"
    },
    "4080": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4082": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4083": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4085": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4086": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4087": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27132
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "4089": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27132
      ],
      "op": "ADD",
      "path": "27"
    },
    "4090": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27179
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4091": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27179
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4092": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27179
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4093": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27179
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4094": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27205
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 23,
      "value": "0xA8"
    },
    "4096": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4097": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4098": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27209,
        27225
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4099": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27209,
        27225
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4100": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27090,
        27117
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4101": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100F"
    },
    "4104": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4105": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27209,
        27225
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4106": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27209,
        27225
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4107": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "4110": {
      "fn": "Vault.execBatchBurn",
      "jump": "i",
      "offset": [
        27189,
        27225
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4111": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4112": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4113": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4114": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27189,
        27225
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4115": {
      "op": "POP"
    },
    "4116": {
      "op": "POP"
    },
    "4117": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 24,
      "value": "0x40"
    },
    "4119": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4120": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4121": {
      "op": "DUP4"
    },
    "4122": {
      "op": "DUP2"
    },
    "4123": {
      "op": "MSTORE"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4126": {
      "op": "DUP2"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "op": "DUP4"
    },
    "4129": {
      "op": "SWAP1"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27275,
        27285
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4132": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27275,
        27285
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4133": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27258,
        27273
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4134": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27258,
        27273
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4135": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x464420EE56151EE74D491D95CFA6B42D6C6504B38DEBC567F5532168243F1D8D"
    },
    "4168": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4172": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4173": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4174": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4175": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "SUB",
      "path": "27"
    },
    "4176": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4177": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        27241,
        27317
      ],
      "op": "LOG3",
      "path": "27"
    },
    "4178": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26103,
        27324
      ],
      "op": "POP",
      "path": "27"
    },
    "4179": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26103,
        27324
      ],
      "op": "POP",
      "path": "27"
    },
    "4180": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26103,
        27324
      ],
      "op": "POP",
      "path": "27"
    },
    "4181": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26103,
        27324
      ],
      "op": "POP",
      "path": "27"
    },
    "4182": {
      "fn": "Vault.execBatchBurn",
      "offset": [
        26044,
        27324
      ],
      "op": "POP",
      "path": "27"
    },
    "4183": {
      "fn": "Vault.execBatchBurn",
      "jump": "o",
      "offset": [
        26044,
        27324
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4184": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4185": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5313,
        5317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4187": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5365
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0x1065"
    },
    "4190": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5339,
        5345
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4191": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5347,
        5356
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4192": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5358,
        5364
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4193": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33A2"
    },
    "4196": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5329,
        5365
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4197": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5365
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4207": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "AND",
      "path": "6"
    },
    "4208": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5376,
        5400
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4210": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4211": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4212": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4213": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "4215": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4217": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4218": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4219": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4220": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4222": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4223": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4224": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5422
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4225": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4226": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4227": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4228": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4229": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4230": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4231": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4232": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4233": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5436
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4234": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 26
    },
    "4235": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4236": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "LT",
      "path": "6"
    },
    "4237": {
      "branch": 219,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5454,
        5480
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4238": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10EA"
    },
    "4241": {
      "branch": 219,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4242": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4244": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4253": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4256": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4258": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4259": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "ADD",
      "path": "6"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4317": {
      "op": "SHL"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4325": {
      "op": "ADD"
    },
    "4326": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "4329": {
      "op": "JUMP"
    },
    "4330": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5446,
        5525
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4331": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5616
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0x10F7"
    },
    "4334": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5568,
        5574
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4335": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4336": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5609,
        5615
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4337": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5590,
        5606
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4338": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5590,
        5615
      ],
      "op": "SUB",
      "path": "6"
    },
    "4339": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3098"
    },
    "4342": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5559,
        5616
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4343": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5559,
        5616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4344": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5644,
        5648
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 28,
      "value": "0x1"
    },
    "4346": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4347": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "POP",
      "path": "6"
    },
    "4348": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5637,
        5648
      ],
      "op": "POP",
      "path": "6"
    },
    "4349": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4350": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4351": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4352": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4353": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4354": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5177,
        5655
      ],
      "op": "POP",
      "path": "6"
    },
    "4355": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5177,
        5655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4356": {
      "fn": "Vault.setAuth",
      "offset": [
        16356,
        16492
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4357": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "4359": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4360": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4362": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4363": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4372": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4373": {
      "fn": "Vault.setAuth",
      "offset": [
        16414,
        16424
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4374": {
      "fn": "Vault.setAuth",
      "offset": [
        16414,
        16424
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "op": "SUB"
    },
    "4383": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "4384": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4385": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "4390": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4391": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1144"
    },
    "4394": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4395": {
      "fn": "Vault.setAuth",
      "offset": [
        16414,
        16424
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4396": {
      "fn": "Vault.setAuth",
      "offset": [
        16414,
        16424
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4397": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "4398": {
      "fn": "Vault.setAuth",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "op": "NOT"
    },
    "4408": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4410": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "4411": {
      "fn": "Vault.setAuth",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "4412": {
      "fn": "Vault.setAuth",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4413": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4415": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4416": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "4419": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4420": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4421": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4423": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4425": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4426": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4427": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4428": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "4429": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4430": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4431": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "4432": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "4433": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4434": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4435": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4436": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1161"
    },
    "4439": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4440": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4441": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4443": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4444": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "4445": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4446": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4448": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4449": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4450": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4451": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4452": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4453": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4454": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4456": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4457": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4458": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4460": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "4461": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4463": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4464": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4465": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "4466": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4467": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4468": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4469": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4471": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4472": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4473": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4474": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4475": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4476": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1185"
    },
    "4479": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4480": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4481": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "4484": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4485": {
      "fn": "Vault.setAuth",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4486": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11A1"
    },
    "4489": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4490": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4492": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4501": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4502": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4504": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "4505": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "4508": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4509": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "4512": {
      "fn": "Vault.setAuth",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4513": {
      "fn": "Vault.setAuth",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4514": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16440
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 29,
      "value": "0x98"
    },
    "4516": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4517": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4524": {
      "op": "SHL"
    },
    "4525": {
      "op": "SUB"
    },
    "4526": {
      "op": "NOT"
    },
    "4527": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "AND",
      "path": "27"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4534": {
      "op": "SHL"
    },
    "4535": {
      "op": "SUB"
    },
    "4536": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4537": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "AND",
      "path": "27"
    },
    "4538": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4539": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4540": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "OR",
      "path": "27"
    },
    "4541": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4542": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4543": {
      "fn": "Vault.setAuth",
      "offset": [
        16436,
        16450
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4544": {
      "fn": "Vault.setAuth",
      "offset": [
        16465,
        16485
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 30,
      "value": "0x40"
    },
    "4546": {
      "fn": "Vault.setAuth",
      "offset": [
        16465,
        16485
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4547": {
      "op": "SWAP1"
    },
    "4548": {
      "op": "DUP2"
    },
    "4549": {
      "op": "MSTORE"
    },
    "4550": {
      "fn": "Vault.setAuth",
      "offset": [
        16465,
        16485
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xDCB0BC5ECFADC1F3129303F7C1F12B82107806277374A010DFFE2C367708EF41"
    },
    "4583": {
      "fn": "Vault.setAuth",
      "offset": [
        16465,
        16485
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "fn": "Vault.setAuth",
      "offset": [
        16465,
        16485
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBC6"
    },
    "4590": {
      "op": "JUMP"
    },
    "4591": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17650,
        18024
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4592": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "4594": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4595": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4597": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4598": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4605": {
      "op": "SHL"
    },
    "4606": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4607": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4608": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17725,
        17735
      ],
      "op": "CALLER",
      "path": "27"
    },
    "4609": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17725,
        17735
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4616": {
      "op": "SHL"
    },
    "4617": {
      "op": "SUB"
    },
    "4618": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "4619": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4620": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "4625": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4626": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x122F"
    },
    "4629": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4630": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17725,
        17735
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4631": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17725,
        17735
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4632": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "4633": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4640": {
      "op": "SHL"
    },
    "4641": {
      "op": "SUB"
    },
    "4642": {
      "op": "NOT"
    },
    "4643": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4645": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "4646": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "4647": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4648": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4650": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4651": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "4654": {
      "fn": "Vault.setBurningFeePercent",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4655": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4656": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4658": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4660": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4661": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4662": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4663": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "4664": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4665": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4666": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "4667": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "4668": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4669": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4670": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4671": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x124C"
    },
    "4674": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4675": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4676": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4678": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4679": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "4680": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4681": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4683": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4684": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4685": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4686": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4687": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4688": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4689": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4691": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4692": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4693": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4695": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "4696": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4698": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4699": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4700": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "4701": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4702": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4703": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4704": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4706": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4707": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "4708": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4709": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "4710": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4711": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1270"
    },
    "4714": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4715": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4716": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "4719": {
      "fn": "Vault.setBurningFeePercent",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4720": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4721": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x128C"
    },
    "4724": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4725": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4727": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4734": {
      "op": "SHL"
    },
    "4735": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4736": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4737": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4739": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "4740": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "4743": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4744": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "4747": {
      "fn": "Vault.setBurningFeePercent",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4748": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4749": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17830,
        17834
      ],
      "op": "PUSH8",
      "path": "27",
      "statement": 31,
      "value": "0xDE0B6B3A7640000"
    },
    "4758": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17813,
        17826
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4759": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17813,
        17834
      ],
      "op": "GT",
      "path": "27"
    },
    "4760": {
      "branch": 186,
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17813,
        17834
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4761": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x12F6"
    },
    "4764": {
      "branch": 186,
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4765": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4767": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4774": {
      "op": "SHL"
    },
    "4775": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4776": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4779": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4781": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4782": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "ADD",
      "path": "27"
    },
    "4783": {
      "op": "MSTORE"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4788": {
      "op": "DUP3"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH32",
      "value": "0x736574426174636865644275726E696E6746656550657263656E743A3A464545"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "PUSH9",
      "value": "0xBEA89E9EBE90928E9"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4844": {
      "op": "DUP3"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "4853": {
      "op": "JUMP"
    },
    "4854": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17805,
        17880
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4855": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17929,
        17946
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 32,
      "value": "0x9D"
    },
    "4857": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17929,
        17962
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4858": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17929,
        17962
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4859": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17929,
        17962
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4860": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17978,
        18017
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 33,
      "value": "0x40"
    },
    "4862": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17978,
        18017
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4863": {
      "op": "DUP3"
    },
    "4864": {
      "op": "DUP2"
    },
    "4865": {
      "op": "MSTORE"
    },
    "4866": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17978,
        18017
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xEA0B688AABE63E0B1F8D23FBFAAF5978C8D6B74C5B21BDC9787B4651482B8F4B"
    },
    "4899": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17978,
        18017
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4902": {
      "op": "ADD"
    },
    "4903": {
      "fn": "Vault.setBurningFeePercent",
      "offset": [
        17978,
        18017
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBC6"
    },
    "4906": {
      "op": "JUMP"
    },
    "4907": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6050,
        6262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4908": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4909": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4911": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 34
    },
    "4912": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4913": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4914": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6197
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "4916": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4918": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4919": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4920": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4921": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4923": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4924": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4925": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6211
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "op": "SUB"
    },
    "4934": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4935": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "AND",
      "path": "6"
    },
    "4936": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4937": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4938": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4939": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4940": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4941": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4942": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4943": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6220
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4944": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4945": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6138,
        6142
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4946": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBDF"
    },
    "4949": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6234
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4950": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6177,
        6184
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4951": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6177,
        6184
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4952": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1362"
    },
    "4955": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4956": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6223,
        6233
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4957": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6223,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4958": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x465E"
    },
    "4961": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6186,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4962": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6186,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4963": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6154,
        6162
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3098"
    },
    "4966": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6154,
        6234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4967": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37758,
        37893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4974": {
      "op": "SHL"
    },
    "4975": {
      "op": "SUB"
    },
    "4976": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4977": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6"
    },
    "4978": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37824,
        37831
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4980": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4981": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4982": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4983": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "4985": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4987": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4988": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4990": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4991": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4992": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4993": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37850,
        37886
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 35,
      "value": "0xBE3"
    },
    "4996": {
      "fn": "Vault.balanceOfUnderlying",
      "offset": [
        37850,
        37886
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4997": {
      "fn": "Vault.calculateUnderlying",
      "offset": [
        29070,
        29218
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4A"
    },
    "5000": {
      "fn": "Vault.calculateUnderlying",
      "jump": "i",
      "offset": [
        29070,
        29218
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5001": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37215,
        37557
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5002": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37260,
        37267
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5004": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37322,
        37341
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5005": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37344,
        37357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1395"
    },
    "5008": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x35"
    },
    "5010": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5011": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3622,
        3634
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5012": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3535,
        3641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5013": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37344,
        37357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5014": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37322,
        37357
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "branch": 187,
      "fn": "Vault.exchangeRate",
      "offset": [
        37454,
        37470
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5017": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37450,
        37487
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13A4"
    },
    "5020": {
      "branch": 187,
      "fn": "Vault.exchangeRate",
      "offset": [
        37450,
        37487
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5021": {
      "op": "POP"
    },
    "5022": {
      "op": "POP"
    },
    "5023": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37479,
        37487
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 36,
      "value": "0x9A"
    },
    "5025": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37479,
        37487
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5026": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37479,
        37487
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5027": {
      "fn": "Vault.exchangeRate",
      "jump": "o",
      "offset": [
        37215,
        37557
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5028": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37450,
        37487
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5029": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37550
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 37,
      "value": "0x13BA"
    },
    "5032": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37528,
        37539
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5033": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37541,
        37549
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "5035": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37541,
        37549
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5036": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37522
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13B3"
    },
    "5039": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37520
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24DC"
    },
    "5042": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        37505,
        37522
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5043": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37522
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5044": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37527
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5045": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37550
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5046": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37527
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3380"
    },
    "5049": {
      "fn": "Vault.exchangeRate",
      "jump": "i",
      "offset": [
        37505,
        37550
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5050": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37505,
        37550
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5051": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37498,
        37550
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5052": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37498,
        37550
      ],
      "op": "POP",
      "path": "27"
    },
    "5053": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37498,
        37550
      ],
      "op": "POP",
      "path": "27"
    },
    "5054": {
      "fn": "Vault.exchangeRate",
      "offset": [
        37215,
        37557
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5055": {
      "fn": "Vault.exchangeRate",
      "jump": "o",
      "offset": [
        37215,
        37557
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5056": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5057": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24166,
        24180
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA7"
    },
    "5059": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24166,
        24180
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5060": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24232,
        24242
      ],
      "op": "CALLER",
      "path": "27"
    },
    "5061": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24140,
        24163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5063": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5064": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5065": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5066": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24231
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "5068": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5070": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5071": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5073": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5074": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24243
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5075": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24210,
        24249
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5076": {
      "branch": 188,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24264,
        24278
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5077": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F5"
    },
    "5080": {
      "branch": 188,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5081": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24436,
        24446
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 38
    },
    "5082": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5084": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5085": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5086": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5087": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24435
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "5089": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5091": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5092": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5094": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5095": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24447
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5096": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24471
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5097": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24471
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5098": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24414,
        24471
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5099": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24485,
        24525
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 39,
      "value": "0x1"
    },
    "5101": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24485,
        24525
      ],
      "op": "ADD",
      "path": "27"
    },
    "5102": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24485,
        24534
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5103": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24485,
        24534
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5104": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24485,
        24534
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5105": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x146C"
    },
    "5108": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5109": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5110": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24885,
        24900
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 40
    },
    "5111": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24872,
        24881
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5112": {
      "branch": 189,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24872,
        24900
      ],
      "op": "EQ",
      "path": "27"
    },
    "5113": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1444"
    },
    "5116": {
      "branch": 189,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5117": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5119": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5128": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5133": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5134": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "ADD",
      "path": "27"
    },
    "5135": {
      "op": "DUP2"
    },
    "5136": {
      "op": "SWAP1"
    },
    "5137": {
      "op": "MSTORE"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "MSTORE"
    },
    "5143": {
      "op": "PUSH32",
      "value": "0x656E74657242617463684275726E3A3A444946464552454E545F524F554E4453"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5178": {
      "op": "DUP3"
    },
    "5179": {
      "op": "ADD"
    },
    "5180": {
      "op": "MSTORE"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5183": {
      "op": "ADD"
    },
    "5184": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "5187": {
      "op": "JUMP"
    },
    "5188": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24864,
        24937
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5189": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24973,
        24983
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 41
    },
    "5190": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5192": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5193": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5194": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5195": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24972
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "5197": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5199": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5200": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5202": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5203": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5204": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24991
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5206": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24991
      ],
      "op": "ADD",
      "path": "27"
    },
    "5207": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5208": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5209": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24995,
        25001
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5210": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24995,
        25001
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5211": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        24984
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5212": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1466"
    },
    "5215": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5216": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24995,
        25001
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5217": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24995,
        25001
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5218": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "5221": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        24951,
        25001
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5222": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5223": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5224": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5225": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24951,
        25001
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5226": {
      "op": "POP"
    },
    "5227": {
      "op": "POP"
    },
    "5228": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24260,
        25012
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5229": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 42,
      "value": "0x0"
    },
    "5231": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5232": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5233": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5234": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAA"
    },
    "5236": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5238": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5239": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5241": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5242": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5243": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5244": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5245": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25065,
        25071
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5246": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25065,
        25071
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5247": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25049
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5248": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x148A"
    },
    "5251": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5252": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25065,
        25071
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5253": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25065,
        25071
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5254": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "5257": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        25022,
        25071
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5258": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5259": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5260": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5261": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25022,
        25071
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25090,
        25121
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 43,
      "value": "0x149A"
    },
    "5266": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25090,
        25121
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5267": {
      "op": "POP"
    },
    "5268": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25107,
        25111
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "5269": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25114,
        25120
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5270": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25090,
        25098
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CA5"
    },
    "5273": {
      "fn": "Vault.enterBatchBurn",
      "jump": "i",
      "offset": [
        25090,
        25121
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5274": {
      "branch": 190,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25090,
        25121
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5275": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14A3"
    },
    "5278": {
      "branch": 190,
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5279": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5281": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5282": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5283": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25082,
        25122
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5284": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 44,
      "value": "0x40"
    },
    "5286": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5287": {
      "op": "DUP4"
    },
    "5288": {
      "op": "DUP2"
    },
    "5289": {
      "op": "MSTORE"
    },
    "5290": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25170,
        25180
      ],
      "op": "CALLER",
      "path": "27"
    },
    "5291": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25170,
        25180
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5292": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25153,
        25168
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5293": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25153,
        25168
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5294": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xA34C4835838212C803863F6698244F8A1E56F479D6DBA7D4F33B34A2CDECF1CE"
    },
    "5327": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5332": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5334": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5335": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5336": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5337": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "SUB",
      "path": "27"
    },
    "5338": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5339": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        25138,
        25189
      ],
      "op": "LOG3",
      "path": "27"
    },
    "5340": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24130,
        25196
      ],
      "op": "POP",
      "path": "27"
    },
    "5341": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24130,
        25196
      ],
      "op": "POP",
      "path": "27"
    },
    "5342": {
      "fn": "Vault.enterBatchBurn",
      "offset": [
        24081,
        25196
      ],
      "op": "POP",
      "path": "27"
    },
    "5343": {
      "fn": "Vault.enterBatchBurn",
      "jump": "o",
      "offset": [
        24081,
        25196
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5344": {
      "fn": "Vault.calculateShares",
      "offset": [
        28692,
        28844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5345": {
      "fn": "Vault.calculateShares",
      "offset": [
        28764,
        28771
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5347": {
      "fn": "Vault.calculateShares",
      "offset": [
        28790,
        28837
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 45,
      "value": "0xBE3"
    },
    "5350": {
      "fn": "Vault.calculateShares",
      "offset": [
        28812,
        28826
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14ED"
    },
    "5353": {
      "fn": "Vault.calculateShares",
      "offset": [
        28812,
        28824
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "5356": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        28812,
        28826
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5357": {
      "fn": "Vault.calculateShares",
      "offset": [
        28812,
        28826
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5358": {
      "fn": "Vault.calculateShares",
      "offset": [
        28828,
        28836
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "5360": {
      "fn": "Vault.calculateShares",
      "offset": [
        28828,
        28836
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5361": {
      "fn": "Vault.calculateShares",
      "offset": [
        28790,
        28806
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5362": {
      "fn": "Vault.calculateShares",
      "offset": [
        28790,
        28806
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5363": {
      "fn": "Vault.calculateShares",
      "offset": [
        28790,
        28837
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5364": {
      "fn": "Vault.calculateShares",
      "offset": [
        28790,
        28811
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3380"
    },
    "5367": {
      "fn": "Vault.calculateShares",
      "jump": "i",
      "offset": [
        28790,
        28837
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5368": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5369": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "5371": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5372": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "5374": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5375": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38356,
        38363
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5377": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38356,
        38363
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "op": "SUB"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5390": {
      "op": "SHL"
    },
    "5391": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5392": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5393": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "DIV",
      "path": "27"
    },
    "5394": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5395": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "AND",
      "path": "27"
    },
    "5396": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5401": {
      "op": "SHL"
    },
    "5402": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5403": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "DIV",
      "path": "27"
    },
    "5404": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "AND",
      "path": "27"
    },
    "5405": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38616,
        38649
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1526"
    },
    "5408": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38499,
        38511
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5409": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38452,
        38463
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5410": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38616,
        38649
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "5413": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38616,
        38649
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5414": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38616,
        38649
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5415": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38597,
        38612
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "5416": {
      "branch": 191,
      "fn": "Vault.lockedProfit",
      "offset": [
        38597,
        38649
      ],
      "op": "LT",
      "path": "27"
    },
    "5417": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38593,
        38659
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1535"
    },
    "5420": {
      "branch": 191,
      "fn": "Vault.lockedProfit",
      "offset": [
        38593,
        38659
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5421": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38658,
        38659
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 46,
      "value": "0x0"
    },
    "5423": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38651,
        38659
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5424": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38651,
        38659
      ],
      "op": "POP",
      "path": "27"
    },
    "5425": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38651,
        38659
      ],
      "op": "POP",
      "path": "27"
    },
    "5426": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38651,
        38659
      ],
      "op": "POP",
      "path": "27"
    },
    "5427": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5428": {
      "fn": "Vault.lockedProfit",
      "jump": "o",
      "offset": [
        38311,
        38985
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5429": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38593,
        38659
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5430": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38751,
        38766
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "5432": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38751,
        38766
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5437": {
      "op": "SHL"
    },
    "5438": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38751,
        38766
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5439": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38751,
        38766
      ],
      "op": "DIV",
      "path": "27"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5446": {
      "op": "SHL"
    },
    "5447": {
      "op": "SUB"
    },
    "5448": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38751,
        38766
      ],
      "op": "AND",
      "path": "27"
    },
    "5449": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38963,
        38978
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 47
    },
    "5450": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38925,
        38958
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1553"
    },
    "5453": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38943,
        38958
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5454": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38925,
        38940
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "5455": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38925,
        38958
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "5458": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38925,
        38958
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5459": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38925,
        38958
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5460": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38902,
        38959
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x155D"
    },
    "5463": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38902,
        38959
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5464": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38902,
        38921
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5465": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38902,
        38959
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4676"
    },
    "5468": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38902,
        38959
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5469": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38902,
        38959
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5470": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38901,
        38978
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1567"
    },
    "5473": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38901,
        38978
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5474": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38901,
        38978
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5475": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38901,
        38978
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4695"
    },
    "5478": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38901,
        38978
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5479": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38901,
        38978
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5480": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38879,
        38978
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1571"
    },
    "5483": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38879,
        38978
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5484": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38879,
        38898
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5485": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38879,
        38978
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "5488": {
      "fn": "Vault.lockedProfit",
      "jump": "i",
      "offset": [
        38879,
        38978
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5489": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38879,
        38978
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5490": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38872,
        38978
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5491": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38872,
        38978
      ],
      "op": "POP",
      "path": "27"
    },
    "5492": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38872,
        38978
      ],
      "op": "POP",
      "path": "27"
    },
    "5493": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38872,
        38978
      ],
      "op": "POP",
      "path": "27"
    },
    "5494": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38872,
        38978
      ],
      "op": "POP",
      "path": "27"
    },
    "5495": {
      "fn": "Vault.lockedProfit",
      "offset": [
        38311,
        38985
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5496": {
      "fn": "Vault.lockedProfit",
      "jump": "o",
      "offset": [
        38311,
        38985
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5497": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5498": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "5500": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5501": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5503": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5504": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5511": {
      "op": "SHL"
    },
    "5512": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5513": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5514": {
      "fn": "Vault.deposit",
      "offset": [
        23701,
        23715
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5516": {
      "fn": "Vault.deposit",
      "offset": [
        23701,
        23715
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5517": {
      "fn": "Vault.deposit",
      "offset": [
        23688,
        23690
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5518": {
      "fn": "Vault.deposit",
      "offset": [
        23688,
        23690
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "SUB"
    },
    "5527": {
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5528": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5529": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "5530": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5531": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "5536": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5537": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x15BD"
    },
    "5540": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5541": {
      "fn": "Vault.deposit",
      "offset": [
        23688,
        23690
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5542": {
      "fn": "Vault.deposit",
      "offset": [
        23688,
        23690
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5543": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "5544": {
      "fn": "Vault.deposit",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5551": {
      "op": "SHL"
    },
    "5552": {
      "op": "SUB"
    },
    "5553": {
      "op": "NOT"
    },
    "5554": {
      "offset": [
        12491,
        12498
      ],
      "op": "DUP9",
      "path": "27"
    },
    "5555": {
      "fn": "Vault.deposit",
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "5556": {
      "fn": "Vault.deposit",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "5557": {
      "fn": "Vault.deposit",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5558": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5560": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5561": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "5564": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5565": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5566": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5568": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5570": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5571": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5572": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5573": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "5574": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5575": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "5576": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "5577": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "5578": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5579": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5580": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5581": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x15DA"
    },
    "5584": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5585": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5586": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5588": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5589": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "5590": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5591": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5593": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5594": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5595": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5596": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5597": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5598": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5599": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5601": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5602": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5603": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5605": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "5606": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5608": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5609": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5610": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "5611": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5612": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5613": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5614": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5616": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5617": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5618": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5619": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5620": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5621": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x15FE"
    },
    "5624": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5625": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5626": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "5629": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5630": {
      "fn": "Vault.deposit",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5631": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x161A"
    },
    "5634": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5635": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5637": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5644": {
      "op": "SHL"
    },
    "5645": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5646": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5647": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5649": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "5650": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "5653": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5654": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "5657": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5658": {
      "fn": "Vault.deposit",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5659": {
      "fn": "Vault.deposit",
      "offset": [
        23727,
        23803
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 48,
      "value": "0x1630"
    },
    "5662": {
      "fn": "Vault.deposit",
      "offset": [
        23736,
        23738
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5663": {
      "fn": "Vault.deposit",
      "offset": [
        23750,
        23783
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1627"
    },
    "5666": {
      "fn": "Vault.deposit",
      "offset": [
        23766,
        23782
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5667": {
      "fn": "Vault.deposit",
      "offset": [
        23750,
        23765
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14E0"
    },
    "5670": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23750,
        23783
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5671": {
      "fn": "Vault.deposit",
      "offset": [
        23750,
        23783
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5672": {
      "fn": "Vault.deposit",
      "offset": [
        23741,
        23783
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5673": {
      "fn": "Vault.deposit",
      "offset": [
        23741,
        23783
      ],
      "op": "POP",
      "path": "27"
    },
    "5674": {
      "fn": "Vault.deposit",
      "offset": [
        23741,
        23783
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5675": {
      "fn": "Vault.deposit",
      "offset": [
        23786,
        23802
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5676": {
      "fn": "Vault.deposit",
      "offset": [
        23727,
        23735
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3572"
    },
    "5679": {
      "fn": "Vault.deposit",
      "jump": "i",
      "offset": [
        23727,
        23803
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5680": {
      "fn": "Vault.deposit",
      "offset": [
        23727,
        23803
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5681": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "POP",
      "path": "27"
    },
    "5682": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5683": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5684": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "POP",
      "path": "27"
    },
    "5685": {
      "fn": "Vault.deposit",
      "offset": [
        23611,
        23810
      ],
      "op": "POP",
      "path": "27"
    },
    "5686": {
      "fn": "Vault.deposit",
      "jump": "o",
      "offset": [
        23611,
        23810
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5687": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5688": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "5690": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5691": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5693": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5694": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5701": {
      "op": "SHL"
    },
    "5702": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5703": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5704": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15938,
        15948
      ],
      "op": "CALLER",
      "path": "27"
    },
    "5705": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15938,
        15948
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5712": {
      "op": "SHL"
    },
    "5713": {
      "op": "SUB"
    },
    "5714": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "5715": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5716": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "5721": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5722": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1677"
    },
    "5725": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5726": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15938,
        15948
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5727": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15938,
        15948
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5728": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "5729": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5736": {
      "op": "SHL"
    },
    "5737": {
      "op": "SUB"
    },
    "5738": {
      "op": "NOT"
    },
    "5739": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5741": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "5742": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "5743": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5744": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5746": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5747": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "5750": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5751": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5752": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5754": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5756": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5757": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5758": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5759": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "5760": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5761": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "5762": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "5763": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "5764": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5765": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5766": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5767": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1694"
    },
    "5770": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5771": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5772": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5774": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5775": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "5776": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5777": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5779": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5780": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5781": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5782": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5783": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5784": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5785": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5787": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5788": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "5789": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5791": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "5792": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5794": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5795": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5796": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "5797": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5798": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5799": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5800": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5802": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5803": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "5804": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5805": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5806": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5807": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x16B8"
    },
    "5810": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5811": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5812": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "5815": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5816": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5817": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x16D4"
    },
    "5820": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5821": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5823": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5830": {
      "op": "SHL"
    },
    "5831": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5832": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5833": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5835": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "5836": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "5839": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5840": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "5843": {
      "fn": "Vault.setDepositLimits",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5844": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5845": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15960,
        15976
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 49,
      "value": "0xAB"
    },
    "5847": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15960,
        15983
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5848": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15960,
        15983
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5849": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15960,
        15983
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5850": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15993,
        16010
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 50,
      "value": "0xAC"
    },
    "5852": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15993,
        16018
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5853": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15993,
        16018
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5854": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15993,
        16018
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5855": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 51,
      "value": "0x40"
    },
    "5857": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5858": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5859": {
      "op": "DUP5"
    },
    "5860": {
      "op": "DUP2"
    },
    "5861": {
      "op": "MSTORE"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "ADD"
    },
    "5866": {
      "op": "DUP5"
    },
    "5867": {
      "op": "SWAP1"
    },
    "5868": {
      "op": "MSTORE"
    },
    "5869": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xB2AD710F2954A5376267A683F9ECE9EC46EE7DFB47075163379904EE941DF8DA"
    },
    "5902": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5905": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5907": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5908": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5909": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5910": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "SUB",
      "path": "27"
    },
    "5911": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5912": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        16034,
        16067
      ],
      "op": "LOG1",
      "path": "27"
    },
    "5913": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "POP",
      "path": "27"
    },
    "5914": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "POP",
      "path": "27"
    },
    "5915": {
      "fn": "Vault.setDepositLimits",
      "offset": [
        15861,
        16074
      ],
      "op": "POP",
      "path": "27"
    },
    "5916": {
      "fn": "Vault.setDepositLimits",
      "jump": "o",
      "offset": [
        15861,
        16074
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5917": {
      "fn": "Vault.triggerPause",
      "offset": [
        12820,
        12927
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5918": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "5920": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5921": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5923": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5924": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5931": {
      "op": "SHL"
    },
    "5932": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5933": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5934": {
      "fn": "Vault.triggerPause",
      "offset": [
        12866,
        12876
      ],
      "op": "CALLER",
      "path": "27"
    },
    "5935": {
      "fn": "Vault.triggerPause",
      "offset": [
        12866,
        12876
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "5945": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5946": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "5951": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5952": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x175D"
    },
    "5955": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5956": {
      "fn": "Vault.triggerPause",
      "offset": [
        12866,
        12876
      ],
      "op": "DUP5",
      "path": "27"
    },
    "5957": {
      "fn": "Vault.triggerPause",
      "offset": [
        12866,
        12876
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5958": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "5959": {
      "fn": "Vault.triggerPause",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5966": {
      "op": "SHL"
    },
    "5967": {
      "op": "SUB"
    },
    "5968": {
      "op": "NOT"
    },
    "5969": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5971": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "5972": {
      "fn": "Vault.triggerPause",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "5973": {
      "fn": "Vault.triggerPause",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5974": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5976": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "5977": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "5980": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5981": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5982": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5984": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5986": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5987": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5988": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5989": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "5990": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5991": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "5992": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "5993": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "5994": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5995": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5996": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5997": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x177A"
    },
    "6000": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6001": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6002": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6004": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6005": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6006": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6007": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6009": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6010": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6011": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6012": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6013": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6014": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6015": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6017": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6018": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6019": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6021": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "6022": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6024": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6025": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6026": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "6027": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6028": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6029": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6030": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6032": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6033": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6034": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6035": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6036": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6037": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x179E"
    },
    "6040": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6041": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6042": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "6045": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6046": {
      "fn": "Vault.triggerPause",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6047": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17BA"
    },
    "6050": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6051": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6053": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6060": {
      "op": "SHL"
    },
    "6061": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6062": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6063": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6065": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "6066": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6069": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6070": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "6073": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6074": {
      "fn": "Vault.triggerPause",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6075": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "6077": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6078": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "6080": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "6081": {
      "fn": "Vault.triggerPause",
      "offset": [
        12888,
        12920
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 52,
      "value": "0x17CF"
    },
    "6084": {
      "fn": "Vault.triggerPause",
      "offset": [
        12888,
        12920
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6085": {
      "fn": "Vault.triggerPause",
      "offset": [
        12912,
        12920
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17CC"
    },
    "6088": {
      "fn": "Vault.triggerPause",
      "offset": [
        12912,
        12918
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3723"
    },
    "6091": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12912,
        12920
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6092": {
      "fn": "Vault.triggerPause",
      "offset": [
        12912,
        12920
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6093": {
      "fn": "Vault.triggerPause",
      "offset": [
        12820,
        12927
      ],
      "op": "POP",
      "path": "27"
    },
    "6094": {
      "fn": "Vault.triggerPause",
      "jump": "o",
      "offset": [
        12820,
        12927
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6095": {
      "fn": "Vault.triggerPause",
      "offset": [
        12888,
        12920
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6096": {
      "fn": "Vault.triggerPause",
      "offset": [
        12899,
        12909
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17CC"
    },
    "6099": {
      "fn": "Vault.triggerPause",
      "offset": [
        12899,
        12907
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x37BB"
    },
    "6102": {
      "fn": "Vault.triggerPause",
      "jump": "i",
      "offset": [
        12899,
        12909
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6103": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25274,
        26000
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6104": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25344,
        25358
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA7"
    },
    "6106": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25344,
        25358
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6107": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25424,
        25434
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6108": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25318,
        25341
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6110": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6111": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6112": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6113": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25423
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "6115": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6117": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6118": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6119": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6120": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6122": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6123": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6124": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6125": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25402,
        25435
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6126": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6127": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6128": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6129": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6130": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "ADD",
      "path": "27"
    },
    "6131": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6132": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "6133": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6134": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6135": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6136": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6137": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6138": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6139": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "6141": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6142": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6143": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "ADD",
      "path": "27"
    },
    "6144": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6145": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6146": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6147": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "ADD",
      "path": "27"
    },
    "6148": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6149": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6150": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6151": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25368,
        25435
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6152": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 53,
      "value": "0x1853"
    },
    "6155": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6156": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6158": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6165": {
      "op": "SHL"
    },
    "6166": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6167": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6170": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6172": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6173": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "ADD",
      "path": "27"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "MSTORE"
    },
    "6182": {
      "op": "PUSH32",
      "value": "0x6578697442617463684275726E3A3A4E4F5F4445504F53495453000000000000"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6226": {
      "op": "JUMP"
    },
    "6227": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25446,
        25503
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6228": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25521,
        25534
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 54
    },
    "6229": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25521,
        25534
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6230": {
      "branch": 192,
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25521,
        25552
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6231": {
      "op": "GT"
    },
    "6232": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18AD"
    },
    "6235": {
      "branch": 192,
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6236": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6238": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6245": {
      "op": "SHL"
    },
    "6246": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6247": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6250": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6252": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6253": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "ADD",
      "path": "27"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6259": {
      "op": "DUP3"
    },
    "6260": {
      "op": "ADD"
    },
    "6261": {
      "op": "MSTORE"
    },
    "6262": {
      "op": "PUSH32",
      "value": "0x6578697442617463684275726E3A3A524F554E445F4E4F545F45584543555445"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6297": {
      "op": "DUP3"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "op": "MSTORE"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "6304": {
      "op": "SHL"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6307": {
      "op": "DUP3"
    },
    "6308": {
      "op": "ADD"
    },
    "6309": {
      "op": "MSTORE"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6312": {
      "op": "ADD"
    },
    "6313": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6316": {
      "op": "JUMP"
    },
    "6317": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25513,
        25590
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6318": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25623,
        25633
      ],
      "op": "CALLER",
      "path": "27",
      "statement": 55
    },
    "6319": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25643,
        25644
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6321": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6322": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6323": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6324": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25622
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA9"
    },
    "6326": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6328": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6329": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6330": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6331": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6333": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6334": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6335": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25634
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6336": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25644
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6337": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25644
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6338": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25601,
        25644
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6339": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25694
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 56,
      "value": "0x1"
    },
    "6341": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25694
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6342": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25694
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6343": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25694
      ],
      "op": "ADD",
      "path": "27"
    },
    "6344": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25698
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6345": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25698
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6346": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25654,
        25698
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6347": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25767,
        25780
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6348": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25767,
        25780
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6349": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6350": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6351": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25766
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAA"
    },
    "6353": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6354": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6355": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6356": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6357": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25781
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "6358": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25796
      ],
      "op": "ADD",
      "path": "27"
    },
    "6359": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25796
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6360": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25798,
        25806
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "6362": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25798,
        25806
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6363": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6364": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6365": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "ADD",
      "path": "27"
    },
    "6366": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6367": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25807
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18EA"
    },
    "6370": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25807
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "6371": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6372": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25750
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6373": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25756,
        25796
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6374": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25755
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x31B4"
    },
    "6377": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25736,
        25807
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6378": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25736,
        25807
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6379": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25807
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6380": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25709,
        25807
      ],
      "op": "POP",
      "path": "27"
    },
    "6381": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25838,
        25854
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 57
    },
    "6382": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25834
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA8"
    },
    "6384": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25834
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6386": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6387": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6388": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6389": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18FE"
    },
    "6392": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6393": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6394": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "6397": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25818,
        25854
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6398": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6399": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6400": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6401": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25818,
        25854
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6402": {
      "op": "POP"
    },
    "6403": {
      "op": "POP"
    },
    "6404": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25874
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 58,
      "value": "0x99"
    },
    "6406": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25874
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6407": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25917
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x191A"
    },
    "6410": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25917
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6417": {
      "op": "SHL"
    },
    "6418": {
      "op": "SUB"
    },
    "6419": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25874
      ],
      "op": "AND",
      "path": "27"
    },
    "6420": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25888,
        25898
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6421": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25900,
        25916
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6422": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25887
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x331D"
    },
    "6425": {
      "fn": "Vault.exitBatchBurn",
      "jump": "i",
      "offset": [
        25864,
        25917
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6426": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25864,
        25917
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6427": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25933,
        25993
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 59,
      "value": "0x40"
    },
    "6429": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25933,
        25993
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6430": {
      "op": "DUP2"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "MSTORE"
    },
    "6433": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25964,
        25974
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6434": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25964,
        25974
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6435": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25947,
        25962
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6436": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25947,
        25962
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6437": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25933,
        25993
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x2027C7E85003814492322D04D360D8DF81AEBEB8A40A069FFFCCC25CDF9E359B"
    },
    "6470": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25933,
        25993
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6473": {
      "op": "ADD"
    },
    "6474": {
      "fn": "Vault.exitBatchBurn",
      "offset": [
        25933,
        25993
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14D3"
    },
    "6477": {
      "op": "JUMP"
    },
    "6478": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6479": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "6481": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6482": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6484": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6485": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6492": {
      "op": "SHL"
    },
    "6493": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6494": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6495": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19913,
        19923
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6496": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19913,
        19923
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6503": {
      "op": "SHL"
    },
    "6504": {
      "op": "SUB"
    },
    "6505": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "6506": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6507": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "6512": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6513": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x198E"
    },
    "6516": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6517": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19913,
        19923
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6518": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19913,
        19923
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6519": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "6520": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6527": {
      "op": "SHL"
    },
    "6528": {
      "op": "SUB"
    },
    "6529": {
      "op": "NOT"
    },
    "6530": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6532": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "6533": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "6534": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6535": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6537": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6538": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "6541": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6542": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6543": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6545": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6547": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6548": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6549": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6550": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "6551": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6552": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "6553": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "6554": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "6555": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6556": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6557": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6558": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19AB"
    },
    "6561": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6562": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6563": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6565": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6566": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6567": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6568": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6570": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6571": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6572": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6573": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6574": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6575": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6576": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6578": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6579": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6580": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6582": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "6583": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6585": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6586": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6587": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "6588": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6589": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6590": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6591": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6593": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6594": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "6595": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6596": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "6597": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6598": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19CF"
    },
    "6601": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6602": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6603": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "6606": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6607": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6608": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19EB"
    },
    "6611": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6612": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6614": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6621": {
      "op": "SHL"
    },
    "6622": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6623": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6624": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6626": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "6627": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6630": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6631": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "6634": {
      "fn": "Vault.setHarvestDelay",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6635": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6642": {
      "op": "SHL"
    },
    "6643": {
      "op": "SUB"
    },
    "6644": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20022,
        20042
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 60
    },
    "6645": {
      "branch": 193,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20022,
        20042
      ],
      "op": "AND",
      "path": "27"
    },
    "6646": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A4F"
    },
    "6649": {
      "branch": 193,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6650": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6652": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6659": {
      "op": "SHL"
    },
    "6660": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6661": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6664": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6666": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6667": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "ADD",
      "path": "27"
    },
    "6668": {
      "op": "MSTORE"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6673": {
      "op": "DUP3"
    },
    "6674": {
      "op": "ADD"
    },
    "6675": {
      "op": "MSTORE"
    },
    "6676": {
      "op": "PUSH32",
      "value": "0x7365744861727665737444656C61793A3A44454C41595F43414E4E4F545F4245"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6711": {
      "op": "DUP3"
    },
    "6712": {
      "op": "ADD"
    },
    "6713": {
      "op": "MSTORE"
    },
    "6714": {
      "op": "PUSH5",
      "value": "0x5F5A45524F"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6722": {
      "op": "SHL"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6725": {
      "op": "DUP3"
    },
    "6726": {
      "op": "ADD"
    },
    "6727": {
      "op": "MSTORE"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6734": {
      "op": "JUMP"
    },
    "6735": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20014,
        20084
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6736": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20188,
        20196
      ],
      "op": "PUSH4",
      "path": "27",
      "statement": 61,
      "value": "0x1E13380"
    },
    "6741": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20169,
        20184
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6748": {
      "op": "SHL"
    },
    "6749": {
      "op": "SUB"
    },
    "6750": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20169,
        20196
      ],
      "op": "AND",
      "path": "27"
    },
    "6751": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20169,
        20196
      ],
      "op": "GT",
      "path": "27"
    },
    "6752": {
      "branch": 194,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20169,
        20196
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6753": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AAC"
    },
    "6756": {
      "branch": 194,
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6757": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6759": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6766": {
      "op": "SHL"
    },
    "6767": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6768": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6771": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6773": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6774": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "ADD",
      "path": "27"
    },
    "6775": {
      "op": "MSTORE"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6780": {
      "op": "DUP3"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "MSTORE"
    },
    "6783": {
      "op": "PUSH32",
      "value": "0x7365744861727665737444656C61793A3A44454C41595F544F4F5F4C4F4E4700"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6818": {
      "op": "DUP3"
    },
    "6819": {
      "op": "ADD"
    },
    "6820": {
      "op": "MSTORE"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6823": {
      "op": "ADD"
    },
    "6824": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "6827": {
      "op": "JUMP"
    },
    "6828": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20161,
        20232
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6829": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20321,
        20333
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "6831": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20321,
        20333
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6836": {
      "op": "SHL"
    },
    "6837": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20321,
        20333
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6838": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20321,
        20333
      ],
      "op": "DIV",
      "path": "27"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6845": {
      "op": "SHL"
    },
    "6846": {
      "op": "SUB"
    },
    "6847": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20321,
        20333
      ],
      "op": "AND",
      "path": "27"
    },
    "6848": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20317,
        20695
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B27"
    },
    "6851": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20317,
        20695
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6852": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20417
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 62,
      "value": "0x9F"
    },
    "6854": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6855": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6856": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6867": {
      "op": "SHL"
    },
    "6868": {
      "op": "NOT"
    },
    "6869": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "AND",
      "path": "27"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6874": {
      "op": "SHL"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6881": {
      "op": "SHL"
    },
    "6882": {
      "op": "SUB"
    },
    "6883": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "DUP6",
      "path": "27"
    },
    "6884": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "AND",
      "path": "27"
    },
    "6885": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6886": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6887": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "MUL",
      "path": "27"
    },
    "6888": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6889": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6890": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6891": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "OR",
      "path": "27"
    },
    "6892": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6893": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6894": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20405,
        20435
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6895": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 63,
      "value": "0x40"
    },
    "6897": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6898": {
      "op": "SWAP1"
    },
    "6899": {
      "op": "DUP2"
    },
    "6900": {
      "op": "MSTORE"
    },
    "6901": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20475,
        20485
      ],
      "op": "CALLER",
      "path": "27"
    },
    "6902": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20475,
        20485
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6903": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F"
    },
    "6936": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6939": {
      "op": "ADD"
    },
    "6940": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6942": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6943": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6944": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6945": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "SUB",
      "path": "27"
    },
    "6946": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6947": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20455,
        20503
      ],
      "op": "LOG2",
      "path": "27"
    },
    "6948": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "POP",
      "path": "27"
    },
    "6949": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "POP",
      "path": "27"
    },
    "6950": {
      "fn": "Vault.setHarvestDelay",
      "jump": "o",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6951": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20317,
        20695
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6952": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20602
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 64,
      "value": "0x9F"
    },
    "6954": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6955": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6962": {
      "op": "SHL"
    },
    "6963": {
      "op": "SUB"
    },
    "6964": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "AND",
      "path": "27"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6969": {
      "op": "SHL"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6976": {
      "op": "SHL"
    },
    "6977": {
      "op": "SUB"
    },
    "6978": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "DUP6",
      "path": "27"
    },
    "6979": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "AND",
      "path": "27"
    },
    "6980": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6981": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6982": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "MUL",
      "path": "27"
    },
    "6983": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6984": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6985": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6986": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "OR",
      "path": "27"
    },
    "6987": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6988": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6989": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20586,
        20620
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6990": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20640,
        20684
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 65,
      "value": "0x40"
    },
    "6992": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20640,
        20684
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6993": {
      "op": "SWAP1"
    },
    "6994": {
      "op": "DUP2"
    },
    "6995": {
      "op": "MSTORE"
    },
    "6996": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20640,
        20684
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x12CE22E477E3FC08E5FDA24CDEC059A7C62A276344417F2C365D7476401BCA6F"
    },
    "7029": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20640,
        20684
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7032": {
      "op": "ADD"
    },
    "7033": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        20640,
        20684
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBC6"
    },
    "7036": {
      "op": "JUMP"
    },
    "7037": {
      "fn": "Vault.totalFloat",
      "offset": [
        38059,
        38189
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7038": {
      "fn": "Vault.totalFloat",
      "offset": [
        38166,
        38182
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 66,
      "value": "0xA8"
    },
    "7040": {
      "fn": "Vault.totalFloat",
      "offset": [
        38166,
        38182
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7041": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38138
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x99"
    },
    "7043": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38138
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7044": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7046": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7047": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7054": {
      "op": "SHL"
    },
    "7055": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7056": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7057": {
      "fn": "Vault.totalFloat",
      "offset": [
        38157,
        38161
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "7058": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7060": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7061": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ADD",
      "path": "27"
    },
    "7062": {
      "op": "MSTORE"
    },
    "7063": {
      "fn": "Vault.totalFloat",
      "offset": [
        38102,
        38109
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7065": {
      "fn": "Vault.totalFloat",
      "offset": [
        38102,
        38109
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7066": {
      "fn": "Vault.totalFloat",
      "offset": [
        38166,
        38182
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7073": {
      "op": "SHL"
    },
    "7074": {
      "op": "SUB"
    },
    "7075": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38138
      ],
      "op": "AND",
      "path": "27"
    },
    "7076": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38138
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7077": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38148
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x70A08231"
    },
    "7082": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38148
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7085": {
      "op": "ADD"
    },
    "7086": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7088": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7090": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7091": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7092": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7093": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "SUB",
      "path": "27"
    },
    "7094": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7095": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7096": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "GAS",
      "path": "27"
    },
    "7097": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "7098": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7099": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7100": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7101": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BCA"
    },
    "7104": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7105": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7106": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7108": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7109": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7110": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7111": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7113": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "REVERT",
      "path": "27"
    },
    "7114": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7115": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "POP",
      "path": "27"
    },
    "7116": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "POP",
      "path": "27"
    },
    "7117": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "POP",
      "path": "27"
    },
    "7118": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "POP",
      "path": "27"
    },
    "7119": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7121": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7122": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7123": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7125": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "NOT",
      "path": "27"
    },
    "7126": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7128": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7129": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ADD",
      "path": "27"
    },
    "7130": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "AND",
      "path": "27"
    },
    "7131": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7132": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ADD",
      "path": "27"
    },
    "7133": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7134": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7136": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7137": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "POP",
      "path": "27"
    },
    "7138": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7139": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "ADD",
      "path": "27"
    },
    "7140": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7141": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BEE"
    },
    "7144": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7145": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7146": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46B7"
    },
    "7149": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        38128,
        38163
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7150": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38163
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7151": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38182
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BF8"
    },
    "7154": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38182
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7155": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38182
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7156": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38182
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "7159": {
      "fn": "Vault.totalFloat",
      "jump": "i",
      "offset": [
        38128,
        38182
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7160": {
      "fn": "Vault.totalFloat",
      "offset": [
        38128,
        38182
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7161": {
      "fn": "Vault.totalFloat",
      "offset": [
        38121,
        38182
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7162": {
      "fn": "Vault.totalFloat",
      "offset": [
        38121,
        38182
      ],
      "op": "POP",
      "path": "27"
    },
    "7163": {
      "fn": "Vault.totalFloat",
      "offset": [
        38059,
        38189
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7164": {
      "fn": "Vault.totalFloat",
      "jump": "o",
      "offset": [
        38059,
        38189
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7165": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2658,
        2760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7166": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2714,
        2727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7168": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2746,
        2753
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x37"
    },
    "7170": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7171": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7172": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D5"
    },
    "7175": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7176": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2739,
        2753
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x453B"
    },
    "7179": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2739,
        2753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7180": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7181": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7182": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6842,
        6846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7184": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7185": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7186": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7187": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "7189": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7191": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7192": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7193": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7194": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7196": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7197": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7198": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6910
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7205": {
      "op": "SHL"
    },
    "7206": {
      "op": "SUB"
    },
    "7207": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7208": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "AND",
      "path": "6"
    },
    "7209": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7210": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7211": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7212": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7213": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7214": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7215": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7216": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6885,
        6919
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7217": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 68
    },
    "7218": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7219": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "LT",
      "path": "6"
    },
    "7220": {
      "branch": 220,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6937,
        6972
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7221": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8E"
    },
    "7224": {
      "branch": 220,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7225": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7227": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7234": {
      "op": "SHL"
    },
    "7235": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7236": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7239": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7241": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7242": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "ADD",
      "path": "6"
    },
    "7243": {
      "op": "MSTORE"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7248": {
      "op": "DUP3"
    },
    "7249": {
      "op": "ADD"
    },
    "7250": {
      "op": "MSTORE"
    },
    "7251": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7286": {
      "op": "DUP3"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "op": "MSTORE"
    },
    "7289": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7297": {
      "op": "SHL"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7300": {
      "op": "DUP3"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "op": "MSTORE"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7305": {
      "op": "ADD"
    },
    "7306": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "7309": {
      "op": "JUMP"
    },
    "7310": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6929,
        7014
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7311": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7115
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 69,
      "value": "0x1C9B"
    },
    "7314": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7315": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7071,
        7078
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7316": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7099,
        7114
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7317": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7080,
        7096
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7318": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7080,
        7114
      ],
      "op": "SUB",
      "path": "6"
    },
    "7319": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3098"
    },
    "7322": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7048,
        7115
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7323": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7048,
        7115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7143,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 70,
      "value": "0x1"
    },
    "7327": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7143,
        7147
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7328": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        7154
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7329": {
      "op": "POP"
    },
    "7330": {
      "op": "POP"
    },
    "7331": {
      "op": "POP"
    },
    "7332": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "o",
      "offset": [
        6749,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7333": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4027,
        4199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7334": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4113,
        4117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7336": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4129,
        4171
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0xBDF"
    },
    "7339": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7340": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4153,
        4162
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7341": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4164,
        4170
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7342": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4129,
        4138
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33A2"
    },
    "7345": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4129,
        4171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7346": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21510,
        21862
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7347": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "7349": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7350": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7352": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7353": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7360": {
      "op": "SHL"
    },
    "7361": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7362": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7363": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21591,
        21601
      ],
      "op": "CALLER",
      "path": "27"
    },
    "7364": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21591,
        21601
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "op": "SUB"
    },
    "7373": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "7374": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7375": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "7380": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7381": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CF2"
    },
    "7384": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7385": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21591,
        21601
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7386": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21591,
        21601
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7387": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "7388": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7395": {
      "op": "SHL"
    },
    "7396": {
      "op": "SUB"
    },
    "7397": {
      "op": "NOT"
    },
    "7398": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7400": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "7401": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "7402": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7403": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7405": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7406": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "7409": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7410": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7411": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7413": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7415": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7416": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7417": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7418": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "7419": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7420": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7421": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "7422": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "7423": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7424": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7425": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7426": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D0F"
    },
    "7429": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7430": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7431": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7433": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7434": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7435": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7436": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7438": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "7439": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7440": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7441": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7442": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7443": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7444": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7446": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7447": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7448": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7450": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "7451": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7453": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7454": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7455": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "7456": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7457": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7458": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7459": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7461": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7462": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7463": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7464": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7465": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7466": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D33"
    },
    "7469": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7470": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7471": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "7474": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7475": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7476": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D4F"
    },
    "7479": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7480": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7482": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7489": {
      "op": "SHL"
    },
    "7490": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7491": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7492": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7494": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "7495": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "7498": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7499": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "7502": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7503": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7504": {
      "offset": [
        1892,
        1894
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x14"
    },
    "7506": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21662,
        21695
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 72
    },
    "7507": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21662,
        21695
      ],
      "op": "GT",
      "path": "27"
    },
    "7508": {
      "branch": 195,
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21662,
        21695
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7509": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DAA"
    },
    "7512": {
      "branch": 195,
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7513": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7515": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7522": {
      "op": "SHL"
    },
    "7523": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7524": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7527": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7529": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7530": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "ADD",
      "path": "27"
    },
    "7531": {
      "op": "MSTORE"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7536": {
      "op": "DUP3"
    },
    "7537": {
      "op": "ADD"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "PUSH32",
      "value": "0x7365745769746864726177616C51756575653A3A51554555455F544F4F5F4249"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7574": {
      "op": "DUP3"
    },
    "7575": {
      "op": "ADD"
    },
    "7576": {
      "op": "MSTORE"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x47"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7581": {
      "op": "SHL"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7584": {
      "op": "DUP3"
    },
    "7585": {
      "op": "ADD"
    },
    "7586": {
      "op": "MSTORE"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7589": {
      "op": "ADD"
    },
    "7590": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "7593": {
      "op": "JUMP"
    },
    "7594": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21654,
        21733
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7595": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21785,
        21811
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 73,
      "value": "0x1DB6"
    },
    "7598": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21785,
        21800
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA6"
    },
    "7600": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21803,
        21811
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7601": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21803,
        21811
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7602": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21785,
        21811
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4172"
    },
    "7605": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21785,
        21811
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7606": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21785,
        21811
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7607": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21785,
        21811
      ],
      "op": "POP",
      "path": "27"
    },
    "7608": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "PUSH32",
      "path": "27",
      "statement": 74,
      "value": "0x7F5ECD11ABC947C192F7D36828C4A649DDECD0867F27DF66489E78D3EC80B6FE"
    },
    "7641": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21846,
        21854
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7642": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21846,
        21854
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7643": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7645": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7646": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1710"
    },
    "7649": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7650": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7651": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7652": {
      "fn": "Vault.setWithdrawalQueue",
      "offset": [
        21827,
        21855
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46D0"
    },
    "7655": {
      "fn": "Vault.setWithdrawalQueue",
      "jump": "i",
      "offset": [
        21827,
        21855
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7656": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7657": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "7659": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7660": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7662": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7663": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7670": {
      "op": "SHL"
    },
    "7671": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7672": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7673": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18227,
        18237
      ],
      "op": "CALLER",
      "path": "27"
    },
    "7674": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18227,
        18237
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7681": {
      "op": "SHL"
    },
    "7682": {
      "op": "SUB"
    },
    "7683": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "7684": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7685": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "7690": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7691": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E28"
    },
    "7694": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7695": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18227,
        18237
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7696": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18227,
        18237
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7697": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "7698": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "op": "SUB"
    },
    "7707": {
      "op": "NOT"
    },
    "7708": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7710": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "7711": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "7712": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7713": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7715": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7716": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "7719": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7720": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7721": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7723": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7725": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7726": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7727": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7728": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "7729": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7730": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7731": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "7732": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "7733": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7734": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7735": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7736": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E45"
    },
    "7739": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7740": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7741": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7743": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7744": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7745": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7746": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7748": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "7749": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7750": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7751": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7752": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7753": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7754": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7756": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7757": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7758": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7760": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "7761": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7763": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7764": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7765": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "7766": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7767": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7768": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7769": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7771": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7772": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7773": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7774": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7775": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7776": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E69"
    },
    "7779": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7780": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7781": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "7784": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7785": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7786": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1E85"
    },
    "7789": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7790": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7792": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7799": {
      "op": "SHL"
    },
    "7800": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7801": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7802": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7804": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "7805": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "7808": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7809": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "7812": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7813": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7814": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18305
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 75,
      "value": "0x9C"
    },
    "7816": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7817": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7824": {
      "op": "SHL"
    },
    "7825": {
      "op": "SUB"
    },
    "7826": {
      "op": "NOT"
    },
    "7827": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "AND",
      "path": "27"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7834": {
      "op": "SHL"
    },
    "7835": {
      "op": "SUB"
    },
    "7836": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7837": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "AND",
      "path": "27"
    },
    "7838": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7839": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7840": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "OR",
      "path": "27"
    },
    "7841": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7842": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7843": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18287,
        18327
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "7844": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18343,
        18389
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 76,
      "value": "0x40"
    },
    "7846": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18343,
        18389
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7847": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18343,
        18389
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xBA702855580CDA8666C4FE8E4AE71D8F5DD19DB067455EEB54E2BAC95C46AF13"
    },
    "7880": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18343,
        18389
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7883": {
      "op": "SWAP1"
    },
    "7884": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18343,
        18389
      ],
      "op": "LOG2",
      "path": "27"
    },
    "7885": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "POP",
      "path": "27"
    },
    "7886": {
      "fn": "Vault.setHarvestFeeReceiver",
      "offset": [
        18145,
        18396
      ],
      "op": "POP",
      "path": "27"
    },
    "7887": {
      "fn": "Vault.setHarvestFeeReceiver",
      "jump": "o",
      "offset": [
        18145,
        18396
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7888": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7889": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "7891": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7892": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7894": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7895": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7902": {
      "op": "SHL"
    },
    "7903": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7904": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7905": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35981,
        35991
      ],
      "op": "CALLER",
      "path": "27"
    },
    "7906": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35981,
        35991
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7913": {
      "op": "SHL"
    },
    "7914": {
      "op": "SUB"
    },
    "7915": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "7916": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7917": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "7922": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7923": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F10"
    },
    "7926": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7927": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35981,
        35991
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7928": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35981,
        35991
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7929": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "7930": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7937": {
      "op": "SHL"
    },
    "7938": {
      "op": "SUB"
    },
    "7939": {
      "op": "NOT"
    },
    "7940": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7942": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "7943": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "7944": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7945": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7947": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7948": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "7951": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7952": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7953": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7955": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7957": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7958": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7959": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7960": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "7961": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7962": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7963": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "7964": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "7965": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7966": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7967": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7968": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F2D"
    },
    "7971": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7972": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7973": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7975": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7976": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7977": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7978": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7980": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "7981": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7982": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7983": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7984": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7985": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "7986": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7988": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7989": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7990": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7992": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "7993": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7995": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7996": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "7997": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "7998": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7999": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8000": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8001": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8003": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8004": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8005": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8006": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8007": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8008": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F51"
    },
    "8011": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8012": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8013": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "8016": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8017": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8018": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F6D"
    },
    "8021": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8022": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8024": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8031": {
      "op": "SHL"
    },
    "8032": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8033": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8034": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8036": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "8037": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8040": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8041": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "8044": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8045": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8052": {
      "op": "SHL"
    },
    "8053": {
      "op": "SUB"
    },
    "8054": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 77
    },
    "8055": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "AND",
      "path": "27"
    },
    "8056": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8058": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8059": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8060": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8061": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36097
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "8063": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8065": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8066": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8068": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8069": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36107
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "8070": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36115
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8071": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36115
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "8073": {
      "branch": 196,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36082,
        36115
      ],
      "op": "AND",
      "path": "27"
    },
    "8074": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1FE6"
    },
    "8077": {
      "branch": 196,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8078": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8080": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8087": {
      "op": "SHL"
    },
    "8088": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8089": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8092": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8094": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8095": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "ADD",
      "path": "27"
    },
    "8096": {
      "op": "MSTORE"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8101": {
      "op": "DUP3"
    },
    "8102": {
      "op": "ADD"
    },
    "8103": {
      "op": "MSTORE"
    },
    "8104": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A554E545255535445445F"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8139": {
      "op": "DUP3"
    },
    "8140": {
      "op": "ADD"
    },
    "8141": {
      "op": "MSTORE"
    },
    "8142": {
      "op": "PUSH8",
      "value": "0x5354524154454759"
    },
    "8151": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8153": {
      "op": "SHL"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8156": {
      "op": "DUP3"
    },
    "8157": {
      "op": "ADD"
    },
    "8158": {
      "op": "MSTORE"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8161": {
      "op": "ADD"
    },
    "8162": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8165": {
      "op": "JUMP"
    },
    "8166": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36074,
        36160
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8167": {
      "branch": 197,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36256,
        36277
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 78
    },
    "8168": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2047"
    },
    "8171": {
      "branch": 197,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8172": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8174": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8181": {
      "op": "SHL"
    },
    "8182": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8183": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8186": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8188": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8189": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "ADD",
      "path": "27"
    },
    "8190": {
      "op": "MSTORE"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8195": {
      "op": "DUP3"
    },
    "8196": {
      "op": "ADD"
    },
    "8197": {
      "op": "MSTORE"
    },
    "8198": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A414D4F554E545F43414E"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8233": {
      "op": "DUP3"
    },
    "8234": {
      "op": "ADD"
    },
    "8235": {
      "op": "MSTORE"
    },
    "8236": {
      "op": "PUSH11",
      "value": "0x4E4F545F42455F5A45524F"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8250": {
      "op": "SHL"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8253": {
      "op": "DUP3"
    },
    "8254": {
      "op": "ADD"
    },
    "8255": {
      "op": "MSTORE"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8258": {
      "op": "ADD"
    },
    "8259": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8262": {
      "op": "JUMP"
    },
    "8263": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36248,
        36325
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8264": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36452,
        36484
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 79,
      "value": "0x2050"
    },
    "8267": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36452,
        36468
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8268": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36452,
        36482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3835"
    },
    "8271": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        36452,
        36484
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8272": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36452,
        36484
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8279": {
      "op": "SHL"
    },
    "8280": {
      "op": "SUB"
    },
    "8281": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "DUP5",
      "path": "27"
    },
    "8282": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "AND",
      "path": "27"
    },
    "8283": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8285": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8286": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8287": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8288": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36430
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "8290": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8292": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8293": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8295": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8296": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36440
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "8297": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8298": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8299": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36448
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "8301": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36448
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8302": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2086"
    },
    "8305": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8306": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DUP5",
      "path": "27"
    },
    "8307": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8308": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "8311": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8312": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DIV",
      "path": "27"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8319": {
      "op": "SHL"
    },
    "8320": {
      "op": "SUB"
    },
    "8321": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "AND",
      "path": "27"
    },
    "8322": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x471E"
    },
    "8325": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        36415,
        36484
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8326": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8327": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "8328": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "POP",
      "path": "27"
    },
    "8329": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "8332": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "EXP",
      "path": "27"
    },
    "8333": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8334": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8335": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "op": "SUB"
    },
    "8344": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "MUL",
      "path": "27"
    },
    "8345": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "NOT",
      "path": "27"
    },
    "8346": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "AND",
      "path": "27"
    },
    "8347": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8348": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8355": {
      "op": "SHL"
    },
    "8356": {
      "op": "SUB"
    },
    "8357": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "AND",
      "path": "27"
    },
    "8358": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "MUL",
      "path": "27"
    },
    "8359": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "OR",
      "path": "27"
    },
    "8360": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8361": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "8362": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36415,
        36484
      ],
      "op": "POP",
      "path": "27"
    },
    "8363": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36593,
        36609
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 80
    },
    "8364": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36589
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA0"
    },
    "8366": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36589
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8368": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8369": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8370": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8371": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x20BC"
    },
    "8374": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8375": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8376": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "8379": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        36568,
        36609
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8380": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8381": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8382": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8383": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36568,
        36609
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "8384": {
      "op": "POP"
    },
    "8385": {
      "op": "POP"
    },
    "8386": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 81,
      "value": "0x40"
    },
    "8388": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8389": {
      "op": "DUP3"
    },
    "8390": {
      "op": "DUP2"
    },
    "8391": {
      "op": "MSTORE"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8398": {
      "op": "SHL"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "DUP5",
      "path": "27"
    },
    "8401": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "AND",
      "path": "27"
    },
    "8402": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8403": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36644,
        36654
      ],
      "op": "CALLER",
      "path": "27"
    },
    "8404": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36644,
        36654
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8405": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x8D851B682E239B1DE720E92E5C5CFFDB72D353104CC63DC6ED144D7080217FBE"
    },
    "8438": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8441": {
      "op": "ADD"
    },
    "8442": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8444": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8445": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8446": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8447": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "SUB",
      "path": "27"
    },
    "8448": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8449": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36625,
        36683
      ],
      "op": "LOG3",
      "path": "27"
    },
    "8450": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 82,
      "value": "0x40"
    },
    "8452": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8453": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8460": {
      "op": "SHL"
    },
    "8461": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8462": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8463": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8465": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8466": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ADD",
      "path": "27"
    },
    "8467": {
      "op": "DUP4"
    },
    "8468": {
      "op": "SWAP1"
    },
    "8469": {
      "op": "MSTORE"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8476": {
      "op": "SHL"
    },
    "8477": {
      "op": "SUB"
    },
    "8478": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36794
      ],
      "op": "DUP5",
      "path": "27"
    },
    "8479": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36794
      ],
      "op": "AND",
      "path": "27"
    },
    "8480": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36794
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8481": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36794
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x2E1A7D4D"
    },
    "8486": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36794
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8489": {
      "op": "ADD"
    },
    "8490": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8492": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8494": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8495": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8496": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8497": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "SUB",
      "path": "27"
    },
    "8498": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8499": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8501": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP8",
      "path": "27"
    },
    "8502": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "GAS",
      "path": "27"
    },
    "8503": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "CALL",
      "path": "27"
    },
    "8504": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8505": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8506": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8507": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2148"
    },
    "8510": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8511": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8512": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8514": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8515": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "8516": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8517": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8519": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "REVERT",
      "path": "27"
    },
    "8520": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8521": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "POP",
      "path": "27"
    },
    "8522": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "POP",
      "path": "27"
    },
    "8523": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "POP",
      "path": "27"
    },
    "8524": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "POP",
      "path": "27"
    },
    "8525": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8527": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8528": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8529": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "8531": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "NOT",
      "path": "27"
    },
    "8532": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "8534": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8535": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ADD",
      "path": "27"
    },
    "8536": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "AND",
      "path": "27"
    },
    "8537": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8538": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ADD",
      "path": "27"
    },
    "8539": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8540": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8542": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8543": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "POP",
      "path": "27"
    },
    "8544": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8545": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "ADD",
      "path": "27"
    },
    "8546": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8547": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x216C"
    },
    "8550": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8551": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8552": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4746"
    },
    "8555": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "i",
      "offset": [
        36777,
        36812
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8556": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36812
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8557": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36817
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "8559": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36817
      ],
      "op": "AND",
      "path": "27"
    },
    "8560": {
      "branch": 198,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36777,
        36817
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8561": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21C8"
    },
    "8564": {
      "branch": 198,
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8565": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8567": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8574": {
      "op": "SHL"
    },
    "8575": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8576": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8579": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8581": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8582": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "ADD",
      "path": "27"
    },
    "8583": {
      "op": "MSTORE"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8588": {
      "op": "DUP3"
    },
    "8589": {
      "op": "ADD"
    },
    "8590": {
      "op": "MSTORE"
    },
    "8591": {
      "op": "PUSH32",
      "value": "0x776974686472617746726F6D53747261746567793A3A52454445454D5F464149"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8626": {
      "op": "DUP3"
    },
    "8627": {
      "op": "ADD"
    },
    "8628": {
      "op": "MSTORE"
    },
    "8629": {
      "op": "PUSH3",
      "value": "0x131151"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "8635": {
      "op": "SHL"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8638": {
      "op": "DUP3"
    },
    "8639": {
      "op": "ADD"
    },
    "8640": {
      "op": "MSTORE"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8643": {
      "op": "ADD"
    },
    "8644": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8647": {
      "op": "JUMP"
    },
    "8648": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        36769,
        36857
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8649": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "8650": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "8651": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "8652": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "o",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8653": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34469,
        35576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8654": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "8656": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8657": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8659": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8660": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8667": {
      "op": "SHL"
    },
    "8668": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8669": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8670": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34566,
        34576
      ],
      "op": "CALLER",
      "path": "27"
    },
    "8671": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34566,
        34576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8678": {
      "op": "SHL"
    },
    "8679": {
      "op": "SUB"
    },
    "8680": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "8681": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8682": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "8687": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8688": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x220D"
    },
    "8691": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8692": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34566,
        34576
      ],
      "op": "DUP5",
      "path": "27"
    },
    "8693": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34566,
        34576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8694": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "8695": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8702": {
      "op": "SHL"
    },
    "8703": {
      "op": "SUB"
    },
    "8704": {
      "op": "NOT"
    },
    "8705": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8707": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "8708": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "8709": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8710": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8712": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8713": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "8716": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8717": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8718": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8720": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8722": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8723": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8724": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8725": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "8726": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8727": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "8728": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "8729": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "8730": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8731": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8732": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8733": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x222A"
    },
    "8736": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8737": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8738": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8740": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8741": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "8742": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8743": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8745": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "8746": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8747": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8748": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8749": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8750": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8751": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8753": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8754": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "8755": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "8757": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "8758": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "8760": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8761": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8762": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "8763": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8764": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8765": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8766": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8768": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8769": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "8770": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8771": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "8772": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8773": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x224E"
    },
    "8776": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8777": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8778": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "8781": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8782": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8783": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x226A"
    },
    "8786": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8787": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8789": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8796": {
      "op": "SHL"
    },
    "8797": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8798": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8799": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8801": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "8802": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8805": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8806": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "8809": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8810": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8817": {
      "op": "SHL"
    },
    "8818": {
      "op": "SUB"
    },
    "8819": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 83
    },
    "8820": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "AND",
      "path": "27"
    },
    "8821": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8823": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8824": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8825": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8826": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "8828": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8830": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8831": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8833": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8834": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34692
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "8835": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34700
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "8836": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34700
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "8838": {
      "branch": 199,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34667,
        34700
      ],
      "op": "AND",
      "path": "27"
    },
    "8839": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22E2"
    },
    "8842": {
      "branch": 199,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8843": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8845": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8852": {
      "op": "SHL"
    },
    "8853": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8854": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8857": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8859": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8860": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "ADD",
      "path": "27"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8866": {
      "op": "DUP3"
    },
    "8867": {
      "op": "ADD"
    },
    "8868": {
      "op": "MSTORE"
    },
    "8869": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A554E545255535445445F53"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8904": {
      "op": "DUP3"
    },
    "8905": {
      "op": "ADD"
    },
    "8906": {
      "op": "MSTORE"
    },
    "8907": {
      "op": "PUSH7",
      "value": "0x54524154454759"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "8917": {
      "op": "SHL"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8920": {
      "op": "DUP3"
    },
    "8921": {
      "op": "ADD"
    },
    "8922": {
      "op": "MSTORE"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8925": {
      "op": "ADD"
    },
    "8926": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "8929": {
      "op": "JUMP"
    },
    "8930": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34659,
        34744
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8931": {
      "branch": 200,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34839,
        34860
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 84
    },
    "8932": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2342"
    },
    "8935": {
      "branch": 200,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "8936": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8938": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8945": {
      "op": "SHL"
    },
    "8946": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8947": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8950": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "8952": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8953": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "ADD",
      "path": "27"
    },
    "8954": {
      "op": "MSTORE"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8959": {
      "op": "DUP3"
    },
    "8960": {
      "op": "ADD"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A414D4F554E545F43414E4E"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8997": {
      "op": "DUP3"
    },
    "8998": {
      "op": "ADD"
    },
    "8999": {
      "op": "MSTORE"
    },
    "9000": {
      "op": "PUSH10",
      "value": "0x4F545F42455F5A45524F"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9013": {
      "op": "SHL"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9016": {
      "op": "DUP3"
    },
    "9017": {
      "op": "ADD"
    },
    "9018": {
      "op": "MSTORE"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9021": {
      "op": "ADD"
    },
    "9022": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "9025": {
      "op": "JUMP"
    },
    "9026": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34831,
        34907
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9027": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35013,
        35029
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 85
    },
    "9028": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35009
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA0"
    },
    "9030": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35009
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9032": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9033": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9034": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9035": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2354"
    },
    "9038": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9039": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9040": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "9043": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        34988,
        35029
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9044": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9045": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9046": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9047": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        34988,
        35029
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9048": {
      "op": "POP"
    },
    "9049": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35153,
        35185
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 86,
      "value": "0x2363"
    },
    "9052": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35153,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9053": {
      "op": "POP"
    },
    "9054": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35153,
        35169
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9055": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35153,
        35183
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3835"
    },
    "9058": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35153,
        35185
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9059": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35153,
        35185
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9066": {
      "op": "SHL"
    },
    "9067": {
      "op": "SUB"
    },
    "9068": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9069": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "AND",
      "path": "27"
    },
    "9070": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9072": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9073": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9074": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9075": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35131
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "9077": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9079": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9080": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9082": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9083": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35141
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "9084": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9085": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9086": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35149
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "9088": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35149
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9089": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2399"
    },
    "9092": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9093": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9094": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9095": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "9098": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9099": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DIV",
      "path": "27"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9106": {
      "op": "SHL"
    },
    "9107": {
      "op": "SUB"
    },
    "9108": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "AND",
      "path": "27"
    },
    "9109": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4769"
    },
    "9112": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35116,
        35185
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9113": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9114": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "9115": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "POP",
      "path": "27"
    },
    "9116": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "9119": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "EXP",
      "path": "27"
    },
    "9120": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9121": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9122": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9129": {
      "op": "SHL"
    },
    "9130": {
      "op": "SUB"
    },
    "9131": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "MUL",
      "path": "27"
    },
    "9132": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "NOT",
      "path": "27"
    },
    "9133": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "AND",
      "path": "27"
    },
    "9134": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9135": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9142": {
      "op": "SHL"
    },
    "9143": {
      "op": "SUB"
    },
    "9144": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "AND",
      "path": "27"
    },
    "9145": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "MUL",
      "path": "27"
    },
    "9146": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "OR",
      "path": "27"
    },
    "9147": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9148": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9149": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35116,
        35185
      ],
      "op": "POP",
      "path": "27"
    },
    "9150": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35229,
        35237
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 87
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9157": {
      "op": "SHL"
    },
    "9158": {
      "op": "SUB"
    },
    "9159": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "AND",
      "path": "27"
    },
    "9160": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35217,
        35227
      ],
      "op": "CALLER",
      "path": "27"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9167": {
      "op": "SHL"
    },
    "9168": {
      "op": "SUB"
    },
    "9169": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "AND",
      "path": "27"
    },
    "9170": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x49E9138FE0DACF001EA634236E38AA8BD229EFD55EC4D7975228D679DB6CE8F9"
    },
    "9203": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35239,
        35255
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9204": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9206": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9207": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2402"
    },
    "9210": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9211": {
      "op": "DUP2"
    },
    "9212": {
      "op": "MSTORE"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9215": {
      "op": "ADD"
    },
    "9216": {
      "op": "SWAP1"
    },
    "9217": {
      "op": "JUMP"
    },
    "9218": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9219": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9221": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9222": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9223": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9224": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "SUB",
      "path": "27"
    },
    "9225": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9226": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35201,
        35256
      ],
      "op": "LOG3",
      "path": "27"
    },
    "9227": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35348
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 88,
      "value": "0x99"
    },
    "9229": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35348
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9230": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35397
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2421"
    },
    "9233": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35397
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9240": {
      "op": "SHL"
    },
    "9241": {
      "op": "SUB"
    },
    "9242": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35348
      ],
      "op": "AND",
      "path": "27"
    },
    "9243": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35369,
        35377
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9244": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35380,
        35396
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9245": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35360
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x384F"
    },
    "9248": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35338,
        35397
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9249": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35338,
        35397
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9250": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 89,
      "value": "0x40"
    },
    "9252": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9253": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9262": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9263": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9265": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9266": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ADD",
      "path": "27"
    },
    "9267": {
      "op": "DUP4"
    },
    "9268": {
      "op": "SWAP1"
    },
    "9269": {
      "op": "MSTORE"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9276": {
      "op": "SHL"
    },
    "9277": {
      "op": "SUB"
    },
    "9278": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35509
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9279": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35509
      ],
      "op": "AND",
      "path": "27"
    },
    "9280": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35509
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9281": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35509
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB6B55F25"
    },
    "9286": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35509
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9289": {
      "op": "ADD"
    },
    "9290": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9292": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9294": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9295": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9296": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9297": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "SUB",
      "path": "27"
    },
    "9298": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9299": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9301": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP8",
      "path": "27"
    },
    "9302": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "GAS",
      "path": "27"
    },
    "9303": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "CALL",
      "path": "27"
    },
    "9304": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9305": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9306": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9307": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2468"
    },
    "9310": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9311": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9312": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9314": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9315": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "9316": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9317": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9319": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "REVERT",
      "path": "27"
    },
    "9320": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9321": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "POP",
      "path": "27"
    },
    "9322": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "POP",
      "path": "27"
    },
    "9323": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "POP",
      "path": "27"
    },
    "9324": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "POP",
      "path": "27"
    },
    "9325": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9327": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9328": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9329": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9331": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "NOT",
      "path": "27"
    },
    "9332": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9334": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9335": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ADD",
      "path": "27"
    },
    "9336": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "AND",
      "path": "27"
    },
    "9337": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9338": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ADD",
      "path": "27"
    },
    "9339": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9340": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9342": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9343": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "POP",
      "path": "27"
    },
    "9344": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9345": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "ADD",
      "path": "27"
    },
    "9346": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9347": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x248C"
    },
    "9350": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9351": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9352": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4746"
    },
    "9355": {
      "fn": "Vault.depositIntoStrategy",
      "jump": "i",
      "offset": [
        35493,
        35527
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9356": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35527
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9357": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35532
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "9359": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35532
      ],
      "op": "AND",
      "path": "27"
    },
    "9360": {
      "branch": 201,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35493,
        35532
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9361": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21C8"
    },
    "9364": {
      "branch": 201,
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9365": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9367": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9374": {
      "op": "SHL"
    },
    "9375": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9376": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9379": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9381": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9382": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "ADD",
      "path": "27"
    },
    "9383": {
      "op": "DUP2"
    },
    "9384": {
      "op": "SWAP1"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9388": {
      "op": "DUP3"
    },
    "9389": {
      "op": "ADD"
    },
    "9390": {
      "op": "MSTORE"
    },
    "9391": {
      "op": "PUSH32",
      "value": "0x6465706F736974496E746F53747261746567793A3A4D494E545F4641494C4544"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9426": {
      "op": "DUP3"
    },
    "9427": {
      "op": "ADD"
    },
    "9428": {
      "op": "MSTORE"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "fn": "Vault.depositIntoStrategy",
      "offset": [
        35485,
        35569
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "9435": {
      "op": "JUMP"
    },
    "9436": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39164,
        39306
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9437": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39220,
        39227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9439": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39287,
        39299
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 90,
      "value": "0x24E6"
    },
    "9442": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39287,
        39297
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B7D"
    },
    "9445": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        39287,
        39299
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9446": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39287,
        39299
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9447": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39270,
        39284
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24EE"
    },
    "9450": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39270,
        39282
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14F8"
    },
    "9453": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        39270,
        39284
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9454": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39270,
        39284
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9455": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39267
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA0"
    },
    "9457": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39267
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9458": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39284
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24FB"
    },
    "9461": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39284
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9462": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39284
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9463": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39284
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "9466": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        39246,
        39284
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9467": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39284
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9468": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39299
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BF8"
    },
    "9471": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39299
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9472": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39299
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9473": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        39246,
        39299
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "9476": {
      "fn": "Vault.totalUnderlying",
      "jump": "i",
      "offset": [
        39246,
        39299
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9477": {
      "offset": [
        6671,
        6705
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9478": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA6"
    },
    "9480": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9481": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9482": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9483": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9484": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "LT",
      "path": "27"
    },
    "9485": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2515"
    },
    "9488": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9489": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9491": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9492": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "REVERT",
      "path": "27"
    },
    "9493": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9494": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9496": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9497": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9498": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9499": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9501": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9502": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9503": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "9504": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "ADD",
      "path": "27"
    },
    "9505": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9512": {
      "op": "SHL"
    },
    "9513": {
      "op": "SUB"
    },
    "9514": {
      "offset": [
        6671,
        6705
      ],
      "op": "AND",
      "path": "27"
    },
    "9515": {
      "fn": "Vault.totalUnderlying",
      "offset": [
        6671,
        6705
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9516": {
      "op": "POP"
    },
    "9517": {
      "offset": [
        6671,
        6705
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9518": {
      "fn": "Vault.totalUnderlying",
      "jump": "o",
      "offset": [
        6671,
        6705
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9519": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9520": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "9522": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9523": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9525": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9526": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "9531": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9533": {
      "op": "SHL"
    },
    "9534": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9535": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9536": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22883,
        22893
      ],
      "op": "CALLER",
      "path": "27"
    },
    "9537": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22883,
        22893
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "op": "SUB"
    },
    "9546": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "9547": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9548": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "9553": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9554": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x256F"
    },
    "9557": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9558": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22883,
        22893
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9559": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22883,
        22893
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9560": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "9561": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9568": {
      "op": "SHL"
    },
    "9569": {
      "op": "SUB"
    },
    "9570": {
      "op": "NOT"
    },
    "9571": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9573": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "9574": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "9575": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9576": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9578": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9579": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "9582": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9583": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9584": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9586": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9588": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9589": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9590": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9591": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "9592": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9593": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "9594": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "9595": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "9596": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9597": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9598": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9599": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x258C"
    },
    "9602": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9603": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9604": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9606": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9607": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "9608": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9609": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9611": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "9612": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9613": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9614": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9615": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9616": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9617": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9619": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9620": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9621": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9623": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "9624": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9626": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9627": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9628": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "9629": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9630": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9631": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9632": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9634": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9635": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9636": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9637": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9638": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9639": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x25B0"
    },
    "9642": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9643": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9644": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "9647": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9648": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9649": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x25CC"
    },
    "9652": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9653": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9655": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9662": {
      "op": "SHL"
    },
    "9663": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9664": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9665": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9667": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "9668": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "9671": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9672": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "9675": {
      "fn": "Vault.distrustStrategy",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9676": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9683": {
      "op": "SHL"
    },
    "9684": {
      "op": "SUB"
    },
    "9685": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 91
    },
    "9686": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "AND",
      "path": "27"
    },
    "9687": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22985,
        22990
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9689": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9690": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9691": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9692": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22964
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "9694": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9696": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9697": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9699": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9700": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9701": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22974
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "9702": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22990
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9703": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22990
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9706": {
      "op": "NOT"
    },
    "9707": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22990
      ],
      "op": "AND",
      "path": "27"
    },
    "9708": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22990
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9709": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22949,
        22990
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9710": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        23006,
        23034
      ],
      "op": "MLOAD",
      "path": "27",
      "statement": 92
    },
    "9711": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        23006,
        23034
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xE14D923EC37225F1AAB033B03F5C98CF911D68BBA31F6908192DB6C24B0511C9"
    },
    "9744": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        23006,
        23034
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9745": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22985,
        22990
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9746": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        23006,
        23034
      ],
      "op": "LOG2",
      "path": "27"
    },
    "9747": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "POP",
      "path": "27"
    },
    "9748": {
      "fn": "Vault.distrustStrategy",
      "offset": [
        22815,
        23041
      ],
      "op": "POP",
      "path": "27"
    },
    "9749": {
      "fn": "Vault.distrustStrategy",
      "jump": "o",
      "offset": [
        22815,
        23041
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9750": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9751": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "9753": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9754": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9756": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9757": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9764": {
      "op": "SHL"
    },
    "9765": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9766": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9767": {
      "fn": "Vault.harvest",
      "offset": [
        29719,
        29729
      ],
      "op": "CALLER",
      "path": "27"
    },
    "9768": {
      "fn": "Vault.harvest",
      "offset": [
        29719,
        29729
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9775": {
      "op": "SHL"
    },
    "9776": {
      "op": "SUB"
    },
    "9777": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "9778": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9779": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "9784": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9785": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2656"
    },
    "9788": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9789": {
      "fn": "Vault.harvest",
      "offset": [
        29719,
        29729
      ],
      "op": "DUP5",
      "path": "27"
    },
    "9790": {
      "fn": "Vault.harvest",
      "offset": [
        29719,
        29729
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9791": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "9792": {
      "fn": "Vault.harvest",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9799": {
      "op": "SHL"
    },
    "9800": {
      "op": "SUB"
    },
    "9801": {
      "op": "NOT"
    },
    "9802": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9804": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "9805": {
      "fn": "Vault.harvest",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "9806": {
      "fn": "Vault.harvest",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9807": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9809": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9810": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "9813": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9814": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9815": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "9817": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9819": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9820": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9821": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9822": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "9823": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9824": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "9825": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "9826": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "9827": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9828": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9829": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "9830": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2673"
    },
    "9833": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9834": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9835": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9837": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9838": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "9839": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9840": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9842": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "9843": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9844": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9845": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9846": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9847": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9848": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9850": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9851": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "9852": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9854": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "9855": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "9857": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9858": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9859": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "9860": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9861": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9862": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9863": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9865": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9866": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "9867": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9868": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "9869": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9870": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2697"
    },
    "9873": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9874": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9875": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "9878": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9879": {
      "fn": "Vault.harvest",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9880": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x26B3"
    },
    "9883": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9884": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "9886": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "9887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9893": {
      "op": "SHL"
    },
    "9894": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9895": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "9896": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "9898": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "9899": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "9902": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9903": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "9906": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9907": {
      "fn": "Vault.harvest",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9908": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "9910": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9911": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29838
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "9913": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29838
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9914": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29853
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x26DD"
    },
    "9917": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29853
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9924": {
      "op": "SHL"
    },
    "9925": {
      "op": "SUB"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9930": {
      "op": "SHL"
    },
    "9931": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9932": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9933": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "DIV",
      "path": "27"
    },
    "9934": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "DUP2",
      "path": "27"
    },
    "9935": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "AND",
      "path": "27"
    },
    "9936": {
      "fn": "Vault.harvest",
      "offset": [
        29841,
        29853
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9941": {
      "op": "SHL"
    },
    "9942": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29838
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9943": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29838
      ],
      "op": "DIV",
      "path": "27"
    },
    "9944": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29838
      ],
      "op": "AND",
      "path": "27"
    },
    "9945": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29853
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4601"
    },
    "9948": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        29827,
        29853
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9949": {
      "fn": "Vault.harvest",
      "offset": [
        29827,
        29853
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9956": {
      "op": "SHL"
    },
    "9957": {
      "op": "SUB"
    },
    "9958": {
      "fn": "Vault.harvest",
      "offset": [
        29808,
        29853
      ],
      "op": "AND",
      "path": "27"
    },
    "9959": {
      "fn": "Vault.harvest",
      "offset": [
        29808,
        29823
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "9960": {
      "branch": 202,
      "fn": "Vault.harvest",
      "offset": [
        29808,
        29853
      ],
      "op": "LT",
      "path": "27"
    },
    "9961": {
      "fn": "Vault.harvest",
      "offset": [
        29804,
        30592
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272C"
    },
    "9964": {
      "branch": 202,
      "fn": "Vault.harvest",
      "offset": [
        29804,
        30592
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "9965": {
      "fn": "Vault.harvest",
      "offset": [
        30075,
        30089
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 93,
      "value": "0x26F4"
    },
    "9968": {
      "fn": "Vault.harvest",
      "offset": [
        30075,
        30087
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "9971": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30075,
        30089
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9972": {
      "fn": "Vault.harvest",
      "offset": [
        30075,
        30089
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9973": {
      "fn": "Vault.harvest",
      "offset": [
        30049,
        30072
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA2"
    },
    "9975": {
      "fn": "Vault.harvest",
      "offset": [
        30049,
        30089
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9976": {
      "fn": "Vault.harvest",
      "offset": [
        30148,
        30175
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 94,
      "value": "0xA4"
    },
    "9978": {
      "fn": "Vault.harvest",
      "offset": [
        30148,
        30175
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "9979": {
      "fn": "Vault.harvest",
      "offset": [
        30133,
        30175
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2704"
    },
    "9982": {
      "fn": "Vault.harvest",
      "offset": [
        30133,
        30175
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "9983": {
      "fn": "Vault.harvest",
      "offset": [
        30133,
        30145
      ],
      "op": "NUMBER",
      "path": "27"
    },
    "9984": {
      "fn": "Vault.harvest",
      "offset": [
        30133,
        30175
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "9987": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30133,
        30175
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9988": {
      "fn": "Vault.harvest",
      "offset": [
        30133,
        30175
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9989": {
      "fn": "Vault.harvest",
      "offset": [
        30103,
        30130
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA3"
    },
    "9991": {
      "fn": "Vault.harvest",
      "offset": [
        30103,
        30175
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9992": {
      "fn": "Vault.harvest",
      "offset": [
        30219,
        30231
      ],
      "op": "NUMBER",
      "path": "27",
      "statement": 95
    },
    "9993": {
      "fn": "Vault.harvest",
      "offset": [
        30189,
        30216
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA4"
    },
    "9995": {
      "fn": "Vault.harvest",
      "offset": [
        30189,
        30231
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "9996": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30325
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 96,
      "value": "0xA5"
    },
    "9998": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "DUP1",
      "path": "27"
    },
    "9999": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10000": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10009": {
      "op": "NOT"
    },
    "10010": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "AND",
      "path": "27"
    },
    "10011": {
      "fn": "Vault.harvest",
      "offset": [
        30335,
        30350
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10018": {
      "op": "SHL"
    },
    "10019": {
      "op": "SUB"
    },
    "10020": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "AND",
      "path": "27"
    },
    "10021": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "OR",
      "path": "27"
    },
    "10022": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10023": {
      "fn": "Vault.harvest",
      "offset": [
        30303,
        30351
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10024": {
      "fn": "Vault.harvest",
      "offset": [
        29804,
        30592
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27A6"
    },
    "10027": {
      "fn": "Vault.harvest",
      "offset": [
        29804,
        30592
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10028": {
      "fn": "Vault.harvest",
      "offset": [
        29804,
        30592
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10029": {
      "fn": "Vault.harvest",
      "offset": [
        30538,
        30551
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 97,
      "value": "0x9F"
    },
    "10031": {
      "fn": "Vault.harvest",
      "offset": [
        30538,
        30551
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10032": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30535
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA5"
    },
    "10034": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30535
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10035": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30551
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x274E"
    },
    "10038": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30551
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "op": "SUB"
    },
    "10047": {
      "fn": "Vault.harvest",
      "offset": [
        30538,
        30551
      ],
      "op": "AND",
      "path": "27"
    },
    "10048": {
      "fn": "Vault.harvest",
      "offset": [
        30538,
        30551
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10055": {
      "op": "SHL"
    },
    "10056": {
      "op": "SUB"
    },
    "10057": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30535
      ],
      "op": "AND",
      "path": "27"
    },
    "10058": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30551
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x478B"
    },
    "10061": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        30513,
        30551
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10062": {
      "fn": "Vault.harvest",
      "offset": [
        30513,
        30551
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10069": {
      "op": "SHL"
    },
    "10070": {
      "op": "SUB"
    },
    "10071": {
      "fn": "Vault.harvest",
      "offset": [
        30494,
        30551
      ],
      "op": "AND",
      "path": "27"
    },
    "10072": {
      "fn": "Vault.harvest",
      "offset": [
        30494,
        30509
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "10073": {
      "fn": "Vault.harvest",
      "offset": [
        30494,
        30551
      ],
      "op": "GT",
      "path": "27"
    },
    "10074": {
      "branch": 203,
      "fn": "Vault.harvest",
      "offset": [
        30494,
        30551
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10075": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27A6"
    },
    "10078": {
      "branch": 203,
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10079": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10081": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10090": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10093": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "10095": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10096": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "ADD",
      "path": "27"
    },
    "10097": {
      "op": "MSTORE"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10102": {
      "op": "DUP3"
    },
    "10103": {
      "op": "ADD"
    },
    "10104": {
      "op": "MSTORE"
    },
    "10105": {
      "op": "PUSH32",
      "value": "0x686172766573743A3A4241445F484152564553545F54494D4500000000000000"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10140": {
      "op": "DUP3"
    },
    "10141": {
      "op": "ADD"
    },
    "10142": {
      "op": "MSTORE"
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10145": {
      "op": "ADD"
    },
    "10146": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "10149": {
      "op": "JUMP"
    },
    "10150": {
      "fn": "Vault.harvest",
      "offset": [
        30486,
        30581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10151": {
      "fn": "Vault.harvest",
      "offset": [
        30697,
        30718
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA0"
    },
    "10153": {
      "fn": "Vault.harvest",
      "offset": [
        30697,
        30718
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10154": {
      "fn": "Vault.harvest",
      "offset": [
        30662,
        30694
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10156": {
      "fn": "Vault.harvest",
      "offset": [
        30697,
        30718
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10157": {
      "fn": "Vault.harvest",
      "offset": [
        30662,
        30694
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10158": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10159": {
      "fn": "Vault.harvest",
      "offset": [
        31073,
        31094
      ],
      "op": "DUP6",
      "path": "27"
    },
    "10160": {
      "fn": "Vault.harvest",
      "offset": [
        31073,
        31094
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10161": {
      "fn": "Vault.harvest",
      "offset": [
        31073,
        31094
      ],
      "op": "LT",
      "path": "27"
    },
    "10162": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10163": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2961"
    },
    "10166": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10167": {
      "fn": "Vault.harvest",
      "offset": [
        31169,
        31187
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10169": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31200
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10170": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31200
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10171": {
      "fn": "Vault.harvest",
      "offset": [
        31201,
        31202
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10172": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10173": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10174": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "LT",
      "path": "27"
    },
    "10175": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27CA"
    },
    "10178": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10179": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27CA"
    },
    "10182": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x47AD"
    },
    "10185": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31190,
        31203
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10186": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10187": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10188": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "POP",
      "path": "27"
    },
    "10189": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "10191": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "MUL",
      "path": "27"
    },
    "10192": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "ADD",
      "path": "27"
    },
    "10193": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "10195": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10196": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "ADD",
      "path": "27"
    },
    "10197": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10198": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27DF"
    },
    "10201": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10202": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10203": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4389"
    },
    "10206": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31190,
        31203
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10207": {
      "fn": "Vault.harvest",
      "offset": [
        31190,
        31203
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10214": {
      "op": "SHL"
    },
    "10215": {
      "op": "SUB"
    },
    "10216": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 98
    },
    "10217": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "AND",
      "path": "27"
    },
    "10218": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10220": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10221": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10222": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10223": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31418
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "10225": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "10227": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10228": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10230": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10231": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31428
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "10232": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31436
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10233": {
      "fn": "Vault.harvest",
      "offset": [
        31169,
        31203
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10234": {
      "fn": "Vault.harvest",
      "offset": [
        31169,
        31203
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10235": {
      "op": "POP"
    },
    "10236": {
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31436
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "10238": {
      "branch": 204,
      "fn": "Vault.harvest",
      "offset": [
        31403,
        31436
      ],
      "op": "AND",
      "path": "27"
    },
    "10239": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x284A"
    },
    "10242": {
      "branch": 204,
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10243": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10245": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10252": {
      "op": "SHL"
    },
    "10253": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10254": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10257": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "10259": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10260": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "ADD",
      "path": "27"
    },
    "10261": {
      "op": "MSTORE"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10266": {
      "op": "DUP3"
    },
    "10267": {
      "op": "ADD"
    },
    "10268": {
      "op": "MSTORE"
    },
    "10269": {
      "op": "PUSH32",
      "value": "0x686172766573743A3A554E545255535445445F53545241544547590000000000"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10304": {
      "op": "DUP3"
    },
    "10305": {
      "op": "ADD"
    },
    "10306": {
      "op": "MSTORE"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10309": {
      "op": "ADD"
    },
    "10310": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "10313": {
      "op": "JUMP"
    },
    "10314": {
      "fn": "Vault.harvest",
      "offset": [
        31395,
        31468
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10321": {
      "op": "SHL"
    },
    "10322": {
      "op": "SUB"
    },
    "10323": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10324": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "AND",
      "path": "27"
    },
    "10325": {
      "fn": "Vault.harvest",
      "offset": [
        31547,
        31573
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10327": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10328": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10329": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10330": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31591
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "10332": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "10334": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10335": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10336": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10337": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10339": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10340": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10341": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "10342": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10343": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10344": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10345": {
      "op": "PUSH4",
      "value": "0x27E5CBAF"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10352": {
      "op": "SHL"
    },
    "10353": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10354": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10355": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10356": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10357": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "10360": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10361": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10362": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "DIV",
      "path": "27"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10369": {
      "op": "SHL"
    },
    "10370": {
      "op": "SUB"
    },
    "10371": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "AND",
      "path": "27"
    },
    "10372": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31609
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "10373": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10374": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31680
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x27E5CBAF"
    },
    "10379": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31680
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10380": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "10382": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10383": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10384": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ADD",
      "path": "27"
    },
    "10385": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "10386": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10387": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10388": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10389": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SUB",
      "path": "27"
    },
    "10390": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ADD",
      "path": "27"
    },
    "10391": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10392": {
      "fn": "Vault.harvest",
      "offset": [
        31547,
        31573
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10393": {
      "fn": "Vault.harvest",
      "offset": [
        31576,
        31601
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10394": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "GAS",
      "path": "27"
    },
    "10395": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "CALL",
      "path": "27"
    },
    "10396": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10397": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10398": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10399": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28AC"
    },
    "10402": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10403": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "10404": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10406": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10407": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "10408": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "10409": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10411": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "REVERT",
      "path": "27"
    },
    "10412": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10413": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10414": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10415": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10416": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10417": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10419": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10420": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "10421": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "10423": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "NOT",
      "path": "27"
    },
    "10424": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "10426": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10427": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ADD",
      "path": "27"
    },
    "10428": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "AND",
      "path": "27"
    },
    "10429": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10430": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ADD",
      "path": "27"
    },
    "10431": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10432": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10434": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10435": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10436": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10437": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "ADD",
      "path": "27"
    },
    "10438": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10439": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28D0"
    },
    "10442": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10443": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10444": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46B7"
    },
    "10447": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31652,
        31682
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10448": {
      "fn": "Vault.harvest",
      "offset": [
        31652,
        31682
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10449": {
      "fn": "Vault.harvest",
      "offset": [
        31623,
        31682
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10450": {
      "fn": "Vault.harvest",
      "offset": [
        31623,
        31682
      ],
      "op": "POP",
      "path": "27"
    },
    "10451": {
      "fn": "Vault.harvest",
      "offset": [
        31786,
        31820
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 99,
      "value": "0x28DB"
    },
    "10454": {
      "fn": "Vault.harvest",
      "offset": [
        31786,
        31804
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10455": {
      "fn": "Vault.harvest",
      "offset": [
        31786,
        31818
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3835"
    },
    "10458": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31786,
        31820
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10459": {
      "fn": "Vault.harvest",
      "offset": [
        31786,
        31820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10466": {
      "op": "SHL"
    },
    "10467": {
      "op": "SUB"
    },
    "10468": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "DUP5",
      "path": "27"
    },
    "10469": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "AND",
      "path": "27"
    },
    "10470": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10472": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10473": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10474": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10475": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31765
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "10477": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "10479": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "10480": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10482": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10483": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31775
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "10484": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10485": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10492": {
      "op": "SHL"
    },
    "10493": {
      "op": "SUB"
    },
    "10494": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10495": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10496": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10497": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "AND",
      "path": "27"
    },
    "10498": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "10501": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "MUL",
      "path": "27"
    },
    "10502": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "10504": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10505": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10506": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "AND",
      "path": "27"
    },
    "10507": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10508": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10509": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10510": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "OR",
      "path": "27"
    },
    "10511": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10512": {
      "fn": "Vault.harvest",
      "offset": [
        31750,
        31820
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10513": {
      "fn": "Vault.harvest",
      "offset": [
        32116,
        32134
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 100
    },
    "10514": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32113
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x291B"
    },
    "10517": {
      "fn": "Vault.harvest",
      "offset": [
        32095,
        32113
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10518": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32092
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10519": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32113
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "10522": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32068,
        32113
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10523": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32113
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10524": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2925"
    },
    "10527": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32134
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10528": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10529": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "10532": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32068,
        32134
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10533": {
      "fn": "Vault.harvest",
      "offset": [
        32068,
        32134
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10534": {
      "fn": "Vault.harvest",
      "offset": [
        32041,
        32134
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "10535": {
      "fn": "Vault.harvest",
      "offset": [
        32041,
        32134
      ],
      "op": "POP",
      "path": "27"
    },
    "10536": {
      "fn": "Vault.harvest",
      "offset": [
        32277,
        32295
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 101
    },
    "10537": {
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32274
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10538": {
      "branch": 205,
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32295
      ],
      "op": "GT",
      "path": "27"
    },
    "10539": {
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32404
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2935"
    },
    "10542": {
      "branch": 205,
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32404
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10543": {
      "fn": "Vault.harvest",
      "offset": [
        32403,
        32404
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10545": {
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32404
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x293F"
    },
    "10548": {
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32404
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10549": {
      "fn": "Vault.harvest",
      "offset": [
        32256,
        32404
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10550": {
      "fn": "Vault.harvest",
      "offset": [
        32314,
        32353
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x293F"
    },
    "10553": {
      "fn": "Vault.harvest",
      "offset": [
        32335,
        32353
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10554": {
      "fn": "Vault.harvest",
      "offset": [
        32314,
        32332
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10555": {
      "fn": "Vault.harvest",
      "offset": [
        32314,
        32353
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "10558": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32314,
        32353
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10559": {
      "fn": "Vault.harvest",
      "offset": [
        32314,
        32353
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10560": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2949"
    },
    "10563": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10564": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "DUP8",
      "path": "27"
    },
    "10565": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "10568": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32234,
        32404
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10569": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10570": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "SWAP6",
      "path": "27"
    },
    "10571": {
      "fn": "Vault.harvest",
      "offset": [
        32234,
        32404
      ],
      "op": "POP",
      "path": "27"
    },
    "10572": {
      "fn": "Vault.harvest",
      "offset": [
        31101,
        32486
      ],
      "op": "POP",
      "path": "27"
    },
    "10573": {
      "fn": "Vault.harvest",
      "offset": [
        31101,
        32486
      ],
      "op": "POP",
      "path": "27"
    },
    "10574": {
      "fn": "Vault.harvest",
      "offset": [
        31101,
        32486
      ],
      "op": "POP",
      "path": "27"
    },
    "10575": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 102
    },
    "10576": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10577": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2959"
    },
    "10580": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10581": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x462C"
    },
    "10584": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        31096,
        31099
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10585": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10586": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10587": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "POP",
      "path": "27"
    },
    "10588": {
      "fn": "Vault.harvest",
      "offset": [
        31096,
        31099
      ],
      "op": "POP",
      "path": "27"
    },
    "10589": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27AE"
    },
    "10592": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10593": {
      "fn": "Vault.harvest",
      "offset": [
        31053,
        32486
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10594": {
      "op": "POP"
    },
    "10595": {
      "fn": "Vault.harvest",
      "offset": [
        32611,
        32628
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9B"
    },
    "10597": {
      "fn": "Vault.harvest",
      "offset": [
        32611,
        32628
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10598": {
      "fn": "Vault.harvest",
      "offset": [
        32565,
        32584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10600": {
      "fn": "Vault.harvest",
      "offset": [
        32565,
        32584
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10601": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32635
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x297C"
    },
    "10604": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32635
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10605": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32605
      ],
      "op": "DUP5",
      "path": "27"
    },
    "10606": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32605
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10607": {
      "fn": "Vault.harvest",
      "offset": [
        32630,
        32634
      ],
      "op": "PUSH8",
      "path": "27",
      "value": "0xDE0B6B3A7640000"
    },
    "10616": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32610
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x31B4"
    },
    "10619": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32587,
        32635
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10620": {
      "fn": "Vault.harvest",
      "offset": [
        32587,
        32635
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10621": {
      "fn": "Vault.harvest",
      "offset": [
        32565,
        32635
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10622": {
      "op": "POP"
    },
    "10623": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32746
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10624": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32746
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10625": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32746
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10626": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32746
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10627": {
      "branch": 206,
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32746
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10628": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32782
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2997"
    },
    "10631": {
      "branch": 206,
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32782
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10632": {
      "op": "POP"
    },
    "10633": {
      "fn": "Vault.harvest",
      "offset": [
        32750,
        32768
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9C"
    },
    "10635": {
      "fn": "Vault.harvest",
      "offset": [
        32750,
        32768
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10642": {
      "op": "SHL"
    },
    "10643": {
      "op": "SUB"
    },
    "10644": {
      "fn": "Vault.harvest",
      "offset": [
        32750,
        32768
      ],
      "op": "AND",
      "path": "27"
    },
    "10645": {
      "fn": "Vault.harvest",
      "offset": [
        32750,
        32782
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10646": {
      "branch": 207,
      "fn": "Vault.harvest",
      "offset": [
        32750,
        32782
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10647": {
      "fn": "Vault.harvest",
      "offset": [
        32730,
        32782
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10648": {
      "fn": "Vault.harvest",
      "offset": [
        32726,
        32878
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10649": {
      "fn": "Vault.harvest",
      "offset": [
        32726,
        32878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29C7"
    },
    "10652": {
      "branch": 207,
      "fn": "Vault.harvest",
      "offset": [
        32726,
        32878
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10653": {
      "fn": "Vault.harvest",
      "offset": [
        32804,
        32822
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 103,
      "value": "0x9C"
    },
    "10655": {
      "fn": "Vault.harvest",
      "offset": [
        32804,
        32822
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10656": {
      "fn": "Vault.harvest",
      "offset": [
        32798,
        32867
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29C7"
    },
    "10659": {
      "fn": "Vault.harvest",
      "offset": [
        32798,
        32867
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10666": {
      "op": "SHL"
    },
    "10667": {
      "op": "SUB"
    },
    "10668": {
      "fn": "Vault.harvest",
      "offset": [
        32804,
        32822
      ],
      "op": "AND",
      "path": "27"
    },
    "10669": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32866
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29C2"
    },
    "10672": {
      "fn": "Vault.harvest",
      "offset": [
        32841,
        32855
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29B7"
    },
    "10675": {
      "fn": "Vault.harvest",
      "offset": [
        32841,
        32853
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1389"
    },
    "10678": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32841,
        32855
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10679": {
      "fn": "Vault.harvest",
      "offset": [
        32841,
        32855
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10680": {
      "fn": "Vault.harvest",
      "offset": [
        32857,
        32865
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "10682": {
      "fn": "Vault.harvest",
      "offset": [
        32857,
        32865
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10683": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32835
      ],
      "op": "DUP6",
      "path": "27"
    },
    "10684": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32835
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10685": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32866
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10686": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32840
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3380"
    },
    "10689": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32824,
        32866
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10690": {
      "fn": "Vault.harvest",
      "offset": [
        32824,
        32866
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10691": {
      "fn": "Vault.harvest",
      "offset": [
        32798,
        32803
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3964"
    },
    "10694": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        32798,
        32867
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10695": {
      "fn": "Vault.harvest",
      "offset": [
        32798,
        32867
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10696": {
      "fn": "Vault.harvest",
      "offset": [
        32980,
        33004
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10698": {
      "fn": "Vault.harvest",
      "offset": [
        33007,
        33074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29EF"
    },
    "10701": {
      "fn": "Vault.harvest",
      "offset": [
        33046,
        33057
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10702": {
      "fn": "Vault.harvest",
      "offset": [
        33025,
        33043
      ],
      "op": "DUP6",
      "path": "27"
    },
    "10703": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33022
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29D6"
    },
    "10706": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33020
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14F8"
    },
    "10709": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33008,
        33022
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10710": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33022
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10711": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33043
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29E0"
    },
    "10714": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33043
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10715": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33043
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10716": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33043
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "10719": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33008,
        33043
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10720": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33043
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10721": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33057
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29EA"
    },
    "10724": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33057
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10725": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33057
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10726": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33057
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "10729": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33008,
        33057
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10730": {
      "fn": "Vault.harvest",
      "offset": [
        33008,
        33057
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10731": {
      "fn": "Vault.harvest",
      "offset": [
        33007,
        33072
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A43"
    },
    "10734": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33007,
        33074
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10735": {
      "fn": "Vault.harvest",
      "offset": [
        33007,
        33074
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10736": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33099
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 104,
      "value": "0xA5"
    },
    "10738": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10739": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10746": {
      "op": "SHL"
    },
    "10747": {
      "op": "SUB"
    },
    "10748": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10749": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "DUP5",
      "path": "27"
    },
    "10750": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "AND",
      "path": "27"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10755": {
      "op": "SHL"
    },
    "10756": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10757": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "MUL",
      "path": "27"
    },
    "10758": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10759": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10760": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "10761": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "AND",
      "path": "27"
    },
    "10762": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "OR",
      "path": "27"
    },
    "10763": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10764": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10765": {
      "fn": "Vault.harvest",
      "offset": [
        33084,
        33118
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10766": {
      "fn": "Vault.harvest",
      "offset": [
        32980,
        33074
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10767": {
      "fn": "Vault.harvest",
      "offset": [
        32980,
        33074
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10768": {
      "op": "POP"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10771": {
      "op": "SWAP1"
    },
    "10772": {
      "fn": "Vault.harvest",
      "offset": [
        33193,
        33245
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2A1D"
    },
    "10775": {
      "fn": "Vault.harvest",
      "offset": [
        33193,
        33245
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10776": {
      "fn": "Vault.harvest",
      "offset": [
        33193,
        33217
      ],
      "op": "DUP6",
      "path": "27"
    },
    "10777": {
      "fn": "Vault.harvest",
      "offset": [
        33193,
        33245
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4647"
    },
    "10780": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33193,
        33245
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10781": {
      "fn": "Vault.harvest",
      "offset": [
        33193,
        33245
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10782": {
      "fn": "Vault.harvest",
      "offset": [
        33166,
        33245
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10783": {
      "fn": "Vault.harvest",
      "offset": [
        33166,
        33245
      ],
      "op": "POP",
      "path": "27"
    },
    "10784": {
      "fn": "Vault.harvest",
      "offset": [
        33273,
        33370
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 105,
      "value": "0x2A35"
    },
    "10787": {
      "fn": "Vault.harvest",
      "offset": [
        33297,
        33313
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10788": {
      "fn": "Vault.harvest",
      "offset": [
        33323,
        33339
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10793": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10795": {
      "op": "SHL"
    },
    "10796": {
      "op": "SUB"
    },
    "10797": {
      "fn": "Vault.harvest",
      "offset": [
        33315,
        33340
      ],
      "op": "AND",
      "path": "27"
    },
    "10798": {
      "fn": "Vault.harvest",
      "offset": [
        33342,
        33369
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA3"
    },
    "10800": {
      "fn": "Vault.harvest",
      "offset": [
        33342,
        33369
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10801": {
      "fn": "Vault.harvest",
      "offset": [
        33273,
        33296
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A59"
    },
    "10804": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33273,
        33370
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10805": {
      "fn": "Vault.harvest",
      "offset": [
        33273,
        33370
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10806": {
      "fn": "Vault.harvest",
      "offset": [
        33255,
        33270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xAD"
    },
    "10808": {
      "fn": "Vault.harvest",
      "offset": [
        33255,
        33370
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10809": {
      "fn": "Vault.harvest",
      "offset": [
        33432,
        33453
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 106,
      "value": "0xA0"
    },
    "10811": {
      "fn": "Vault.harvest",
      "offset": [
        33432,
        33480
      ],
      "op": "DUP5",
      "path": "27"
    },
    "10812": {
      "fn": "Vault.harvest",
      "offset": [
        33432,
        33480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10813": {
      "fn": "Vault.harvest",
      "offset": [
        33432,
        33480
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10814": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33548
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 107,
      "value": "0xA5"
    },
    "10816": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10817": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10818": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFF0000000000000000"
    },
    "10835": {
      "op": "NOT"
    },
    "10836": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "AND",
      "path": "27"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10841": {
      "op": "SHL"
    },
    "10842": {
      "fn": "Vault.harvest",
      "offset": [
        33558,
        33573
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10849": {
      "op": "SHL"
    },
    "10850": {
      "op": "SUB"
    },
    "10851": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "AND",
      "path": "27"
    },
    "10852": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "MUL",
      "path": "27"
    },
    "10853": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "OR",
      "path": "27"
    },
    "10854": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10855": {
      "fn": "Vault.harvest",
      "offset": [
        33537,
        33574
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10856": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 108,
      "value": "0x40"
    },
    "10858": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10859": {
      "fn": "Vault.harvest",
      "offset": [
        33598,
        33608
      ],
      "op": "CALLER",
      "path": "27"
    },
    "10860": {
      "fn": "Vault.harvest",
      "offset": [
        33598,
        33608
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10861": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x69E9C71F6799744A94D9897E77C3ED426CC2F92BA0EF3300785368209B6F4B2D"
    },
    "10894": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10895": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2A9B"
    },
    "10898": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10899": {
      "fn": "Vault.harvest",
      "offset": [
        33610,
        33620
      ],
      "op": "DUP13",
      "path": "27"
    },
    "10900": {
      "fn": "Vault.harvest",
      "offset": [
        33610,
        33620
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10901": {
      "fn": "Vault.harvest",
      "offset": [
        33610,
        33620
      ],
      "op": "DUP13",
      "path": "27"
    },
    "10902": {
      "fn": "Vault.harvest",
      "offset": [
        33610,
        33620
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10903": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x46D0"
    },
    "10906": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        33590,
        33621
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10907": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10908": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "10910": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10911": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10912": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10913": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "SUB",
      "path": "27"
    },
    "10914": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10915": {
      "fn": "Vault.harvest",
      "offset": [
        33590,
        33621
      ],
      "op": "LOG2",
      "path": "27"
    },
    "10916": {
      "fn": "Vault.harvest",
      "offset": [
        33696,
        33712
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9F"
    },
    "10918": {
      "fn": "Vault.harvest",
      "offset": [
        33696,
        33712
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10923": {
      "op": "SHL"
    },
    "10924": {
      "fn": "Vault.harvest",
      "offset": [
        33696,
        33712
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10925": {
      "fn": "Vault.harvest",
      "offset": [
        33696,
        33712
      ],
      "op": "DIV",
      "path": "27"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10932": {
      "op": "SHL"
    },
    "10933": {
      "op": "SUB"
    },
    "10934": {
      "fn": "Vault.harvest",
      "offset": [
        33696,
        33712
      ],
      "op": "AND",
      "path": "27"
    },
    "10935": {
      "fn": "Vault.harvest",
      "offset": [
        33774,
        33794
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10936": {
      "branch": 208,
      "fn": "Vault.harvest",
      "offset": [
        33774,
        33794
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "10937": {
      "fn": "Vault.harvest",
      "offset": [
        33770,
        34040
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2B21"
    },
    "10940": {
      "branch": 208,
      "fn": "Vault.harvest",
      "offset": [
        33770,
        34040
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "10941": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33863
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 109,
      "value": "0x9F"
    },
    "10943": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "DUP1",
      "path": "27"
    },
    "10944": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10951": {
      "op": "SHL"
    },
    "10952": {
      "op": "SUB"
    },
    "10953": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "AND",
      "path": "27",
      "statement": 110
    },
    "10954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10958": {
      "op": "SHL"
    },
    "10959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10965": {
      "op": "SHL"
    },
    "10966": {
      "op": "SUB"
    },
    "10967": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "DUP5",
      "path": "27"
    },
    "10968": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "AND",
      "path": "27"
    },
    "10969": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10970": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "DUP2",
      "path": "27"
    },
    "10971": {
      "fn": "Vault.harvest",
      "offset": [
        33851,
        33881
      ],
      "op": "MUL",
      "path": "27"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10978": {
      "op": "SHL"
    },
    "10979": {
      "op": "SUB"
    },
    "10980": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "AND",
      "path": "27"
    },
    "10981": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10982": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10983": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10984": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "OR",
      "path": "27"
    },
    "10985": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10986": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "10987": {
      "fn": "Vault.harvest",
      "offset": [
        33941,
        33961
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "10988": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 111,
      "value": "0x40"
    },
    "10990": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "10991": {
      "op": "SWAP1"
    },
    "10992": {
      "op": "DUP2"
    },
    "10993": {
      "op": "MSTORE"
    },
    "10994": {
      "fn": "Vault.harvest",
      "offset": [
        34001,
        34011
      ],
      "op": "CALLER",
      "path": "27"
    },
    "10995": {
      "fn": "Vault.harvest",
      "offset": [
        34001,
        34011
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "10996": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xE893FA207C5A5094CAD036347B877C23EBECD9DF94AE0426F287040C13220B3F"
    },
    "11029": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11032": {
      "op": "ADD"
    },
    "11033": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11035": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11036": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11037": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11038": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "SUB",
      "path": "27"
    },
    "11039": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11040": {
      "fn": "Vault.harvest",
      "offset": [
        33981,
        34029
      ],
      "op": "LOG2",
      "path": "27"
    },
    "11041": {
      "fn": "Vault.harvest",
      "offset": [
        33770,
        34040
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11042": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11043": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11044": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11045": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11046": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11047": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11048": {
      "fn": "Vault.harvest",
      "offset": [
        29731,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11049": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11050": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11051": {
      "fn": "Vault.harvest",
      "offset": [
        29647,
        34046
      ],
      "op": "POP",
      "path": "27"
    },
    "11052": {
      "fn": "Vault.harvest",
      "jump": "o",
      "offset": [
        29647,
        34046
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11053": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17174,
        17541
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11054": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "11056": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "11057": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11059": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11060": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11067": {
      "op": "SHL"
    },
    "11068": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11069": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11070": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17249,
        17259
      ],
      "op": "CALLER",
      "path": "27"
    },
    "11071": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17249,
        17259
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11078": {
      "op": "SHL"
    },
    "11079": {
      "op": "SUB"
    },
    "11080": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "11081": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11082": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "11087": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11088": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2B6D"
    },
    "11091": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11092": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17249,
        17259
      ],
      "op": "DUP5",
      "path": "27"
    },
    "11093": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17249,
        17259
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11094": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "11095": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11102": {
      "op": "SHL"
    },
    "11103": {
      "op": "SUB"
    },
    "11104": {
      "op": "NOT"
    },
    "11105": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11107": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "11108": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "11109": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11110": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11112": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11113": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "11116": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11117": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11118": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "11120": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11122": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11123": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11124": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "11125": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "11126": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11127": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "11128": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "11129": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "11130": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11131": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11132": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11133": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2B8A"
    },
    "11136": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11137": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11138": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11140": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11141": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "11142": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11143": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11145": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "11146": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11147": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11148": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11149": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11150": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11151": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11153": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11154": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11155": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11157": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "11158": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11160": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11161": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11162": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "11163": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11164": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11165": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11166": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11168": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11169": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11170": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11171": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11172": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11173": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2BAE"
    },
    "11176": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11177": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11178": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "11181": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11182": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11183": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2BCA"
    },
    "11186": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11187": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11189": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11196": {
      "op": "SHL"
    },
    "11197": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11198": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11199": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11201": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "11202": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "11205": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11206": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "11209": {
      "fn": "Vault.setHarvestFeePercent",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11210": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11211": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17354,
        17358
      ],
      "op": "PUSH8",
      "path": "27",
      "statement": 112,
      "value": "0xDE0B6B3A7640000"
    },
    "11220": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17337,
        17350
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11221": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17337,
        17358
      ],
      "op": "GT",
      "path": "27"
    },
    "11222": {
      "branch": 209,
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17337,
        17358
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11223": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C2D"
    },
    "11226": {
      "branch": 209,
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11227": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11229": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11236": {
      "op": "SHL"
    },
    "11237": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11238": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11241": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11243": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11244": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "ADD",
      "path": "27"
    },
    "11245": {
      "op": "MSTORE"
    },
    "11246": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11250": {
      "op": "DUP3"
    },
    "11251": {
      "op": "ADD"
    },
    "11252": {
      "op": "MSTORE"
    },
    "11253": {
      "op": "PUSH32",
      "value": "0x7365744861727665737446656550657263656E743A3A4645455F544F4F5F4849"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11288": {
      "op": "DUP3"
    },
    "11289": {
      "op": "ADD"
    },
    "11290": {
      "op": "MSTORE"
    },
    "11291": {
      "op": "PUSH2",
      "value": "0x8E9"
    },
    "11294": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "11296": {
      "op": "SHL"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11299": {
      "op": "DUP3"
    },
    "11300": {
      "op": "ADD"
    },
    "11301": {
      "op": "MSTORE"
    },
    "11302": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11304": {
      "op": "ADD"
    },
    "11305": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "11308": {
      "op": "JUMP"
    },
    "11309": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17329,
        17397
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11310": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17446,
        17463
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 113,
      "value": "0x9B"
    },
    "11312": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17446,
        17479
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11313": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17446,
        17479
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11314": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17446,
        17479
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "11315": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17495,
        17534
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 114,
      "value": "0x40"
    },
    "11317": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17495,
        17534
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11318": {
      "op": "DUP3"
    },
    "11319": {
      "op": "DUP2"
    },
    "11320": {
      "op": "MSTORE"
    },
    "11321": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17495,
        17534
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xC2930745C0414DCBC7EBF3FEA0D713C9B1F0D69DD75345906FCF43AE322AD578"
    },
    "11354": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17495,
        17534
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11357": {
      "op": "ADD"
    },
    "11358": {
      "fn": "Vault.setHarvestFeePercent",
      "offset": [
        17495,
        17534
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBC6"
    },
    "11361": {
      "op": "JUMP"
    },
    "11362": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11363": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "11365": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "11366": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11368": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11369": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "11374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11376": {
      "op": "SHL"
    },
    "11377": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11378": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11379": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16837,
        16847
      ],
      "op": "CALLER",
      "path": "27"
    },
    "11380": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16837,
        16847
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11387": {
      "op": "SHL"
    },
    "11388": {
      "op": "SUB"
    },
    "11389": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "11390": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11391": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "11396": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11397": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CA2"
    },
    "11400": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11401": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16837,
        16847
      ],
      "op": "DUP5",
      "path": "27"
    },
    "11402": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16837,
        16847
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11403": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "11404": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11411": {
      "op": "SHL"
    },
    "11412": {
      "op": "SUB"
    },
    "11413": {
      "op": "NOT"
    },
    "11414": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11416": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "11417": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "11418": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11419": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11421": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11422": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "11425": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11426": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11427": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "11429": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11431": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11432": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11433": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "11434": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "11435": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11436": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "11437": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "11438": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "11439": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11440": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11441": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11442": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CBF"
    },
    "11445": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11446": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11447": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11449": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11450": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "11451": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11452": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11454": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "11455": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11456": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11457": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11458": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11459": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11460": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11462": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11463": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11464": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11466": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "11467": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11469": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11470": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11471": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "11472": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11473": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11474": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11475": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11477": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11478": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11479": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11480": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11481": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11482": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CE3"
    },
    "11485": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11486": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11487": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "11490": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11491": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11492": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CFF"
    },
    "11495": {
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11496": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11498": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11505": {
      "op": "SHL"
    },
    "11506": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11507": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11508": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11510": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "11511": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "11514": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11515": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "11518": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11519": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11520": {
      "op": "POP"
    },
    "11521": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16859,
        16872
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 115,
      "value": "0x97"
    },
    "11523": {
      "fn": "Vault.setBlocksPerYear",
      "offset": [
        16859,
        16881
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "11524": {
      "fn": "Vault.setBlocksPerYear",
      "jump": "o",
      "offset": [
        16773,
        16888
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11525": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11526": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x98"
    },
    "11528": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "11529": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11531": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11532": {
      "op": "PUSH4",
      "value": "0xB7009613"
    },
    "11537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11539": {
      "op": "SHL"
    },
    "11540": {
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11541": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11542": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22253,
        22263
      ],
      "op": "CALLER",
      "path": "27"
    },
    "11543": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22253,
        22263
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11550": {
      "op": "SHL"
    },
    "11551": {
      "op": "SUB"
    },
    "11552": {
      "offset": [
        12457,
        12461
      ],
      "op": "AND",
      "path": "27"
    },
    "11553": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12461
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11554": {
      "offset": [
        12457,
        12469
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB7009613"
    },
    "11559": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12469
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11560": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D45"
    },
    "11563": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11564": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22253,
        22263
      ],
      "op": "DUP5",
      "path": "27"
    },
    "11565": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22253,
        22263
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11566": {
      "offset": [
        12484,
        12488
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "11567": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12484,
        12488
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11574": {
      "op": "SHL"
    },
    "11575": {
      "op": "SUB"
    },
    "11576": {
      "op": "NOT"
    },
    "11577": {
      "offset": [
        12457,
        12461
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11579": {
      "offset": [
        12491,
        12498
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "11580": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "AND",
      "path": "27"
    },
    "11581": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12491,
        12498
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11582": {
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11584": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11585": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4576"
    },
    "11588": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11589": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11590": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "11592": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11594": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11595": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11596": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP4",
      "path": "27"
    },
    "11597": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SUB",
      "path": "27"
    },
    "11598": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11599": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP7",
      "path": "27"
    },
    "11600": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "GAS",
      "path": "27"
    },
    "11601": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "11602": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11603": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11604": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11605": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D62"
    },
    "11608": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11609": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11610": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11612": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11613": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "11614": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11615": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11617": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "REVERT",
      "path": "27"
    },
    "11618": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11619": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11620": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11621": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11622": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11623": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11625": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11626": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11627": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11629": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "NOT",
      "path": "27"
    },
    "11630": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11632": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11633": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11634": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "AND",
      "path": "27"
    },
    "11635": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11636": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11637": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11638": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11640": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11641": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "POP",
      "path": "27"
    },
    "11642": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11643": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "ADD",
      "path": "27"
    },
    "11644": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11645": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D86"
    },
    "11648": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11649": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11650": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45A3"
    },
    "11653": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11654": {
      "branch": 210,
      "fn": "Vault.trustStrategy",
      "offset": [
        12457,
        12499
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11655": {
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2DA2"
    },
    "11658": {
      "branch": 210,
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11659": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11661": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11668": {
      "op": "SHL"
    },
    "11669": {
      "offset": [
        12449,
        12516
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11670": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11671": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11673": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "ADD",
      "path": "27"
    },
    "11674": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "11677": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11678": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x45C5"
    },
    "11681": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11682": {
      "fn": "Vault.trustStrategy",
      "offset": [
        12449,
        12516
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11683": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 116,
      "value": "0x99"
    },
    "11685": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "11686": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11688": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11689": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11690": {
      "op": "PUSH4",
      "value": "0x6F307DC3"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11697": {
      "op": "SHL"
    },
    "11698": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11699": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11700": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11701": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11708": {
      "op": "SHL"
    },
    "11709": {
      "op": "SUB"
    },
    "11710": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "11711": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "DUP4",
      "path": "27"
    },
    "11712": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "AND",
      "path": "27"
    },
    "11713": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22484,
        22494
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "11714": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "DUP6",
      "path": "27"
    },
    "11715": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "AND",
      "path": "27"
    },
    "11716": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11717": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6F307DC3"
    },
    "11722": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11723": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11725": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11726": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP4",
      "path": "27"
    },
    "11727": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ADD",
      "path": "27"
    },
    "11728": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "11729": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "11731": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "11732": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11733": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11734": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11735": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11736": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SUB",
      "path": "27"
    },
    "11737": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ADD",
      "path": "27"
    },
    "11738": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11739": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22478
      ],
      "op": "DUP7",
      "path": "27"
    },
    "11740": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "GAS",
      "path": "27"
    },
    "11741": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "11742": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11743": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11744": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "11745": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2DEE"
    },
    "11748": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11749": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11750": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11752": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11753": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "11754": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11755": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11757": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "REVERT",
      "path": "27"
    },
    "11758": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11759": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "POP",
      "path": "27"
    },
    "11760": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "POP",
      "path": "27"
    },
    "11761": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "POP",
      "path": "27"
    },
    "11762": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "POP",
      "path": "27"
    },
    "11763": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11765": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11766": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "11767": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11769": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "NOT",
      "path": "27"
    },
    "11770": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "11772": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11773": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ADD",
      "path": "27"
    },
    "11774": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "AND",
      "path": "27"
    },
    "11775": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11776": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ADD",
      "path": "27"
    },
    "11777": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11778": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11780": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11781": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "POP",
      "path": "27"
    },
    "11782": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11783": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "ADD",
      "path": "27"
    },
    "11784": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11785": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2E12"
    },
    "11788": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11789": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11790": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x47C3"
    },
    "11793": {
      "fn": "Vault.trustStrategy",
      "jump": "i",
      "offset": [
        22459,
        22480
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11794": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22480
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11801": {
      "op": "SHL"
    },
    "11802": {
      "op": "SUB"
    },
    "11803": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22494
      ],
      "op": "AND",
      "path": "27"
    },
    "11804": {
      "branch": 211,
      "fn": "Vault.trustStrategy",
      "offset": [
        22459,
        22494
      ],
      "op": "EQ",
      "path": "27"
    },
    "11805": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2E68"
    },
    "11808": {
      "branch": 211,
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "11809": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11811": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "11812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11818": {
      "op": "SHL"
    },
    "11819": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11820": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11823": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "11825": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11826": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "ADD",
      "path": "27"
    },
    "11827": {
      "op": "MSTORE"
    },
    "11828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11832": {
      "op": "DUP3"
    },
    "11833": {
      "op": "ADD"
    },
    "11834": {
      "op": "MSTORE"
    },
    "11835": {
      "op": "PUSH32",
      "value": "0x747275737453747261746567793A3A57524F4E475F554E4445524C59494E4700"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11870": {
      "op": "DUP3"
    },
    "11871": {
      "op": "ADD"
    },
    "11872": {
      "op": "MSTORE"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11875": {
      "op": "ADD"
    },
    "11876": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "11879": {
      "op": "JUMP"
    },
    "11880": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22451,
        22530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11887": {
      "op": "SHL"
    },
    "11888": {
      "op": "SUB"
    },
    "11889": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 117
    },
    "11890": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "AND",
      "path": "27"
    },
    "11891": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "11893": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11894": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "DUP2",
      "path": "27"
    },
    "11895": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11896": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22598
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA1"
    },
    "11898": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "11900": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "11901": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "11903": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11904": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "DUP3",
      "path": "27"
    },
    "11905": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "11906": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "11907": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "11908": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11910": {
      "op": "NOT"
    },
    "11911": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "AND",
      "path": "27"
    },
    "11912": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22619,
        22623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "11914": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "OR",
      "path": "27"
    },
    "11915": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11916": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22623
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "11917": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22639,
        22664
      ],
      "op": "MLOAD",
      "path": "27",
      "statement": 118
    },
    "11918": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22639,
        22664
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x1EECB33217FCE2D414C96C97C7E082F4557817585C876A72ECA5305AFB15F1F1"
    },
    "11951": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22639,
        22664
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "11952": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22583,
        22608
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "11953": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22639,
        22664
      ],
      "op": "LOG2",
      "path": "27"
    },
    "11954": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "POP",
      "path": "27"
    },
    "11955": {
      "fn": "Vault.trustStrategy",
      "offset": [
        22188,
        22671
      ],
      "op": "POP",
      "path": "27"
    },
    "11956": {
      "fn": "Vault.trustStrategy",
      "jump": "o",
      "offset": [
        22188,
        22671
      ],
      "op": "JUMP",
      "path": "27"
    },
    "11957": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "11958": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11960": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11961": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "11964": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11965": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "11966": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "11968": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "11969": {
      "fn": "Vault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11970": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ECE"
    },
    "11973": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11974": {
      "op": "POP"
    },
    "11975": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11977": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11978": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "11980": {
      "fn": "Vault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "11981": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11982": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11983": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EEA"
    },
    "11986": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11987": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11989": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11996": {
      "op": "SHL"
    },
    "11997": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11998": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11999": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12001": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "12002": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "12005": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12006": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "12009": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12010": {
      "fn": "Vault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12011": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12013": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "12014": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "12017": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12018": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "12019": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "12021": {
      "fn": "Vault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "12022": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12023": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12024": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12025": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F0C"
    },
    "12028": {
      "fn": "Vault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12029": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12031": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12032": {
      "fn": "Vault.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "12033": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12036": {
      "op": "NOT"
    },
    "12037": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "12038": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "12041": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "12042": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12043": {
      "fn": "Vault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "12044": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12045": {
      "fn": "Vault.initialize",
      "offset": [
        14760,
        15043
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 119,
      "value": "0x307F"
    },
    "12048": {
      "fn": "Vault.initialize",
      "offset": [
        14786,
        14797
      ],
      "op": "DUP6",
      "path": "27"
    },
    "12049": {
      "fn": "Vault.initialize",
      "offset": [
        14811,
        14816
      ],
      "op": "DUP6",
      "path": "27"
    },
    "12050": {
      "fn": "Vault.initialize",
      "offset": [
        14830,
        14849
      ],
      "op": "DUP6",
      "path": "27"
    },
    "12051": {
      "fn": "Vault.initialize",
      "offset": [
        14863,
        14879
      ],
      "op": "DUP6",
      "path": "27"
    },
    "12052": {
      "offset": [
        1661,
        1675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12054": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12055": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12056": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12058": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "ADD",
      "path": "27"
    },
    "12059": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12061": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12062": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12063": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x5"
    },
    "12065": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12066": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12067": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12069": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "ADD",
      "path": "27"
    },
    "12070": {
      "op": "PUSH5",
      "value": "0x20BABC379"
    },
    "12076": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "12078": {
      "op": "SHL"
    },
    "12079": {
      "offset": [
        1661,
        1675
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12080": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12081": {
      "fn": "Vault.initialize",
      "offset": [
        1661,
        1675
      ],
      "op": "POP",
      "path": "27"
    },
    "12082": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14940
      ],
      "op": "DUP11",
      "path": "27"
    },
    "12083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12089": {
      "op": "SHL"
    },
    "12090": {
      "op": "SUB"
    },
    "12091": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14945
      ],
      "op": "AND",
      "path": "27"
    },
    "12092": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14945
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6FDDE03"
    },
    "12097": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12099": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12100": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12101": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "12106": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "AND",
      "path": "27"
    },
    "12107": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "12109": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SHL",
      "path": "27"
    },
    "12110": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12111": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12112": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "12114": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ADD",
      "path": "27"
    },
    "12115": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12117": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12119": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12120": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12121": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP4",
      "path": "27"
    },
    "12122": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SUB",
      "path": "27"
    },
    "12123": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12124": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP7",
      "path": "27"
    },
    "12125": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "GAS",
      "path": "27"
    },
    "12126": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "12127": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "12128": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12129": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "12130": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2F6F"
    },
    "12133": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "12134": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12135": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12137": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12138": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "12139": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12140": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12142": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "REVERT",
      "path": "27"
    },
    "12143": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12144": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "POP",
      "path": "27"
    },
    "12145": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "POP",
      "path": "27"
    },
    "12146": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "POP",
      "path": "27"
    },
    "12147": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "POP",
      "path": "27"
    },
    "12148": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12150": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12151": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12152": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12154": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP3",
      "path": "27"
    },
    "12155": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "12156": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "12158": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12159": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12160": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12161": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ADD",
      "path": "27"
    },
    "12162": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12164": {
      "op": "NOT"
    },
    "12165": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "AND",
      "path": "27"
    },
    "12166": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP3",
      "path": "27"
    },
    "12167": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ADD",
      "path": "27"
    },
    "12168": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12170": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12171": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2F97"
    },
    "12174": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "12175": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12176": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12177": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "ADD",
      "path": "27"
    },
    "12178": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12179": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4844"
    },
    "12182": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14929,
        14947
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12183": {
      "fn": "Vault.initialize",
      "offset": [
        14929,
        14947
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12184": {
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12186": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12187": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12188": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12190": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "ADD",
      "path": "27"
    },
    "12191": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12193": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12194": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12195": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "12197": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12198": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12199": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12201": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "ADD",
      "path": "27"
    },
    "12202": {
      "op": "PUSH6",
      "value": "0x815985D5B1D"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "12211": {
      "op": "SHL"
    },
    "12212": {
      "offset": [
        1764,
        1779
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12213": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12214": {
      "fn": "Vault.initialize",
      "offset": [
        1764,
        1779
      ],
      "op": "POP",
      "path": "27"
    },
    "12215": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12217": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12218": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12220": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "ADD",
      "path": "27"
    },
    "12221": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2FC8"
    },
    "12224": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "12225": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "12226": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "12227": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12228": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x48E5"
    },
    "12231": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14900,
        14959
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12232": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12233": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12235": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12236": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12238": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12239": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "DUP4",
      "path": "27"
    },
    "12240": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SUB",
      "path": "27"
    },
    "12241": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SUB",
      "path": "27"
    },
    "12242": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12243": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12244": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12245": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12247": {
      "fn": "Vault.initialize",
      "offset": [
        14900,
        14959
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12248": {
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12250": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12251": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12252": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12254": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "ADD",
      "path": "27"
    },
    "12255": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12257": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12258": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12259": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "12261": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12262": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12263": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12265": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "ADD",
      "path": "27"
    },
    "12266": {
      "op": "PUSH4",
      "value": "0x6175786F"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12273": {
      "op": "SHL"
    },
    "12274": {
      "offset": [
        1559,
        1572
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12275": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12276": {
      "fn": "Vault.initialize",
      "offset": [
        1559,
        1572
      ],
      "op": "POP",
      "path": "27"
    },
    "12277": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15021
      ],
      "op": "DUP12",
      "path": "27"
    },
    "12278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12284": {
      "op": "SHL"
    },
    "12285": {
      "op": "SUB"
    },
    "12286": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15028
      ],
      "op": "AND",
      "path": "27"
    },
    "12287": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15028
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95D89B41"
    },
    "12292": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12294": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12295": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12296": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "12301": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "AND",
      "path": "27"
    },
    "12302": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "12304": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SHL",
      "path": "27"
    },
    "12305": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12306": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12307": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "12309": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ADD",
      "path": "27"
    },
    "12310": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12312": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12314": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12315": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12316": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP4",
      "path": "27"
    },
    "12317": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SUB",
      "path": "27"
    },
    "12318": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12319": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP7",
      "path": "27"
    },
    "12320": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "GAS",
      "path": "27"
    },
    "12321": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "12322": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "12323": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12324": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "12325": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3032"
    },
    "12328": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "12329": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12330": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12332": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP1",
      "path": "27"
    },
    "12333": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "12334": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12335": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12337": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "REVERT",
      "path": "27"
    },
    "12338": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12339": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "POP",
      "path": "27"
    },
    "12340": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "POP",
      "path": "27"
    },
    "12341": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "POP",
      "path": "27"
    },
    "12342": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "POP",
      "path": "27"
    },
    "12343": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12345": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12346": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12347": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "12349": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP3",
      "path": "27"
    },
    "12350": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "12351": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "12353": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "12354": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12355": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12356": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ADD",
      "path": "27"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12359": {
      "op": "NOT"
    },
    "12360": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "AND",
      "path": "27"
    },
    "12361": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP3",
      "path": "27"
    },
    "12362": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ADD",
      "path": "27"
    },
    "12363": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12365": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12366": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x305A"
    },
    "12369": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "12370": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12371": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12372": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "ADD",
      "path": "27"
    },
    "12373": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12374": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4844"
    },
    "12377": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        15010,
        15030
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12378": {
      "fn": "Vault.initialize",
      "offset": [
        15010,
        15030
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12379": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12381": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12382": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12384": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "ADD",
      "path": "27"
    },
    "12385": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x306B"
    },
    "12388": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "12389": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "12390": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12391": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4928"
    },
    "12394": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14981,
        15032
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12395": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12396": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12398": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "12399": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "12401": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12402": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "DUP4",
      "path": "27"
    },
    "12403": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SUB",
      "path": "27"
    },
    "12404": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SUB",
      "path": "27"
    },
    "12405": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "DUP2",
      "path": "27"
    },
    "12406": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12407": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "12408": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "12410": {
      "fn": "Vault.initialize",
      "offset": [
        14981,
        15032
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "12411": {
      "fn": "Vault.initialize",
      "offset": [
        14760,
        14772
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3AAD"
    },
    "12414": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        14760,
        15043
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12415": {
      "fn": "Vault.initialize",
      "offset": [
        14760,
        15043
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "12416": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12417": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12418": {
      "fn": "Vault.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3091"
    },
    "12421": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12422": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12424": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12425": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "12426": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "12429": {
      "op": "NOT"
    },
    "12430": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "12431": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12432": {
      "fn": "Vault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "12433": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12434": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "12435": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "POP",
      "path": "27"
    },
    "12436": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "POP",
      "path": "27"
    },
    "12437": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "POP",
      "path": "27"
    },
    "12438": {
      "fn": "Vault.initialize",
      "offset": [
        14547,
        15050
      ],
      "op": "POP",
      "path": "27"
    },
    "12439": {
      "fn": "Vault.initialize",
      "jump": "o",
      "offset": [
        14547,
        15050
      ],
      "op": "JUMP",
      "path": "27"
    },
    "12440": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10325,
        10695
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12447": {
      "op": "SHL"
    },
    "12448": {
      "op": "SUB"
    },
    "12449": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10475
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 120
    },
    "12450": {
      "branch": 221,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10475
      ],
      "op": "AND",
      "path": "6"
    },
    "12451": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30FA"
    },
    "12454": {
      "branch": 221,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12455": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12457": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "12458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12464": {
      "op": "SHL"
    },
    "12465": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12466": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12469": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "12471": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12472": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "ADD",
      "path": "6"
    },
    "12473": {
      "op": "MSTORE"
    },
    "12474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12476": {
      "op": "DUP1"
    },
    "12477": {
      "op": "DUP3"
    },
    "12478": {
      "op": "ADD"
    },
    "12479": {
      "op": "MSTORE"
    },
    "12480": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12515": {
      "op": "DUP3"
    },
    "12516": {
      "op": "ADD"
    },
    "12517": {
      "op": "MSTORE"
    },
    "12518": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "12523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12525": {
      "op": "SHL"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12528": {
      "op": "DUP3"
    },
    "12529": {
      "op": "ADD"
    },
    "12530": {
      "op": "MSTORE"
    },
    "12531": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12533": {
      "op": "ADD"
    },
    "12534": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "12537": {
      "op": "JUMP"
    },
    "12538": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10448,
        10516
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12545": {
      "op": "SHL"
    },
    "12546": {
      "op": "SUB"
    },
    "12547": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10534,
        10555
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 121
    },
    "12548": {
      "branch": 222,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10534,
        10555
      ],
      "op": "AND",
      "path": "6"
    },
    "12549": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x315B"
    },
    "12552": {
      "branch": 222,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12553": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12555": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "12556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12562": {
      "op": "SHL"
    },
    "12563": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12564": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12567": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "12569": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12570": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "ADD",
      "path": "6"
    },
    "12571": {
      "op": "MSTORE"
    },
    "12572": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12574": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12576": {
      "op": "DUP3"
    },
    "12577": {
      "op": "ADD"
    },
    "12578": {
      "op": "MSTORE"
    },
    "12579": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12614": {
      "op": "DUP3"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "op": "MSTORE"
    },
    "12617": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "12620": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12622": {
      "op": "SHL"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12625": {
      "op": "DUP3"
    },
    "12626": {
      "op": "ADD"
    },
    "12627": {
      "op": "MSTORE"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12630": {
      "op": "ADD"
    },
    "12631": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "12634": {
      "op": "JUMP"
    },
    "12635": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10526,
        10594
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12642": {
      "op": "SHL"
    },
    "12643": {
      "op": "SUB"
    },
    "12644": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 122
    },
    "12645": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12646": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "AND",
      "path": "6"
    },
    "12647": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12649": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12650": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12651": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12652": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x34"
    },
    "12654": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12656": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12657": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12658": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12659": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12661": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12662": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12663": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10623
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12664": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "12665": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP8",
      "path": "6"
    },
    "12666": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "AND",
      "path": "6"
    },
    "12667": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12668": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12669": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12670": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "12671": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12672": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12673": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12674": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12675": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12676": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10632
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12677": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "DUP6",
      "path": "6"
    },
    "12678": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12679": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10605,
        10641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12680": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 123
    },
    "12681": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "12682": {
      "op": "DUP5"
    },
    "12683": {
      "op": "DUP2"
    },
    "12684": {
      "op": "MSTORE"
    },
    "12685": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "12718": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12719": {
      "op": "ADD"
    },
    "12720": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10656,
        10688
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D3"
    },
    "12723": {
      "op": "JUMP"
    },
    "12724": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        818,
        1320
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "12725": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "DUP3",
      "path": "32"
    },
    "12726": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "DUP3",
      "path": "32"
    },
    "12727": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1015,
        1024
      ],
      "op": "MUL",
      "path": "32"
    },
    "12728": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1116,
        1125
      ],
      "op": "DUP4",
      "path": "32"
    },
    "12729": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1116,
        1125
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "12730": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DUP5",
      "path": "32"
    },
    "12731": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DUP3",
      "path": "32"
    },
    "12732": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1130,
        1139
      ],
      "op": "DIV",
      "path": "32"
    },
    "12733": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1127,
        1143
      ],
      "op": "DUP5",
      "path": "32"
    },
    "12734": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1127,
        1143
      ],
      "op": "EQ",
      "path": "32"
    },
    "12735": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1113,
        1144
      ],
      "op": "OR",
      "path": "32"
    },
    "12736": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x31C8"
    },
    "12739": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "12740": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1174,
        1175
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "12742": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1171,
        1172
      ],
      "op": "DUP1",
      "path": "32"
    },
    "12743": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1164,
        1176
      ],
      "op": "REVERT",
      "path": "32"
    },
    "12744": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1103,
        1190
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "12745": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1288,
        1304
      ],
      "op": "DIV",
      "path": "32"
    },
    "12746": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        1288,
        1304
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "12747": {
      "fn": "FixedPointMathLib.fmul",
      "offset": [
        818,
        1320
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "12748": {
      "op": "POP"
    },
    "12749": {
      "op": "POP"
    },
    "12750": {
      "fn": "FixedPointMathLib.fmul",
      "jump": "o",
      "offset": [
        818,
        1320
      ],
      "op": "JUMP",
      "path": "32"
    },
    "12751": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9326,
        9902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12758": {
      "op": "SHL"
    },
    "12759": {
      "op": "SUB"
    },
    "12760": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9409,
        9430
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 124
    },
    "12761": {
      "branch": 223,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9409,
        9430
      ],
      "op": "AND",
      "path": "6"
    },
    "12762": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x322F"
    },
    "12765": {
      "branch": 223,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12766": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12768": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "12769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12775": {
      "op": "SHL"
    },
    "12776": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12777": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12780": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "12782": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12783": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "ADD",
      "path": "6"
    },
    "12784": {
      "op": "MSTORE"
    },
    "12785": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12789": {
      "op": "DUP3"
    },
    "12790": {
      "op": "ADD"
    },
    "12791": {
      "op": "MSTORE"
    },
    "12792": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12827": {
      "op": "DUP3"
    },
    "12828": {
      "op": "ADD"
    },
    "12829": {
      "op": "MSTORE"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "12832": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12834": {
      "op": "SHL"
    },
    "12835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12837": {
      "op": "DUP3"
    },
    "12838": {
      "op": "ADD"
    },
    "12839": {
      "op": "MSTORE"
    },
    "12840": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12842": {
      "op": "ADD"
    },
    "12843": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "12846": {
      "op": "JUMP"
    },
    "12847": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9401,
        9468
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12854": {
      "op": "SHL"
    },
    "12855": {
      "op": "SUB"
    },
    "12856": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12857": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "AND",
      "path": "6"
    },
    "12858": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9539,
        9561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12860": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12861": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12862": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12863": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "12865": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12867": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12868": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12870": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12871": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12872": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9564,
        9582
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "12873": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 125
    },
    "12874": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12875": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "LT",
      "path": "6"
    },
    "12876": {
      "branch": 224,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9600,
        9624
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "12877": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32A3"
    },
    "12880": {
      "branch": 224,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12881": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12883": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "12884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12890": {
      "op": "SHL"
    },
    "12891": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12892": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12895": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "12897": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12898": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "ADD",
      "path": "6"
    },
    "12899": {
      "op": "MSTORE"
    },
    "12900": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12904": {
      "op": "DUP3"
    },
    "12905": {
      "op": "ADD"
    },
    "12906": {
      "op": "MSTORE"
    },
    "12907": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "12940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12942": {
      "op": "DUP3"
    },
    "12943": {
      "op": "ADD"
    },
    "12944": {
      "op": "MSTORE"
    },
    "12945": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "12948": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12950": {
      "op": "SHL"
    },
    "12951": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12953": {
      "op": "DUP3"
    },
    "12954": {
      "op": "ADD"
    },
    "12955": {
      "op": "MSTORE"
    },
    "12956": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12958": {
      "op": "ADD"
    },
    "12959": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "12962": {
      "op": "JUMP"
    },
    "12963": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9592,
        9663
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12970": {
      "op": "SHL"
    },
    "12971": {
      "op": "SUB"
    },
    "12972": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 126
    },
    "12973": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "AND",
      "path": "6"
    },
    "12974": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12976": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12977": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12978": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12979": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9706
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "12981": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12983": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12984": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12986": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12987": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12988": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12989": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12990": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9718,
        9741
      ],
      "op": "SUB",
      "path": "6"
    },
    "12991": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12992": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9741
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12993": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9773
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 127,
      "value": "0x35"
    },
    "12995": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12996": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "12997": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12998": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "12999": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9697,
        9715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13000": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32D2"
    },
    "13003": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13004": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "DUP5",
      "path": "6"
    },
    "13005": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9735,
        9741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13006": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4647"
    },
    "13009": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9761,
        9783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "13010": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13011": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13012": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "13013": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9761,
        9783
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "13014": {
      "op": "POP"
    },
    "13015": {
      "op": "POP"
    },
    "13016": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 128,
      "value": "0x40"
    },
    "13018": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13019": {
      "op": "DUP3"
    },
    "13020": {
      "op": "DUP2"
    },
    "13021": {
      "op": "MSTORE"
    },
    "13022": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9825,
        9826
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "13024": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9825,
        9826
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13031": {
      "op": "SHL"
    },
    "13032": {
      "op": "SUB"
    },
    "13033": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "DUP6",
      "path": "6"
    },
    "13034": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "AND",
      "path": "6"
    },
    "13035": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13036": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "13069": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13072": {
      "op": "ADD"
    },
    "13073": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13075": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13076": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "DUP1",
      "path": "6"
    },
    "13077": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "13078": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SUB",
      "path": "6"
    },
    "13079": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13080": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9799,
        9836
      ],
      "op": "LOG3",
      "path": "6"
    },
    "13081": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "13082": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "13083": {
      "fn": "Vault.withdrawFromStrategy",
      "offset": [
        35883,
        36864
      ],
      "op": "POP",
      "path": "27"
    },
    "13084": {
      "fn": "Vault.withdrawFromStrategy",
      "jump": "o",
      "offset": [
        35883,
        36864
      ],
      "op": "JUMP",
      "path": "27"
    },
    "13085": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        678,
        894
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "13086": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 129,
      "value": "0x40"
    },
    "13088": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13095": {
      "op": "SHL"
    },
    "13096": {
      "op": "SUB"
    },
    "13097": {
      "op": "DUP4"
    },
    "13098": {
      "op": "AND"
    },
    "13099": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "13101": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP3",
      "path": "9"
    },
    "13102": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "13103": {
      "op": "MSTORE"
    },
    "13104": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13106": {
      "op": "DUP2"
    },
    "13107": {
      "op": "ADD"
    },
    "13108": {
      "op": "DUP3"
    },
    "13109": {
      "op": "SWAP1"
    },
    "13110": {
      "op": "MSTORE"
    },
    "13111": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        887
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21C8"
    },
    "13114": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        887
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13115": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        821,
        826
      ],
      "op": "DUP5",
      "path": "9"
    },
    "13116": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        821,
        826
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13117": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13124": {
      "op": "SHL"
    },
    "13125": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        851,
        874
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13128": {
      "op": "ADD"
    },
    "13129": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "13130": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "13132": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP1",
      "path": "9"
    },
    "13133": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13136": {
      "op": "NOT"
    },
    "13137": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "13138": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP5",
      "path": "9"
    },
    "13139": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SUB",
      "path": "9"
    },
    "13140": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "13141": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "13142": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "13143": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "13144": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13145": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "13146": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "13148": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "13149": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "ADD",
      "path": "9"
    },
    "13150": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "DUP1",
      "path": "9"
    },
    "13151": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13158": {
      "op": "SHL"
    },
    "13159": {
      "op": "SUB"
    },
    "13160": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "AND",
      "path": "9"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13167": {
      "op": "SHL"
    },
    "13168": {
      "op": "SUB"
    },
    "13169": {
      "op": "NOT"
    },
    "13170": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13171": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "13172": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "AND",
      "path": "9"
    },
    "13173": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "13174": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13175": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "13176": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "OR",
      "path": "9"
    },
    "13177": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "13178": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "13179": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        828,
        886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "13180": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        801,
        820
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3C8A"
    },
    "13183": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "jump": "i",
      "offset": [
        801,
        887
      ],
      "op": "JUMP",
      "path": "9"
    },
    "13184": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1326,
        1900
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "13185": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "DUP3",
      "path": "32"
    },
    "13186": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "DUP2",
      "path": "32"
    },
    "13187": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1530,
        1546
      ],
      "op": "MUL",
      "path": "32"
    },
    "13188": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1672,
        1681
      ],
      "op": "DUP3",
      "path": "32"
    },
    "13189": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1672,
        1681
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "13190": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1665,
        1682
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "13191": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1687,
        1696
      ],
      "op": "DUP5",
      "path": "32"
    },
    "13192": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1687,
        1696
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "13193": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DUP6",
      "path": "32"
    },
    "13194": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DUP4",
      "path": "32"
    },
    "13195": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1701,
        1710
      ],
      "op": "DIV",
      "path": "32"
    },
    "13196": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1698,
        1721
      ],
      "op": "DUP5",
      "path": "32"
    },
    "13197": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1698,
        1721
      ],
      "op": "EQ",
      "path": "32"
    },
    "13198": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1684,
        1722
      ],
      "op": "OR",
      "path": "32"
    },
    "13199": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1661,
        1723
      ],
      "op": "AND",
      "path": "32"
    },
    "13200": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3398"
    },
    "13203": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "13204": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "13206": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1750,
        1751
      ],
      "op": "DUP1",
      "path": "32"
    },
    "13207": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1743,
        1755
      ],
      "op": "REVERT",
      "path": "32"
    },
    "13208": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1651,
        1769
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "13209": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "13210": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "13211": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "13212": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "DIV",
      "path": "32"
    },
    "13213": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1875,
        1884
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "13214": {
      "fn": "FixedPointMathLib.fdiv",
      "offset": [
        1326,
        1900
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "13215": {
      "op": "POP"
    },
    "13216": {
      "op": "POP"
    },
    "13217": {
      "fn": "FixedPointMathLib.fdiv",
      "jump": "o",
      "offset": [
        1326,
        1900
      ],
      "op": "JUMP",
      "path": "32"
    },
    "13218": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13225": {
      "op": "SHL"
    },
    "13226": {
      "op": "SUB"
    },
    "13227": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7763,
        7783
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 130
    },
    "13228": {
      "branch": 225,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7763,
        7783
      ],
      "op": "AND",
      "path": "6"
    },
    "13229": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3406"
    },
    "13232": {
      "branch": 225,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13233": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13235": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13242": {
      "op": "SHL"
    },
    "13243": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13244": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13247": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "13249": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "DUP3",
      "path": "6"
    },
    "13250": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "ADD",
      "path": "6"
    },
    "13251": {
      "op": "MSTORE"
    },
    "13252": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13256": {
      "op": "DUP3"
    },
    "13257": {
      "op": "ADD"
    },
    "13258": {
      "op": "MSTORE"
    },
    "13259": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "13292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13294": {
      "op": "DUP3"
    },
    "13295": {
      "op": "ADD"
    },
    "13296": {
      "op": "MSTORE"
    },
    "13297": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "13303": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "13305": {
      "op": "SHL"
    },
    "13306": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13308": {
      "op": "DUP3"
    },
    "13309": {
      "op": "ADD"
    },
    "13310": {
      "op": "MSTORE"
    },
    "13311": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13313": {
      "op": "ADD"
    },
    "13314": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "13317": {
      "op": "JUMP"
    },
    "13318": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7755,
        7825
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13325": {
      "op": "SHL"
    },
    "13326": {
      "op": "SUB"
    },
    "13327": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7843,
        7866
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 131
    },
    "13328": {
      "branch": 226,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7843,
        7866
      ],
      "op": "AND",
      "path": "6"
    },
    "13329": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3468"
    },
    "13332": {
      "branch": 226,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13333": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13335": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13342": {
      "op": "SHL"
    },
    "13343": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13344": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13347": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "13349": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "DUP3",
      "path": "6"
    },
    "13350": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "ADD",
      "path": "6"
    },
    "13351": {
      "op": "MSTORE"
    },
    "13352": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "13354": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13356": {
      "op": "DUP3"
    },
    "13357": {
      "op": "ADD"
    },
    "13358": {
      "op": "MSTORE"
    },
    "13359": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "13392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13394": {
      "op": "DUP3"
    },
    "13395": {
      "op": "ADD"
    },
    "13396": {
      "op": "MSTORE"
    },
    "13397": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "13401": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "13403": {
      "op": "SHL"
    },
    "13404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13406": {
      "op": "DUP3"
    },
    "13407": {
      "op": "ADD"
    },
    "13408": {
      "op": "MSTORE"
    },
    "13409": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13411": {
      "op": "ADD"
    },
    "13412": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "13415": {
      "op": "JUMP"
    },
    "13416": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7835,
        7906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13423": {
      "op": "SHL"
    },
    "13424": {
      "op": "SUB"
    },
    "13425": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "DUP4",
      "path": "6"
    },
    "13426": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "AND",
      "path": "6"
    },
    "13427": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "13429": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13430": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13431": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13432": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "13434": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "13436": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13437": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13439": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13440": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "13441": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7999,
        8016
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "13442": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 132
    },
    "13443": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13444": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "LT",
      "path": "6"
    },
    "13445": {
      "branch": 227,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8034,
        8057
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "13446": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E0"
    },
    "13449": {
      "branch": 227,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13450": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13452": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13459": {
      "op": "SHL"
    },
    "13460": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13461": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13464": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "13466": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "DUP3",
      "path": "6"
    },
    "13467": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "ADD",
      "path": "6"
    },
    "13468": {
      "op": "MSTORE"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "13471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13473": {
      "op": "DUP3"
    },
    "13474": {
      "op": "ADD"
    },
    "13475": {
      "op": "MSTORE"
    },
    "13476": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13511": {
      "op": "DUP3"
    },
    "13512": {
      "op": "ADD"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "13521": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "13523": {
      "op": "SHL"
    },
    "13524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13526": {
      "op": "DUP3"
    },
    "13527": {
      "op": "ADD"
    },
    "13528": {
      "op": "MSTORE"
    },
    "13529": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13531": {
      "op": "ADD"
    },
    "13532": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "13535": {
      "op": "JUMP"
    },
    "13536": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8026,
        8100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13543": {
      "op": "SHL"
    },
    "13544": {
      "op": "SUB"
    },
    "13545": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 133
    },
    "13546": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP6",
      "path": "6"
    },
    "13547": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "AND",
      "path": "6"
    },
    "13548": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "13550": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13551": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13552": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13553": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8143
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "13555": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "13557": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13558": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13560": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "13561": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "DUP3",
      "path": "6"
    },
    "13562": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "13563": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "DUP6",
      "path": "6"
    },
    "13564": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "DUP6",
      "path": "6"
    },
    "13565": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8154,
        8176
      ],
      "op": "SUB",
      "path": "6"
    },
    "13566": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13567": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8176
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "13568": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 134
    },
    "13569": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP6",
      "path": "6"
    },
    "13570": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "AND",
      "path": "6"
    },
    "13571": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13572": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13573": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13574": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13575": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8216
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "13576": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "DUP1",
      "path": "6"
    },
    "13577": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "13578": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "DUP5",
      "path": "6"
    },
    "13579": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "13580": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8134,
        8151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13581": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3517"
    },
    "13584": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13585": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "DUP5",
      "path": "6"
    },
    "13586": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8170,
        8176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13587": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x465E"
    },
    "13590": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8196,
        8226
      ],
      "op": "JUMP",
      "path": "6"
    },
    "13591": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13592": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "13593": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "13594": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "13595": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13596": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13597": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "13598": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8226
      ],
      "op": "POP",
      "path": "6"
    },
    "13599": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8259,
        8268
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 135
    },
    "13600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13606": {
      "op": "SHL"
    },
    "13607": {
      "op": "SUB"
    },
    "13608": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "AND",
      "path": "6"
    },
    "13609": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8251,
        8257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13616": {
      "op": "SHL"
    },
    "13617": {
      "op": "SUB"
    },
    "13618": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "AND",
      "path": "6"
    },
    "13619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "13652": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8270,
        8276
      ],
      "op": "DUP5",
      "path": "6"
    },
    "13653": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13655": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13656": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3563"
    },
    "13659": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "13660": {
      "op": "DUP2"
    },
    "13661": {
      "op": "MSTORE"
    },
    "13662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13664": {
      "op": "ADD"
    },
    "13665": {
      "op": "SWAP1"
    },
    "13666": {
      "op": "JUMP"
    },
    "13667": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "13668": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "13671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "DUP1",
      "path": "6"
    },
    "13672": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "13673": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SUB",
      "path": "6"
    },
    "13674": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13675": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8242,
        8277
      ],
      "op": "LOG3",
      "path": "6"
    },
    "13676": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8288,
        8334
      ],
      "op": "JUMPDEST",
      "path": "6",
      "statement": 136
    },
    "13677": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "13678": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "13679": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "13680": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7628,
        8341
      ],
      "op": "POP",
      "path": "6"
    },
    "13681": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "o",
      "offset": [
        7628,
        8341
      ],
      "op": "JUMP",
      "path": "6"
    },
    "13682": {
      "fn": "Vault._deposit",
      "offset": [
        27605,
        28463
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13683": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "13685": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "13686": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "13688": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "13689": {
      "offset": [
        1623,
        1632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "13690": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35B8"
    },
    "13693": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13694": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13696": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13703": {
      "op": "SHL"
    },
    "13704": {
      "offset": [
        1615,
        1653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13705": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13708": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "13710": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13711": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "ADD",
      "path": "4"
    },
    "13712": {
      "op": "MSTORE"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13717": {
      "op": "DUP3"
    },
    "13718": {
      "op": "ADD"
    },
    "13719": {
      "op": "MSTORE"
    },
    "13720": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13739": {
      "op": "SHL"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13742": {
      "op": "DUP3"
    },
    "13743": {
      "op": "ADD"
    },
    "13744": {
      "op": "MSTORE"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13747": {
      "op": "ADD"
    },
    "13748": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF5"
    },
    "13751": {
      "op": "JUMP"
    },
    "13752": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "13753": {
      "fn": "Vault._deposit",
      "offset": [
        27748,
        27770
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "13755": {
      "fn": "Vault._deposit",
      "offset": [
        27810,
        27826
      ],
      "op": "DUP2",
      "path": "27"
    },
    "13756": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27807
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x35DD"
    },
    "13759": {
      "fn": "Vault._deposit",
      "offset": [
        27793,
        27806
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x490"
    },
    "13762": {
      "fn": "Vault._deposit",
      "offset": [
        27803,
        27805
      ],
      "op": "DUP7",
      "path": "27"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13769": {
      "op": "SHL"
    },
    "13770": {
      "op": "SUB"
    },
    "13771": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "AND",
      "path": "6"
    },
    "13772": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3773,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "13774": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13775": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "DUP2",
      "path": "6"
    },
    "13776": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13777": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "13779": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "13781": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "13782": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "13784": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13785": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "13786": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "13787": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3799,
        3817
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "13788": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3699,
        3824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "13789": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27807
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13790": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27826
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x35E7"
    },
    "13793": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27826
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "13794": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27826
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "13795": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27826
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "13798": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        27773,
        27826
      ],
      "op": "JUMP",
      "path": "27"
    },
    "13799": {
      "fn": "Vault._deposit",
      "offset": [
        27773,
        27826
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13800": {
      "fn": "Vault._deposit",
      "offset": [
        27748,
        27826
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "13801": {
      "fn": "Vault._deposit",
      "offset": [
        27748,
        27826
      ],
      "op": "POP",
      "path": "27"
    },
    "13802": {
      "fn": "Vault._deposit",
      "offset": [
        27836,
        27859
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "13804": {
      "fn": "Vault._deposit",
      "offset": [
        27882,
        27898
      ],
      "op": "DUP3",
      "path": "27"
    },
    "13805": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27879
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x35F4"
    },
    "13808": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27877
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24DC"
    },
    "13811": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        27862,
        27879
      ],
      "op": "JUMP",
      "path": "27"
    },
    "13812": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27879
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13813": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27898
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x35FE"
    },
    "13816": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27898
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "13817": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27898
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "13818": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27898
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x465E"
    },
    "13821": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        27862,
        27898
      ],
      "op": "JUMP",
      "path": "27"
    },
    "13822": {
      "fn": "Vault._deposit",
      "offset": [
        27862,
        27898
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13823": {
      "fn": "Vault._deposit",
      "offset": [
        27836,
        27898
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "13824": {
      "fn": "Vault._deposit",
      "offset": [
        27836,
        27898
      ],
      "op": "POP",
      "path": "27"
    },
    "13825": {
      "fn": "Vault._deposit",
      "offset": [
        27935,
        27951
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 137,
      "value": "0xAB"
    },
    "13827": {
      "fn": "Vault._deposit",
      "offset": [
        27935,
        27951
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "13828": {
      "fn": "Vault._deposit",
      "offset": [
        27917,
        27931
      ],
      "op": "DUP3",
      "path": "27"
    },
    "13829": {
      "fn": "Vault._deposit",
      "offset": [
        27917,
        27951
      ],
      "op": "GT",
      "path": "27"
    },
    "13830": {
      "branch": 212,
      "fn": "Vault._deposit",
      "offset": [
        27917,
        27951
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "13831": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3660"
    },
    "13834": {
      "branch": 212,
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "13835": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "13837": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "13838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13844": {
      "op": "SHL"
    },
    "13845": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "DUP2",
      "path": "27"
    },
    "13846": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13849": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "13851": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "DUP3",
      "path": "27"
    },
    "13852": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "ADD",
      "path": "27"
    },
    "13853": {
      "op": "MSTORE"
    },
    "13854": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13858": {
      "op": "DUP3"
    },
    "13859": {
      "op": "ADD"
    },
    "13860": {
      "op": "MSTORE"
    },
    "13861": {
      "op": "PUSH32",
      "value": "0x5F6465706F7369743A3A555345525F4445504F5349545F4C494D4954535F5245"
    },
    "13894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13896": {
      "op": "DUP3"
    },
    "13897": {
      "op": "ADD"
    },
    "13898": {
      "op": "MSTORE"
    },
    "13899": {
      "op": "PUSH5",
      "value": "0x1050D21151"
    },
    "13905": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "13907": {
      "op": "SHL"
    },
    "13908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13910": {
      "op": "DUP3"
    },
    "13911": {
      "op": "ADD"
    },
    "13912": {
      "op": "MSTORE"
    },
    "13913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13915": {
      "op": "ADD"
    },
    "13916": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "13919": {
      "op": "JUMP"
    },
    "13920": {
      "fn": "Vault._deposit",
      "offset": [
        27909,
        27993
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "13921": {
      "fn": "Vault._deposit",
      "offset": [
        28030,
        28047
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 138,
      "value": "0xAC"
    },
    "13923": {
      "fn": "Vault._deposit",
      "offset": [
        28030,
        28047
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "13924": {
      "fn": "Vault._deposit",
      "offset": [
        28011,
        28026
      ],
      "op": "DUP2",
      "path": "27"
    },
    "13925": {
      "fn": "Vault._deposit",
      "offset": [
        28011,
        28047
      ],
      "op": "GT",
      "path": "27"
    },
    "13926": {
      "branch": 213,
      "fn": "Vault._deposit",
      "offset": [
        28011,
        28047
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "13927": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x36C1"
    },
    "13930": {
      "branch": 213,
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "13931": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "13933": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "13934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13940": {
      "op": "SHL"
    },
    "13941": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "DUP2",
      "path": "27"
    },
    "13942": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13945": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "13947": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "DUP3",
      "path": "27"
    },
    "13948": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "ADD",
      "path": "27"
    },
    "13949": {
      "op": "MSTORE"
    },
    "13950": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "13952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13954": {
      "op": "DUP3"
    },
    "13955": {
      "op": "ADD"
    },
    "13956": {
      "op": "MSTORE"
    },
    "13957": {
      "op": "PUSH32",
      "value": "0x5F6465706F7369743A3A5641554C545F4445504F5349545F4C494D4954535F52"
    },
    "13990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13992": {
      "op": "DUP3"
    },
    "13993": {
      "op": "ADD"
    },
    "13994": {
      "op": "MSTORE"
    },
    "13995": {
      "op": "PUSH6",
      "value": "0x115050D21151"
    },
    "14002": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "14004": {
      "op": "SHL"
    },
    "14005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14007": {
      "op": "DUP3"
    },
    "14008": {
      "op": "ADD"
    },
    "14009": {
      "op": "MSTORE"
    },
    "14010": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14012": {
      "op": "ADD"
    },
    "14013": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF5"
    },
    "14016": {
      "op": "JUMP"
    },
    "14017": {
      "fn": "Vault._deposit",
      "offset": [
        28003,
        28090
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14018": {
      "fn": "Vault._deposit",
      "offset": [
        28167,
        28184
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 139,
      "value": "0x36CB"
    },
    "14021": {
      "fn": "Vault._deposit",
      "offset": [
        28173,
        28175
      ],
      "op": "DUP6",
      "path": "27"
    },
    "14022": {
      "fn": "Vault._deposit",
      "offset": [
        28177,
        28183
      ],
      "op": "DUP6",
      "path": "27"
    },
    "14023": {
      "fn": "Vault._deposit",
      "offset": [
        28167,
        28172
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3964"
    },
    "14026": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        28167,
        28184
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14027": {
      "fn": "Vault._deposit",
      "offset": [
        28167,
        28184
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14028": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 140,
      "value": "0x40"
    },
    "14030": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "14031": {
      "op": "DUP4"
    },
    "14032": {
      "op": "DUP2"
    },
    "14033": {
      "op": "MSTORE"
    },
    "14034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14040": {
      "op": "SHL"
    },
    "14041": {
      "op": "SUB"
    },
    "14042": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "DUP7",
      "path": "27"
    },
    "14043": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "AND",
      "path": "27"
    },
    "14044": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14045": {
      "fn": "Vault._deposit",
      "offset": [
        28208,
        28218
      ],
      "op": "CALLER",
      "path": "27"
    },
    "14046": {
      "fn": "Vault._deposit",
      "offset": [
        28208,
        28218
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14047": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
    },
    "14080": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14083": {
      "op": "ADD"
    },
    "14084": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "14086": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "14087": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "DUP1",
      "path": "27"
    },
    "14088": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "14089": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "SUB",
      "path": "27"
    },
    "14090": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14091": {
      "fn": "Vault._deposit",
      "offset": [
        28200,
        28241
      ],
      "op": "LOG3",
      "path": "27"
    },
    "14092": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28394
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 141,
      "value": "0x99"
    },
    "14094": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28394
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "14095": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28456
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3091"
    },
    "14098": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28456
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14105": {
      "op": "SHL"
    },
    "14106": {
      "op": "SUB"
    },
    "14107": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28394
      ],
      "op": "AND",
      "path": "27"
    },
    "14108": {
      "fn": "Vault._deposit",
      "offset": [
        28412,
        28422
      ],
      "op": "CALLER",
      "path": "27"
    },
    "14109": {
      "fn": "Vault._deposit",
      "offset": [
        28432,
        28436
      ],
      "op": "ADDRESS",
      "path": "27"
    },
    "14110": {
      "fn": "Vault._deposit",
      "offset": [
        28439,
        28455
      ],
      "op": "DUP7",
      "path": "27"
    },
    "14111": {
      "fn": "Vault._deposit",
      "offset": [
        28384,
        28411
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3D5C"
    },
    "14114": {
      "fn": "Vault._deposit",
      "jump": "i",
      "offset": [
        28384,
        28456
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14115": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2075,
        2190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14116": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "14118": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "14119": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "14121": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "14122": {
      "offset": [
        1623,
        1632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "14123": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3769"
    },
    "14126": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14127": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14129": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14136": {
      "op": "SHL"
    },
    "14137": {
      "offset": [
        1615,
        1653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14138": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14141": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14143": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14144": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1615,
        1653
      ],
      "op": "ADD",
      "path": "4"
    },
    "14145": {
      "op": "MSTORE"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14150": {
      "op": "DUP3"
    },
    "14151": {
      "op": "ADD"
    },
    "14152": {
      "op": "MSTORE"
    },
    "14153": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14172": {
      "op": "SHL"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14175": {
      "op": "DUP3"
    },
    "14176": {
      "op": "ADD"
    },
    "14177": {
      "op": "MSTORE"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14180": {
      "op": "ADD"
    },
    "14181": {
      "offset": [
        1615,
        1653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF5"
    },
    "14184": {
      "op": "JUMP"
    },
    "14185": {
      "offset": [
        1615,
        1653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14186": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2141
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 142,
      "value": "0x65"
    },
    "14188": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14189": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "14190": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14192": {
      "op": "NOT"
    },
    "14193": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "AND",
      "path": "4"
    },
    "14194": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2144,
        2148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "14196": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "OR",
      "path": "4"
    },
    "14197": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14198": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2134,
        2148
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "14199": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 143,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "14232": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2170,
        2182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x379E"
    },
    "14235": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "14236": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "14237": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        823,
        919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14238": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2170,
        2182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14239": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14241": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14248": {
      "op": "SHL"
    },
    "14249": {
      "op": "SUB"
    },
    "14250": {
      "op": "SWAP1"
    },
    "14251": {
      "op": "SWAP2"
    },
    "14252": {
      "op": "AND"
    },
    "14253": {
      "op": "DUP2"
    },
    "14254": {
      "op": "MSTORE"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14257": {
      "op": "ADD"
    },
    "14258": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14260": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14261": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14262": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14263": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SUB",
      "path": "4"
    },
    "14264": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14265": {
      "fn": "PausableUpgradeable._pause",
      "offset": [
        2163,
        2183
      ],
      "op": "LOG1",
      "path": "4"
    },
    "14266": {
      "fn": "PausableUpgradeable._pause",
      "jump": "o",
      "offset": [
        2075,
        2190
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14267": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2322,
        2439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14268": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x65"
    },
    "14270": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "14271": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "14273": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1380,
        1387
      ],
      "op": "AND",
      "path": "4"
    },
    "14274": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3804"
    },
    "14277": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14278": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14280": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14287": {
      "op": "SHL"
    },
    "14288": {
      "offset": [
        1881,
        1922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14289": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14292": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14294": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14295": {
      "fn": "PausableUpgradeable.paused",
      "offset": [
        1881,
        1922
      ],
      "op": "ADD",
      "path": "4"
    },
    "14296": {
      "op": "MSTORE"
    },
    "14297": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14301": {
      "op": "DUP3"
    },
    "14302": {
      "op": "ADD"
    },
    "14303": {
      "op": "MSTORE"
    },
    "14304": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "14327": {
      "op": "SHL"
    },
    "14328": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14330": {
      "op": "DUP3"
    },
    "14331": {
      "op": "ADD"
    },
    "14332": {
      "op": "MSTORE"
    },
    "14333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14335": {
      "op": "ADD"
    },
    "14336": {
      "offset": [
        1881,
        1922
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF5"
    },
    "14339": {
      "op": "JUMP"
    },
    "14340": {
      "offset": [
        1881,
        1922
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14341": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2387
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 144,
      "value": "0x65"
    },
    "14343": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14344": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "14345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14347": {
      "op": "NOT"
    },
    "14348": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "AND",
      "path": "4"
    },
    "14349": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14350": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2380,
        2395
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "14351": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2410,
        2432
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 145,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "14384": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        902,
        912
      ],
      "op": "CALLER",
      "path": "11"
    },
    "14385": {
      "fn": "PausableUpgradeable._unpause",
      "offset": [
        2419,
        2431
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x379E"
    },
    "14388": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        823,
        919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14389": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        410,
        551
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "14390": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        467,
        476
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14396": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14398": {
      "op": "SHL"
    },
    "14399": {
      "op": "SUB"
    },
    "14400": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "DUP3",
      "path": "33",
      "statement": 146
    },
    "14401": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "GT",
      "path": "33"
    },
    "14402": {
      "branch": 231,
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        496,
        518
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "14403": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x384B"
    },
    "14406": {
      "branch": 231,
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "14407": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "14409": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "DUP1",
      "path": "33"
    },
    "14410": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "REVERT",
      "path": "33"
    },
    "14411": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        488,
        519
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "14412": {
      "op": "POP"
    },
    "14413": {
      "fn": "SafeCastLib.safeCastTo248",
      "offset": [
        542,
        543
      ],
      "op": "SWAP1",
      "path": "33",
      "statement": 147
    },
    "14414": {
      "fn": "SafeCastLib.safeCastTo248",
      "jump": "o",
      "offset": [
        410,
        551
      ],
      "op": "JUMP",
      "path": "33"
    },
    "14415": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1412,
        2026
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "14416": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 148
    },
    "14417": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "14418": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1778,
        1788
      ],
      "op": "DUP1",
      "path": "9"
    },
    "14419": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38C9"
    },
    "14422": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "14423": {
      "op": "POP"
    },
    "14424": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "14426": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "14427": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "14434": {
      "op": "SHL"
    },
    "14435": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "14436": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "14437": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1818,
        1822
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "14438": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "14440": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "14441": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "14442": {
      "op": "MSTORE"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14449": {
      "op": "SHL"
    },
    "14450": {
      "op": "SUB"
    },
    "14451": {
      "op": "DUP4"
    },
    "14452": {
      "op": "DUP2"
    },
    "14453": {
      "op": "AND"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14456": {
      "op": "DUP4"
    },
    "14457": {
      "op": "ADD"
    },
    "14458": {
      "op": "MSTORE"
    },
    "14459": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "DUP5",
      "path": "9"
    },
    "14460": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "AND",
      "path": "9"
    },
    "14461": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14462": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xDD62ED3E"
    },
    "14467": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1809
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14470": {
      "op": "ADD"
    },
    "14471": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "14473": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "14475": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "14476": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "14477": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP4",
      "path": "9"
    },
    "14478": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SUB",
      "path": "9"
    },
    "14479": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "14480": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP7",
      "path": "9"
    },
    "14481": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "GAS",
      "path": "9"
    },
    "14482": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "14483": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "14484": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "14485": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "14486": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38A3"
    },
    "14489": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "14490": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "14491": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14493": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "14494": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "14495": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "14496": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14498": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "REVERT",
      "path": "9"
    },
    "14499": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "14500": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "14501": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "14502": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "14503": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "14504": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "14506": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "14507": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "14508": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "14510": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "NOT",
      "path": "9"
    },
    "14511": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "14513": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "14514": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "14515": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "AND",
      "path": "9"
    },
    "14516": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP3",
      "path": "9"
    },
    "14517": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "14518": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP1",
      "path": "9"
    },
    "14519": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "14521": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "14522": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "POP",
      "path": "9"
    },
    "14523": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "DUP2",
      "path": "9"
    },
    "14524": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "ADD",
      "path": "9"
    },
    "14525": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14526": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38C7"
    },
    "14529": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "14530": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14531": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x46B7"
    },
    "14534": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "jump": "i",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMP",
      "path": "9"
    },
    "14535": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1833
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "14536": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1794,
        1838
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "14537": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1777,
        1839
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "14538": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3934"
    },
    "14541": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "14542": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "14544": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "14545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14551": {
      "op": "SHL"
    },
    "14552": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "DUP2",
      "path": "9"
    },
    "14553": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "14554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14556": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "14558": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "DUP3",
      "path": "9"
    },
    "14559": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "ADD",
      "path": "9"
    },
    "14560": {
      "op": "MSTORE"
    },
    "14561": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "14563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14565": {
      "op": "DUP3"
    },
    "14566": {
      "op": "ADD"
    },
    "14567": {
      "op": "MSTORE"
    },
    "14568": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14603": {
      "op": "DUP3"
    },
    "14604": {
      "op": "ADD"
    },
    "14605": {
      "op": "MSTORE"
    },
    "14606": {
      "op": "PUSH22",
      "value": "0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "14631": {
      "op": "SHL"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14634": {
      "op": "DUP3"
    },
    "14635": {
      "op": "ADD"
    },
    "14636": {
      "op": "MSTORE"
    },
    "14637": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14639": {
      "op": "ADD"
    },
    "14640": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAF5"
    },
    "14643": {
      "op": "JUMP"
    },
    "14644": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1756,
        1919
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "14645": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 149,
      "value": "0x40"
    },
    "14647": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14654": {
      "op": "SHL"
    },
    "14655": {
      "op": "SUB"
    },
    "14656": {
      "op": "DUP4"
    },
    "14657": {
      "op": "AND"
    },
    "14658": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "14660": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "DUP3",
      "path": "9"
    },
    "14661": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "ADD",
      "path": "9"
    },
    "14662": {
      "op": "MSTORE"
    },
    "14663": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14665": {
      "op": "DUP2"
    },
    "14666": {
      "op": "ADD"
    },
    "14667": {
      "op": "DUP3"
    },
    "14668": {
      "op": "SWAP1"
    },
    "14669": {
      "op": "MSTORE"
    },
    "14670": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1929,
        2019
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21C8"
    },
    "14673": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1929,
        2019
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14674": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1949,
        1954
      ],
      "op": "DUP5",
      "path": "9"
    },
    "14675": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1949,
        1954
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14676": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "14681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14683": {
      "op": "SHL"
    },
    "14684": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1979,
        2001
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "14685": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14687": {
      "op": "ADD"
    },
    "14688": {
      "fn": "SafeERC20Upgradeable.safeApprove",
      "offset": [
        1956,
        2018
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3349"
    },
    "14691": {
      "op": "JUMP"
    },
    "14692": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8617,
        9006
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14699": {
      "op": "SHL"
    },
    "14700": {
      "op": "SUB"
    },
    "14701": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8700,
        8721
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 150
    },
    "14702": {
      "branch": 228,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8700,
        8721
      ],
      "op": "AND",
      "path": "6"
    },
    "14703": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39BA"
    },
    "14706": {
      "branch": 228,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "14707": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14709": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "14710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14716": {
      "op": "SHL"
    },
    "14717": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14718": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14721": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "14723": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14724": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "ADD",
      "path": "6"
    },
    "14725": {
      "op": "MSTORE"
    },
    "14726": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14730": {
      "op": "DUP3"
    },
    "14731": {
      "op": "ADD"
    },
    "14732": {
      "op": "MSTORE"
    },
    "14733": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "14766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14768": {
      "op": "DUP3"
    },
    "14769": {
      "op": "ADD"
    },
    "14770": {
      "op": "MSTORE"
    },
    "14771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14773": {
      "op": "ADD"
    },
    "14774": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF5"
    },
    "14777": {
      "op": "JUMP"
    },
    "14778": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8692,
        8757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14779": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8844,
        8850
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 151
    },
    "14780": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x35"
    },
    "14782": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14784": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14785": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "DUP3",
      "path": "6"
    },
    "14786": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "14787": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39CC"
    },
    "14790": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "14791": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14792": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x465E"
    },
    "14795": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8828,
        8850
      ],
      "op": "JUMP",
      "path": "6"
    },
    "14796": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14797": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14798": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "14799": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8828,
        8850
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "14800": {
      "op": "POP"
    },
    "14801": {
      "op": "POP"
    },
    "14802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14808": {
      "op": "SHL"
    },
    "14809": {
      "op": "SUB"
    },
    "14810": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 152
    },
    "14811": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "AND",
      "path": "6"
    },
    "14812": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14814": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14815": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14816": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14817": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x33"
    },
    "14819": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "14821": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "14822": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14824": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "DUP2",
      "path": "6"
    },
    "14825": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "14826": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "DUP1",
      "path": "6"
    },
    "14827": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "14828": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "DUP4",
      "path": "6"
    },
    "14829": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "14830": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8878
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14831": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39F9"
    },
    "14834": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14835": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "DUP5",
      "path": "6"
    },
    "14836": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8882,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14837": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x465E"
    },
    "14840": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8860,
        8888
      ],
      "op": "JUMP",
      "path": "6"
    },
    "14841": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "14842": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14843": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "14844": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8860,
        8888
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "14845": {
      "op": "POP"
    },
    "14846": {
      "op": "POP"
    },
    "14847": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 153,
      "value": "0x40"
    },
    "14849": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "14850": {
      "op": "DUP2"
    },
    "14851": {
      "op": "DUP2"
    },
    "14852": {
      "op": "MSTORE"
    },
    "14853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14859": {
      "op": "SHL"
    },
    "14860": {
      "op": "SUB"
    },
    "14861": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "DUP4",
      "path": "6"
    },
    "14862": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "AND",
      "path": "6"
    },
    "14863": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14864": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8920,
        8921
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14866": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8920,
        8921
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14867": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "14900": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14903": {
      "op": "ADD"
    },
    "14904": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "14906": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "14907": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "14908": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "14909": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SUB",
      "path": "6"
    },
    "14910": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "14911": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8903,
        8940
      ],
      "op": "LOG3",
      "path": "6"
    },
    "14912": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "POP",
      "path": "27"
    },
    "14913": {
      "fn": "Vault.setHarvestDelay",
      "offset": [
        19842,
        20701
      ],
      "op": "POP",
      "path": "27"
    },
    "14914": {
      "fn": "Vault.setHarvestDelay",
      "jump": "o",
      "offset": [
        19842,
        20701
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14915": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        557,
        698
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "14916": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        614,
        623
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "14918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14922": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14924": {
      "op": "SHL"
    },
    "14925": {
      "op": "SUB"
    },
    "14926": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "DUP3",
      "path": "33",
      "statement": 154
    },
    "14927": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "GT",
      "path": "33"
    },
    "14928": {
      "branch": 232,
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        643,
        665
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "14929": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x384B"
    },
    "14932": {
      "branch": 232,
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "14933": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "14935": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "DUP1",
      "path": "33"
    },
    "14936": {
      "fn": "SafeCastLib.safeCastTo128",
      "offset": [
        635,
        666
      ],
      "op": "REVERT",
      "path": "33"
    },
    "14937": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39617,
        39891
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14938": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39755,
        39762
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "14940": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39795
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 155
    },
    "14941": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39795
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "14942": {
      "branch": 214,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39795
      ],
      "op": "DUP1",
      "path": "27"
    },
    "14943": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A66"
    },
    "14946": {
      "branch": 214,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39810
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "14947": {
      "op": "POP"
    },
    "14948": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39799,
        39810
      ],
      "op": "DUP3",
      "path": "27"
    },
    "14949": {
      "branch": 215,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39799,
        39810
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "14950": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39782,
        39810
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14951": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3AA2"
    },
    "14954": {
      "branch": 215,
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "14955": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39869,
        39877
      ],
      "op": "DUP2",
      "path": "27"
    },
    "14956": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39866
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x97"
    },
    "14958": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39866
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "14959": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39877
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A78"
    },
    "14962": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39877
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "14963": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39877
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14964": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39877
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4695"
    },
    "14967": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        39853,
        39877
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14968": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39853,
        39877
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14969": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39840,
        39848
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "14971": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39840,
        39848
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "14972": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39849
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A88"
    },
    "14975": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39849
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14976": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39824
      ],
      "op": "DUP6",
      "path": "27"
    },
    "14977": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14978": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39830,
        39838
      ],
      "op": "DUP8",
      "path": "27"
    },
    "14979": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39830,
        39838
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14980": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39829
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3380"
    },
    "14983": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        39818,
        39849
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14984": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39849
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14985": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A92"
    },
    "14988": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39878
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "14989": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39878
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14990": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4676"
    },
    "14993": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        39818,
        39878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "14994": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "14995": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39884
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A9D"
    },
    "14998": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39884
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "14999": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39881,
        39884
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x64"
    },
    "15001": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39884
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4676"
    },
    "15004": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "i",
      "offset": [
        39818,
        39884
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15005": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39818,
        39884
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15006": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3AA5"
    },
    "15009": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15010": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15011": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39814,
        39815
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15013": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39781,
        39884
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15014": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39774,
        39884
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "15015": {
      "fn": "Vault.computeEstimatedReturns",
      "offset": [
        39617,
        39891
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "15016": {
      "op": "POP"
    },
    "15017": {
      "op": "POP"
    },
    "15018": {
      "op": "POP"
    },
    "15019": {
      "op": "POP"
    },
    "15020": {
      "fn": "Vault.computeEstimatedReturns",
      "jump": "o",
      "offset": [
        39617,
        39891
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15021": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15022": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15024": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15025": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15028": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15029": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "15030": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15032": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "15033": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15034": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AC6"
    },
    "15037": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15038": {
      "op": "POP"
    },
    "15039": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15041": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15042": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15044": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "15045": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15046": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15047": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AE2"
    },
    "15050": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15051": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15053": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15060": {
      "op": "SHL"
    },
    "15061": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15062": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15063": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15065": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "15066": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "15069": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15070": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "15073": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15074": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15075": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15077": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15078": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15081": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15082": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "15083": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15085": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "15086": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15087": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15088": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15089": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B04"
    },
    "15092": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15093": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15095": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15096": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15097": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15100": {
      "op": "NOT"
    },
    "15101": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "15102": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "15105": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "15106": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15107": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15108": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15109": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13635,
        13663
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 156,
      "value": "0x3B0E"
    },
    "15112": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13648,
        13653
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15113": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13655,
        13662
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15114": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13635,
        13647
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3D94"
    },
    "15117": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13635,
        13663
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15118": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13635,
        13663
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15119": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13712,
        13729
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 157,
      "value": "0x3B16"
    },
    "15122": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13712,
        13727
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E13"
    },
    "15125": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13712,
        13729
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15126": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13712,
        13729
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15127": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13778,
        13786
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 158,
      "value": "0x3B1E"
    },
    "15130": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13778,
        13784
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3723"
    },
    "15133": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13778,
        13786
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15134": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13778,
        13786
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15135": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13842
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 159,
      "value": "0x99"
    },
    "15137": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15138": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15145": {
      "op": "SHL"
    },
    "15146": {
      "op": "SUB"
    },
    "15147": {
      "op": "NOT"
    },
    "15148": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "AND",
      "path": "27"
    },
    "15149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15155": {
      "op": "SHL"
    },
    "15156": {
      "op": "SUB"
    },
    "15157": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP10",
      "path": "27"
    },
    "15158": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "AND",
      "path": "27"
    },
    "15159": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15160": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15161": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "OR",
      "path": "27"
    },
    "15162": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15163": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15164": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15165": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 160,
      "value": "0x40"
    },
    "15167": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15168": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15169": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "15174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15176": {
      "op": "SHL"
    },
    "15177": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15178": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15179": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15180": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15181": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13901
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x313CE567"
    },
    "15186": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13901
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15187": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "15189": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15190": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15191": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ADD",
      "path": "27"
    },
    "15192": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15193": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "15195": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15196": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15197": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15198": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15199": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15200": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15201": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SUB",
      "path": "27"
    },
    "15202": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ADD",
      "path": "27"
    },
    "15203": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15204": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13832,
        13856
      ],
      "op": "DUP7",
      "path": "27"
    },
    "15205": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "GAS",
      "path": "27"
    },
    "15206": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "15207": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "15208": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15209": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "15210": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3B77"
    },
    "15213": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "15214": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15215": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15217": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15218": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "15219": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15220": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15222": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "REVERT",
      "path": "27"
    },
    "15223": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15224": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15225": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15226": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15227": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15228": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15230": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15231": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15232": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "15234": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "NOT",
      "path": "27"
    },
    "15235": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "15237": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15238": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ADD",
      "path": "27"
    },
    "15239": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "AND",
      "path": "27"
    },
    "15240": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15241": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ADD",
      "path": "27"
    },
    "15242": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15243": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15245": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15246": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15247": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15248": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "ADD",
      "path": "27"
    },
    "15249": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15250": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3B9B"
    },
    "15253": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15254": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15255": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4746"
    },
    "15258": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13881,
        13903
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15259": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13881,
        13903
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15260": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13877,
        13903
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3BA6"
    },
    "15263": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13877,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15264": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13877,
        13879
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xA"
    },
    "15266": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13877,
        13903
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4A32"
    },
    "15269": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13877,
        13903
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15270": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13877,
        13903
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15271": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13866,
        13874
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x9A"
    },
    "15273": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13866,
        13903
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15274": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13866,
        13903
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15275": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13866,
        13903
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15276": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13866,
        13903
      ],
      "op": "POP",
      "path": "27"
    },
    "15277": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13945
      ],
      "op": "DUP7",
      "path": "27",
      "statement": 161
    },
    "15278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15284": {
      "op": "SHL"
    },
    "15285": {
      "op": "SUB"
    },
    "15286": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13954
      ],
      "op": "AND",
      "path": "27"
    },
    "15287": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13954
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x313CE567"
    },
    "15292": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15294": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15295": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15296": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "15301": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "AND",
      "path": "27"
    },
    "15302": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "15304": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "SHL",
      "path": "27"
    },
    "15305": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15306": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15307": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "15309": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ADD",
      "path": "27"
    },
    "15310": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "15312": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15314": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15315": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15316": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15317": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "SUB",
      "path": "27"
    },
    "15318": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15319": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP7",
      "path": "27"
    },
    "15320": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "GAS",
      "path": "27"
    },
    "15321": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "15322": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "15323": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15324": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "15325": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3BEA"
    },
    "15328": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "15329": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15330": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15332": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15333": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "15334": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15335": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15337": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "REVERT",
      "path": "27"
    },
    "15338": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15339": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "POP",
      "path": "27"
    },
    "15340": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "POP",
      "path": "27"
    },
    "15341": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "POP",
      "path": "27"
    },
    "15342": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "POP",
      "path": "27"
    },
    "15343": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15345": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15346": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "15347": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "15349": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "NOT",
      "path": "27"
    },
    "15350": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "15352": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15353": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ADD",
      "path": "27"
    },
    "15354": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "AND",
      "path": "27"
    },
    "15355": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15356": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ADD",
      "path": "27"
    },
    "15357": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15358": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15360": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15361": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "POP",
      "path": "27"
    },
    "15362": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15363": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "ADD",
      "path": "27"
    },
    "15364": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15365": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3C0E"
    },
    "15368": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15369": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15370": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4746"
    },
    "15373": {
      "fn": "Vault.__Vault_init",
      "jump": "i",
      "offset": [
        13934,
        13956
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15374": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13934,
        13956
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15375": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13931
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x99"
    },
    "15377": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15378": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "15379": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "15381": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15382": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15383": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15384": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "AND",
      "path": "27"
    },
    "15385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15389": {
      "op": "SHL"
    },
    "15390": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "MUL",
      "path": "27"
    },
    "15391": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15395": {
      "op": "SHL"
    },
    "15396": {
      "op": "NOT"
    },
    "15397": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15398": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15399": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "AND",
      "path": "27"
    },
    "15400": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15401": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15402": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15403": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "OR",
      "path": "27"
    },
    "15404": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15405": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13913,
        13956
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15406": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13971
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 162,
      "value": "0x98"
    },
    "15408": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15409": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "15410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15416": {
      "op": "SHL"
    },
    "15417": {
      "op": "SUB"
    },
    "15418": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15419": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "DUP10",
      "path": "27"
    },
    "15420": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "AND",
      "path": "27"
    },
    "15421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15427": {
      "op": "SHL"
    },
    "15428": {
      "op": "SUB"
    },
    "15429": {
      "op": "NOT"
    },
    "15430": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15431": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15432": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "AND",
      "path": "27"
    },
    "15433": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "OR",
      "path": "27"
    },
    "15434": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15435": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15436": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13967,
        13979
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15437": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14007
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 163,
      "value": "0x9E"
    },
    "15439": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15440": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "15441": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "DUP8",
      "path": "27"
    },
    "15442": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "DUP5",
      "path": "27"
    },
    "15443": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "AND",
      "path": "27"
    },
    "15444": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15445": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15446": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "AND",
      "path": "27"
    },
    "15447": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "OR",
      "path": "27"
    },
    "15448": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15449": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13989,
        14026
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15450": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14054
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 164,
      "value": "0x9C"
    },
    "15452": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15453": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "15454": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15455": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "DUP9",
      "path": "27"
    },
    "15456": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "AND",
      "path": "27"
    },
    "15457": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "15458": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15459": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15460": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "AND",
      "path": "27"
    },
    "15461": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15462": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15463": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15464": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "OR",
      "path": "27"
    },
    "15465": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15466": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14036,
        14076
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15469": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14196,
        14210
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 165,
      "value": "0xA7"
    },
    "15471": {
      "fn": "Vault.__Vault_init",
      "offset": [
        14196,
        14214
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "15472": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15473": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15474": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C81"
    },
    "15477": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15478": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15480": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15481": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15482": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "15485": {
      "op": "NOT"
    },
    "15486": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "15487": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15488": {
      "fn": "Vault.__Vault_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15489": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15490": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "15491": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15492": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15493": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15494": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15495": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15496": {
      "fn": "Vault.__Vault_init",
      "offset": [
        13358,
        14221
      ],
      "op": "POP",
      "path": "27"
    },
    "15497": {
      "fn": "Vault.__Vault_init",
      "jump": "o",
      "offset": [
        13358,
        14221
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15498": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3239,
        3956
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "15499": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "15501": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CDF"
    },
    "15504": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3723,
        3727
      ],
      "op": "DUP3",
      "path": "9"
    },
    "15505": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "15507": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "15508": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15509": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "15511": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "ADD",
      "path": "9"
    },
    "15512": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "15514": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "15515": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15516": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "15518": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP2",
      "path": "9"
    },
    "15519": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "15520": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "15522": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "ADD",
      "path": "9"
    },
    "15523": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "15556": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "DUP2",
      "path": "9"
    },
    "15557": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "15558": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "POP",
      "path": "9"
    },
    "15559": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3703,
        3708
      ],
      "op": "DUP6",
      "path": "9"
    },
    "15560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15566": {
      "op": "SHL"
    },
    "15567": {
      "op": "SUB"
    },
    "15568": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "AND",
      "path": "9"
    },
    "15569": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E8E"
    },
    "15572": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3722
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15573": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "15574": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "15575": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15576": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "15581": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "AND",
      "path": "9"
    },
    "15582": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3695,
        3764
      ],
      "op": "JUMP",
      "path": "9"
    },
    "15583": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3695,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "15584": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3795
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15585": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3795
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "15586": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3764
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15587": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3669,
        3764
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "15588": {
      "op": "POP"
    },
    "15589": {
      "branch": 233,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3778,
        3799
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "15590": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3774,
        3950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21C8"
    },
    "15593": {
      "branch": 233,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3774,
        3950
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "15594": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3873,
        3883
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 166
    },
    "15595": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15596": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "15598": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "ADD",
      "path": "9"
    },
    "15599": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15600": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "15601": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "DUP2",
      "path": "9"
    },
    "15602": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "ADD",
      "path": "9"
    },
    "15603": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15604": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CFD"
    },
    "15607": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "15608": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15609": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x45A3"
    },
    "15612": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3862,
        3892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "15613": {
      "branch": 234,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3862,
        3892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "15614": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21C8"
    },
    "15617": {
      "branch": 234,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "15618": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "15620": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "15621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15627": {
      "op": "SHL"
    },
    "15628": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "DUP2",
      "path": "9"
    },
    "15629": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15632": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "15634": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "DUP3",
      "path": "9"
    },
    "15635": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "ADD",
      "path": "9"
    },
    "15636": {
      "op": "MSTORE"
    },
    "15637": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "15639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15641": {
      "op": "DUP3"
    },
    "15642": {
      "op": "ADD"
    },
    "15643": {
      "op": "MSTORE"
    },
    "15644": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "15677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15679": {
      "op": "DUP3"
    },
    "15680": {
      "op": "ADD"
    },
    "15681": {
      "op": "MSTORE"
    },
    "15682": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "15693": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "15695": {
      "op": "SHL"
    },
    "15696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15698": {
      "op": "DUP3"
    },
    "15699": {
      "op": "ADD"
    },
    "15700": {
      "op": "MSTORE"
    },
    "15701": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15703": {
      "op": "ADD"
    },
    "15704": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3854,
        3939
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAF5"
    },
    "15707": {
      "op": "JUMP"
    },
    "15708": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        900,
        1152
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "15709": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 167,
      "value": "0x40"
    },
    "15711": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "15712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15718": {
      "op": "SHL"
    },
    "15719": {
      "op": "SUB"
    },
    "15720": {
      "op": "DUP1"
    },
    "15721": {
      "op": "DUP6"
    },
    "15722": {
      "op": "AND"
    },
    "15723": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "15725": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "DUP4",
      "path": "9"
    },
    "15726": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "ADD",
      "path": "9"
    },
    "15727": {
      "op": "MSTORE"
    },
    "15728": {
      "op": "DUP4"
    },
    "15729": {
      "op": "AND"
    },
    "15730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15732": {
      "op": "DUP3"
    },
    "15733": {
      "op": "ADD"
    },
    "15734": {
      "op": "MSTORE"
    },
    "15735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15737": {
      "op": "DUP2"
    },
    "15738": {
      "op": "ADD"
    },
    "15739": {
      "op": "DUP3"
    },
    "15740": {
      "op": "SWAP1"
    },
    "15741": {
      "op": "MSTORE"
    },
    "15742": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1049,
        1145
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x356C"
    },
    "15745": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1049,
        1145
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15746": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1069,
        1074
      ],
      "op": "DUP6",
      "path": "9"
    },
    "15747": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1069,
        1074
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15748": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "15753": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15755": {
      "op": "SHL"
    },
    "15756": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1099,
        1126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "15757": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15759": {
      "op": "ADD"
    },
    "15760": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1076,
        1144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3349"
    },
    "15763": {
      "op": "JUMP"
    },
    "15764": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15765": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15767": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15768": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15771": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15772": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "15773": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15775": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "15776": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15777": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DAD"
    },
    "15780": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15781": {
      "op": "POP"
    },
    "15782": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15784": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15785": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15787": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "15788": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15789": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15790": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DC9"
    },
    "15793": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15794": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15796": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15803": {
      "op": "SHL"
    },
    "15804": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15805": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15806": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15808": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "15809": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "15812": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15813": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "15816": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15817": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15818": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15820": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15821": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15824": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15825": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "15826": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15828": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "15829": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15830": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15831": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15832": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DEB"
    },
    "15835": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15836": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15838": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15839": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15840": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15843": {
      "op": "NOT"
    },
    "15844": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "15845": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "15848": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "15849": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15850": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15851": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15852": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 168,
      "value": "0x3DF3"
    },
    "15855": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2165
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9D"
    },
    "15858": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2141,
        2167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "15859": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2141,
        2167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15860": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2215
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 169,
      "value": "0x3DFD"
    },
    "15863": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2200,
        2205
      ],
      "op": "DUP4",
      "path": "6"
    },
    "15864": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2207,
        2214
      ],
      "op": "DUP4",
      "path": "6"
    },
    "15865": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F07"
    },
    "15868": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2177,
        2215
      ],
      "op": "JUMP",
      "path": "6"
    },
    "15869": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2177,
        2215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "15870": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15871": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15872": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21C8"
    },
    "15875": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15876": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15878": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15879": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15880": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "15883": {
      "op": "NOT"
    },
    "15884": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "15885": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15886": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15887": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "15888": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "POP",
      "path": "6"
    },
    "15889": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2044,
        2222
      ],
      "op": "POP",
      "path": "6"
    },
    "15890": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2044,
        2222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "15891": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        991,
        1119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "15892": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15894": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15895": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15898": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15899": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "15900": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15902": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "15903": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15904": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E2C"
    },
    "15907": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15908": {
      "op": "POP"
    },
    "15909": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15911": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15912": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15914": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "15915": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15916": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15917": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E48"
    },
    "15920": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15921": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15923": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15930": {
      "op": "SHL"
    },
    "15931": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15932": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15933": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "15935": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "15936": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "15939": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15940": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "15943": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15944": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15945": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15947": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15948": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15951": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15952": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "15953": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "15955": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "15956": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15957": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15958": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15959": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6A"
    },
    "15962": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15963": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15965": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15966": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15967": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15970": {
      "op": "NOT"
    },
    "15971": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "15972": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "15975": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "15976": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15977": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15978": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15979": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1075
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 170,
      "value": "0x3E72"
    },
    "15982": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E9D"
    },
    "15985": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "i",
      "offset": [
        1049,
        1075
      ],
      "op": "JUMP",
      "path": "4"
    },
    "15986": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1049,
        1075
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "15987": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1112
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 171,
      "value": "0x3E7A"
    },
    "15990": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1110
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9C"
    },
    "15993": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "i",
      "offset": [
        1085,
        1112
      ],
      "op": "JUMP",
      "path": "4"
    },
    "15994": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1085,
        1112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "15995": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15996": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15997": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17CC"
    },
    "16000": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16001": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16003": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16004": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16005": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "16008": {
      "op": "NOT"
    },
    "16009": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "16010": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16011": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16012": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "16013": {
      "fn": "PausableUpgradeable.__Pausable_init",
      "jump": "o",
      "offset": [
        991,
        1119
      ],
      "op": "JUMP",
      "path": "4"
    },
    "16014": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3472,
        3695
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16015": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3605,
        3617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "16017": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3636,
        3688
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 172,
      "value": "0x3AA5"
    },
    "16020": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3658,
        3664
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16021": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3666,
        3670
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16022": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3672,
        3673
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16024": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3675,
        3687
      ],
      "op": "DUP6",
      "path": "10"
    },
    "16025": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3636,
        3657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4011"
    },
    "16028": {
      "fn": "AddressUpgradeable.functionCall",
      "jump": "i",
      "offset": [
        3636,
        3688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16029": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        754,
        818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16030": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16032": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16033": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16036": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16037": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "16038": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16040": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "16041": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16042": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EB6"
    },
    "16045": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16046": {
      "op": "POP"
    },
    "16047": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16049": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16050": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16052": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "16053": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16054": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16055": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED2"
    },
    "16058": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16059": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16061": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16068": {
      "op": "SHL"
    },
    "16069": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16070": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16071": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16073": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "16074": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "16077": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16078": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "16081": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16082": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16083": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16085": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16086": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16089": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16090": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "16091": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16093": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "16094": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16095": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16096": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16097": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E7A"
    },
    "16100": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16101": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16103": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16104": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16105": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16108": {
      "op": "NOT"
    },
    "16109": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "16110": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "16113": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "16114": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16115": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16116": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16117": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16118": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17CC"
    },
    "16121": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16122": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16124": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16125": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16126": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "16129": {
      "op": "NOT"
    },
    "16130": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "16131": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16132": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16133": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "16134": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        754,
        818
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16135": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16136": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16138": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16139": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16142": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16143": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "16144": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16146": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "16147": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16148": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F20"
    },
    "16151": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16152": {
      "op": "POP"
    },
    "16153": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16155": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16156": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16158": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "16159": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16160": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16161": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F3C"
    },
    "16164": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16165": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16167": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16174": {
      "op": "SHL"
    },
    "16175": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16176": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16177": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16179": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "16180": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "16183": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16184": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "16187": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16188": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16189": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16191": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16192": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16195": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16196": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "16197": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16199": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "16200": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16201": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16202": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16203": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5E"
    },
    "16206": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16207": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16209": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16210": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16211": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16214": {
      "op": "NOT"
    },
    "16215": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "16216": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "16219": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "16220": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16221": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16222": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16223": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 173
    },
    "16224": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16225": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F71"
    },
    "16228": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16229": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "16231": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16232": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "16234": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "DUP7",
      "path": "6"
    },
    "16235": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "ADD",
      "path": "6"
    },
    "16236": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16237": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D1"
    },
    "16240": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2335,
        2348
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16241": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2335,
        2348
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16242": {
      "op": "POP"
    },
    "16243": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 174
    },
    "16244": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "16245": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F85"
    },
    "16248": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16249": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2365
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x37"
    },
    "16251": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16252": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "16254": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP6",
      "path": "6"
    },
    "16255": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "ADD",
      "path": "6"
    },
    "16256": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "16257": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D1"
    },
    "16260": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16261": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "16262": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2358,
        2375
      ],
      "op": "POP",
      "path": "6"
    },
    "16263": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16264": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16265": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21C8"
    },
    "16268": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16269": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16271": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16272": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16273": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "16276": {
      "op": "NOT"
    },
    "16277": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "16278": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16279": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16280": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "16281": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "POP",
      "path": "6"
    },
    "16282": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2228,
        2382
      ],
      "op": "POP",
      "path": "6"
    },
    "16283": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "o",
      "offset": [
        2228,
        2382
      ],
      "op": "JUMP",
      "path": "6"
    },
    "16284": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1125,
        1215
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "16285": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16287": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16288": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16291": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16292": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "3"
    },
    "16293": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16295": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "3"
    },
    "16296": {
      "branch": 229,
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16297": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FB5"
    },
    "16300": {
      "branch": 229,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16301": {
      "op": "POP"
    },
    "16302": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16304": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16305": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16307": {
      "branch": 230,
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "3"
    },
    "16308": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16309": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16310": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD1"
    },
    "16313": {
      "branch": 230,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16314": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16316": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16323": {
      "op": "SHL"
    },
    "16324": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16325": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16326": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16328": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "3"
    },
    "16329": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "16332": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16333": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E0"
    },
    "16336": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16337": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16338": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16340": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16341": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "16344": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16345": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "3"
    },
    "16346": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "16348": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "3"
    },
    "16349": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16350": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16351": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16352": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FF3"
    },
    "16355": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16356": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16358": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16359": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16360": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16363": {
      "op": "NOT"
    },
    "16364": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "3"
    },
    "16365": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "16368": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "3"
    },
    "16369": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16370": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16371": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16372": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1200
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 175,
      "value": "0x65"
    },
    "16374": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16375": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "16376": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16378": {
      "op": "NOT"
    },
    "16379": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "AND",
      "path": "4"
    },
    "16380": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "16381": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1193,
        1208
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "16382": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16383": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "16384": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17CC"
    },
    "16387": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16388": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16390": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16391": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "16392": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "16395": {
      "op": "NOT"
    },
    "16396": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "3"
    },
    "16397": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16398": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "16399": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "3"
    },
    "16400": {
      "fn": "PausableUpgradeable.__Pausable_init_unchained",
      "jump": "o",
      "offset": [
        1125,
        1215
      ],
      "op": "JUMP",
      "path": "4"
    },
    "16401": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4559,
        5058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16402": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4724,
        4736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "16404": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4781,
        4786
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 176
    },
    "16405": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4756,
        4777
      ],
      "op": "SELFBALANCE",
      "path": "10"
    },
    "16406": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4756,
        4786
      ],
      "op": "LT",
      "path": "10"
    },
    "16407": {
      "branch": 216,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4756,
        4786
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "16408": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4072"
    },
    "16411": {
      "branch": 216,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16412": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16414": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16421": {
      "op": "SHL"
    },
    "16422": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16423": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "16424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16426": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "16428": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16429": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "ADD",
      "path": "10"
    },
    "16430": {
      "op": "MSTORE"
    },
    "16431": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "16433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16435": {
      "op": "DUP3"
    },
    "16436": {
      "op": "ADD"
    },
    "16437": {
      "op": "MSTORE"
    },
    "16438": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "16471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16473": {
      "op": "DUP3"
    },
    "16474": {
      "op": "ADD"
    },
    "16475": {
      "op": "MSTORE"
    },
    "16476": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "16483": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "16485": {
      "op": "SHL"
    },
    "16486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16488": {
      "op": "DUP3"
    },
    "16489": {
      "op": "ADD"
    },
    "16490": {
      "op": "MSTORE"
    },
    "16491": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16493": {
      "op": "ADD"
    },
    "16494": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF5"
    },
    "16497": {
      "op": "JUMP"
    },
    "16498": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4748,
        4829
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16499": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16500": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "16501": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 177,
      "value": "0x40C0"
    },
    "16504": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16505": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16507": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16514": {
      "op": "SHL"
    },
    "16515": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16516": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "16517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16519": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "16521": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16522": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "ADD",
      "path": "10"
    },
    "16523": {
      "op": "MSTORE"
    },
    "16524": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "16526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16528": {
      "op": "DUP3"
    },
    "16529": {
      "op": "ADD"
    },
    "16530": {
      "op": "MSTORE"
    },
    "16531": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "16564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16566": {
      "op": "DUP3"
    },
    "16567": {
      "op": "ADD"
    },
    "16568": {
      "op": "MSTORE"
    },
    "16569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16571": {
      "op": "ADD"
    },
    "16572": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF5"
    },
    "16575": {
      "op": "JUMP"
    },
    "16576": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4839,
        4899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16577": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4911,
        4923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16579": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4925,
        4948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "16580": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4958
      ],
      "op": "DUP7",
      "path": "10"
    },
    "16581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16587": {
      "op": "SHL"
    },
    "16588": {
      "op": "SUB"
    },
    "16589": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4963
      ],
      "op": "AND",
      "path": "10"
    },
    "16590": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4971,
        4976
      ],
      "op": "DUP6",
      "path": "10"
    },
    "16591": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4978,
        4982
      ],
      "op": "DUP8",
      "path": "10"
    },
    "16592": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16594": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16595": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x40DC"
    },
    "16598": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16599": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "16600": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4A41"
    },
    "16603": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16604": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16605": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16607": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16609": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16610": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP1",
      "path": "10"
    },
    "16611": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP4",
      "path": "10"
    },
    "16612": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SUB",
      "path": "10"
    },
    "16613": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16614": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP6",
      "path": "10"
    },
    "16615": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP8",
      "path": "10"
    },
    "16616": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "GAS",
      "path": "10"
    },
    "16617": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "CALL",
      "path": "10"
    },
    "16618": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "16619": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16620": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16621": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16622": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "16623": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP1",
      "path": "10"
    },
    "16624": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16626": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16627": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "EQ",
      "path": "10"
    },
    "16628": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4119"
    },
    "16631": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16632": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16634": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16635": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16636": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16637": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "16639": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "NOT",
      "path": "10"
    },
    "16640": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "16642": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "16643": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "16644": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "AND",
      "path": "10"
    },
    "16645": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16646": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "16647": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16649": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "16650": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "16651": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16652": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "16653": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "16654": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16656": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "16658": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16659": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "ADD",
      "path": "10"
    },
    "16660": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "16661": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x411E"
    },
    "16664": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16665": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16666": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "16668": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16669": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16670": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16671": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4952,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16672": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16673": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16674": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16675": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4910,
        4983
      ],
      "op": "POP",
      "path": "10"
    },
    "16676": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5051
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 178,
      "value": "0x412E"
    },
    "16679": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5017,
        5024
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16680": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5026,
        5036
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16681": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5038,
        5050
      ],
      "op": "DUP7",
      "path": "10"
    },
    "16682": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5016
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4139"
    },
    "16685": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        5000,
        5051
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16686": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5000,
        5051
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16687": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4993,
        5051
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "16688": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4559,
        5058
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "16689": {
      "op": "POP"
    },
    "16690": {
      "op": "POP"
    },
    "16691": {
      "op": "POP"
    },
    "16692": {
      "op": "POP"
    },
    "16693": {
      "op": "POP"
    },
    "16694": {
      "op": "POP"
    },
    "16695": {
      "op": "POP"
    },
    "16696": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "o",
      "offset": [
        4559,
        5058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16697": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6222,
        6914
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16698": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6368,
        6380
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "16700": {
      "branch": 217,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6396,
        6403
      ],
      "op": "DUP4",
      "path": "10"
    },
    "16701": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "16702": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4148"
    },
    "16705": {
      "branch": 217,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16706": {
      "op": "POP"
    },
    "16707": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6426,
        6436
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 179
    },
    "16708": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6419,
        6436
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FD"
    },
    "16711": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6419,
        6436
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16712": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6392,
        6908
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16713": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6554
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16714": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6554
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16715": {
      "branch": 218,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6537,
        6558
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "16716": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4158"
    },
    "16719": {
      "branch": 218,
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16720": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6731,
        6741
      ],
      "op": "DUP3",
      "path": "10"
    },
    "16721": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6725,
        6742
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16722": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6791,
        6806
      ],
      "op": "DUP1",
      "path": "10"
    },
    "16723": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6778,
        6788
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16724": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6774,
        6776
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "16726": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6770,
        6789
      ],
      "op": "ADD",
      "path": "10"
    },
    "16727": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6763,
        6807
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16728": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6533,
        6898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16729": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6870,
        6882
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 180
    },
    "16730": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16732": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16739": {
      "op": "SHL"
    },
    "16740": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16741": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "16742": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "16744": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "ADD",
      "path": "10"
    },
    "16745": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF5"
    },
    "16748": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "16749": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "16750": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "offset": [
        6863,
        6883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4286"
    },
    "16753": {
      "fn": "AddressUpgradeable.verifyCallResult",
      "jump": "i",
      "offset": [
        6863,
        6883
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16754": {
      "op": "JUMPDEST"
    },
    "16755": {
      "op": "DUP3"
    },
    "16756": {
      "op": "DUP1"
    },
    "16757": {
      "op": "SLOAD"
    },
    "16758": {
      "op": "DUP3"
    },
    "16759": {
      "op": "DUP3"
    },
    "16760": {
      "op": "SSTORE"
    },
    "16761": {
      "op": "SWAP1"
    },
    "16762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16764": {
      "op": "MSTORE"
    },
    "16765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16769": {
      "op": "KECCAK256"
    },
    "16770": {
      "op": "SWAP1"
    },
    "16771": {
      "op": "DUP2"
    },
    "16772": {
      "op": "ADD"
    },
    "16773": {
      "op": "SWAP3"
    },
    "16774": {
      "op": "DUP3"
    },
    "16775": {
      "op": "ISZERO"
    },
    "16776": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16779": {
      "op": "JUMPI"
    },
    "16780": {
      "op": "SWAP2"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16783": {
      "op": "MUL"
    },
    "16784": {
      "op": "DUP3"
    },
    "16785": {
      "op": "ADD"
    },
    "16786": {
      "op": "JUMPDEST"
    },
    "16787": {
      "op": "DUP3"
    },
    "16788": {
      "op": "DUP2"
    },
    "16789": {
      "op": "GT"
    },
    "16790": {
      "op": "ISZERO"
    },
    "16791": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16794": {
      "op": "JUMPI"
    },
    "16795": {
      "op": "DUP2"
    },
    "16796": {
      "op": "SLOAD"
    },
    "16797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16803": {
      "op": "SHL"
    },
    "16804": {
      "op": "SUB"
    },
    "16805": {
      "op": "NOT"
    },
    "16806": {
      "op": "AND"
    },
    "16807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16813": {
      "op": "SHL"
    },
    "16814": {
      "op": "SUB"
    },
    "16815": {
      "op": "DUP5"
    },
    "16816": {
      "op": "CALLDATALOAD"
    },
    "16817": {
      "op": "AND"
    },
    "16818": {
      "op": "OR"
    },
    "16819": {
      "op": "DUP3"
    },
    "16820": {
      "op": "SSTORE"
    },
    "16821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16823": {
      "op": "SWAP1"
    },
    "16824": {
      "op": "SWAP3"
    },
    "16825": {
      "op": "ADD"
    },
    "16826": {
      "op": "SWAP2"
    },
    "16827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16829": {
      "op": "SWAP1"
    },
    "16830": {
      "op": "SWAP2"
    },
    "16831": {
      "op": "ADD"
    },
    "16832": {
      "op": "SWAP1"
    },
    "16833": {
      "op": "PUSH2",
      "value": "0x4192"
    },
    "16836": {
      "op": "JUMP"
    },
    "16837": {
      "op": "JUMPDEST"
    },
    "16838": {
      "op": "POP"
    },
    "16839": {
      "op": "PUSH2",
      "value": "0x384B"
    },
    "16842": {
      "op": "SWAP3"
    },
    "16843": {
      "op": "SWAP2"
    },
    "16844": {
      "op": "POP"
    },
    "16845": {
      "op": "PUSH2",
      "value": "0x4245"
    },
    "16848": {
      "jump": "i",
      "op": "JUMP"
    },
    "16849": {
      "op": "JUMPDEST"
    },
    "16850": {
      "op": "DUP3"
    },
    "16851": {
      "op": "DUP1"
    },
    "16852": {
      "op": "SLOAD"
    },
    "16853": {
      "op": "PUSH2",
      "value": "0x41DD"
    },
    "16856": {
      "op": "SWAP1"
    },
    "16857": {
      "op": "PUSH2",
      "value": "0x453B"
    },
    "16860": {
      "jump": "i",
      "op": "JUMP"
    },
    "16861": {
      "op": "JUMPDEST"
    },
    "16862": {
      "op": "SWAP1"
    },
    "16863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16865": {
      "op": "MSTORE"
    },
    "16866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16870": {
      "op": "KECCAK256"
    },
    "16871": {
      "op": "SWAP1"
    },
    "16872": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16874": {
      "op": "ADD"
    },
    "16875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16877": {
      "op": "SWAP1"
    },
    "16878": {
      "op": "DIV"
    },
    "16879": {
      "op": "DUP2"
    },
    "16880": {
      "op": "ADD"
    },
    "16881": {
      "op": "SWAP3"
    },
    "16882": {
      "op": "DUP3"
    },
    "16883": {
      "op": "PUSH2",
      "value": "0x41FF"
    },
    "16886": {
      "op": "JUMPI"
    },
    "16887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16889": {
      "op": "DUP6"
    },
    "16890": {
      "op": "SSTORE"
    },
    "16891": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16894": {
      "op": "JUMP"
    },
    "16895": {
      "op": "JUMPDEST"
    },
    "16896": {
      "op": "DUP3"
    },
    "16897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16899": {
      "op": "LT"
    },
    "16900": {
      "op": "PUSH2",
      "value": "0x4218"
    },
    "16903": {
      "op": "JUMPI"
    },
    "16904": {
      "op": "DUP1"
    },
    "16905": {
      "op": "MLOAD"
    },
    "16906": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16908": {
      "op": "NOT"
    },
    "16909": {
      "op": "AND"
    },
    "16910": {
      "op": "DUP4"
    },
    "16911": {
      "op": "DUP1"
    },
    "16912": {
      "op": "ADD"
    },
    "16913": {
      "op": "OR"
    },
    "16914": {
      "op": "DUP6"
    },
    "16915": {
      "op": "SSTORE"
    },
    "16916": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16919": {
      "op": "JUMP"
    },
    "16920": {
      "op": "JUMPDEST"
    },
    "16921": {
      "op": "DUP3"
    },
    "16922": {
      "op": "DUP1"
    },
    "16923": {
      "op": "ADD"
    },
    "16924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16926": {
      "op": "ADD"
    },
    "16927": {
      "op": "DUP6"
    },
    "16928": {
      "op": "SSTORE"
    },
    "16929": {
      "op": "DUP3"
    },
    "16930": {
      "op": "ISZERO"
    },
    "16931": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16934": {
      "op": "JUMPI"
    },
    "16935": {
      "op": "SWAP2"
    },
    "16936": {
      "op": "DUP3"
    },
    "16937": {
      "op": "ADD"
    },
    "16938": {
      "op": "JUMPDEST"
    },
    "16939": {
      "op": "DUP3"
    },
    "16940": {
      "op": "DUP2"
    },
    "16941": {
      "op": "GT"
    },
    "16942": {
      "op": "ISZERO"
    },
    "16943": {
      "op": "PUSH2",
      "value": "0x41C5"
    },
    "16946": {
      "op": "JUMPI"
    },
    "16947": {
      "op": "DUP3"
    },
    "16948": {
      "op": "MLOAD"
    },
    "16949": {
      "op": "DUP3"
    },
    "16950": {
      "op": "SSTORE"
    },
    "16951": {
      "op": "SWAP2"
    },
    "16952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16954": {
      "op": "ADD"
    },
    "16955": {
      "op": "SWAP2"
    },
    "16956": {
      "op": "SWAP1"
    },
    "16957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16959": {
      "op": "ADD"
    },
    "16960": {
      "op": "SWAP1"
    },
    "16961": {
      "op": "PUSH2",
      "value": "0x422A"
    },
    "16964": {
      "op": "JUMP"
    },
    "16965": {
      "op": "JUMPDEST"
    },
    "16966": {
      "op": "JUMPDEST"
    },
    "16967": {
      "op": "DUP1"
    },
    "16968": {
      "op": "DUP3"
    },
    "16969": {
      "op": "GT"
    },
    "16970": {
      "op": "ISZERO"
    },
    "16971": {
      "op": "PUSH2",
      "value": "0x384B"
    },
    "16974": {
      "op": "JUMPI"
    },
    "16975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16977": {
      "op": "DUP2"
    },
    "16978": {
      "op": "SSTORE"
    },
    "16979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16981": {
      "op": "ADD"
    },
    "16982": {
      "op": "PUSH2",
      "value": "0x4246"
    },
    "16985": {
      "op": "JUMP"
    },
    "16986": {
      "op": "JUMPDEST"
    },
    "16987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16989": {
      "op": "JUMPDEST"
    },
    "16990": {
      "op": "DUP4"
    },
    "16991": {
      "op": "DUP2"
    },
    "16992": {
      "op": "LT"
    },
    "16993": {
      "op": "ISZERO"
    },
    "16994": {
      "op": "PUSH2",
      "value": "0x4275"
    },
    "16997": {
      "op": "JUMPI"
    },
    "16998": {
      "op": "DUP2"
    },
    "16999": {
      "op": "DUP2"
    },
    "17000": {
      "op": "ADD"
    },
    "17001": {
      "op": "MLOAD"
    },
    "17002": {
      "op": "DUP4"
    },
    "17003": {
      "op": "DUP3"
    },
    "17004": {
      "op": "ADD"
    },
    "17005": {
      "op": "MSTORE"
    },
    "17006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17008": {
      "op": "ADD"
    },
    "17009": {
      "op": "PUSH2",
      "value": "0x425D"
    },
    "17012": {
      "op": "JUMP"
    },
    "17013": {
      "op": "JUMPDEST"
    },
    "17014": {
      "op": "DUP4"
    },
    "17015": {
      "op": "DUP2"
    },
    "17016": {
      "op": "GT"
    },
    "17017": {
      "op": "ISZERO"
    },
    "17018": {
      "op": "PUSH2",
      "value": "0x356C"
    },
    "17021": {
      "op": "JUMPI"
    },
    "17022": {
      "op": "POP"
    },
    "17023": {
      "op": "POP"
    },
    "17024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17026": {
      "op": "SWAP2"
    },
    "17027": {
      "op": "ADD"
    },
    "17028": {
      "op": "MSTORE"
    },
    "17029": {
      "jump": "o",
      "op": "JUMP"
    },
    "17030": {
      "op": "JUMPDEST"
    },
    "17031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17033": {
      "op": "DUP2"
    },
    "17034": {
      "op": "MSTORE"
    },
    "17035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17037": {
      "op": "DUP3"
    },
    "17038": {
      "op": "MLOAD"
    },
    "17039": {
      "op": "DUP1"
    },
    "17040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17042": {
      "op": "DUP5"
    },
    "17043": {
      "op": "ADD"
    },
    "17044": {
      "op": "MSTORE"
    },
    "17045": {
      "op": "PUSH2",
      "value": "0x42A5"
    },
    "17048": {
      "op": "DUP2"
    },
    "17049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17051": {
      "op": "DUP6"
    },
    "17052": {
      "op": "ADD"
    },
    "17053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17055": {
      "op": "DUP8"
    },
    "17056": {
      "op": "ADD"
    },
    "17057": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "17060": {
      "jump": "i",
      "op": "JUMP"
    },
    "17061": {
      "op": "JUMPDEST"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17064": {
      "op": "ADD"
    },
    "17065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17067": {
      "op": "NOT"
    },
    "17068": {
      "op": "AND"
    },
    "17069": {
      "op": "SWAP2"
    },
    "17070": {
      "op": "SWAP1"
    },
    "17071": {
      "op": "SWAP2"
    },
    "17072": {
      "op": "ADD"
    },
    "17073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17075": {
      "op": "ADD"
    },
    "17076": {
      "op": "SWAP3"
    },
    "17077": {
      "op": "SWAP2"
    },
    "17078": {
      "op": "POP"
    },
    "17079": {
      "op": "POP"
    },
    "17080": {
      "jump": "o",
      "op": "JUMP"
    },
    "17081": {
      "op": "JUMPDEST"
    },
    "17082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17086": {
      "op": "DUP3"
    },
    "17087": {
      "op": "DUP5"
    },
    "17088": {
      "op": "SUB"
    },
    "17089": {
      "op": "SLT"
    },
    "17090": {
      "op": "ISZERO"
    },
    "17091": {
      "op": "PUSH2",
      "value": "0x42CB"
    },
    "17094": {
      "op": "JUMPI"
    },
    "17095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17097": {
      "op": "DUP1"
    },
    "17098": {
      "op": "REVERT"
    },
    "17099": {
      "op": "JUMPDEST"
    },
    "17100": {
      "op": "DUP2"
    },
    "17101": {
      "op": "CALLDATALOAD"
    },
    "17102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17108": {
      "op": "SHL"
    },
    "17109": {
      "op": "SUB"
    },
    "17110": {
      "op": "DUP2"
    },
    "17111": {
      "op": "AND"
    },
    "17112": {
      "op": "DUP2"
    },
    "17113": {
      "op": "EQ"
    },
    "17114": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "17117": {
      "op": "JUMPI"
    },
    "17118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17120": {
      "op": "DUP1"
    },
    "17121": {
      "op": "REVERT"
    },
    "17122": {
      "op": "JUMPDEST"
    },
    "17123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17129": {
      "op": "SHL"
    },
    "17130": {
      "op": "SUB"
    },
    "17131": {
      "op": "DUP2"
    },
    "17132": {
      "op": "AND"
    },
    "17133": {
      "op": "DUP2"
    },
    "17134": {
      "op": "EQ"
    },
    "17135": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "17138": {
      "op": "JUMPI"
    },
    "17139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17141": {
      "op": "DUP1"
    },
    "17142": {
      "op": "REVERT"
    },
    "17143": {
      "op": "JUMPDEST"
    },
    "17144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17146": {
      "op": "DUP1"
    },
    "17147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17149": {
      "op": "DUP4"
    },
    "17150": {
      "op": "DUP6"
    },
    "17151": {
      "op": "SUB"
    },
    "17152": {
      "op": "SLT"
    },
    "17153": {
      "op": "ISZERO"
    },
    "17154": {
      "op": "PUSH2",
      "value": "0x430A"
    },
    "17157": {
      "op": "JUMPI"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17160": {
      "op": "DUP1"
    },
    "17161": {
      "op": "REVERT"
    },
    "17162": {
      "op": "JUMPDEST"
    },
    "17163": {
      "op": "DUP3"
    },
    "17164": {
      "op": "CALLDATALOAD"
    },
    "17165": {
      "op": "PUSH2",
      "value": "0x4315"
    },
    "17168": {
      "op": "DUP2"
    },
    "17169": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17172": {
      "jump": "i",
      "op": "JUMP"
    },
    "17173": {
      "op": "JUMPDEST"
    },
    "17174": {
      "op": "SWAP5"
    },
    "17175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17177": {
      "op": "SWAP4"
    },
    "17178": {
      "op": "SWAP1"
    },
    "17179": {
      "op": "SWAP4"
    },
    "17180": {
      "op": "ADD"
    },
    "17181": {
      "op": "CALLDATALOAD"
    },
    "17182": {
      "op": "SWAP4"
    },
    "17183": {
      "op": "POP"
    },
    "17184": {
      "op": "POP"
    },
    "17185": {
      "op": "POP"
    },
    "17186": {
      "jump": "o",
      "op": "JUMP"
    },
    "17187": {
      "op": "JUMPDEST"
    },
    "17188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17190": {
      "op": "DUP1"
    },
    "17191": {
      "op": "DUP3"
    },
    "17192": {
      "op": "MSTORE"
    },
    "17193": {
      "op": "DUP3"
    },
    "17194": {
      "op": "MLOAD"
    },
    "17195": {
      "op": "DUP3"
    },
    "17196": {
      "op": "DUP3"
    },
    "17197": {
      "op": "ADD"
    },
    "17198": {
      "op": "DUP2"
    },
    "17199": {
      "op": "SWAP1"
    },
    "17200": {
      "op": "MSTORE"
    },
    "17201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17203": {
      "op": "SWAP2"
    },
    "17204": {
      "op": "SWAP1"
    },
    "17205": {
      "op": "DUP5"
    },
    "17206": {
      "op": "DUP3"
    },
    "17207": {
      "op": "ADD"
    },
    "17208": {
      "op": "SWAP1"
    },
    "17209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17211": {
      "op": "DUP6"
    },
    "17212": {
      "op": "ADD"
    },
    "17213": {
      "op": "SWAP1"
    },
    "17214": {
      "op": "DUP5"
    },
    "17215": {
      "op": "JUMPDEST"
    },
    "17216": {
      "op": "DUP2"
    },
    "17217": {
      "op": "DUP2"
    },
    "17218": {
      "op": "LT"
    },
    "17219": {
      "op": "ISZERO"
    },
    "17220": {
      "op": "PUSH2",
      "value": "0x4364"
    },
    "17223": {
      "op": "JUMPI"
    },
    "17224": {
      "op": "DUP4"
    },
    "17225": {
      "op": "MLOAD"
    },
    "17226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17232": {
      "op": "SHL"
    },
    "17233": {
      "op": "SUB"
    },
    "17234": {
      "op": "AND"
    },
    "17235": {
      "op": "DUP4"
    },
    "17236": {
      "op": "MSTORE"
    },
    "17237": {
      "op": "SWAP3"
    },
    "17238": {
      "op": "DUP5"
    },
    "17239": {
      "op": "ADD"
    },
    "17240": {
      "op": "SWAP3"
    },
    "17241": {
      "op": "SWAP2"
    },
    "17242": {
      "op": "DUP5"
    },
    "17243": {
      "op": "ADD"
    },
    "17244": {
      "op": "SWAP2"
    },
    "17245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17247": {
      "op": "ADD"
    },
    "17248": {
      "op": "PUSH2",
      "value": "0x433F"
    },
    "17251": {
      "op": "JUMP"
    },
    "17252": {
      "op": "JUMPDEST"
    },
    "17253": {
      "op": "POP"
    },
    "17254": {
      "op": "SWAP1"
    },
    "17255": {
      "op": "SWAP7"
    },
    "17256": {
      "op": "SWAP6"
    },
    "17257": {
      "op": "POP"
    },
    "17258": {
      "op": "POP"
    },
    "17259": {
      "op": "POP"
    },
    "17260": {
      "op": "POP"
    },
    "17261": {
      "op": "POP"
    },
    "17262": {
      "op": "POP"
    },
    "17263": {
      "jump": "o",
      "op": "JUMP"
    },
    "17264": {
      "op": "JUMPDEST"
    },
    "17265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17269": {
      "op": "DUP3"
    },
    "17270": {
      "op": "DUP5"
    },
    "17271": {
      "op": "SUB"
    },
    "17272": {
      "op": "SLT"
    },
    "17273": {
      "op": "ISZERO"
    },
    "17274": {
      "op": "PUSH2",
      "value": "0x4382"
    },
    "17277": {
      "op": "JUMPI"
    },
    "17278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17280": {
      "op": "DUP1"
    },
    "17281": {
      "op": "REVERT"
    },
    "17282": {
      "op": "JUMPDEST"
    },
    "17283": {
      "op": "POP"
    },
    "17284": {
      "op": "CALLDATALOAD"
    },
    "17285": {
      "op": "SWAP2"
    },
    "17286": {
      "op": "SWAP1"
    },
    "17287": {
      "op": "POP"
    },
    "17288": {
      "jump": "o",
      "op": "JUMP"
    },
    "17289": {
      "op": "JUMPDEST"
    },
    "17290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17294": {
      "op": "DUP3"
    },
    "17295": {
      "op": "DUP5"
    },
    "17296": {
      "op": "SUB"
    },
    "17297": {
      "op": "SLT"
    },
    "17298": {
      "op": "ISZERO"
    },
    "17299": {
      "op": "PUSH2",
      "value": "0x439B"
    },
    "17302": {
      "op": "JUMPI"
    },
    "17303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17305": {
      "op": "DUP1"
    },
    "17306": {
      "op": "REVERT"
    },
    "17307": {
      "op": "JUMPDEST"
    },
    "17308": {
      "op": "DUP2"
    },
    "17309": {
      "op": "CALLDATALOAD"
    },
    "17310": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "17313": {
      "op": "DUP2"
    },
    "17314": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17317": {
      "jump": "i",
      "op": "JUMP"
    },
    "17318": {
      "op": "JUMPDEST"
    },
    "17319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17321": {
      "op": "DUP1"
    },
    "17322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17324": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17326": {
      "op": "DUP5"
    },
    "17327": {
      "op": "DUP7"
    },
    "17328": {
      "op": "SUB"
    },
    "17329": {
      "op": "SLT"
    },
    "17330": {
      "op": "ISZERO"
    },
    "17331": {
      "op": "PUSH2",
      "value": "0x43BB"
    },
    "17334": {
      "op": "JUMPI"
    },
    "17335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17337": {
      "op": "DUP1"
    },
    "17338": {
      "op": "REVERT"
    },
    "17339": {
      "op": "JUMPDEST"
    },
    "17340": {
      "op": "DUP4"
    },
    "17341": {
      "op": "CALLDATALOAD"
    },
    "17342": {
      "op": "PUSH2",
      "value": "0x43C6"
    },
    "17345": {
      "op": "DUP2"
    },
    "17346": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17349": {
      "jump": "i",
      "op": "JUMP"
    },
    "17350": {
      "op": "JUMPDEST"
    },
    "17351": {
      "op": "SWAP3"
    },
    "17352": {
      "op": "POP"
    },
    "17353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17355": {
      "op": "DUP5"
    },
    "17356": {
      "op": "ADD"
    },
    "17357": {
      "op": "CALLDATALOAD"
    },
    "17358": {
      "op": "PUSH2",
      "value": "0x43D6"
    },
    "17361": {
      "op": "DUP2"
    },
    "17362": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17365": {
      "jump": "i",
      "op": "JUMP"
    },
    "17366": {
      "op": "JUMPDEST"
    },
    "17367": {
      "op": "SWAP3"
    },
    "17368": {
      "op": "SWAP6"
    },
    "17369": {
      "op": "SWAP3"
    },
    "17370": {
      "op": "SWAP5"
    },
    "17371": {
      "op": "POP"
    },
    "17372": {
      "op": "POP"
    },
    "17373": {
      "op": "POP"
    },
    "17374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17376": {
      "op": "SWAP2"
    },
    "17377": {
      "op": "SWAP1"
    },
    "17378": {
      "op": "SWAP2"
    },
    "17379": {
      "op": "ADD"
    },
    "17380": {
      "op": "CALLDATALOAD"
    },
    "17381": {
      "op": "SWAP1"
    },
    "17382": {
      "jump": "o",
      "op": "JUMP"
    },
    "17383": {
      "op": "JUMPDEST"
    },
    "17384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17386": {
      "op": "DUP1"
    },
    "17387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17389": {
      "op": "DUP4"
    },
    "17390": {
      "op": "DUP6"
    },
    "17391": {
      "op": "SUB"
    },
    "17392": {
      "op": "SLT"
    },
    "17393": {
      "op": "ISZERO"
    },
    "17394": {
      "op": "PUSH2",
      "value": "0x43FA"
    },
    "17397": {
      "op": "JUMPI"
    },
    "17398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17400": {
      "op": "DUP1"
    },
    "17401": {
      "op": "REVERT"
    },
    "17402": {
      "op": "JUMPDEST"
    },
    "17403": {
      "op": "POP"
    },
    "17404": {
      "op": "POP"
    },
    "17405": {
      "op": "DUP1"
    },
    "17406": {
      "op": "CALLDATALOAD"
    },
    "17407": {
      "op": "SWAP3"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17410": {
      "op": "SWAP1"
    },
    "17411": {
      "op": "SWAP2"
    },
    "17412": {
      "op": "ADD"
    },
    "17413": {
      "op": "CALLDATALOAD"
    },
    "17414": {
      "op": "SWAP2"
    },
    "17415": {
      "op": "POP"
    },
    "17416": {
      "jump": "o",
      "op": "JUMP"
    },
    "17417": {
      "op": "JUMPDEST"
    },
    "17418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17422": {
      "op": "DUP3"
    },
    "17423": {
      "op": "DUP5"
    },
    "17424": {
      "op": "SUB"
    },
    "17425": {
      "op": "SLT"
    },
    "17426": {
      "op": "ISZERO"
    },
    "17427": {
      "op": "PUSH2",
      "value": "0x441B"
    },
    "17430": {
      "op": "JUMPI"
    },
    "17431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17433": {
      "op": "DUP1"
    },
    "17434": {
      "op": "REVERT"
    },
    "17435": {
      "op": "JUMPDEST"
    },
    "17436": {
      "op": "DUP2"
    },
    "17437": {
      "op": "CALLDATALOAD"
    },
    "17438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17444": {
      "op": "SHL"
    },
    "17445": {
      "op": "SUB"
    },
    "17446": {
      "op": "DUP2"
    },
    "17447": {
      "op": "AND"
    },
    "17448": {
      "op": "DUP2"
    },
    "17449": {
      "op": "EQ"
    },
    "17450": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "17453": {
      "op": "JUMPI"
    },
    "17454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17456": {
      "op": "DUP1"
    },
    "17457": {
      "op": "REVERT"
    },
    "17458": {
      "op": "JUMPDEST"
    },
    "17459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17461": {
      "op": "DUP1"
    },
    "17462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17464": {
      "op": "DUP4"
    },
    "17465": {
      "op": "DUP6"
    },
    "17466": {
      "op": "SUB"
    },
    "17467": {
      "op": "SLT"
    },
    "17468": {
      "op": "ISZERO"
    },
    "17469": {
      "op": "PUSH2",
      "value": "0x4445"
    },
    "17472": {
      "op": "JUMPI"
    },
    "17473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17475": {
      "op": "DUP1"
    },
    "17476": {
      "op": "REVERT"
    },
    "17477": {
      "op": "JUMPDEST"
    },
    "17478": {
      "op": "DUP3"
    },
    "17479": {
      "op": "CALLDATALOAD"
    },
    "17480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17486": {
      "op": "SHL"
    },
    "17487": {
      "op": "SUB"
    },
    "17488": {
      "op": "DUP1"
    },
    "17489": {
      "op": "DUP3"
    },
    "17490": {
      "op": "GT"
    },
    "17491": {
      "op": "ISZERO"
    },
    "17492": {
      "op": "PUSH2",
      "value": "0x445C"
    },
    "17495": {
      "op": "JUMPI"
    },
    "17496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17498": {
      "op": "DUP1"
    },
    "17499": {
      "op": "REVERT"
    },
    "17500": {
      "op": "JUMPDEST"
    },
    "17501": {
      "op": "DUP2"
    },
    "17502": {
      "op": "DUP6"
    },
    "17503": {
      "op": "ADD"
    },
    "17504": {
      "op": "SWAP2"
    },
    "17505": {
      "op": "POP"
    },
    "17506": {
      "op": "DUP6"
    },
    "17507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17509": {
      "op": "DUP4"
    },
    "17510": {
      "op": "ADD"
    },
    "17511": {
      "op": "SLT"
    },
    "17512": {
      "op": "PUSH2",
      "value": "0x4470"
    },
    "17515": {
      "op": "JUMPI"
    },
    "17516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17518": {
      "op": "DUP1"
    },
    "17519": {
      "op": "REVERT"
    },
    "17520": {
      "op": "JUMPDEST"
    },
    "17521": {
      "op": "DUP2"
    },
    "17522": {
      "op": "CALLDATALOAD"
    },
    "17523": {
      "op": "DUP2"
    },
    "17524": {
      "op": "DUP2"
    },
    "17525": {
      "op": "GT"
    },
    "17526": {
      "op": "ISZERO"
    },
    "17527": {
      "op": "PUSH2",
      "value": "0x447F"
    },
    "17530": {
      "op": "JUMPI"
    },
    "17531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17533": {
      "op": "DUP1"
    },
    "17534": {
      "op": "REVERT"
    },
    "17535": {
      "op": "JUMPDEST"
    },
    "17536": {
      "op": "DUP7"
    },
    "17537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17539": {
      "op": "DUP3"
    },
    "17540": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17542": {
      "op": "SHL"
    },
    "17543": {
      "op": "DUP6"
    },
    "17544": {
      "op": "ADD"
    },
    "17545": {
      "op": "ADD"
    },
    "17546": {
      "op": "GT"
    },
    "17547": {
      "op": "ISZERO"
    },
    "17548": {
      "op": "PUSH2",
      "value": "0x4494"
    },
    "17551": {
      "op": "JUMPI"
    },
    "17552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17554": {
      "op": "DUP1"
    },
    "17555": {
      "op": "REVERT"
    },
    "17556": {
      "op": "JUMPDEST"
    },
    "17557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17559": {
      "op": "SWAP3"
    },
    "17560": {
      "op": "SWAP1"
    },
    "17561": {
      "op": "SWAP3"
    },
    "17562": {
      "op": "ADD"
    },
    "17563": {
      "op": "SWAP7"
    },
    "17564": {
      "op": "SWAP2"
    },
    "17565": {
      "op": "SWAP6"
    },
    "17566": {
      "op": "POP"
    },
    "17567": {
      "op": "SWAP1"
    },
    "17568": {
      "op": "SWAP4"
    },
    "17569": {
      "op": "POP"
    },
    "17570": {
      "op": "POP"
    },
    "17571": {
      "op": "POP"
    },
    "17572": {
      "op": "POP"
    },
    "17573": {
      "jump": "o",
      "op": "JUMP"
    },
    "17574": {
      "op": "JUMPDEST"
    },
    "17575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17577": {
      "op": "DUP1"
    },
    "17578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17580": {
      "op": "DUP4"
    },
    "17581": {
      "op": "DUP6"
    },
    "17582": {
      "op": "SUB"
    },
    "17583": {
      "op": "SLT"
    },
    "17584": {
      "op": "ISZERO"
    },
    "17585": {
      "op": "PUSH2",
      "value": "0x44B9"
    },
    "17588": {
      "op": "JUMPI"
    },
    "17589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17591": {
      "op": "DUP1"
    },
    "17592": {
      "op": "REVERT"
    },
    "17593": {
      "op": "JUMPDEST"
    },
    "17594": {
      "op": "DUP3"
    },
    "17595": {
      "op": "CALLDATALOAD"
    },
    "17596": {
      "op": "PUSH2",
      "value": "0x44C4"
    },
    "17599": {
      "op": "DUP2"
    },
    "17600": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17603": {
      "jump": "i",
      "op": "JUMP"
    },
    "17604": {
      "op": "JUMPDEST"
    },
    "17605": {
      "op": "SWAP2"
    },
    "17606": {
      "op": "POP"
    },
    "17607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17609": {
      "op": "DUP4"
    },
    "17610": {
      "op": "ADD"
    },
    "17611": {
      "op": "CALLDATALOAD"
    },
    "17612": {
      "op": "PUSH2",
      "value": "0x44D4"
    },
    "17615": {
      "op": "DUP2"
    },
    "17616": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17619": {
      "jump": "i",
      "op": "JUMP"
    },
    "17620": {
      "op": "JUMPDEST"
    },
    "17621": {
      "op": "DUP1"
    },
    "17622": {
      "op": "SWAP2"
    },
    "17623": {
      "op": "POP"
    },
    "17624": {
      "op": "POP"
    },
    "17625": {
      "op": "SWAP3"
    },
    "17626": {
      "op": "POP"
    },
    "17627": {
      "op": "SWAP3"
    },
    "17628": {
      "op": "SWAP1"
    },
    "17629": {
      "op": "POP"
    },
    "17630": {
      "jump": "o",
      "op": "JUMP"
    },
    "17631": {
      "op": "JUMPDEST"
    },
    "17632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17634": {
      "op": "DUP1"
    },
    "17635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17637": {
      "op": "DUP1"
    },
    "17638": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17640": {
      "op": "DUP6"
    },
    "17641": {
      "op": "DUP8"
    },
    "17642": {
      "op": "SUB"
    },
    "17643": {
      "op": "SLT"
    },
    "17644": {
      "op": "ISZERO"
    },
    "17645": {
      "op": "PUSH2",
      "value": "0x44F5"
    },
    "17648": {
      "op": "JUMPI"
    },
    "17649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17651": {
      "op": "DUP1"
    },
    "17652": {
      "op": "REVERT"
    },
    "17653": {
      "op": "JUMPDEST"
    },
    "17654": {
      "op": "DUP5"
    },
    "17655": {
      "op": "CALLDATALOAD"
    },
    "17656": {
      "op": "PUSH2",
      "value": "0x4500"
    },
    "17659": {
      "op": "DUP2"
    },
    "17660": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17663": {
      "jump": "i",
      "op": "JUMP"
    },
    "17664": {
      "op": "JUMPDEST"
    },
    "17665": {
      "op": "SWAP4"
    },
    "17666": {
      "op": "POP"
    },
    "17667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17669": {
      "op": "DUP6"
    },
    "17670": {
      "op": "ADD"
    },
    "17671": {
      "op": "CALLDATALOAD"
    },
    "17672": {
      "op": "PUSH2",
      "value": "0x4510"
    },
    "17675": {
      "op": "DUP2"
    },
    "17676": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17679": {
      "jump": "i",
      "op": "JUMP"
    },
    "17680": {
      "op": "JUMPDEST"
    },
    "17681": {
      "op": "SWAP3"
    },
    "17682": {
      "op": "POP"
    },
    "17683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17685": {
      "op": "DUP6"
    },
    "17686": {
      "op": "ADD"
    },
    "17687": {
      "op": "CALLDATALOAD"
    },
    "17688": {
      "op": "PUSH2",
      "value": "0x4520"
    },
    "17691": {
      "op": "DUP2"
    },
    "17692": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17695": {
      "jump": "i",
      "op": "JUMP"
    },
    "17696": {
      "op": "JUMPDEST"
    },
    "17697": {
      "op": "SWAP2"
    },
    "17698": {
      "op": "POP"
    },
    "17699": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17701": {
      "op": "DUP6"
    },
    "17702": {
      "op": "ADD"
    },
    "17703": {
      "op": "CALLDATALOAD"
    },
    "17704": {
      "op": "PUSH2",
      "value": "0x4530"
    },
    "17707": {
      "op": "DUP2"
    },
    "17708": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "17711": {
      "jump": "i",
      "op": "JUMP"
    },
    "17712": {
      "op": "JUMPDEST"
    },
    "17713": {
      "op": "SWAP4"
    },
    "17714": {
      "op": "SWAP7"
    },
    "17715": {
      "op": "SWAP3"
    },
    "17716": {
      "op": "SWAP6"
    },
    "17717": {
      "op": "POP"
    },
    "17718": {
      "op": "SWAP1"
    },
    "17719": {
      "op": "SWAP4"
    },
    "17720": {
      "op": "POP"
    },
    "17721": {
      "op": "POP"
    },
    "17722": {
      "jump": "o",
      "op": "JUMP"
    },
    "17723": {
      "op": "JUMPDEST"
    },
    "17724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17726": {
      "op": "DUP2"
    },
    "17727": {
      "op": "DUP2"
    },
    "17728": {
      "op": "SHR"
    },
    "17729": {
      "op": "SWAP1"
    },
    "17730": {
      "op": "DUP3"
    },
    "17731": {
      "op": "AND"
    },
    "17732": {
      "op": "DUP1"
    },
    "17733": {
      "op": "PUSH2",
      "value": "0x454F"
    },
    "17736": {
      "op": "JUMPI"
    },
    "17737": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "17739": {
      "op": "DUP3"
    },
    "17740": {
      "op": "AND"
    },
    "17741": {
      "op": "SWAP2"
    },
    "17742": {
      "op": "POP"
    },
    "17743": {
      "op": "JUMPDEST"
    },
    "17744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17746": {
      "op": "DUP3"
    },
    "17747": {
      "op": "LT"
    },
    "17748": {
      "op": "DUP2"
    },
    "17749": {
      "op": "EQ"
    },
    "17750": {
      "op": "ISZERO"
    },
    "17751": {
      "op": "PUSH2",
      "value": "0x4570"
    },
    "17754": {
      "op": "JUMPI"
    },
    "17755": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17762": {
      "op": "SHL"
    },
    "17763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17765": {
      "op": "MSTORE"
    },
    "17766": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "17768": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17770": {
      "op": "MSTORE"
    },
    "17771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17775": {
      "op": "REVERT"
    },
    "17776": {
      "op": "JUMPDEST"
    },
    "17777": {
      "op": "POP"
    },
    "17778": {
      "op": "SWAP2"
    },
    "17779": {
      "op": "SWAP1"
    },
    "17780": {
      "op": "POP"
    },
    "17781": {
      "jump": "o",
      "op": "JUMP"
    },
    "17782": {
      "op": "JUMPDEST"
    },
    "17783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17789": {
      "op": "SHL"
    },
    "17790": {
      "op": "SUB"
    },
    "17791": {
      "op": "SWAP4"
    },
    "17792": {
      "op": "DUP5"
    },
    "17793": {
      "op": "AND"
    },
    "17794": {
      "op": "DUP2"
    },
    "17795": {
      "op": "MSTORE"
    },
    "17796": {
      "op": "SWAP2"
    },
    "17797": {
      "op": "SWAP1"
    },
    "17798": {
      "op": "SWAP3"
    },
    "17799": {
      "op": "AND"
    },
    "17800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17802": {
      "op": "DUP3"
    },
    "17803": {
      "op": "ADD"
    },
    "17804": {
      "op": "MSTORE"
    },
    "17805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17809": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17811": {
      "op": "SHL"
    },
    "17812": {
      "op": "SUB"
    },
    "17813": {
      "op": "NOT"
    },
    "17814": {
      "op": "SWAP1"
    },
    "17815": {
      "op": "SWAP2"
    },
    "17816": {
      "op": "AND"
    },
    "17817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17819": {
      "op": "DUP3"
    },
    "17820": {
      "op": "ADD"
    },
    "17821": {
      "op": "MSTORE"
    },
    "17822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17824": {
      "op": "ADD"
    },
    "17825": {
      "op": "SWAP1"
    },
    "17826": {
      "jump": "o",
      "op": "JUMP"
    },
    "17827": {
      "op": "JUMPDEST"
    },
    "17828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17832": {
      "op": "DUP3"
    },
    "17833": {
      "op": "DUP5"
    },
    "17834": {
      "op": "SUB"
    },
    "17835": {
      "op": "SLT"
    },
    "17836": {
      "op": "ISZERO"
    },
    "17837": {
      "op": "PUSH2",
      "value": "0x45B5"
    },
    "17840": {
      "op": "JUMPI"
    },
    "17841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17843": {
      "op": "DUP1"
    },
    "17844": {
      "op": "REVERT"
    },
    "17845": {
      "op": "JUMPDEST"
    },
    "17846": {
      "op": "DUP2"
    },
    "17847": {
      "op": "MLOAD"
    },
    "17848": {
      "op": "DUP1"
    },
    "17849": {
      "op": "ISZERO"
    },
    "17850": {
      "op": "ISZERO"
    },
    "17851": {
      "op": "DUP2"
    },
    "17852": {
      "op": "EQ"
    },
    "17853": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "17856": {
      "op": "JUMPI"
    },
    "17857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17859": {
      "op": "DUP1"
    },
    "17860": {
      "op": "REVERT"
    },
    "17861": {
      "op": "JUMPDEST"
    },
    "17862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17864": {
      "op": "DUP1"
    },
    "17865": {
      "op": "DUP3"
    },
    "17866": {
      "op": "MSTORE"
    },
    "17867": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "17869": {
      "op": "SWAP1"
    },
    "17870": {
      "op": "DUP3"
    },
    "17871": {
      "op": "ADD"
    },
    "17872": {
      "op": "MSTORE"
    },
    "17873": {
      "op": "PUSH12",
      "value": "0x15539055551213D492569151"
    },
    "17886": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "17888": {
      "op": "SHL"
    },
    "17889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17891": {
      "op": "DUP3"
    },
    "17892": {
      "op": "ADD"
    },
    "17893": {
      "op": "MSTORE"
    },
    "17894": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17896": {
      "op": "ADD"
    },
    "17897": {
      "op": "SWAP1"
    },
    "17898": {
      "jump": "o",
      "op": "JUMP"
    },
    "17899": {
      "op": "JUMPDEST"
    },
    "17900": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17905": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17907": {
      "op": "SHL"
    },
    "17908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17910": {
      "op": "MSTORE"
    },
    "17911": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "17913": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17915": {
      "op": "MSTORE"
    },
    "17916": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17920": {
      "op": "REVERT"
    },
    "17921": {
      "op": "JUMPDEST"
    },
    "17922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17930": {
      "op": "SHL"
    },
    "17931": {
      "op": "SUB"
    },
    "17932": {
      "op": "DUP1"
    },
    "17933": {
      "op": "DUP4"
    },
    "17934": {
      "op": "AND"
    },
    "17935": {
      "op": "DUP2"
    },
    "17936": {
      "op": "DUP6"
    },
    "17937": {
      "op": "AND"
    },
    "17938": {
      "op": "DUP1"
    },
    "17939": {
      "op": "DUP4"
    },
    "17940": {
      "op": "SUB"
    },
    "17941": {
      "op": "DUP3"
    },
    "17942": {
      "op": "GT"
    },
    "17943": {
      "op": "ISZERO"
    },
    "17944": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "17947": {
      "op": "JUMPI"
    },
    "17948": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "17951": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "17954": {
      "jump": "i",
      "op": "JUMP"
    },
    "17955": {
      "op": "JUMPDEST"
    },
    "17956": {
      "op": "ADD"
    },
    "17957": {
      "op": "SWAP5"
    },
    "17958": {
      "op": "SWAP4"
    },
    "17959": {
      "op": "POP"
    },
    "17960": {
      "op": "POP"
    },
    "17961": {
      "op": "POP"
    },
    "17962": {
      "op": "POP"
    },
    "17963": {
      "jump": "o",
      "op": "JUMP"
    },
    "17964": {
      "op": "JUMPDEST"
    },
    "17965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17969": {
      "op": "NOT"
    },
    "17970": {
      "op": "DUP3"
    },
    "17971": {
      "op": "EQ"
    },
    "17972": {
      "op": "ISZERO"
    },
    "17973": {
      "op": "PUSH2",
      "value": "0x4640"
    },
    "17976": {
      "op": "JUMPI"
    },
    "17977": {
      "op": "PUSH2",
      "value": "0x4640"
    },
    "17980": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "17983": {
      "jump": "i",
      "op": "JUMP"
    },
    "17984": {
      "op": "JUMPDEST"
    },
    "17985": {
      "op": "POP"
    },
    "17986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17988": {
      "op": "ADD"
    },
    "17989": {
      "op": "SWAP1"
    },
    "17990": {
      "jump": "o",
      "op": "JUMP"
    },
    "17991": {
      "op": "JUMPDEST"
    },
    "17992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17994": {
      "op": "DUP3"
    },
    "17995": {
      "op": "DUP3"
    },
    "17996": {
      "op": "LT"
    },
    "17997": {
      "op": "ISZERO"
    },
    "17998": {
      "op": "PUSH2",
      "value": "0x4659"
    },
    "18001": {
      "op": "JUMPI"
    },
    "18002": {
      "op": "PUSH2",
      "value": "0x4659"
    },
    "18005": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18008": {
      "jump": "i",
      "op": "JUMP"
    },
    "18009": {
      "op": "JUMPDEST"
    },
    "18010": {
      "op": "POP"
    },
    "18011": {
      "op": "SUB"
    },
    "18012": {
      "op": "SWAP1"
    },
    "18013": {
      "jump": "o",
      "op": "JUMP"
    },
    "18014": {
      "op": "JUMPDEST"
    },
    "18015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18017": {
      "op": "DUP3"
    },
    "18018": {
      "op": "NOT"
    },
    "18019": {
      "op": "DUP3"
    },
    "18020": {
      "op": "GT"
    },
    "18021": {
      "op": "ISZERO"
    },
    "18022": {
      "op": "PUSH2",
      "value": "0x4671"
    },
    "18025": {
      "op": "JUMPI"
    },
    "18026": {
      "op": "PUSH2",
      "value": "0x4671"
    },
    "18029": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18032": {
      "jump": "i",
      "op": "JUMP"
    },
    "18033": {
      "op": "JUMPDEST"
    },
    "18034": {
      "op": "POP"
    },
    "18035": {
      "op": "ADD"
    },
    "18036": {
      "op": "SWAP1"
    },
    "18037": {
      "jump": "o",
      "op": "JUMP"
    },
    "18038": {
      "op": "JUMPDEST"
    },
    "18039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18041": {
      "op": "DUP2"
    },
    "18042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18044": {
      "op": "NOT"
    },
    "18045": {
      "op": "DIV"
    },
    "18046": {
      "op": "DUP4"
    },
    "18047": {
      "op": "GT"
    },
    "18048": {
      "op": "DUP3"
    },
    "18049": {
      "op": "ISZERO"
    },
    "18050": {
      "op": "ISZERO"
    },
    "18051": {
      "op": "AND"
    },
    "18052": {
      "op": "ISZERO"
    },
    "18053": {
      "op": "PUSH2",
      "value": "0x4690"
    },
    "18056": {
      "op": "JUMPI"
    },
    "18057": {
      "op": "PUSH2",
      "value": "0x4690"
    },
    "18060": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18063": {
      "jump": "i",
      "op": "JUMP"
    },
    "18064": {
      "op": "JUMPDEST"
    },
    "18065": {
      "op": "POP"
    },
    "18066": {
      "op": "MUL"
    },
    "18067": {
      "op": "SWAP1"
    },
    "18068": {
      "jump": "o",
      "op": "JUMP"
    },
    "18069": {
      "op": "JUMPDEST"
    },
    "18070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18072": {
      "op": "DUP3"
    },
    "18073": {
      "op": "PUSH2",
      "value": "0x46B2"
    },
    "18076": {
      "op": "JUMPI"
    },
    "18077": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18084": {
      "op": "SHL"
    },
    "18085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18087": {
      "op": "MSTORE"
    },
    "18088": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "18090": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18092": {
      "op": "MSTORE"
    },
    "18093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18097": {
      "op": "REVERT"
    },
    "18098": {
      "op": "JUMPDEST"
    },
    "18099": {
      "op": "POP"
    },
    "18100": {
      "op": "DIV"
    },
    "18101": {
      "op": "SWAP1"
    },
    "18102": {
      "jump": "o",
      "op": "JUMP"
    },
    "18103": {
      "op": "JUMPDEST"
    },
    "18104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18108": {
      "op": "DUP3"
    },
    "18109": {
      "op": "DUP5"
    },
    "18110": {
      "op": "SUB"
    },
    "18111": {
      "op": "SLT"
    },
    "18112": {
      "op": "ISZERO"
    },
    "18113": {
      "op": "PUSH2",
      "value": "0x46C9"
    },
    "18116": {
      "op": "JUMPI"
    },
    "18117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18119": {
      "op": "DUP1"
    },
    "18120": {
      "op": "REVERT"
    },
    "18121": {
      "op": "JUMPDEST"
    },
    "18122": {
      "op": "POP"
    },
    "18123": {
      "op": "MLOAD"
    },
    "18124": {
      "op": "SWAP2"
    },
    "18125": {
      "op": "SWAP1"
    },
    "18126": {
      "op": "POP"
    },
    "18127": {
      "jump": "o",
      "op": "JUMP"
    },
    "18128": {
      "op": "JUMPDEST"
    },
    "18129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18131": {
      "op": "DUP1"
    },
    "18132": {
      "op": "DUP3"
    },
    "18133": {
      "op": "MSTORE"
    },
    "18134": {
      "op": "DUP2"
    },
    "18135": {
      "op": "DUP2"
    },
    "18136": {
      "op": "ADD"
    },
    "18137": {
      "op": "DUP4"
    },
    "18138": {
      "op": "SWAP1"
    },
    "18139": {
      "op": "MSTORE"
    },
    "18140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18142": {
      "op": "SWAP1"
    },
    "18143": {
      "op": "DUP5"
    },
    "18144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18146": {
      "op": "DUP5"
    },
    "18147": {
      "op": "ADD"
    },
    "18148": {
      "op": "DUP4"
    },
    "18149": {
      "op": "JUMPDEST"
    },
    "18150": {
      "op": "DUP7"
    },
    "18151": {
      "op": "DUP2"
    },
    "18152": {
      "op": "LT"
    },
    "18153": {
      "op": "ISZERO"
    },
    "18154": {
      "op": "PUSH2",
      "value": "0x4713"
    },
    "18157": {
      "op": "JUMPI"
    },
    "18158": {
      "op": "DUP3"
    },
    "18159": {
      "op": "CALLDATALOAD"
    },
    "18160": {
      "op": "PUSH2",
      "value": "0x46F8"
    },
    "18163": {
      "op": "DUP2"
    },
    "18164": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "18167": {
      "jump": "i",
      "op": "JUMP"
    },
    "18168": {
      "op": "JUMPDEST"
    },
    "18169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18175": {
      "op": "SHL"
    },
    "18176": {
      "op": "SUB"
    },
    "18177": {
      "op": "AND"
    },
    "18178": {
      "op": "DUP3"
    },
    "18179": {
      "op": "MSTORE"
    },
    "18180": {
      "op": "SWAP2"
    },
    "18181": {
      "op": "DUP4"
    },
    "18182": {
      "op": "ADD"
    },
    "18183": {
      "op": "SWAP2"
    },
    "18184": {
      "op": "SWAP1"
    },
    "18185": {
      "op": "DUP4"
    },
    "18186": {
      "op": "ADD"
    },
    "18187": {
      "op": "SWAP1"
    },
    "18188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18190": {
      "op": "ADD"
    },
    "18191": {
      "op": "PUSH2",
      "value": "0x46E5"
    },
    "18194": {
      "op": "JUMP"
    },
    "18195": {
      "op": "JUMPDEST"
    },
    "18196": {
      "op": "POP"
    },
    "18197": {
      "op": "SWAP7"
    },
    "18198": {
      "op": "SWAP6"
    },
    "18199": {
      "op": "POP"
    },
    "18200": {
      "op": "POP"
    },
    "18201": {
      "op": "POP"
    },
    "18202": {
      "op": "POP"
    },
    "18203": {
      "op": "POP"
    },
    "18204": {
      "op": "POP"
    },
    "18205": {
      "jump": "o",
      "op": "JUMP"
    },
    "18206": {
      "op": "JUMPDEST"
    },
    "18207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18213": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "18215": {
      "op": "SHL"
    },
    "18216": {
      "op": "SUB"
    },
    "18217": {
      "op": "DUP4"
    },
    "18218": {
      "op": "DUP2"
    },
    "18219": {
      "op": "AND"
    },
    "18220": {
      "op": "SWAP1"
    },
    "18221": {
      "op": "DUP4"
    },
    "18222": {
      "op": "AND"
    },
    "18223": {
      "op": "DUP2"
    },
    "18224": {
      "op": "DUP2"
    },
    "18225": {
      "op": "LT"
    },
    "18226": {
      "op": "ISZERO"
    },
    "18227": {
      "op": "PUSH2",
      "value": "0x473E"
    },
    "18230": {
      "op": "JUMPI"
    },
    "18231": {
      "op": "PUSH2",
      "value": "0x473E"
    },
    "18234": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18237": {
      "jump": "i",
      "op": "JUMP"
    },
    "18238": {
      "op": "JUMPDEST"
    },
    "18239": {
      "op": "SUB"
    },
    "18240": {
      "op": "SWAP4"
    },
    "18241": {
      "op": "SWAP3"
    },
    "18242": {
      "op": "POP"
    },
    "18243": {
      "op": "POP"
    },
    "18244": {
      "op": "POP"
    },
    "18245": {
      "jump": "o",
      "op": "JUMP"
    },
    "18246": {
      "op": "JUMPDEST"
    },
    "18247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18251": {
      "op": "DUP3"
    },
    "18252": {
      "op": "DUP5"
    },
    "18253": {
      "op": "SUB"
    },
    "18254": {
      "op": "SLT"
    },
    "18255": {
      "op": "ISZERO"
    },
    "18256": {
      "op": "PUSH2",
      "value": "0x4758"
    },
    "18259": {
      "op": "JUMPI"
    },
    "18260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18262": {
      "op": "DUP1"
    },
    "18263": {
      "op": "REVERT"
    },
    "18264": {
      "op": "JUMPDEST"
    },
    "18265": {
      "op": "DUP2"
    },
    "18266": {
      "op": "MLOAD"
    },
    "18267": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18269": {
      "op": "DUP2"
    },
    "18270": {
      "op": "AND"
    },
    "18271": {
      "op": "DUP2"
    },
    "18272": {
      "op": "EQ"
    },
    "18273": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "18276": {
      "op": "JUMPI"
    },
    "18277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18279": {
      "op": "DUP1"
    },
    "18280": {
      "op": "REVERT"
    },
    "18281": {
      "op": "JUMPDEST"
    },
    "18282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18288": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "18290": {
      "op": "SHL"
    },
    "18291": {
      "op": "SUB"
    },
    "18292": {
      "op": "DUP3"
    },
    "18293": {
      "op": "DUP2"
    },
    "18294": {
      "op": "AND"
    },
    "18295": {
      "op": "DUP5"
    },
    "18296": {
      "op": "DUP3"
    },
    "18297": {
      "op": "AND"
    },
    "18298": {
      "op": "DUP1"
    },
    "18299": {
      "op": "DUP4"
    },
    "18300": {
      "op": "SUB"
    },
    "18301": {
      "op": "DUP3"
    },
    "18302": {
      "op": "GT"
    },
    "18303": {
      "op": "ISZERO"
    },
    "18304": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "18307": {
      "op": "JUMPI"
    },
    "18308": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "18311": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18314": {
      "jump": "i",
      "op": "JUMP"
    },
    "18315": {
      "op": "JUMPDEST"
    },
    "18316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18322": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18324": {
      "op": "SHL"
    },
    "18325": {
      "op": "SUB"
    },
    "18326": {
      "op": "DUP1"
    },
    "18327": {
      "op": "DUP4"
    },
    "18328": {
      "op": "AND"
    },
    "18329": {
      "op": "DUP2"
    },
    "18330": {
      "op": "DUP6"
    },
    "18331": {
      "op": "AND"
    },
    "18332": {
      "op": "DUP1"
    },
    "18333": {
      "op": "DUP4"
    },
    "18334": {
      "op": "SUB"
    },
    "18335": {
      "op": "DUP3"
    },
    "18336": {
      "op": "GT"
    },
    "18337": {
      "op": "ISZERO"
    },
    "18338": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "18341": {
      "op": "JUMPI"
    },
    "18342": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "18345": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18348": {
      "jump": "i",
      "op": "JUMP"
    },
    "18349": {
      "op": "JUMPDEST"
    },
    "18350": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18357": {
      "op": "SHL"
    },
    "18358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18360": {
      "op": "MSTORE"
    },
    "18361": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "18363": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18365": {
      "op": "MSTORE"
    },
    "18366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18370": {
      "op": "REVERT"
    },
    "18371": {
      "op": "JUMPDEST"
    },
    "18372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18376": {
      "op": "DUP3"
    },
    "18377": {
      "op": "DUP5"
    },
    "18378": {
      "op": "SUB"
    },
    "18379": {
      "op": "SLT"
    },
    "18380": {
      "op": "ISZERO"
    },
    "18381": {
      "op": "PUSH2",
      "value": "0x47D5"
    },
    "18384": {
      "op": "JUMPI"
    },
    "18385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18387": {
      "op": "DUP1"
    },
    "18388": {
      "op": "REVERT"
    },
    "18389": {
      "op": "JUMPDEST"
    },
    "18390": {
      "op": "DUP2"
    },
    "18391": {
      "op": "MLOAD"
    },
    "18392": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "18395": {
      "op": "DUP2"
    },
    "18396": {
      "op": "PUSH2",
      "value": "0x42E2"
    },
    "18399": {
      "jump": "i",
      "op": "JUMP"
    },
    "18400": {
      "op": "JUMPDEST"
    },
    "18401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18403": {
      "op": "DUP1"
    },
    "18404": {
      "op": "DUP3"
    },
    "18405": {
      "op": "MSTORE"
    },
    "18406": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "18408": {
      "op": "SWAP1"
    },
    "18409": {
      "op": "DUP3"
    },
    "18410": {
      "op": "ADD"
    },
    "18411": {
      "op": "MSTORE"
    },
    "18412": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "18445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18447": {
      "op": "DUP3"
    },
    "18448": {
      "op": "ADD"
    },
    "18449": {
      "op": "MSTORE"
    },
    "18450": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "18465": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "18467": {
      "op": "SHL"
    },
    "18468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18470": {
      "op": "DUP3"
    },
    "18471": {
      "op": "ADD"
    },
    "18472": {
      "op": "MSTORE"
    },
    "18473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18475": {
      "op": "ADD"
    },
    "18476": {
      "op": "SWAP1"
    },
    "18477": {
      "jump": "o",
      "op": "JUMP"
    },
    "18478": {
      "op": "JUMPDEST"
    },
    "18479": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18484": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18486": {
      "op": "SHL"
    },
    "18487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18489": {
      "op": "MSTORE"
    },
    "18490": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "18492": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18494": {
      "op": "MSTORE"
    },
    "18495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18499": {
      "op": "REVERT"
    },
    "18500": {
      "op": "JUMPDEST"
    },
    "18501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18505": {
      "op": "DUP3"
    },
    "18506": {
      "op": "DUP5"
    },
    "18507": {
      "op": "SUB"
    },
    "18508": {
      "op": "SLT"
    },
    "18509": {
      "op": "ISZERO"
    },
    "18510": {
      "op": "PUSH2",
      "value": "0x4856"
    },
    "18513": {
      "op": "JUMPI"
    },
    "18514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18516": {
      "op": "DUP1"
    },
    "18517": {
      "op": "REVERT"
    },
    "18518": {
      "op": "JUMPDEST"
    },
    "18519": {
      "op": "DUP2"
    },
    "18520": {
      "op": "MLOAD"
    },
    "18521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18527": {
      "op": "SHL"
    },
    "18528": {
      "op": "SUB"
    },
    "18529": {
      "op": "DUP1"
    },
    "18530": {
      "op": "DUP3"
    },
    "18531": {
      "op": "GT"
    },
    "18532": {
      "op": "ISZERO"
    },
    "18533": {
      "op": "PUSH2",
      "value": "0x486D"
    },
    "18536": {
      "op": "JUMPI"
    },
    "18537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18539": {
      "op": "DUP1"
    },
    "18540": {
      "op": "REVERT"
    },
    "18541": {
      "op": "JUMPDEST"
    },
    "18542": {
      "op": "DUP2"
    },
    "18543": {
      "op": "DUP5"
    },
    "18544": {
      "op": "ADD"
    },
    "18545": {
      "op": "SWAP2"
    },
    "18546": {
      "op": "POP"
    },
    "18547": {
      "op": "DUP5"
    },
    "18548": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18550": {
      "op": "DUP4"
    },
    "18551": {
      "op": "ADD"
    },
    "18552": {
      "op": "SLT"
    },
    "18553": {
      "op": "PUSH2",
      "value": "0x4881"
    },
    "18556": {
      "op": "JUMPI"
    },
    "18557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18559": {
      "op": "DUP1"
    },
    "18560": {
      "op": "REVERT"
    },
    "18561": {
      "op": "JUMPDEST"
    },
    "18562": {
      "op": "DUP2"
    },
    "18563": {
      "op": "MLOAD"
    },
    "18564": {
      "op": "DUP2"
    },
    "18565": {
      "op": "DUP2"
    },
    "18566": {
      "op": "GT"
    },
    "18567": {
      "op": "ISZERO"
    },
    "18568": {
      "op": "PUSH2",
      "value": "0x4893"
    },
    "18571": {
      "op": "JUMPI"
    },
    "18572": {
      "op": "PUSH2",
      "value": "0x4893"
    },
    "18575": {
      "op": "PUSH2",
      "value": "0x482E"
    },
    "18578": {
      "jump": "i",
      "op": "JUMP"
    },
    "18579": {
      "op": "JUMPDEST"
    },
    "18580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18582": {
      "op": "MLOAD"
    },
    "18583": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18585": {
      "op": "DUP3"
    },
    "18586": {
      "op": "ADD"
    },
    "18587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18589": {
      "op": "NOT"
    },
    "18590": {
      "op": "SWAP1"
    },
    "18591": {
      "op": "DUP2"
    },
    "18592": {
      "op": "AND"
    },
    "18593": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "18595": {
      "op": "ADD"
    },
    "18596": {
      "op": "AND"
    },
    "18597": {
      "op": "DUP2"
    },
    "18598": {
      "op": "ADD"
    },
    "18599": {
      "op": "SWAP1"
    },
    "18600": {
      "op": "DUP4"
    },
    "18601": {
      "op": "DUP3"
    },
    "18602": {
      "op": "GT"
    },
    "18603": {
      "op": "DUP2"
    },
    "18604": {
      "op": "DUP4"
    },
    "18605": {
      "op": "LT"
    },
    "18606": {
      "op": "OR"
    },
    "18607": {
      "op": "ISZERO"
    },
    "18608": {
      "op": "PUSH2",
      "value": "0x48BB"
    },
    "18611": {
      "op": "JUMPI"
    },
    "18612": {
      "op": "PUSH2",
      "value": "0x48BB"
    },
    "18615": {
      "op": "PUSH2",
      "value": "0x482E"
    },
    "18618": {
      "jump": "i",
      "op": "JUMP"
    },
    "18619": {
      "op": "JUMPDEST"
    },
    "18620": {
      "op": "DUP2"
    },
    "18621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18623": {
      "op": "MSTORE"
    },
    "18624": {
      "op": "DUP3"
    },
    "18625": {
      "op": "DUP2"
    },
    "18626": {
      "op": "MSTORE"
    },
    "18627": {
      "op": "DUP8"
    },
    "18628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18630": {
      "op": "DUP5"
    },
    "18631": {
      "op": "DUP8"
    },
    "18632": {
      "op": "ADD"
    },
    "18633": {
      "op": "ADD"
    },
    "18634": {
      "op": "GT"
    },
    "18635": {
      "op": "ISZERO"
    },
    "18636": {
      "op": "PUSH2",
      "value": "0x48D4"
    },
    "18639": {
      "op": "JUMPI"
    },
    "18640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18642": {
      "op": "DUP1"
    },
    "18643": {
      "op": "REVERT"
    },
    "18644": {
      "op": "JUMPDEST"
    },
    "18645": {
      "op": "PUSH2",
      "value": "0x412E"
    },
    "18648": {
      "op": "DUP4"
    },
    "18649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18651": {
      "op": "DUP4"
    },
    "18652": {
      "op": "ADD"
    },
    "18653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18655": {
      "op": "DUP9"
    },
    "18656": {
      "op": "ADD"
    },
    "18657": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18660": {
      "jump": "i",
      "op": "JUMP"
    },
    "18661": {
      "op": "JUMPDEST"
    },
    "18662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18664": {
      "op": "DUP5"
    },
    "18665": {
      "op": "MLOAD"
    },
    "18666": {
      "op": "PUSH2",
      "value": "0x48F7"
    },
    "18669": {
      "op": "DUP2"
    },
    "18670": {
      "op": "DUP5"
    },
    "18671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18673": {
      "op": "DUP10"
    },
    "18674": {
      "op": "ADD"
    },
    "18675": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18678": {
      "jump": "i",
      "op": "JUMP"
    },
    "18679": {
      "op": "JUMPDEST"
    },
    "18680": {
      "op": "DUP5"
    },
    "18681": {
      "op": "MLOAD"
    },
    "18682": {
      "op": "SWAP1"
    },
    "18683": {
      "op": "DUP4"
    },
    "18684": {
      "op": "ADD"
    },
    "18685": {
      "op": "SWAP1"
    },
    "18686": {
      "op": "PUSH2",
      "value": "0x490B"
    },
    "18689": {
      "op": "DUP2"
    },
    "18690": {
      "op": "DUP4"
    },
    "18691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18693": {
      "op": "DUP10"
    },
    "18694": {
      "op": "ADD"
    },
    "18695": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18698": {
      "jump": "i",
      "op": "JUMP"
    },
    "18699": {
      "op": "JUMPDEST"
    },
    "18700": {
      "op": "DUP5"
    },
    "18701": {
      "op": "MLOAD"
    },
    "18702": {
      "op": "SWAP2"
    },
    "18703": {
      "op": "ADD"
    },
    "18704": {
      "op": "SWAP1"
    },
    "18705": {
      "op": "PUSH2",
      "value": "0x491E"
    },
    "18708": {
      "op": "DUP2"
    },
    "18709": {
      "op": "DUP4"
    },
    "18710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18712": {
      "op": "DUP9"
    },
    "18713": {
      "op": "ADD"
    },
    "18714": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18717": {
      "jump": "i",
      "op": "JUMP"
    },
    "18718": {
      "op": "JUMPDEST"
    },
    "18719": {
      "op": "ADD"
    },
    "18720": {
      "op": "SWAP6"
    },
    "18721": {
      "op": "SWAP5"
    },
    "18722": {
      "op": "POP"
    },
    "18723": {
      "op": "POP"
    },
    "18724": {
      "op": "POP"
    },
    "18725": {
      "op": "POP"
    },
    "18726": {
      "op": "POP"
    },
    "18727": {
      "jump": "o",
      "op": "JUMP"
    },
    "18728": {
      "op": "JUMPDEST"
    },
    "18729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18731": {
      "op": "DUP4"
    },
    "18732": {
      "op": "MLOAD"
    },
    "18733": {
      "op": "PUSH2",
      "value": "0x493A"
    },
    "18736": {
      "op": "DUP2"
    },
    "18737": {
      "op": "DUP5"
    },
    "18738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18740": {
      "op": "DUP9"
    },
    "18741": {
      "op": "ADD"
    },
    "18742": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18745": {
      "jump": "i",
      "op": "JUMP"
    },
    "18746": {
      "op": "JUMPDEST"
    },
    "18747": {
      "op": "DUP4"
    },
    "18748": {
      "op": "MLOAD"
    },
    "18749": {
      "op": "SWAP1"
    },
    "18750": {
      "op": "DUP4"
    },
    "18751": {
      "op": "ADD"
    },
    "18752": {
      "op": "SWAP1"
    },
    "18753": {
      "op": "PUSH2",
      "value": "0x4623"
    },
    "18756": {
      "op": "DUP2"
    },
    "18757": {
      "op": "DUP4"
    },
    "18758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18760": {
      "op": "DUP9"
    },
    "18761": {
      "op": "ADD"
    },
    "18762": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "18765": {
      "jump": "i",
      "op": "JUMP"
    },
    "18766": {
      "op": "JUMPDEST"
    },
    "18767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18769": {
      "op": "DUP2"
    },
    "18770": {
      "op": "DUP2"
    },
    "18771": {
      "op": "JUMPDEST"
    },
    "18772": {
      "op": "DUP1"
    },
    "18773": {
      "op": "DUP6"
    },
    "18774": {
      "op": "GT"
    },
    "18775": {
      "op": "ISZERO"
    },
    "18776": {
      "op": "PUSH2",
      "value": "0x4989"
    },
    "18779": {
      "op": "JUMPI"
    },
    "18780": {
      "op": "DUP2"
    },
    "18781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18783": {
      "op": "NOT"
    },
    "18784": {
      "op": "DIV"
    },
    "18785": {
      "op": "DUP3"
    },
    "18786": {
      "op": "GT"
    },
    "18787": {
      "op": "ISZERO"
    },
    "18788": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "18791": {
      "op": "JUMPI"
    },
    "18792": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "18795": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18798": {
      "jump": "i",
      "op": "JUMP"
    },
    "18799": {
      "op": "JUMPDEST"
    },
    "18800": {
      "op": "DUP1"
    },
    "18801": {
      "op": "DUP6"
    },
    "18802": {
      "op": "AND"
    },
    "18803": {
      "op": "ISZERO"
    },
    "18804": {
      "op": "PUSH2",
      "value": "0x497C"
    },
    "18807": {
      "op": "JUMPI"
    },
    "18808": {
      "op": "SWAP2"
    },
    "18809": {
      "op": "DUP2"
    },
    "18810": {
      "op": "MUL"
    },
    "18811": {
      "op": "SWAP2"
    },
    "18812": {
      "op": "JUMPDEST"
    },
    "18813": {
      "op": "SWAP4"
    },
    "18814": {
      "op": "DUP5"
    },
    "18815": {
      "op": "SHR"
    },
    "18816": {
      "op": "SWAP4"
    },
    "18817": {
      "op": "SWAP1"
    },
    "18818": {
      "op": "DUP1"
    },
    "18819": {
      "op": "MUL"
    },
    "18820": {
      "op": "SWAP1"
    },
    "18821": {
      "op": "PUSH2",
      "value": "0x4953"
    },
    "18824": {
      "op": "JUMP"
    },
    "18825": {
      "op": "JUMPDEST"
    },
    "18826": {
      "op": "POP"
    },
    "18827": {
      "op": "SWAP3"
    },
    "18828": {
      "op": "POP"
    },
    "18829": {
      "op": "SWAP3"
    },
    "18830": {
      "op": "SWAP1"
    },
    "18831": {
      "op": "POP"
    },
    "18832": {
      "jump": "o",
      "op": "JUMP"
    },
    "18833": {
      "op": "JUMPDEST"
    },
    "18834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18836": {
      "op": "DUP3"
    },
    "18837": {
      "op": "PUSH2",
      "value": "0x49A0"
    },
    "18840": {
      "op": "JUMPI"
    },
    "18841": {
      "op": "POP"
    },
    "18842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18844": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "18847": {
      "op": "JUMP"
    },
    "18848": {
      "op": "JUMPDEST"
    },
    "18849": {
      "op": "DUP2"
    },
    "18850": {
      "op": "PUSH2",
      "value": "0x49AD"
    },
    "18853": {
      "op": "JUMPI"
    },
    "18854": {
      "op": "POP"
    },
    "18855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18857": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "18860": {
      "op": "JUMP"
    },
    "18861": {
      "op": "JUMPDEST"
    },
    "18862": {
      "op": "DUP2"
    },
    "18863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18865": {
      "op": "DUP2"
    },
    "18866": {
      "op": "EQ"
    },
    "18867": {
      "op": "PUSH2",
      "value": "0x49C3"
    },
    "18870": {
      "op": "JUMPI"
    },
    "18871": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18873": {
      "op": "DUP2"
    },
    "18874": {
      "op": "EQ"
    },
    "18875": {
      "op": "PUSH2",
      "value": "0x49CD"
    },
    "18878": {
      "op": "JUMPI"
    },
    "18879": {
      "op": "PUSH2",
      "value": "0x49E9"
    },
    "18882": {
      "op": "JUMP"
    },
    "18883": {
      "op": "JUMPDEST"
    },
    "18884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18886": {
      "op": "SWAP2"
    },
    "18887": {
      "op": "POP"
    },
    "18888": {
      "op": "POP"
    },
    "18889": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "18892": {
      "op": "JUMP"
    },
    "18893": {
      "op": "JUMPDEST"
    },
    "18894": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18896": {
      "op": "DUP5"
    },
    "18897": {
      "op": "GT"
    },
    "18898": {
      "op": "ISZERO"
    },
    "18899": {
      "op": "PUSH2",
      "value": "0x49DE"
    },
    "18902": {
      "op": "JUMPI"
    },
    "18903": {
      "op": "PUSH2",
      "value": "0x49DE"
    },
    "18906": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18909": {
      "jump": "i",
      "op": "JUMP"
    },
    "18910": {
      "op": "JUMPDEST"
    },
    "18911": {
      "op": "POP"
    },
    "18912": {
      "op": "POP"
    },
    "18913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18915": {
      "op": "DUP3"
    },
    "18916": {
      "op": "SHL"
    },
    "18917": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "18920": {
      "op": "JUMP"
    },
    "18921": {
      "op": "JUMPDEST"
    },
    "18922": {
      "op": "POP"
    },
    "18923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18925": {
      "op": "DUP4"
    },
    "18926": {
      "op": "LT"
    },
    "18927": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "18930": {
      "op": "DUP4"
    },
    "18931": {
      "op": "LT"
    },
    "18932": {
      "op": "AND"
    },
    "18933": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "18935": {
      "op": "DUP5"
    },
    "18936": {
      "op": "LT"
    },
    "18937": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "18939": {
      "op": "DUP5"
    },
    "18940": {
      "op": "LT"
    },
    "18941": {
      "op": "AND"
    },
    "18942": {
      "op": "OR"
    },
    "18943": {
      "op": "ISZERO"
    },
    "18944": {
      "op": "PUSH2",
      "value": "0x4A0C"
    },
    "18947": {
      "op": "JUMPI"
    },
    "18948": {
      "op": "POP"
    },
    "18949": {
      "op": "DUP2"
    },
    "18950": {
      "op": "DUP2"
    },
    "18951": {
      "op": "EXP"
    },
    "18952": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "18955": {
      "op": "JUMP"
    },
    "18956": {
      "op": "JUMPDEST"
    },
    "18957": {
      "op": "PUSH2",
      "value": "0x4A16"
    },
    "18960": {
      "op": "DUP4"
    },
    "18961": {
      "op": "DUP4"
    },
    "18962": {
      "op": "PUSH2",
      "value": "0x494E"
    },
    "18965": {
      "jump": "i",
      "op": "JUMP"
    },
    "18966": {
      "op": "JUMPDEST"
    },
    "18967": {
      "op": "DUP1"
    },
    "18968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18970": {
      "op": "NOT"
    },
    "18971": {
      "op": "DIV"
    },
    "18972": {
      "op": "DUP3"
    },
    "18973": {
      "op": "GT"
    },
    "18974": {
      "op": "ISZERO"
    },
    "18975": {
      "op": "PUSH2",
      "value": "0x4A2A"
    },
    "18978": {
      "op": "JUMPI"
    },
    "18979": {
      "op": "PUSH2",
      "value": "0x4A2A"
    },
    "18982": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "18985": {
      "jump": "i",
      "op": "JUMP"
    },
    "18986": {
      "op": "JUMPDEST"
    },
    "18987": {
      "op": "MUL"
    },
    "18988": {
      "op": "SWAP4"
    },
    "18989": {
      "op": "SWAP3"
    },
    "18990": {
      "op": "POP"
    },
    "18991": {
      "op": "POP"
    },
    "18992": {
      "op": "POP"
    },
    "18993": {
      "jump": "o",
      "op": "JUMP"
    },
    "18994": {
      "op": "JUMPDEST"
    },
    "18995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18997": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "19000": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19002": {
      "op": "DUP5"
    },
    "19003": {
      "op": "AND"
    },
    "19004": {
      "op": "DUP4"
    },
    "19005": {
      "op": "PUSH2",
      "value": "0x4991"
    },
    "19008": {
      "jump": "i",
      "op": "JUMP"
    },
    "19009": {
      "op": "JUMPDEST"
    },
    "19010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19012": {
      "op": "DUP3"
    },
    "19013": {
      "op": "MLOAD"
    },
    "19014": {
      "op": "PUSH2",
      "value": "0x4A53"
    },
    "19017": {
      "op": "DUP2"
    },
    "19018": {
      "op": "DUP5"
    },
    "19019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19021": {
      "op": "DUP8"
    },
    "19022": {
      "op": "ADD"
    },
    "19023": {
      "op": "PUSH2",
      "value": "0x425A"
    },
    "19026": {
      "jump": "i",
      "op": "JUMP"
    },
    "19027": {
      "op": "JUMPDEST"
    },
    "19028": {
      "op": "SWAP2"
    },
    "19029": {
      "op": "SWAP1"
    },
    "19030": {
      "op": "SWAP2"
    },
    "19031": {
      "op": "ADD"
    },
    "19032": {
      "op": "SWAP3"
    },
    "19033": {
      "op": "SWAP2"
    },
    "19034": {
      "op": "POP"
    },
    "19035": {
      "op": "POP"
    },
    "19036": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "21ecd7a2dbce34b7bf64297e3c301e44245ba1db",
  "source": "//   ______\n//  /      \\\n// /$$$$$$  | __    __  __    __   ______\n// $$ |__$$ |/  |  /  |/  \\  /  | /      \\\n// $$    $$ |$$ |  $$ |$$  \\/$$/ /$$$$$$  |\n// $$$$$$$$ |$$ |  $$ | $$  $$<  $$ |  $$ |\n// $$ |  $$ |$$ \\__$$ | /$$$$  \\ $$ \\__$$ |\n// $$ |  $$ |$$    $$/ /$$/ $$  |$$    $$/\n// $$/   $$/  $$$$$$/  $$/   $$/  $$$$$$/\n//\n// auxo.fi\n\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.12;\n\nimport {Authority} from \"./auth/Auth.sol\";\nimport {IVault} from \"../interfaces/IVault.sol\";\nimport {IStrategy} from \"../interfaces/IStrategy.sol\";\nimport {SafeCastLib as SafeCast} from \"./libraries/SafeCastLib.sol\";\nimport {FixedPointMathLib as FixedPointMath} from \"./libraries/FixedPointMathLib.sol\";\nimport {ERC20Upgradeable as ERC20} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport {PausableUpgradeable as Pausable} from \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport {SafeERC20Upgradeable as SafeERC20} from \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\n/// @title Vault\n/// @author dantop114\n/// @notice A vault seeking for yield.\ncontract Vault is ERC20, Pausable {\n    using SafeERC20 for ERC20;\n    using SafeCast for uint256;\n    using FixedPointMath for uint256;\n\n    /*///////////////////////////////////////////////////////////////\n                              IMMUTABLES\n    ///////////////////////////////////////////////////////////////*/\n\n    /// @notice The Vault's token symbol prefix.\n    bytes internal constant S_PREFIX = bytes(\"auxo\");\n\n    /// @notice The Vault's token name prefix.\n    bytes internal constant N_PREFIX = bytes(\"Auxo \");\n\n    /// @notice The Vault's token name suffix.\n    bytes internal constant N_SUFFIX = bytes(\" Vault\");\n\n    /// @notice Max number of strategies the Vault can handle.\n    uint256 internal constant MAX_STRATEGIES = 20;\n\n    /// @notice Vault's API version.\n    string public constant VERSION = \"0.2\";\n\n    /*///////////////////////////////////////////////////////////////\n                        STRUCTS DECLARATIONS\n    ///////////////////////////////////////////////////////////////*/\n\n    /// @dev Packed struct of strategy data.\n    /// @param trusted Whether the strategy is trusted.\n    /// @param balance The amount of underlying tokens held in the strategy.\n    struct StrategyData {\n        // Used to determine if the Vault will operate on a strategy.\n        bool trusted;\n        // Used to determine profit and loss during harvests of the strategy.\n        uint248 balance;\n    }\n\n    /// @dev Struct for batched burning events.\n    /// @param totalShares Shares to burn during the event.\n    /// @param amountPerShare Underlying amount per share (this differs from exchangeRate at the moment of batched burning).\n    struct BatchBurn {\n        uint256 totalShares;\n        uint256 amountPerShare;\n    }\n\n    /// @dev Struct for users' batched burning requests.\n    /// @param round Batched burning event index.\n    /// @param shares Shares to burn for the user.\n    struct BatchBurnReceipt {\n        uint256 round;\n        uint256 shares;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                                STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Blocks mined in a year.\n    uint256 public blocksPerYear;\n\n    /// @notice Vault Auth module.\n    Authority public auth;\n\n    /// @notice The underlying token the vault accepts.\n    ERC20 public underlying;\n\n    /// @notice The underlying token decimals.\n    uint8 public underlyingDecimals;\n\n    /// @notice The base unit of the underlying token and hence the Vault share token.\n    /// @dev Equal to 10 ** underlyingDecimals. Used for fixed point arithmetic.\n    uint256 public baseUnit;\n\n    /// @notice The percentage of profit recognized each harvest to reserve as fees.\n    /// @dev A fixed point number where 1e18 represents 100% and 0 represents 0%.\n    uint256 public harvestFeePercent;\n\n    /// @notice The address receiving harvest fees (denominated in Vault's shares).\n    address public harvestFeeReceiver;\n\n    /// @notice The percentage of shares recognized each burning to reserve as fees.\n    /// @dev A fixed point number where 1e18 represents 100% and 0 represents 0%.\n    uint256 public burningFeePercent;\n\n    /// @notice The address receiving burning fees (denominated in Vault's shares).\n    address public burningFeeReceiver;\n\n    /// @notice The period in seconds during which multiple harvests can occur\n    /// regardless if they are taking place before the harvest delay has elapsed.\n    /// @dev Long harvest delays open up the Vault to profit distribution DOS attacks.\n    uint128 public harvestWindow;\n\n    /// @notice The period in seconds over which locked profit is unlocked.\n    /// @dev Cannot be 0 as it opens harvests up to sandwich attacks.\n    uint64 public harvestDelay;\n\n    /// @notice The value that will replace harvestDelay next harvest.\n    /// @dev In the case that the next delay is 0, no update will be applied.\n    uint64 public nextHarvestDelay;\n\n    /// @notice The total amount of underlying tokens held in strategies at the time of the last harvest.\n    /// @dev Includes maxLockedProfit, must be correctly subtracted to compute available/free holdings.\n    uint256 public totalStrategyHoldings;\n\n    /// @notice Maps strategies to data the Vault holds on them.\n    mapping(IStrategy => StrategyData) public getStrategyData;\n\n    /// @notice Exchange rate at the beginning of latest harvest window\n    uint256 public lastHarvestExchangeRate;\n\n    /// @notice Latest harvest interval in blocks\n    uint256 public lastHarvestIntervalInBlocks;\n\n    /// @notice The block number when the first harvest in the most recent harvest window occurred.\n    uint256 public lastHarvestWindowStartBlock;\n\n    /// @notice A timestamp representing when the first harvest in the most recent harvest window occurred.\n    /// @dev May be equal to lastHarvest if there was/has only been one harvest in the most last/current window.\n    uint64 public lastHarvestWindowStart;\n\n    /// @notice A timestamp representing when the most recent harvest occurred.\n    uint64 public lastHarvest;\n\n    /// @notice The amount of locked profit at the end of the last harvest.\n    uint128 public maxLockedProfit;\n\n    /// @notice An ordered array of strategies representing the withdrawal queue.\n    /// @dev The queue is processed in descending order, meaning the last index will be withdrawn from first.\n    /// @dev There are not sanity checks on the withdrawal queue, so any control should be done off-chain.\n    IStrategy[] public withdrawalQueue;\n\n    /// @notice Current batched burning round.\n    uint256 public batchBurnRound;\n\n    /// @notice Balance reserved to batched burning withdrawals.\n    uint256 public batchBurnBalance;\n\n    /// @notice Maps user's address to withdrawal request.\n    mapping(address => BatchBurnReceipt) public userBatchBurnReceipts;\n\n    /// @notice Maps social burning events rounds to batched burn details.\n    mapping(uint256 => BatchBurn) public batchBurns;\n\n    /// @notice Amount of shares a single address can hold.\n    uint256 public userDepositLimit;\n\n    /// @notice Amount of underlying cap for this vault.\n    uint256 public vaultDepositLimit;\n\n    /// @notice Estimated return recorded during last harvest.\n    uint256 public estimatedReturn;\n\n    /*///////////////////////////////////////////////////////////////\n                                EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Emitted when the Authority module is updated.\n    /// @param newAuth The new Authority module.\n    event AuthUpdated(Authority newAuth);\n\n    /// @notice Emitted when the fee percentage is updated.\n    /// @param newFeePercent The new fee percentage.\n    event HarvestFeePercentUpdated(uint256 newFeePercent);\n\n    /// @notice Emitted when the batched burning fee percentage is updated.\n    /// @param newFeePercent The new fee percentage.\n    event BurningFeePercentUpdated(uint256 newFeePercent);\n\n    /// @notice Emitted when harvest fees receiver is updated.\n    /// @param receiver The new receiver\n    event HarvestFeeReceiverUpdated(address indexed receiver);\n\n    /// @notice Emitted when burning fees receiver is updated.\n    /// @param receiver The new receiver\n    event BurningFeeReceiverUpdated(address indexed receiver);\n\n    //// @notice Emitted when the harvest window is updated.\n    //// @param newHarvestWindow The new harvest window.\n    event HarvestWindowUpdated(uint128 newHarvestWindow);\n\n    /// @notice Emitted when the harvest delay is updated.\n    /// @param account The address changing the harvest delay\n    /// @param newHarvestDelay The new harvest delay.\n    event HarvestDelayUpdated(address indexed account, uint64 newHarvestDelay);\n\n    /// @notice Emitted when the harvest delay is scheduled to be updated next harvest.\n    /// @param newHarvestDelay The scheduled updated harvest delay.\n    event HarvestDelayUpdateScheduled(uint64 newHarvestDelay);\n\n    /// @notice Emitted when the withdrawal queue is updated.\n    /// @param replacedWithdrawalQueue The new withdrawal queue.\n    event WithdrawalQueueSet(IStrategy[] replacedWithdrawalQueue);\n\n    /// @notice Emitted when a strategy is set to trusted.\n    /// @param strategy The strategy that became trusted.\n    event StrategyTrusted(IStrategy indexed strategy);\n\n    /// @notice Emitted when a strategy is set to untrusted.\n    /// @param strategy The strategy that became untrusted.\n    event StrategyDistrusted(IStrategy indexed strategy);\n\n    /// @notice Emitted when underlying tokens are deposited into the vault.\n    /// @param from The user depositing into the vault.\n    /// @param to The user receiving Vault's shares.\n    /// @param value The shares `to` is receiving.\n    event Deposit(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Emitted after a user enters a batched burn round.\n    /// @param round Batched burn round.\n    /// @param account User's address.\n    /// @param amount Amount of shares to be burned.\n    event EnterBatchBurn(uint256 indexed round, address indexed account, uint256 amount);\n\n    /// @notice Emitted after a user exits a batched burn round.\n    /// @param round Batched burn round.\n    /// @param account User's address.\n    /// @param amount Amount of underlying redeemed.\n    event ExitBatchBurn(uint256 indexed round, address indexed account, uint256 amount);\n\n    /// @notice Emitted after a batched burn event happens.\n    /// @param round Batched burn round.\n    /// @param executor User that executes the batch burn.\n    /// @param shares Total amount of burned shares.\n    /// @param amount Total amount of underlying redeemed.\n    event ExecuteBatchBurn(uint256 indexed round, address indexed executor, uint256 shares, uint256 amount);\n\n    /// @notice Emitted after a successful harvest.\n    /// @param account The harvester address.\n    /// @param strategies The set of strategies.\n    event Harvest(address indexed account, IStrategy[] strategies);\n\n    /// @notice Emitted after the Vault deposits into a strategy contract.\n    /// @param account The address depositing funds into the strategy.\n    /// @param strategy The strategy that was deposited into.\n    /// @param underlyingAmount The amount of underlying tokens that were deposited.\n    event StrategyDeposit(address indexed account, IStrategy indexed strategy, uint256 underlyingAmount);\n\n    /// @notice Emitted after the Vault withdraws funds from a strategy contract.\n    /// @param account The user pulling funds from the strategy\n    /// @param strategy The strategy that was withdrawn from.\n    /// @param underlyingAmount The amount of underlying tokens that were withdrawn.\n    event StrategyWithdrawal(address indexed account, IStrategy indexed strategy, uint256 underlyingAmount);\n\n    /// @notice Event emitted when the deposit limits are updated.\n    /// @param perUser New underlying limit per address.\n    /// @param perVault New underlying limit per vault.\n    event DepositLimitsUpdated(uint256 perUser, uint256 perVault);\n\n    /*///////////////////////////////////////////////////////////////\n                            MODIFIERS\n    //////////////////////////////////////////////////////////////*/\n\n    modifier requiresAuth(address addr) {\n        require(auth.canCall(addr, address(this), msg.sig), \"UNAUTHORIZED\");\n\n        _;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    INITIALIZER AND PAUSE TRIGGER\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Triggers the Vault's pause\n    /// @dev Only owner can call this method.\n    function triggerPause() external requiresAuth(msg.sender) {\n        paused() ? _unpause() : _pause();\n    }\n\n    /// @notice Internal initializer method.\n    /// @param underlying_ The underlying token the vault accepts.\n    /// @param auth_ The Auth mo    dule that will be used for this Vault.\n    /// @param harvestFeeReceiver_ The harvesting fee receiver address.\n    /// @param burnFeeReceiver_ The batched burns fee receiver address.\n    /// @param name_ The Vault shares' name.\n    /// @param symbol_ The Vault shares' symbol.\n    function __Vault_init(\n        ERC20 underlying_,\n        Authority auth_,\n        address harvestFeeReceiver_,\n        address burnFeeReceiver_,\n        string memory name_,\n        string memory symbol_\n    ) internal initializer {\n        // Initialize ERC20 trait.\n        __ERC20_init(name_, symbol_);\n\n        // Initialize Pausable trait.\n        __Pausable_init();\n\n        // Initialize Pausable trait.\n        _pause();\n\n        // Initialize the storage.\n        underlying = underlying_;\n        baseUnit = 10**underlying_.decimals();\n        underlyingDecimals = underlying_.decimals();\n\n        auth = auth_;\n        burningFeeReceiver = burnFeeReceiver_;\n        harvestFeeReceiver = harvestFeeReceiver_;\n\n        // Sets batchBurnRound to 1.\n        // NOTE: needed to have 0 as an uninitialized withdraw request.\n        batchBurnRound = 1;\n    }\n\n    /// @notice The initialize method\n    /// @param underlying_ The underlying token the vault accepts.\n    /// @param auth_ The Auth module that will be used for this Vault.\n    /// @param harvestFeeReceiver_ The harvesting fee receiver address.\n    /// @param burnFeeReceiver_ The batched burns fee receiver address.\n    function initialize(\n        ERC20 underlying_,\n        Authority auth_,\n        address harvestFeeReceiver_,\n        address burnFeeReceiver_\n    ) external initializer {\n        // Initialize the Vault.\n        __Vault_init(\n            underlying_,\n            auth_,\n            harvestFeeReceiver_,\n            burnFeeReceiver_,\n            string(bytes.concat(N_PREFIX, bytes(underlying_.name()), N_SUFFIX)),\n            string(bytes.concat(S_PREFIX, bytes(underlying_.symbol())))\n        );\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        DECIMAL OVERRIDING\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Overrides `decimals` method.\n    /// @dev Needed because Openzeppelin's logic for decimals.\n    /// @return Vault's shares token decimals (underlying token decimals).\n    function decimals() public view override returns (uint8) {\n        return underlyingDecimals;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    UNDERLYING CAP CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set new deposit limits for this vault.\n    /// @param user New user deposit limit.\n    /// @param vault New vault deposit limit.\n    function setDepositLimits(uint256 user, uint256 vault) external requiresAuth(msg.sender) {\n        userDepositLimit = user;\n        vaultDepositLimit = vault;\n\n        emit DepositLimitsUpdated(user, vault);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        AUTH CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new Authority module.\n    /// @param newAuth The new Authority module.\n    function setAuth(Authority newAuth) external requiresAuth(msg.sender) {\n        auth = newAuth;\n        emit AuthUpdated(newAuth);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                     BLOCKS PER YEAR CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Sets blocks per year.\n    /// @param blocks Blocks in a given year.\n    function setBlocksPerYear(uint256 blocks) external requiresAuth(msg.sender) {\n        blocksPerYear = blocks;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                           FEE CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new fee percentage.\n    /// @param newFeePercent The new fee percentage.\n    function setHarvestFeePercent(uint256 newFeePercent) external requiresAuth(msg.sender) {\n        // A fee percentage over 100% doesn't make sense.\n        require(newFeePercent <= 1e18, \"setHarvestFeePercent::FEE_TOO_HIGH\");\n\n        // Update the fee percentage.\n        harvestFeePercent = newFeePercent;\n\n        emit HarvestFeePercentUpdated(newFeePercent);\n    }\n\n    /// @notice Set a new burning fee percentage.\n    /// @param newFeePercent The new fee percentage.\n    function setBurningFeePercent(uint256 newFeePercent) external requiresAuth(msg.sender) {\n        // A fee percentage over 100% doesn't make sense.\n        require(newFeePercent <= 1e18, \"setBatchedBurningFeePercent::FEE_TOO_HIGH\");\n\n        // Update the fee percentage.\n        burningFeePercent = newFeePercent;\n\n        emit BurningFeePercentUpdated(newFeePercent);\n    }\n\n    /// @notice Set a new harvest fees receiver.\n    /// @param harvestFeeReceiver_ The new harvest fees receiver.\n    function setHarvestFeeReceiver(address harvestFeeReceiver_) external requiresAuth(msg.sender) {\n        // Update the fee percentage.\n        harvestFeeReceiver = harvestFeeReceiver_;\n\n        emit HarvestFeeReceiverUpdated(harvestFeeReceiver_);\n    }\n\n    /// @notice Set a new burning fees receiver.\n    /// @param burningFeeReceiver_ The new burning fees receiver.\n    function setBurningFeeReceiver(address burningFeeReceiver_) external requiresAuth(msg.sender) {\n        // Update the fee percentage.\n        burningFeeReceiver = burningFeeReceiver_;\n\n        emit BurningFeeReceiverUpdated(burningFeeReceiver_);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        HARVEST CONFIGURATION\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Set a new harvest window.\n    /// @param newHarvestWindow The new harvest window.\n    /// @dev The Vault's harvestDelay must already be set before calling.\n    function setHarvestWindow(uint128 newHarvestWindow) external requiresAuth(msg.sender) {\n        // A harvest window longer than the harvest delay doesn't make sense.\n        require(newHarvestWindow <= harvestDelay, \"setHarvestWindow::WINDOW_TOO_LONG\");\n\n        // Update the harvest window.\n        harvestWindow = newHarvestWindow;\n\n        emit HarvestWindowUpdated(newHarvestWindow);\n    }\n\n    /// @notice Set a new harvest delay delay.\n    /// @param newHarvestDelay The new harvest delay to set.\n    /// @dev If the current harvest delay is 0, meaning it has not\n    /// been set before, it will be updated immediately; otherwise\n    /// it will be scheduled to take effect after the next harvest.\n    function setHarvestDelay(uint64 newHarvestDelay) external requiresAuth(msg.sender) {\n        // A harvest delay of 0 makes harvests vulnerable to sandwich attacks.\n        require(newHarvestDelay != 0, \"setHarvestDelay::DELAY_CANNOT_BE_ZERO\");\n\n        // A target harvest delay over 1 year doesn't make sense.\n        require(newHarvestDelay <= 365 days, \"setHarvestDelay::DELAY_TOO_LONG\");\n\n        // If the harvest delay is 0, meaning it has not been set before:\n        if (harvestDelay == 0) {\n            // We'll apply the update immediately.\n            harvestDelay = newHarvestDelay;\n\n            emit HarvestDelayUpdated(msg.sender, newHarvestDelay);\n        } else {\n            // We'll apply the update next harvest.\n            nextHarvestDelay = newHarvestDelay;\n\n            emit HarvestDelayUpdateScheduled(newHarvestDelay);\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        WITHDRAWAL QUEUE\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Gets the full withdrawal queue.\n    /// @return An ordered array of strategies representing the withdrawal queue.\n    /// @dev This is provided because Solidity converts public arrays into index getters,\n    /// but we need a way to allow external contracts and users to access the whole array.\n    function getWithdrawalQueue() external view returns (IStrategy[] memory) {\n        return withdrawalQueue;\n    }\n\n    /// @notice Set the withdrawal queue.\n    /// @param newQueue The new withdrawal queue.\n    /// @dev There are no sanity checks on the `newQueue` argument so they should be done off-chain.\n    function setWithdrawalQueue(IStrategy[] calldata newQueue) external requiresAuth(msg.sender) {\n        // Check for duplicated in queue\n        require(newQueue.length <= MAX_STRATEGIES, \"setWithdrawalQueue::QUEUE_TOO_BIG\");\n\n        // Replace the withdrawal queue.\n        withdrawalQueue = newQueue;\n\n        emit WithdrawalQueueSet(newQueue);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                      STRATEGY TRUST/DISTRUST LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Store a strategy as trusted, enabling it to be harvested.\n    /// @param strategy The strategy to make trusted.\n    function trustStrategy(IStrategy strategy) external requiresAuth(msg.sender) {\n        // Ensure the strategy accepts the correct underlying token.\n        // If the strategy accepts ETH the Vault should accept WETH, it'll handle wrapping when necessary.\n        require(strategy.underlying() == underlying, \"trustStrategy::WRONG_UNDERLYING\");\n\n        // Store the strategy as trusted.\n        getStrategyData[strategy].trusted = true;\n\n        emit StrategyTrusted(strategy);\n    }\n\n    /// @notice Store a strategy as untrusted, disabling it from being harvested.\n    /// @param strategy The strategy to make untrusted.\n    function distrustStrategy(IStrategy strategy) external requiresAuth(msg.sender) {\n        // Store the strategy as untrusted.\n        getStrategyData[strategy].trusted = false;\n\n        emit StrategyDistrusted(strategy);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                            DEPOSIT/BURN\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Deposit a specific amount of underlying tokens.\n    /// @dev User needs to approve `underlyingAmount` of underlying tokens to spend.\n    /// @param to The address to receive shares corresponding to the deposit.\n    /// @param underlyingAmount The amount of the underlying token to deposit.\n    /// @return shares The amount of shares minted using `underlyingAmount`.\n    function deposit(address to, uint256 underlyingAmount) external requiresAuth(to) returns (uint256 shares) {\n        _deposit(to, (shares = calculateShares(underlyingAmount)), underlyingAmount);\n    }\n\n    /// @notice Enter a batched burn event.\n    /// @dev Each user can take part to one batched burn event a time.\n    /// @dev User's shares amount will be staked until the burn happens.\n    /// @param shares Shares to withdraw during the next batched burn event.\n    function enterBatchBurn(uint256 shares) external {\n        uint256 batchBurnRound_ = batchBurnRound;\n        uint256 userRound = userBatchBurnReceipts[msg.sender].round;\n\n        if (userRound == 0) {\n            // user is depositing for the first time in this round\n            // so we set his round to current round\n\n            userBatchBurnReceipts[msg.sender].round = batchBurnRound_;\n            userBatchBurnReceipts[msg.sender].shares = shares;\n        } else {\n            // user is not depositing for the first time or took part in a previous round:\n            //      - first case: we stack the deposits.\n            //      - second case: revert, user needs to withdraw before requesting\n            //                     to take part in another round.\n\n            require(userRound == batchBurnRound_, \"enterBatchBurn::DIFFERENT_ROUNDS\");\n            userBatchBurnReceipts[msg.sender].shares += shares;\n        }\n\n        batchBurns[batchBurnRound_].totalShares += shares;\n\n        require(transfer(address(this), shares));\n\n        emit EnterBatchBurn(batchBurnRound_, msg.sender, shares);\n    }\n\n    /// @notice Withdraw underlying redeemed in batched burning events.\n    function exitBatchBurn() external {\n        uint256 batchBurnRound_ = batchBurnRound;\n        BatchBurnReceipt memory receipt = userBatchBurnReceipts[msg.sender];\n\n        require(receipt.round != 0, \"exitBatchBurn::NO_DEPOSITS\");\n        require(receipt.round < batchBurnRound_, \"exitBatchBurn::ROUND_NOT_EXECUTED\");\n\n        userBatchBurnReceipts[msg.sender].round = 0;\n        userBatchBurnReceipts[msg.sender].shares = 0;\n\n        uint256 underlyingAmount = receipt.shares.fmul(batchBurns[receipt.round].amountPerShare, baseUnit);\n\n        batchBurnBalance -= underlyingAmount;\n        underlying.safeTransfer(msg.sender, underlyingAmount);\n\n        emit ExitBatchBurn(batchBurnRound_, msg.sender, underlyingAmount);\n    }\n\n    /// @notice Execute batched burns\n    function execBatchBurn() external requiresAuth(msg.sender) {\n        // let's wait for lockedProfit to go to 0\n        require(block.timestamp >= (lastHarvest + harvestDelay), \"batchBurn::LATEST_HARVEST_NOT_EXPIRED\");\n\n        uint256 batchBurnRound_ = batchBurnRound++;\n\n        BatchBurn memory batchBurn = batchBurns[batchBurnRound_];\n        uint256 totalShares = batchBurn.totalShares;\n\n        // burning 0 shares is not convenient\n        require(totalShares != 0, \"batchBurn::TOTAL_SHARES_CANNOT_BE_ZERO\");\n\n        uint256 underlyingAmount = totalShares.fmul(exchangeRate(), baseUnit);\n        require(underlyingAmount <= totalFloat(), \"batchBurn::NOT_ENOUGH_UNDERLYING\");\n\n        _burn(address(this), totalShares);\n\n        // Compute fees and transfer underlying amount if any\n        if (burningFeePercent != 0) {\n            uint256 accruedFees = underlyingAmount.fmul(burningFeePercent, 10**18);\n            underlyingAmount -= accruedFees;\n\n            underlying.safeTransfer(burningFeeReceiver, accruedFees);\n        }\n\n        batchBurns[batchBurnRound_].amountPerShare = underlyingAmount.fdiv(totalShares, baseUnit);\n        batchBurnBalance += underlyingAmount;\n\n        emit ExecuteBatchBurn(batchBurnRound_, msg.sender, totalShares, underlyingAmount);\n    }\n\n    /// @dev Internal function to deposit into the Vault.\n    /// @param to The address to receive shares corresponding to the deposit.\n    /// @param shares The amount of Vault's shares to mint.\n    /// @param underlyingAmount The amount of the underlying token to deposit.\n    function _deposit(\n        address to,\n        uint256 shares,\n        uint256 underlyingAmount\n    ) internal virtual whenNotPaused {\n        uint256 userUnderlying = calculateUnderlying(balanceOf(to)) + underlyingAmount;\n        uint256 vaultUnderlying = totalUnderlying() + underlyingAmount;\n\n        require(userUnderlying <= userDepositLimit, \"_deposit::USER_DEPOSIT_LIMITS_REACHED\");\n        require(vaultUnderlying <= vaultDepositLimit, \"_deposit::VAULT_DEPOSIT_LIMITS_REACHED\");\n\n        // Determine te equivalent amount of shares and mint them\n        _mint(to, shares);\n\n        emit Deposit(msg.sender, to, underlyingAmount);\n\n        // Transfer in underlying tokens from the user.\n        // This will revert if the user does not have the amount specified.\n        underlying.safeTransferFrom(msg.sender, address(this), underlyingAmount);\n    }\n\n    /// @notice Calculates the amount of Vault's shares for a given amount of underlying tokens.\n    /// @param underlyingAmount The underlying token's amount.\n    /// @return The amount of shares given `underlyingAmount`.\n    function calculateShares(uint256 underlyingAmount) public view returns (uint256) {\n        return underlyingAmount.fdiv(exchangeRate(), baseUnit);\n    }\n\n    /// @notice Calculates the amount of underlying tokens corresponding to a given amount of Vault's shares.\n    /// @param sharesAmount The shares amount.\n    /// @return The amount of underlying given `sharesAmount`.\n    function calculateUnderlying(uint256 sharesAmount) public view returns (uint256) {\n        return sharesAmount.fmul(exchangeRate(), baseUnit);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                             HARVEST LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Harvest a set of trusted strategies.\n    /// @param strategies The trusted strategies to harvest.\n    /// @dev Will always revert if called outside of an active\n    /// harvest window or before the harvest delay has passed.\n    function harvest(IStrategy[] calldata strategies) external requiresAuth(msg.sender) {\n        // If this is the first harvest after the last window:\n        if (block.timestamp >= lastHarvest + harvestDelay) {\n            // Accounts for:\n            //    - harvest interval (from latest harvest)\n            //    - harvest exchange rate\n            //    - harvest window starting block\n            lastHarvestExchangeRate = exchangeRate();\n            lastHarvestIntervalInBlocks = block.number - lastHarvestWindowStartBlock;\n            lastHarvestWindowStartBlock = block.number;\n\n            // Set the harvest window's start timestamp.\n            lastHarvestWindowStart = uint64(block.timestamp);\n        } else {\n            // We know this harvest is not the first in the window so we need to ensure it's within it.\n            require(block.timestamp <= lastHarvestWindowStart + harvestWindow, \"harvest::BAD_HARVEST_TIME\");\n        }\n\n        // Get the Vault's current total strategy holdings.\n        uint256 oldTotalStrategyHoldings = totalStrategyHoldings;\n\n        // Used to store the total profit accrued by the strategies.\n        uint256 totalProfitAccrued;\n\n        // Used to store the new total strategy holdings after harvesting.\n        uint256 newTotalStrategyHoldings = oldTotalStrategyHoldings;\n\n        // Will revert if any of the specified strategies are untrusted.\n        for (uint256 i = 0; i < strategies.length; i++) {\n            // Get the strategy at the current index.\n            IStrategy strategy = strategies[i];\n\n            // If an untrusted strategy could be harvested a malicious user could use\n            // a fake strategy that over-reports holdings to manipulate the exchange rate.\n            require(getStrategyData[strategy].trusted, \"harvest::UNTRUSTED_STRATEGY\");\n\n            // Get the strategy's previous and current balance.\n            uint256 balanceLastHarvest = getStrategyData[strategy].balance;\n            uint256 balanceThisHarvest = strategy.estimatedUnderlying();\n\n            // Update the strategy's stored balance.\n            getStrategyData[strategy].balance = balanceThisHarvest.safeCastTo248();\n\n            // Increase/decrease newTotalStrategyHoldings based on the profit/loss registered.\n            // We cannot wrap the subtraction in parenthesis as it would underflow if the strategy had a loss.\n            newTotalStrategyHoldings = newTotalStrategyHoldings + balanceThisHarvest - balanceLastHarvest;\n\n            // Update the total profit accrued while counting losses as zero profit.\n            totalProfitAccrued += balanceThisHarvest > balanceLastHarvest\n                ? balanceThisHarvest - balanceLastHarvest // Profits since last harvest.\n                : 0; // If the strategy registered a net loss we don't have any new profit.\n        }\n\n        // Compute fees as the fee percent multiplied by the profit.\n        uint256 feesAccrued = totalProfitAccrued.fmul(harvestFeePercent, 1e18);\n\n        // If we accrued any fees, mint an equivalent amount of Vault's shares.\n        if (feesAccrued != 0 && harvestFeeReceiver != address(0)) {\n            _mint(harvestFeeReceiver, feesAccrued.fdiv(exchangeRate(), baseUnit));\n        }\n\n        // Update max unlocked profit based on any remaining locked profit plus new profit.\n        uint128 maxLockedProfit_ = (lockedProfit() + totalProfitAccrued - feesAccrued).safeCastTo128();\n        maxLockedProfit = maxLockedProfit_;\n\n        // Compute estimated returns\n        uint256 strategyHoldings = newTotalStrategyHoldings - uint256(maxLockedProfit_);\n        estimatedReturn = computeEstimatedReturns(strategyHoldings, uint256(maxLockedProfit_), lastHarvestIntervalInBlocks);\n\n        // Set strategy holdings to our new total.\n        totalStrategyHoldings = newTotalStrategyHoldings;\n\n        // Update the last harvest timestamp.\n        lastHarvest = uint64(block.timestamp);\n\n        emit Harvest(msg.sender, strategies);\n\n        // Get the next harvest delay.\n        uint64 newHarvestDelay = nextHarvestDelay;\n\n        // If the next harvest delay is not 0:\n        if (newHarvestDelay != 0) {\n            // Update the harvest delay.\n            harvestDelay = newHarvestDelay;\n\n            // Reset the next harvest delay.\n            nextHarvestDelay = 0;\n\n            emit HarvestDelayUpdated(msg.sender, newHarvestDelay);\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                    STRATEGY DEPOSIT/WITHDRAWAL LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Deposit a specific amount of float into a trusted strategy.\n    /// @param strategy The trusted strategy to deposit into.\n    /// @param underlyingAmount The amount of underlying tokens in float to deposit.\n    function depositIntoStrategy(IStrategy strategy, uint256 underlyingAmount) external requiresAuth(msg.sender) {\n        // A strategy must be trusted before it can be deposited into.\n        require(getStrategyData[strategy].trusted, \"depositIntoStrategy::UNTRUSTED_STRATEGY\");\n\n        // We don't allow depositing 0 to prevent emitting a useless event.\n        require(underlyingAmount != 0, \"depositIntoStrategy::AMOUNT_CANNOT_BE_ZERO\");\n\n        // Increase totalStrategyHoldings to account for the deposit.\n        totalStrategyHoldings += underlyingAmount;\n\n        // Without this the next harvest would count the deposit as profit.\n        getStrategyData[strategy].balance += underlyingAmount.safeCastTo248();\n\n        emit StrategyDeposit(msg.sender, strategy, underlyingAmount);\n\n        // Approve underlyingAmount to the strategy so we can deposit.\n        underlying.safeApprove(address(strategy), underlyingAmount);\n\n        // Deposit into the strategy and revert if it returns an error code.\n        require(strategy.deposit(underlyingAmount) == 0, \"depositIntoStrategy::MINT_FAILED\");\n    }\n\n    /// @notice Withdraw a specific amount of underlying tokens from a strategy.\n    /// @param strategy The strategy to withdraw from.\n    /// @param underlyingAmount  The amount of underlying tokens to withdraw.\n    /// @dev Withdrawing from a strategy will not remove it from the withdrawal queue.\n    function withdrawFromStrategy(IStrategy strategy, uint256 underlyingAmount) external requiresAuth(msg.sender) {\n        // A strategy must be trusted before it can be withdrawn from.\n        require(getStrategyData[strategy].trusted, \"withdrawFromStrategy::UNTRUSTED_STRATEGY\");\n\n        // We don't allow withdrawing 0 to prevent emitting a useless event.\n        require(underlyingAmount != 0, \"withdrawFromStrategy::AMOUNT_CANNOT_BE_ZERO\");\n\n        // Without this the next harvest would count the withdrawal as a loss.\n        getStrategyData[strategy].balance -= underlyingAmount.safeCastTo248();\n\n        // Decrease totalStrategyHoldings to account for the withdrawal.\n        totalStrategyHoldings -= underlyingAmount;\n\n        emit StrategyWithdrawal(msg.sender, strategy, underlyingAmount);\n\n        // Withdraw from the strategy and revert if returns an error code.\n        require(strategy.withdraw(underlyingAmount) == 0, \"withdrawFromStrategy::REDEEM_FAILED\");\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                                ACCOUNTING\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Returns the amount of underlying tokens a share can be redeemed for.\n    /// @return The amount of underlying tokens a share can be redeemed for.\n    function exchangeRate() public view returns (uint256) {\n        // Get the total supply of shares.\n        uint256 shareSupply = totalSupply();\n\n        // If there are no shares in circulation, return an exchange rate of 1:1.\n        if (shareSupply == 0) return baseUnit;\n\n        return totalUnderlying().fdiv(shareSupply, baseUnit);\n    }\n\n    /// @notice Returns a user's Vault balance in underlying tokens.\n    /// @param user THe user to get the underlying balance of.\n    /// @return The user's Vault balance in underlying tokens.\n    function balanceOfUnderlying(address user) external view returns (uint256) {\n        return calculateUnderlying(balanceOf(user));\n    }\n\n    /// @notice Returns the amount of underlying tokens that idly sit in the Vault.\n    /// @return The amount of underlying tokens that sit idly in the Vault.\n    function totalFloat() public view returns (uint256) {\n        return underlying.balanceOf(address(this)) - batchBurnBalance;\n    }\n\n    /// @notice Calculate the current amount of locked profit.\n    /// @return The current amount of locked profit.\n    function lockedProfit() public view returns (uint256) {\n        // Get the last harvest and harvest delay.\n        uint256 previousHarvest = lastHarvest;\n        uint256 harvestInterval = harvestDelay;\n\n        // If the harvest delay has passed, there is no locked profit.\n        if (block.timestamp >= previousHarvest + harvestInterval) return 0;\n\n        // Get the maximum amount we could return.\n        uint256 maximumLockedProfit = maxLockedProfit;\n\n        // Compute how much profit remains locked based on the last harvest and harvest delay.\n        return maximumLockedProfit - (maximumLockedProfit * (block.timestamp - previousHarvest)) / harvestInterval;\n    }\n\n    /// @notice Calculates the total amount of underlying tokens the Vault holds.\n    /// @return totalUnderlyingHeld The total amount of underlying tokens the Vault holds.\n    function totalUnderlying() public view virtual returns (uint256) {\n        return totalStrategyHoldings - lockedProfit() + totalFloat();\n    }\n\n    /// @notice Compute an estimated return given the auxoToken supply, initial exchange rate and locked profits.\n    /// @param invested The underlying deposited in strategies.\n    /// @param profit The profit derived from harvest.\n    /// @param interval The period during which `profit` was generated.\n    function computeEstimatedReturns(\n        uint256 invested,\n        uint256 profit,\n        uint256 interval\n    ) internal view returns (uint256) {\n        return (invested == 0 || profit == 0) ? 0 : profit.fdiv(invested, baseUnit) * (blocksPerYear / interval) * 100;\n    }\n}\n",
  "sourceMap": "1151:38742:27:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vault.sol",
  "type": "contract"
}